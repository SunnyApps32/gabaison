{"version":3,"file":"js/chunk-vendors.893c97b0.js","mappings":"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,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+kD,WAAW/kD,KAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAChC+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AAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,KAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,KAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,KAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,KAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MACnG,IAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OACnG,OAAS,OAAS,SAKtBw3G,GAAaU,eAAiBnzD,WAAW/kD,KAAK,CAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3G,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAC5G,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACvG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAC5G,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAC5G,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,IAC7G,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAC1G,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IACzG,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACvG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAC5G,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,IAC3G,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,IACzG,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KACzG,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IACzG,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAC1G,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KACzG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KACzG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAC1G,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KACxG,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAC1G,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACzG,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAC1G,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAM,IAAK,IAC3G,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KACvG,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAC1G,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAC3G,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAC7G,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IACzG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IACzG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KACxG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACzG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IACzG,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KACxG,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,GAAI,KAAM,GAC5G,KAAM,KAAM,KAAM,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IACxG,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,GAAI,GAC1G,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,KAC5G,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAC3G,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACxG,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAC1G,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACzG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAC3G,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IACzG,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAC1G,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAC3G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAC7G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAC5G,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAC1G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KACxG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAC5G,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACxG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KACxG,IAAK,IAAK,IAAK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AAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IACzG,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAC5G,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAC1G,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACvG,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KACvG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAC5G,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KACvG,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACvG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC3G,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAC1G,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,IAC5G,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,IAC3G,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK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","sources":["webpack://reserve/../src/constants.ts","webpack://reserve/../src/crypt.ts","webpack://reserve/../src/global.ts","webpack://reserve/../src/defaults.ts","webpack://reserve/../src/deferred.ts","webpack://reserve/../src/emulator.ts","webpack://reserve/../src/environment.ts","webpack://reserve/../src/errors.ts","webpack://reserve/../src/obj.ts","webpack://reserve/../src/query.ts","webpack://reserve/../src/subscribe.ts","webpack://reserve/../src/utf8.ts","webpack://reserve/../src/exponential_backoff.ts","webpack://reserve/../src/compat.ts","webpack://reserve/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://reserve/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://reserve/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://reserve/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://reserve/../../src/core.ts","webpack://reserve/../../src/strings.ts","webpack://reserve/../../src/state-manager.ts","webpack://reserve/../../src/utils.ts","webpack://reserve/../../src/zxing-html5-qrcode-decoder.ts","webpack://reserve/../../src/native-bar-code-detector.ts","webpack://reserve/../../src/code-decoder.ts","webpack://reserve/../../../src/camera/core-impl.ts","webpack://reserve/../../../src/camera/factories.ts","webpack://reserve/../../../src/camera/retriever.ts","webpack://reserve/../../src/html5-qrcode-scanner.ts","webpack://reserve/../../src/html5-qrcode.ts","webpack://reserve/../../src/image-assets.ts","webpack://reserve/../../src/storage.ts","webpack://reserve/../../src/ui.ts","webpack://reserve/../../../src/camera/permissions.ts","webpack://reserve/../../../../src/ui/scanner/scan-type-selector.ts","webpack://reserve/../../../../src/ui/scanner/base.ts","webpack://reserve/../../../../src/ui/scanner/torch-button.ts","webpack://reserve/../../../../src/ui/scanner/file-selection-ui.ts","webpack://reserve/../../../../src/ui/scanner/camera-selection-ui.ts","webpack://reserve/../../../../src/ui/scanner/camera-zoom-ui.ts","webpack://reserve/./node_modules/html5-qrcode/third_party/zxing-js.umd.js","webpack://reserve/./node_modules/vue-loader/dist/exportHelper.js","webpack://reserve/./node_modules/core-js/internals/a-callable.js","webpack://reserve/./node_modules/core-js/internals/a-possible-prototype.js","webpack://reserve/./node_modules/core-js/internals/a-set.js","webpack://reserve/./node_modules/core-js/internals/an-instance.js","webpack://reserve/./node_modules/core-js/internals/an-object.js","webpack://reserve/./node_modules/core-js/internals/array-buffer-basic-detection.js","webpack://reserve/./node_modules/core-js/internals/array-buffer-byte-length.js","webpack://reserve/./node_modules/core-js/internals/array-buffer-is-detached.js","webpack://reserve/./node_modules/core-js/internals/array-buffer-transfer.js","webpack://reserve/./node_modules/core-js/internals/array-buffer-view-core.js","webpack://reserve/./node_modules/core-js/internals/array-from-constructor-and-list.js","webpack://reserve/./node_modules/core-js/internals/array-includes.js","webpack://reserve/./node_modules/core-js/internals/array-set-length.js","webpack://reserve/./node_modules/core-js/internals/array-to-reversed.js","webpack://reserve/./node_modules/core-js/internals/array-with.js","webpack://reserve/./node_modules/core-js/internals/classof-raw.js","webpack://reserve/./node_modules/core-js/internals/classof.js","webpack://reserve/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://reserve/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://reserve/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://reserve/./node_modules/core-js/internals/create-property-descriptor.js","webpack://reserve/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://reserve/./node_modules/core-js/internals/define-built-in.js","webpack://reserve/./node_modules/core-js/internals/define-global-property.js","webpack://reserve/./node_modules/core-js/internals/descriptors.js","webpack://reserve/./node_modules/core-js/internals/detach-transferable.js","webpack://reserve/./node_modules/core-js/internals/document-create-element.js","webpack://reserve/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://reserve/./node_modules/core-js/internals/dom-exception-constants.js","webpack://reserve/./node_modules/core-js/internals/engine-is-browser.js","webpack://reserve/./node_modules/core-js/internals/engine-is-deno.js","webpack://reserve/./node_modules/core-js/internals/engine-is-node.js","webpack://reserve/./node_modules/core-js/internals/engine-user-agent.js","webpack://reserve/./node_modules/core-js/internals/engine-v8-version.js","webpack://reserve/./node_modules/core-js/internals/enum-bug-keys.js","webpack://reserve/./node_modules/core-js/internals/error-stack-clear.js","webpack://reserve/./node_modules/core-js/internals/export.js","webpack://reserve/./node_modules/core-js/internals/fails.js","webpack://reserve/./node_modules/core-js/internals/function-bind-native.js","webpack://reserve/./node_modules/core-js/internals/function-call.js","webpack://reserve/./node_modules/core-js/internals/function-name.js","webpack://reserve/./node_modules/core-js/internals/function-uncurry-this-accessor.js","webpack://reserve/./node_modules/core-js/internals/function-uncurry-this.js","webpack://reserve/./node_modules/core-js/internals/get-built-in.js","webpack://reserve/./node_modules/core-js/internals/get-iterator-direct.js","webpack://reserve/./node_modules/core-js/internals/get-method.js","webpack://reserve/./node_modules/core-js/internals/get-set-record.js","webpack://reserve/./node_modules/core-js/internals/global.js","webpack://reserve/./node_modules/core-js/internals/has-own-property.js","webpack://reserve/./node_modules/core-js/internals/hidden-keys.js","webpack://reserve/./node_modules/core-js/internals/ie8-dom-define.js","webpack://reserve/./node_modules/core-js/internals/indexed-object.js","webpack://reserve/./node_modules/core-js/internals/inherit-if-required.js","webpack://reserve/./node_modules/core-js/internals/inspect-source.js","webpack://reserve/./node_modules/core-js/internals/internal-state.js","webpack://reserve/./node_modules/core-js/internals/is-array.js","webpack://reserve/./node_modules/core-js/internals/is-big-int-array.js","webpack://reserve/./node_modules/core-js/internals/is-callable.js","webpack://reserve/./node_modules/core-js/internals/is-forced.js","webpack://reserve/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://reserve/./node_modules/core-js/internals/is-object.js","webpack://reserve/./node_modules/core-js/internals/is-possible-prototype.js","webpack://reserve/./node_modules/core-js/internals/is-pure.js","webpack://reserve/./node_modules/core-js/internals/is-symbol.js","webpack://reserve/./node_modules/core-js/internals/iterate-simple.js","webpack://reserve/./node_modules/core-js/internals/iterator-close.js","webpack://reserve/./node_modules/core-js/internals/length-of-array-like.js","webpack://reserve/./node_modules/core-js/internals/make-built-in.js","webpack://reserve/./node_modules/core-js/internals/math-trunc.js","webpack://reserve/./node_modules/core-js/internals/normalize-string-argument.js","webpack://reserve/./node_modules/core-js/internals/object-define-property.js","webpack://reserve/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://reserve/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://reserve/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://reserve/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://reserve/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://reserve/./node_modules/core-js/internals/object-keys-internal.js","webpack://reserve/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://reserve/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://reserve/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://reserve/./node_modules/core-js/internals/own-keys.js","webpack://reserve/./node_modules/core-js/internals/require-object-coercible.js","webpack://reserve/./node_modules/core-js/internals/set-clone.js","webpack://reserve/./node_modules/core-js/internals/set-difference.js","webpack://reserve/./node_modules/core-js/internals/set-helpers.js","webpack://reserve/./node_modules/core-js/internals/set-intersection.js","webpack://reserve/./node_modules/core-js/internals/set-is-disjoint-from.js","webpack://reserve/./node_modules/core-js/internals/set-is-subset-of.js","webpack://reserve/./node_modules/core-js/internals/set-is-superset-of.js","webpack://reserve/./node_modules/core-js/internals/set-iterate.js","webpack://reserve/./node_modules/core-js/internals/set-method-accept-set-like.js","webpack://reserve/./node_modules/core-js/internals/set-size.js","webpack://reserve/./node_modules/core-js/internals/set-symmetric-difference.js","webpack://reserve/./node_modules/core-js/internals/set-union.js","webpack://reserve/./node_modules/core-js/internals/shared-key.js","webpack://reserve/./node_modules/core-js/internals/shared-store.js","webpack://reserve/./node_modules/core-js/internals/shared.js","webpack://reserve/./node_modules/core-js/internals/structured-clone-proper-transfer.js","webpack://reserve/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://reserve/./node_modules/core-js/internals/to-absolute-index.js","webpack://reserve/./node_modules/core-js/internals/to-big-int.js","webpack://reserve/./node_modules/core-js/internals/to-index.js","webpack://reserve/./node_modules/core-js/internals/to-indexed-object.js","webpack://reserve/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://reserve/./node_modules/core-js/internals/to-length.js","webpack://reserve/./node_modules/core-js/internals/to-object.js","webpack://reserve/./node_modules/core-js/internals/to-primitive.js","webpack://reserve/./node_modules/core-js/internals/to-property-key.js","webpack://reserve/./node_modules/core-js/internals/to-string-tag-support.js","webpack://reserve/./node_modules/core-js/internals/to-string.js","webpack://reserve/./node_modules/core-js/internals/try-node-require.js","webpack://reserve/./node_modules/core-js/internals/try-to-string.js","webpack://reserve/./node_modules/core-js/internals/uid.js","webpack://reserve/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://reserve/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://reserve/./node_modules/core-js/internals/validate-arguments-length.js","webpack://reserve/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://reserve/./node_modules/core-js/internals/well-known-symbol.js","webpack://reserve/./node_modules/core-js/modules/es.array-buffer.detached.js","webpack://reserve/./node_modules/core-js/modules/es.array-buffer.transfer-to-fixed-length.js","webpack://reserve/./node_modules/core-js/modules/es.array-buffer.transfer.js","webpack://reserve/./node_modules/core-js/modules/es.array.push.js","webpack://reserve/./node_modules/core-js/modules/es.set.difference.v2.js","webpack://reserve/./node_modules/core-js/modules/es.set.intersection.v2.js","webpack://reserve/./node_modules/core-js/modules/es.set.is-disjoint-from.v2.js","webpack://reserve/./node_modules/core-js/modules/es.set.is-subset-of.v2.js","webpack://reserve/./node_modules/core-js/modules/es.set.is-superset-of.v2.js","webpack://reserve/./node_modules/core-js/modules/es.set.symmetric-difference.v2.js","webpack://reserve/./node_modules/core-js/modules/es.set.union.v2.js","webpack://reserve/./node_modules/core-js/modules/es.typed-array.to-reversed.js","webpack://reserve/./node_modules/core-js/modules/es.typed-array.to-sorted.js","webpack://reserve/./node_modules/core-js/modules/es.typed-array.with.js","webpack://reserve/./node_modules/core-js/modules/esnext.set.difference.v2.js","webpack://reserve/./node_modules/core-js/modules/esnext.set.intersection.v2.js","webpack://reserve/./node_modules/core-js/modules/esnext.set.is-disjoint-from.v2.js","webpack://reserve/./node_modules/core-js/modules/esnext.set.is-subset-of.v2.js","webpack://reserve/./node_modules/core-js/modules/esnext.set.is-superset-of.v2.js","webpack://reserve/./node_modules/core-js/modules/esnext.set.symmetric-difference.v2.js","webpack://reserve/./node_modules/core-js/modules/esnext.set.union.v2.js","webpack://reserve/./node_modules/core-js/modules/web.dom-exception.stack.js","webpack://reserve/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://reserve/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://reserve/./node_modules/core-js/modules/web.url-search-params.size.js","webpack://reserve/../../src/platformLoggerService.ts","webpack://reserve/../../src/logger.ts","webpack://reserve/../../src/constants.ts","webpack://reserve/../../src/internal.ts","webpack://reserve/../../src/errors.ts","webpack://reserve/../../src/firebaseApp.ts","webpack://reserve/../../src/api.ts","webpack://reserve/../../src/indexeddb.ts","webpack://reserve/../../src/heartbeatService.ts","webpack://reserve/../../src/registerCoreComponents.ts","webpack://reserve/../../src/index.ts","webpack://reserve/../../src/component.ts","webpack://reserve/../../src/provider.ts","webpack://reserve/../../src/component_container.ts","webpack://reserve/../../src/util/constants.ts","webpack://reserve/../../src/util/errors.ts","webpack://reserve/../../src/functions/common.ts","webpack://reserve/../../src/functions/create-installation-request.ts","webpack://reserve/../../src/util/sleep.ts","webpack://reserve/../../src/helpers/buffer-to-base64-url-safe.ts","webpack://reserve/../../src/helpers/generate-fid.ts","webpack://reserve/../../src/util/get-key.ts","webpack://reserve/../../src/helpers/fid-changed.ts","webpack://reserve/../../src/helpers/idb-manager.ts","webpack://reserve/../../src/helpers/get-installation-entry.ts","webpack://reserve/../../src/functions/generate-auth-token-request.ts","webpack://reserve/../../src/helpers/refresh-auth-token.ts","webpack://reserve/../../src/api/get-id.ts","webpack://reserve/../../src/api/get-token.ts","webpack://reserve/../../src/helpers/extract-app-config.ts","webpack://reserve/../../src/functions/config.ts","webpack://reserve/../../src/helpers.ts","webpack://reserve/../../src/get-config.ts","webpack://reserve/../../src/functions.ts","webpack://reserve/../../src/initialize-analytics.ts","webpack://reserve/../../src/factory.ts","webpack://reserve/../../index.ts","webpack://reserve/./node_modules/tslib/tslib.es6.mjs","webpack://reserve/../../src/core/errors.ts","webpack://reserve/../../src/core/util/log.ts","webpack://reserve/../../src/core/util/assert.ts","webpack://reserve/../../src/core/util/location.ts","webpack://reserve/../../src/core/util/navigator.ts","webpack://reserve/../../src/core/util/delay.ts","webpack://reserve/../../src/core/util/emulator.ts","webpack://reserve/../../src/core/util/fetch_provider.ts","webpack://reserve/../../src/api/errors.ts","webpack://reserve/../../src/api/index.ts","webpack://reserve/../../src/platform_browser/recaptcha/recaptcha.ts","webpack://reserve/../../src/api/authentication/recaptcha.ts","webpack://reserve/../../src/api/account_management/account.ts","webpack://reserve/../../src/core/util/time.ts","webpack://reserve/../../src/core/user/id_token_result.ts","webpack://reserve/../../src/core/user/invalidation.ts","webpack://reserve/../../src/core/user/proactive_refresh.ts","webpack://reserve/../../src/core/user/user_metadata.ts","webpack://reserve/../../src/core/user/reload.ts","webpack://reserve/../../src/api/authentication/token.ts","webpack://reserve/../../src/core/user/token_manager.ts","webpack://reserve/../../src/core/user/user_impl.ts","webpack://reserve/../../src/core/util/instantiator.ts","webpack://reserve/../../src/core/persistence/in_memory.ts","webpack://reserve/../../src/core/persistence/persistence_user_manager.ts","webpack://reserve/../../src/core/util/browser.ts","webpack://reserve/../../src/core/util/version.ts","webpack://reserve/../../src/core/auth/middleware.ts","webpack://reserve/../../src/api/password_policy/get_password_policy.ts","webpack://reserve/../../src/core/auth/password_policy_impl.ts","webpack://reserve/../../src/core/auth/auth_impl.ts","webpack://reserve/../../src/platform_browser/load_js.ts","webpack://reserve/../../src/platform_browser/recaptcha/recaptcha_enterprise_verifier.ts","webpack://reserve/../../src/core/auth/initialize.ts","webpack://reserve/../../src/core/auth/emulator.ts","webpack://reserve/../../src/core/credentials/auth_credential.ts","webpack://reserve/../../src/api/account_management/email_and_password.ts","webpack://reserve/../../src/api/authentication/email_and_password.ts","webpack://reserve/../../src/api/authentication/email_link.ts","webpack://reserve/../../src/core/credentials/email.ts","webpack://reserve/../../src/api/authentication/idp.ts","webpack://reserve/../../src/core/credentials/oauth.ts","webpack://reserve/../../src/api/authentication/sms.ts","webpack://reserve/../../src/core/credentials/phone.ts","webpack://reserve/../../src/core/action_code_url.ts","webpack://reserve/../../src/core/providers/email.ts","webpack://reserve/../../src/core/providers/federated.ts","webpack://reserve/../../src/core/providers/oauth.ts","webpack://reserve/../../src/core/providers/facebook.ts","webpack://reserve/../../src/core/providers/google.ts","webpack://reserve/../../src/core/providers/github.ts","webpack://reserve/../../src/core/providers/twitter.ts","webpack://reserve/../../src/core/user/user_credential_impl.ts","webpack://reserve/../../src/mfa/mfa_error.ts","webpack://reserve/../../src/core/user/link_unlink.ts","webpack://reserve/../../src/core/user/reauthenticate.ts","webpack://reserve/../../src/core/strategies/credential.ts","webpack://reserve/../../src/core/strategies/email_and_password.ts","webpack://reserve/../../src/core/index.ts","webpack://reserve/../../src/api/account_management/mfa.ts","webpack://reserve/../../src/mfa/mfa_user.ts","webpack://reserve/../../src/core/persistence/index.ts","webpack://reserve/../../src/platform_browser/persistence/browser.ts","webpack://reserve/../../src/platform_browser/persistence/local_storage.ts","webpack://reserve/../../src/platform_browser/persistence/session_storage.ts","webpack://reserve/../../src/platform_browser/messagechannel/promise.ts","webpack://reserve/../../src/platform_browser/messagechannel/receiver.ts","webpack://reserve/../../src/core/util/event_id.ts","webpack://reserve/../../src/platform_browser/messagechannel/sender.ts","webpack://reserve/../../src/platform_browser/auth_window.ts","webpack://reserve/../../src/platform_browser/util/worker.ts","webpack://reserve/../../src/platform_browser/persistence/indexed_db.ts","webpack://reserve/../../src/api/authentication/mfa.ts","webpack://reserve/../../src/platform_browser/recaptcha/recaptcha_loader.ts","webpack://reserve/../../src/platform_browser/recaptcha/recaptcha_verifier.ts","webpack://reserve/../../src/platform_browser/strategies/phone.ts","webpack://reserve/../../src/platform_browser/providers/phone.ts","webpack://reserve/../../src/core/util/resolver.ts","webpack://reserve/../../src/core/strategies/idp.ts","webpack://reserve/../../src/core/strategies/abstract_popup_redirect_operation.ts","webpack://reserve/../../src/platform_browser/strategies/popup.ts","webpack://reserve/../../src/core/strategies/redirect.ts","webpack://reserve/../../src/platform_browser/strategies/redirect.ts","webpack://reserve/../../src/core/auth/auth_event_manager.ts","webpack://reserve/../../src/api/project_config/get_project_config.ts","webpack://reserve/../../src/core/util/validate_origin.ts","webpack://reserve/../../src/platform_browser/iframe/gapi.ts","webpack://reserve/../../src/platform_browser/iframe/iframe.ts","webpack://reserve/../../src/platform_browser/util/popup.ts","webpack://reserve/../../src/core/util/handler.ts","webpack://reserve/../../src/platform_browser/popup_redirect.ts","webpack://reserve/../../src/mfa/mfa_assertion.ts","webpack://reserve/../../src/platform_browser/mfa/assertions/phone.ts","webpack://reserve/../../src/mfa/assertions/totp.ts","webpack://reserve/../../src/core/auth/firebase_internal.ts","webpack://reserve/../../src/core/auth/register.ts","webpack://reserve/../../src/platform_browser/index.ts","webpack://reserve/../../../../../node_modules/closure-net/firebase/bloom_blob_es2018.js","webpack://reserve/../../../../../node_modules/closure-net/firebase/webchannel_blob_es2018.js","webpack://reserve/../src/auth/user.ts","webpack://reserve/../src/core/version.ts","webpack://reserve/../src/util/log.ts","webpack://reserve/../src/platform/browser/format_json.ts","webpack://reserve/../src/util/assert.ts","webpack://reserve/../src/util/error.ts","webpack://reserve/../src/util/promise.ts","webpack://reserve/../src/api/credentials.ts","webpack://reserve/../src/platform/browser/random_bytes.ts","webpack://reserve/../src/util/misc.ts","webpack://reserve/../src/model/path.ts","webpack://reserve/../src/model/document_key.ts","webpack://reserve/../src/model/field_index.ts","webpack://reserve/../src/local/simple_db.ts","webpack://reserve/../src/core/listen_sequence.ts","webpack://reserve/../src/util/types.ts","webpack://reserve/../src/local/indexeddb_sentinels.ts","webpack://reserve/../src/local/indexeddb_schema_legacy.ts","webpack://reserve/../src/util/sorted_map.ts","webpack://reserve/../src/util/sorted_set.ts","webpack://reserve/../src/util/base64_decode_error.ts","webpack://reserve/../src/util/byte_string.ts","webpack://reserve/../src/platform/browser/base64.ts","webpack://reserve/../src/model/normalize.ts","webpack://reserve/../src/core/database_info.ts","webpack://reserve/../src/model/values.ts","webpack://reserve/../src/model/collections.ts","webpack://reserve/../src/remote/rpc_error.ts","webpack://reserve/../src/remote/bloom_filter.ts","webpack://reserve/../src/remote/serializer.ts","webpack://reserve/../src/index/firestore_index_value_writer.ts","webpack://reserve/../src/local/indexeddb_index_manager.ts","webpack://reserve/../src/local/lru_garbage_collector.ts","webpack://reserve/../src/platform/browser/dom.ts","webpack://reserve/../src/remote/backoff.ts","webpack://reserve/../src/util/async_queue.ts","webpack://reserve/../src/core/event_manager.ts","webpack://reserve/../src/core/firestore_client.ts","webpack://reserve/../src/api/long_polling_options.ts","webpack://reserve/../src/lite-api/components.ts","webpack://reserve/../src/util/input_validation.ts","webpack://reserve/../src/lite-api/settings.ts","webpack://reserve/../src/local/lru_garbage_collector_impl.ts","webpack://reserve/../src/lite-api/database.ts","webpack://reserve/../src/util/async_queue_impl.ts","webpack://reserve/../src/api/database.ts","webpack://reserve/../src/lite-api/user_data_reader.ts","webpack://reserve/../src/api/persistent_cache_index_manager.ts","webpack://reserve/../src/register.ts","webpack://reserve/../src/index.ts","webpack://reserve/./node_modules/idb/build/wrap-idb-value.js","webpack://reserve/./node_modules/idb/build/index.js","webpack://reserve/./node_modules/vue-router/dist/vue-router.mjs"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n* @vue/reactivity v3.4.31\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nimport { NOOP, extend, isArray, isSymbol, isMap, isIntegerKey, hasOwn, hasChanged, isObject, makeMap, capitalize, toRawType, def, isFunction } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nlet activeEffect;\nclass ReactiveEffect {\n  constructor(fn, trigger, scheduler, scope) {\n    this.fn = fn;\n    this.trigger = trigger;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    /**\n     * @internal\n     */\n    this._dirtyLevel = 4;\n    /**\n     * @internal\n     */\n    this._trackId = 0;\n    /**\n     * @internal\n     */\n    this._runnings = 0;\n    /**\n     * @internal\n     */\n    this._shouldSchedule = false;\n    /**\n     * @internal\n     */\n    this._depsLength = 0;\n    recordEffectScope(this, scope);\n  }\n  get dirty() {\n    if (this._dirtyLevel === 2 || this._dirtyLevel === 3) {\n      this._dirtyLevel = 1;\n      pauseTracking();\n      for (let i = 0; i < this._depsLength; i++) {\n        const dep = this.deps[i];\n        if (dep.computed) {\n          triggerComputed(dep.computed);\n          if (this._dirtyLevel >= 4) {\n            break;\n          }\n        }\n      }\n      if (this._dirtyLevel === 1) {\n        this._dirtyLevel = 0;\n      }\n      resetTracking();\n    }\n    return this._dirtyLevel >= 4;\n  }\n  set dirty(v) {\n    this._dirtyLevel = v ? 4 : 0;\n  }\n  run() {\n    this._dirtyLevel = 0;\n    if (!this.active) {\n      return this.fn();\n    }\n    let lastShouldTrack = shouldTrack;\n    let lastEffect = activeEffect;\n    try {\n      shouldTrack = true;\n      activeEffect = this;\n      this._runnings++;\n      preCleanupEffect(this);\n      return this.fn();\n    } finally {\n      postCleanupEffect(this);\n      this._runnings--;\n      activeEffect = lastEffect;\n      shouldTrack = lastShouldTrack;\n    }\n  }\n  stop() {\n    if (this.active) {\n      preCleanupEffect(this);\n      postCleanupEffect(this);\n      this.onStop && this.onStop();\n      this.active = false;\n    }\n  }\n}\nfunction triggerComputed(computed) {\n  return computed.value;\n}\nfunction preCleanupEffect(effect2) {\n  effect2._trackId++;\n  effect2._depsLength = 0;\n}\nfunction postCleanupEffect(effect2) {\n  if (effect2.deps.length > effect2._depsLength) {\n    for (let i = effect2._depsLength; i < effect2.deps.length; i++) {\n      cleanupDepEffect(effect2.deps[i], effect2);\n    }\n    effect2.deps.length = effect2._depsLength;\n  }\n}\nfunction cleanupDepEffect(dep, effect2) {\n  const trackId = dep.get(effect2);\n  if (trackId !== void 0 && effect2._trackId !== trackId) {\n    dep.delete(effect2);\n    if (dep.size === 0) {\n      dep.cleanup();\n    }\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect instanceof ReactiveEffect) {\n    fn = fn.effect.fn;\n  }\n  const _effect = new ReactiveEffect(fn, NOOP, () => {\n    if (_effect.dirty) {\n      _effect.run();\n    }\n  });\n  if (options) {\n    extend(_effect, options);\n    if (options.scope) recordEffectScope(_effect, options.scope);\n  }\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n  const runner = _effect.run.bind(_effect);\n  runner.effect = _effect;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nlet pauseScheduleStack = 0;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction pauseScheduling() {\n  pauseScheduleStack++;\n}\nfunction resetScheduling() {\n  pauseScheduleStack--;\n  while (!pauseScheduleStack && queueEffectSchedulers.length) {\n    queueEffectSchedulers.shift()();\n  }\n}\nfunction trackEffect(effect2, dep, debuggerEventExtraInfo) {\n  var _a;\n  if (dep.get(effect2) !== effect2._trackId) {\n    dep.set(effect2, effect2._trackId);\n    const oldDep = effect2.deps[effect2._depsLength];\n    if (oldDep !== dep) {\n      if (oldDep) {\n        cleanupDepEffect(oldDep, effect2);\n      }\n      effect2.deps[effect2._depsLength++] = dep;\n    } else {\n      effect2._depsLength++;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      (_a = effect2.onTrack) == null ? void 0 : _a.call(effect2, extend({ effect: effect2 }, debuggerEventExtraInfo));\n    }\n  }\n}\nconst queueEffectSchedulers = [];\nfunction triggerEffects(dep, dirtyLevel, debuggerEventExtraInfo) {\n  var _a;\n  pauseScheduling();\n  for (const effect2 of dep.keys()) {\n    let tracking;\n    if (effect2._dirtyLevel < dirtyLevel && (tracking != null ? tracking : tracking = dep.get(effect2) === effect2._trackId)) {\n      effect2._shouldSchedule || (effect2._shouldSchedule = effect2._dirtyLevel === 0);\n      effect2._dirtyLevel = dirtyLevel;\n    }\n    if (effect2._shouldSchedule && (tracking != null ? tracking : tracking = dep.get(effect2) === effect2._trackId)) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        (_a = effect2.onTrigger) == null ? void 0 : _a.call(effect2, extend({ effect: effect2 }, debuggerEventExtraInfo));\n      }\n      effect2.trigger();\n      if ((!effect2._runnings || effect2.allowRecurse) && effect2._dirtyLevel !== 2) {\n        effect2._shouldSchedule = false;\n        if (effect2.scheduler) {\n          queueEffectSchedulers.push(effect2.scheduler);\n        }\n      }\n    }\n  }\n  resetScheduling();\n}\n\nconst createDep = (cleanup, computed) => {\n  const dep = /* @__PURE__ */ new Map();\n  dep.cleanup = cleanup;\n  dep.computed = computed;\n  return dep;\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nconst ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"iterate\" : \"\");\nconst MAP_KEY_ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"Map key iterate\" : \"\");\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep(() => depsMap.delete(key)));\n    }\n    trackEffect(\n      activeEffect,\n      dep,\n      !!(process.env.NODE_ENV !== \"production\") ? {\n        target,\n        type,\n        key\n      } : void 0\n    );\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && isArray(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || !isSymbol(key2) && key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  pauseScheduling();\n  for (const dep of deps) {\n    if (dep) {\n      triggerEffects(\n        dep,\n        4,\n        !!(process.env.NODE_ENV !== \"production\") ? {\n          target,\n          type,\n          key,\n          newValue,\n          oldValue,\n          oldTarget\n        } : void 0\n      );\n    }\n  }\n  resetScheduling();\n}\nfunction getDepFromReactive(object, key) {\n  const depsMap = targetMap.get(object);\n  return depsMap && depsMap.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      pauseScheduling();\n      const res = toRaw(this)[key].apply(this, args);\n      resetScheduling();\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  if (!isSymbol(key)) key = String(key);\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _isShallow = false) {\n    this._isReadonly = _isReadonly;\n    this._isShallow = _isShallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return isShallow2;\n    } else if (key === \"__v_raw\") {\n      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype\n      // this means the reciever is a user proxy of the reactive proxy\n      Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) {\n        return target;\n      }\n      return;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly2) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (isShallow2) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(false, isShallow2);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (!this._isShallow) {\n      const isOldValueReadonly = isReadonly(oldValue);\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        if (isOldValueReadonly) {\n          return false;\n        } else {\n          oldValue.value = value;\n          return true;\n        }\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      isArray(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(true, isShallow2);\n  }\n  set(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n  deleteProperty(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(\n  true\n);\nconst shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = !!(process.env.NODE_ENV !== \"production\") ? isMap(target) ? new Map(target) : new Set(target) : void 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : type === \"clear\" ? void 0 : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\n    \"keys\",\n    \"values\",\n    \"entries\",\n    Symbol.iterator\n  ];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations2[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations2[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = toRawType(target);\n    warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `value cannot be made ${isReadonly2 ? \"readonly\" : \"reactive\"}: ${String(\n          target\n        )}`\n      );\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return value ? !!value[\"__v_raw\"] : false;\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  if (Object.isExtensible(value)) {\n    def(value, \"__v_skip\", true);\n  }\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nconst COMPUTED_SIDE_EFFECT_WARN = `Computed is still dirty after getter evaluation, likely because a computed is mutating its own dependency in its getter. State mutations in computed getters should be avoided.  Check the docs for more details: https://vuejs.org/guide/essentials/computed.html#getters-should-be-side-effect-free`;\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this.getter = getter;\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this.effect = new ReactiveEffect(\n      () => getter(this._value),\n      () => triggerRefValue(\n        this,\n        this.effect._dirtyLevel === 2 ? 2 : 3\n      )\n    );\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    if ((!self._cacheable || self.effect.dirty) && hasChanged(self._value, self._value = self.effect.run())) {\n      triggerRefValue(self, 4);\n    }\n    trackRefValue(self);\n    if (self.effect._dirtyLevel >= 2) {\n      if (!!(process.env.NODE_ENV !== \"production\") && this._warnRecursive) {\n        warn(COMPUTED_SIDE_EFFECT_WARN, `\n\ngetter: `, this.getter);\n      }\n      triggerRefValue(self, 2);\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n  // #region polyfill _dirty for backward compatibility third party code for Vue <= 3.3.x\n  get _dirty() {\n    return this.effect.dirty;\n  }\n  set _dirty(v) {\n    this.effect.dirty = v;\n  }\n  // #endregion\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = !!(process.env.NODE_ENV !== \"production\") ? () => {\n      warn(\"Write operation failed: computed value is readonly\");\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  if (!!(process.env.NODE_ENV !== \"production\") && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nfunction trackRefValue(ref2) {\n  var _a;\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    trackEffect(\n      activeEffect,\n      (_a = ref2.dep) != null ? _a : ref2.dep = createDep(\n        () => ref2.dep = void 0,\n        ref2 instanceof ComputedRefImpl ? ref2 : void 0\n      ),\n      !!(process.env.NODE_ENV !== \"production\") ? {\n        target: ref2,\n        type: \"get\",\n        key: \"value\"\n      } : void 0\n    );\n  }\n}\nfunction triggerRefValue(ref2, dirtyLevel = 4, newVal, oldVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    triggerEffects(\n      dep,\n      dirtyLevel,\n      !!(process.env.NODE_ENV !== \"production\") ? {\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: newVal,\n        oldValue: oldVal\n      } : void 0\n    );\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (hasChanged(newVal, this._rawValue)) {\n      const oldVal = this._rawValue;\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, 4, newVal, oldVal);\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  triggerRefValue(ref2, 4, !!(process.env.NODE_ENV !== \"production\") ? ref2.value : void 0);\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = void 0;\n    this.__v_isRef = true;\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    );\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isProxy(object)) {\n    warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this.__v_isRef = true;\n    this.__v_isReadonly = true;\n  }\n  get value() {\n    return this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}\n\nconst deferredComputed = computed;\n\nconst TrackOpTypes = {\n  \"GET\": \"get\",\n  \"HAS\": \"has\",\n  \"ITERATE\": \"iterate\"\n};\nconst TriggerOpTypes = {\n  \"SET\": \"set\",\n  \"ADD\": \"add\",\n  \"DELETE\": \"delete\",\n  \"CLEAR\": \"clear\"\n};\nconst ReactiveFlags = {\n  \"SKIP\": \"__v_skip\",\n  \"IS_REACTIVE\": \"__v_isReactive\",\n  \"IS_READONLY\": \"__v_isReadonly\",\n  \"IS_SHALLOW\": \"__v_isShallow\",\n  \"RAW\": \"__v_raw\"\n};\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, ReactiveFlags, TrackOpTypes, TriggerOpTypes, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseScheduling, pauseTracking, proxyRefs, reactive, readonly, ref, resetScheduling, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, track, trigger, triggerRef, unref };\n","/**\n* @vue/runtime-core v3.4.31\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nimport { pauseTracking, resetTracking, isRef, toRaw, shallowReadonly, ref, track, reactive, shallowReactive, trigger, ReactiveEffect, isShallow, isReactive, getCurrentScope, isProxy, proxyRefs, markRaw, EffectScope, computed as computed$1, customRef, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, TrackOpTypes, TriggerOpTypes, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, NOOP, getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, looseToNumber, hyphenate, camelize, isObject, isOn, hasOwn, isModelListener, capitalize, toNumber, isBuiltInDirective, isGloballyAllowed, NO, isReservedProp, EMPTY_ARR, toRawType, makeMap, def, remove, normalizeClass, stringifyStyle, normalizeStyle, isKnownSvgAttr, isBooleanAttr, isKnownHtmlAttr, includeBooleanAttr, isRenderableAttrValue, invokeArrayFns, hasChanged, isSet, isMap, isPlainObject, isRegExp } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\nfunction popWarningContext() {\n  stack.pop();\n}\nfunction warn$1(msg, ...args) {\n  pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      11,\n      [\n        // eslint-disable-next-line no-restricted-syntax\n        msg + args.map((a) => {\n          var _a, _b;\n          return (_b = (_a = a.toString) == null ? void 0 : _a.call(a)) != null ? _b : JSON.stringify(a);\n        }).join(\"\"),\n        instance && instance.proxy,\n        trace.map(\n          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n        ).join(\"\\n\"),\n        trace\n      ]\n    );\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    if (trace.length && // avoid spamming console during tests\n    true) {\n      warnArgs.push(`\n`, ...formatTrace(trace));\n    }\n    console.warn(...warnArgs);\n  }\n  resetTracking();\n}\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n  if (!currentVNode) {\n    return [];\n  }\n  const normalizedStack = [];\n  while (currentVNode) {\n    const last = normalizedStack[0];\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n  return normalizedStack;\n}\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...i === 0 ? [] : [`\n`], ...formatTraceEntry(entry));\n  });\n  return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach((key) => {\n    res.push(...formatProp(key, props[key]));\n  });\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n  return res;\n}\nfunction formatProp(key, value, raw) {\n  if (isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === \"number\" || typeof value === \"boolean\" || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (isRef(value)) {\n    value = formatProp(key, toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\nfunction assertNumber(val, type) {\n  if (!!!(process.env.NODE_ENV !== \"production\")) return;\n  if (val === void 0) {\n    return;\n  } else if (typeof val !== \"number\") {\n    warn$1(`${type} is not a valid number - got ${JSON.stringify(val)}.`);\n  } else if (isNaN(val)) {\n    warn$1(`${type} is NaN - the duration expression might be incorrect.`);\n  }\n}\n\nconst ErrorCodes = {\n  \"SETUP_FUNCTION\": 0,\n  \"0\": \"SETUP_FUNCTION\",\n  \"RENDER_FUNCTION\": 1,\n  \"1\": \"RENDER_FUNCTION\",\n  \"WATCH_GETTER\": 2,\n  \"2\": \"WATCH_GETTER\",\n  \"WATCH_CALLBACK\": 3,\n  \"3\": \"WATCH_CALLBACK\",\n  \"WATCH_CLEANUP\": 4,\n  \"4\": \"WATCH_CLEANUP\",\n  \"NATIVE_EVENT_HANDLER\": 5,\n  \"5\": \"NATIVE_EVENT_HANDLER\",\n  \"COMPONENT_EVENT_HANDLER\": 6,\n  \"6\": \"COMPONENT_EVENT_HANDLER\",\n  \"VNODE_HOOK\": 7,\n  \"7\": \"VNODE_HOOK\",\n  \"DIRECTIVE_HOOK\": 8,\n  \"8\": \"DIRECTIVE_HOOK\",\n  \"TRANSITION_HOOK\": 9,\n  \"9\": \"TRANSITION_HOOK\",\n  \"APP_ERROR_HANDLER\": 10,\n  \"10\": \"APP_ERROR_HANDLER\",\n  \"APP_WARN_HANDLER\": 11,\n  \"11\": \"APP_WARN_HANDLER\",\n  \"FUNCTION_REF\": 12,\n  \"12\": \"FUNCTION_REF\",\n  \"ASYNC_COMPONENT_LOADER\": 13,\n  \"13\": \"ASYNC_COMPONENT_LOADER\",\n  \"SCHEDULER\": 14,\n  \"14\": \"SCHEDULER\"\n};\nconst ErrorTypeStrings$1 = {\n  [\"sp\"]: \"serverPrefetch hook\",\n  [\"bc\"]: \"beforeCreate hook\",\n  [\"c\"]: \"created hook\",\n  [\"bm\"]: \"beforeMount hook\",\n  [\"m\"]: \"mounted hook\",\n  [\"bu\"]: \"beforeUpdate hook\",\n  [\"u\"]: \"updated\",\n  [\"bum\"]: \"beforeUnmount hook\",\n  [\"um\"]: \"unmounted hook\",\n  [\"a\"]: \"activated hook\",\n  [\"da\"]: \"deactivated hook\",\n  [\"ec\"]: \"errorCaptured hook\",\n  [\"rtc\"]: \"renderTracked hook\",\n  [\"rtg\"]: \"renderTriggered hook\",\n  [0]: \"setup function\",\n  [1]: \"render function\",\n  [2]: \"watcher getter\",\n  [3]: \"watcher callback\",\n  [4]: \"watcher cleanup function\",\n  [5]: \"native event handler\",\n  [6]: \"component event handler\",\n  [7]: \"vnode hook\",\n  [8]: \"directive hook\",\n  [9]: \"transition hook\",\n  [10]: \"app errorHandler\",\n  [11]: \"app warnHandler\",\n  [12]: \"ref function\",\n  [13]: \"async component loader\",\n  [14]: \"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://github.com/vuejs/core .\"\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n  try {\n    return args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  if (isArray(fn)) {\n    const values = [];\n    for (let i = 0; i < fn.length; i++) {\n      values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n    }\n    return values;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn$1(\n      `Invalid value type passed to callWithAsyncErrorHandling(): ${typeof fn}`\n    );\n  }\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = !!(process.env.NODE_ENV !== \"production\") ? ErrorTypeStrings$1[type] : `https://vuejs.org/error-reference/#runtime-${type}`;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    const appErrorHandler = instance.appContext.config.errorHandler;\n    if (appErrorHandler) {\n      pauseTracking();\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        10,\n        [err, exposedInstance, errorInfo]\n      );\n      resetTracking();\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const info = ErrorTypeStrings$1[type];\n    if (contextVNode) {\n      pushWarningContext(contextVNode);\n    }\n    warn$1(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n    if (contextVNode) {\n      popWarningContext();\n    }\n    if (throwInDev) {\n      throw err;\n    } else {\n      console.error(err);\n    }\n  } else {\n    console.error(err);\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = flushIndex + 1;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJob = queue[middle];\n    const middleJobId = getId(middleJob);\n    if (middleJobId < id || middleJobId === id && middleJob.pre) {\n      start = middle + 1;\n    } else {\n      end = middle;\n    }\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!queue.length || !queue.includes(\n    job,\n    isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\n  )) {\n    if (job.id == null) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction invalidateJob(job) {\n  const i = queue.indexOf(job);\n  if (i > flushIndex) {\n    queue.splice(i, 1);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!isArray(cb)) {\n    if (!activePostFlushCbs || !activePostFlushCbs.includes(\n      cb,\n      cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex\n    )) {\n      pendingPostFlushCbs.push(cb);\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(instance, seen, i = isFlushing ? flushIndex + 1 : 0) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.pre) {\n      if (instance && cb.id !== instance.uid) {\n        continue;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      cb();\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)].sort(\n      (a, b) => getId(a) - getId(b)\n    );\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      seen = seen || /* @__PURE__ */ new Map();\n    }\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      const cb = activePostFlushCbs[postFlushIndex];\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      if (cb.active !== false) cb();\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n  const diff = getId(a) - getId(b);\n  if (diff === 0) {\n    if (a.pre && !b.pre) return -1;\n    if (b.pre && !a.pre) return 1;\n  }\n  return diff;\n};\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  queue.sort(comparator);\n  const check = !!(process.env.NODE_ENV !== \"production\") ? (job) => checkRecursiveUpdates(seen, job) : NOOP;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && job.active !== false) {\n        if (!!(process.env.NODE_ENV !== \"production\") && check(job)) {\n          continue;\n        }\n        callWithErrorHandling(job, null, 14);\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance;\n      const componentName = instance && getComponentName(instance.type);\n      handleError(\n        `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,\n        null,\n        10\n      );\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = /* @__PURE__ */ new Set();\nif (!!(process.env.NODE_ENV !== \"production\")) {\n  getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  };\n}\nconst map = /* @__PURE__ */ new Map();\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n  record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: /* @__PURE__ */ new Set()\n  });\n  return true;\n}\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n  if (!record) {\n    return;\n  }\n  record.initialDef.render = newRender;\n  [...record.instances].forEach((instance) => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n    instance.renderCache = [];\n    isHmrUpdating = true;\n    instance.effect.dirty = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record) return;\n  newComp = normalizeClassComponent(newComp);\n  updateComponentDef(record.initialDef, newComp);\n  const instances = [...record.instances];\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type);\n    if (!hmrDirtyComponents.has(oldComp)) {\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      }\n      hmrDirtyComponents.add(oldComp);\n    }\n    instance.appContext.propsCache.delete(instance.type);\n    instance.appContext.emitsCache.delete(instance.type);\n    instance.appContext.optionsCache.delete(instance.type);\n    if (instance.ceReload) {\n      hmrDirtyComponents.add(oldComp);\n      instance.ceReload(newComp.styles);\n      hmrDirtyComponents.delete(oldComp);\n    } else if (instance.parent) {\n      instance.parent.effect.dirty = true;\n      queueJob(() => {\n        instance.parent.update();\n        hmrDirtyComponents.delete(oldComp);\n      });\n    } else if (instance.appContext.reload) {\n      instance.appContext.reload();\n    } else if (typeof window !== \"undefined\") {\n      window.location.reload();\n    } else {\n      console.warn(\n        \"[HMR] Root or manually mounted instance modified. Full reload required.\"\n      );\n    }\n  }\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(\n        normalizeClassComponent(instance.type)\n      );\n    }\n  });\n}\nfunction updateComponentDef(oldComp, newComp) {\n  extend(oldComp, newComp);\n  for (const key in oldComp) {\n    if (key !== \"__file\" && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`\n      );\n    }\n  };\n}\n\nlet devtools$1;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit$1(event, ...args) {\n  if (devtools$1) {\n    devtools$1.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args });\n  }\n}\nfunction setDevtoolsHook$1(hook, target) {\n  var _a, _b;\n  devtools$1 = hook;\n  if (devtools$1) {\n    devtools$1.enabled = true;\n    buffer.forEach(({ event, args }) => devtools$1.emit(event, ...args));\n    buffer = [];\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== \"undefined\" && // some envs mock window but not fully\n    window.HTMLElement && // also exclude jsdom\n    // eslint-disable-next-line no-restricted-syntax\n    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes(\"jsdom\"))\n  ) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push((newHook) => {\n      setDevtoolsHook$1(newHook, target);\n    });\n    setTimeout(() => {\n      if (!devtools$1) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3e3);\n  } else {\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\nfunction devtoolsInitApp(app, version) {\n  emit$1(\"app:init\" /* APP_INIT */, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\nfunction devtoolsUnmountApp(app) {\n  emit$1(\"app:unmount\" /* APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:added\" /* COMPONENT_ADDED */\n);\nconst devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:removed\" /* COMPONENT_REMOVED */\n);\nconst devtoolsComponentRemoved = (component) => {\n  if (devtools$1 && typeof devtools$1.cleanupBuffer === \"function\" && // remove the component if it wasn't buffered\n  !devtools$1.cleanupBuffer(component)) {\n    _devtoolsComponentRemoved(component);\n  }\n};\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction createDevtoolsComponentHook(hook) {\n  return (component) => {\n    emit$1(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : void 0,\n      component\n    );\n  };\n}\nconst devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:start\" /* PERFORMANCE_START */\n);\nconst devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:end\" /* PERFORMANCE_END */\n);\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit$1(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n  emit$1(\n    \"component:emit\" /* COMPONENT_EMIT */,\n    component.appContext.app,\n    component,\n    event,\n    params\n  );\n}\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted) return;\n  const props = instance.vnode.props || EMPTY_OBJ;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance;\n    if (emitsOptions) {\n      if (!(event in emitsOptions) && true) {\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\n          warn$1(\n            `Component emitted event \"${event}\" but it is neither declared in the emits option nor as an \"${toHandlerKey(event)}\" prop.`\n          );\n        }\n      } else {\n        const validator = emitsOptions[event];\n        if (isFunction(validator)) {\n          const isValid = validator(...rawArgs);\n          if (!isValid) {\n            warn$1(\n              `Invalid event arguments: event validation failed for event \"${event}\".`\n            );\n          }\n        }\n      }\n    }\n  }\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modelArg = isModelListener && event.slice(7);\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === \"modelValue\" ? \"model\" : modelArg}Modifiers`;\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\n    if (trim) {\n      args = rawArgs.map((a) => isString(a) ? a.trim() : a);\n    }\n    if (number) {\n      args = rawArgs.map(looseToNumber);\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsComponentEmit(instance, event, args);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const lowerCaseEvent = event.toLowerCase();\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n      warn$1(\n        `Event \"${lowerCaseEvent}\" is emitted in component ${formatComponentName(\n          instance,\n          instance.type\n        )} but the handler is registered for \"${event}\". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use \"${hyphenate(\n          event\n        )}\" instead of \"${event}\".`\n      );\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = toHandlerKey(camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = toHandlerKey(hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (isArray(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    extend(normalized, raw);\n  }\n  if (isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return hasOwn(options, key[0].toLowerCase() + key.slice(1)) || hasOwn(options, hyphenate(key)) || hasOwn(options, key);\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\nfunction popScopeId() {\n  currentScopeId = null;\n}\nconst withScopeId = (_id) => withCtx;\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx) return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentUpdated(ctx);\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    props,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  const prev = setCurrentRenderingInstance(instance);\n  let result;\n  let fallthroughAttrs;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    accessedAttrs = false;\n  }\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      const thisProxy = !!(process.env.NODE_ENV !== \"production\") && setupState.__isScriptSetup ? new Proxy(proxyToUse, {\n        get(target, key, receiver) {\n          warn$1(\n            `Property '${String(\n              key\n            )}' was accessed via 'this'. Avoid using 'this' in templates.`\n          );\n          return Reflect.get(target, key, receiver);\n        }\n      }) : proxyToUse;\n      result = normalizeVNode(\n        render.call(\n          thisProxy,\n          proxyToUse,\n          renderCache,\n          !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(props) : props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (!!(process.env.NODE_ENV !== \"production\") && attrs === props) {\n        markAttrsAccessed();\n      }\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(props) : props,\n          !!(process.env.NODE_ENV !== \"production\") ? {\n            get attrs() {\n              markAttrsAccessed();\n              return shallowReadonly(attrs);\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(props) : props,\n          null\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  let setRoot = void 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && result.patchFlag > 0 && result.patchFlag & 2048) {\n    [root, setRoot] = getChildRoot(result);\n  }\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs, false, true);\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs);\n        const eventAttrs = [];\n        const extraAttrs = [];\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i];\n          if (isOn(key)) {\n            if (!isModelListener(key)) {\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n            }\n          } else {\n            extraAttrs.push(key);\n          }\n        }\n        if (extraAttrs.length) {\n          warn$1(\n            `Extraneous non-props attributes (${extraAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`\n          );\n        }\n        if (eventAttrs.length) {\n          warn$1(\n            `Extraneous non-emits event listeners (${eventAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the \"emits\" option.`\n          );\n        }\n      }\n    }\n  }\n  if (vnode.dirs) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn$1(\n        `Runtime directive used on component with non-element root node. The directives will not function as intended.`\n      );\n    }\n    root = cloneVNode(root, null, false, true);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn$1(\n        `Component inside <Transition> renders non-element root node that cannot be animated.`\n      );\n    }\n    root.transition = vnode.transition;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && setRoot) {\n    setRoot(root);\n  } else {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nconst getChildRoot = (vnode) => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren, false);\n  if (!childRoot) {\n    return [vnode, void 0];\n  } else if (!!(process.env.NODE_ENV !== \"production\") && childRoot.patchFlag > 0 && childRoot.patchFlag & 2048) {\n    return getChildRoot(childRoot);\n  }\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n  const setRoot = (updatedRoot) => {\n    rawChildren[index] = updatedRoot;\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n  return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children, recurse = true) {\n  let singleRoot;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isVNode(child)) {\n      if (child.type !== Comment || child.children === \"v-if\") {\n        if (singleRoot) {\n          return;\n        } else {\n          singleRoot = child;\n          if (!!(process.env.NODE_ENV !== \"production\") && recurse && singleRoot.patchFlag > 0 && singleRoot.patchFlag & 2048) {\n            return filterSingleRoot(singleRoot.children);\n          }\n        }\n      }\n    } else {\n      return;\n    }\n  }\n  return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst isElementRoot = (vnode) => {\n  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if (!!(process.env.NODE_ENV !== \"production\") && (prevChildren || nextChildren) && isHmrUpdating) {\n    return true;\n  }\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent) {\n    const root = parent.subTree;\n    if (root.suspense && root.suspense.activeBranch === vnode) {\n      root.el = vnode.el;\n    }\n    if (root === vnode) {\n      (vnode = parent.vnode).el = el;\n      parent = parent.parent;\n    } else {\n      break;\n    }\n  }\n}\n\nconst COMPONENTS = \"components\";\nconst DIRECTIVES = \"directives\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n      );\n      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") && warnMissing && !res) {\n      const extra = type === COMPONENTS ? `\nIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;\n      warn$1(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n    }\n    return res;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn$1(\n      `resolve${capitalize(type.slice(0, -1))} can only be used in render() or setup().`\n    );\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nlet suspenseId = 0;\nconst SuspenseImpl = {\n  name: \"Suspense\",\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    } else {\n      if (parentSuspense && parentSuspense.deps > 0 && !n1.suspense.isInFallback) {\n        n2.suspense = n1.suspense;\n        n2.suspense.vnode = n2;\n        n2.el = n1.el;\n        return;\n      }\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    }\n  },\n  hydrate: hydrateSuspense,\n  normalize: normalizeSuspenseChildren\n};\nconst Suspense = SuspenseImpl ;\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n  if (isFunction(eventListener)) {\n    eventListener();\n  }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals;\n  const hiddenContainer = createElement(\"div\");\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  );\n  patch(\n    null,\n    suspense.pendingBranch = vnode.ssContent,\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    namespace,\n    slotScopeIds\n  );\n  if (suspense.deps > 0) {\n    triggerEvent(vnode, \"onPending\");\n    triggerEvent(vnode, \"onFallback\");\n    patch(\n      null,\n      vnode.ssFallback,\n      container,\n      anchor,\n      parentComponent,\n      null,\n      // fallback tree will not have suspense context\n      namespace,\n      slotScopeIds\n    );\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    suspense.resolve(false, true);\n  }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, namespace, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        if (!isHydrating) {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      }\n    } else {\n      suspense.pendingId = suspenseId++;\n      if (isHydrating) {\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      }\n      suspense.deps = 0;\n      suspense.effects.length = 0;\n      suspense.hiddenContainer = createElement(\"div\");\n      if (isInFallback) {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        suspense.resolve(true);\n      } else {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      setActiveBranch(suspense, newBranch);\n    } else {\n      triggerEvent(n2, \"onPending\");\n      suspense.pendingBranch = newBranch;\n      if (newBranch.shapeFlag & 512) {\n        suspense.pendingId = newBranch.component.suspenseId;\n      } else {\n        suspense.pendingId = suspenseId++;\n      }\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else {\n        const { timeout, pendingId } = suspense;\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, namespace, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  if (!!(process.env.NODE_ENV !== \"production\") && true && !hasWarned) {\n    hasWarned = true;\n    console[console.info ? \"info\" : \"log\"](\n      `<Suspense> is an experimental feature and its API will likely change.`\n    );\n  }\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals;\n  let parentSuspenseId;\n  const isSuspensible = isVNodeSuspensible(vnode);\n  if (isSuspensible) {\n    if (parentSuspense && parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId;\n      parentSuspense.deps++;\n    }\n  }\n  const timeout = vnode.props ? toNumber(vnode.props.timeout) : void 0;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(timeout, `Suspense timeout`);\n  }\n  const initialAnchor = anchor;\n  const suspense = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    namespace,\n    container,\n    hiddenContainer,\n    deps: 0,\n    pendingId: suspenseId++,\n    timeout: typeof timeout === \"number\" ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: !isHydrating,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n    resolve(resume = false, sync = false) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`\n          );\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\n          );\n        }\n      }\n      const {\n        vnode: vnode2,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent: parentComponent2,\n        container: container2\n      } = suspense;\n      let delayEnter = false;\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === \"out-in\";\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(\n                pendingBranch,\n                container2,\n                anchor === initialAnchor ? next(activeBranch) : anchor,\n                0\n              );\n              queuePostFlushCb(effects);\n            }\n          };\n        }\n        if (activeBranch) {\n          if (parentNode(activeBranch.el) !== suspense.hiddenContainer) {\n            anchor = next(activeBranch);\n          }\n          unmount(activeBranch, parentComponent2, suspense, true);\n        }\n        if (!delayEnter) {\n          move(pendingBranch, container2, anchor, 0);\n        }\n      }\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false;\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n      while (parent) {\n        if (parent.pendingBranch) {\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (!hasUnresolvedAncestor && !delayEnter) {\n        queuePostFlushCb(effects);\n      }\n      suspense.effects = [];\n      if (isSuspensible) {\n        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {\n          parentSuspense.deps--;\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve();\n          }\n        }\n      }\n      triggerEvent(vnode2, \"onResolve\");\n    },\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, namespace: namespace2 } = suspense;\n      triggerEvent(vnode2, \"onFallback\");\n      const anchor2 = next(activeBranch);\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        }\n        patch(\n          null,\n          fallbackVNode,\n          container2,\n          anchor2,\n          parentComponent2,\n          null,\n          // fallback tree will not have suspense context\n          namespace2,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, fallbackVNode);\n      };\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === \"out-in\";\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n      suspense.isInFallback = true;\n      unmount(\n        activeBranch,\n        parentComponent2,\n        null,\n        // no suspense so unmount hooks fire now\n        true\n        // shouldRemove\n      );\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n    move(container2, anchor2, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);\n      suspense.container = container2;\n    },\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n    registerDep(instance, setupRenderEffect, optimized2) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch((err) => {\n        handleError(err, instance, 0);\n      }).then((asyncSetupResult) => {\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        }\n        instance.asyncResolved = true;\n        const { vnode: vnode2 } = instance;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(vnode2);\n        }\n        handleSetupResult(instance, asyncSetupResult, false);\n        if (hydratedEl) {\n          vnode2.el = hydratedEl;\n        }\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(\n          instance,\n          vnode2,\n          // component may have been moved before resolve.\n          // if this is not a hydration, instance.subTree will be the comment\n          // placeholder.\n          parentNode(hydratedEl || instance.subTree.el),\n          // anchor will not be used if this is hydration, so only need to\n          // consider the comment placeholder case.\n          hydratedEl ? null : next(instance.subTree),\n          suspense,\n          namespace,\n          optimized2\n        );\n        if (placeholder) {\n          remove(placeholder);\n        }\n        updateHOCHostEl(instance, vnode2.el);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n    unmount(parentSuspense2, doRemove) {\n      suspense.isUnmounted = true;\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n    }\n  };\n  return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode,\n    // eslint-disable-next-line no-restricted-globals\n    document.createElement(\"div\"),\n    null,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true\n  );\n  const result = hydrateNode(\n    node,\n    suspense.pendingBranch = vnode.ssContent,\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  );\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true);\n  }\n  return result;\n}\nfunction normalizeSuspenseChildren(vnode) {\n  const { shapeFlag, children } = vnode;\n  const isSlotChildren = shapeFlag & 32;\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? children.default : children\n  );\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n  let block;\n  if (isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n    if (trackBlock) {\n      s._d = false;\n      openBlock();\n    }\n    s = s();\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n  if (isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n    if (!!(process.env.NODE_ENV !== \"production\") && !singleChild && s.filter((child) => child !== NULL_DYNAMIC_COMPONENT).length > 0) {\n      warn$1(`<Suspense> slots expect a single root node.`);\n    }\n    s = singleChild;\n  }\n  s = normalizeVNode(s);\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter((c) => c !== s);\n  }\n  return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const { vnode, parentComponent } = suspense;\n  let el = branch.el;\n  while (!el && branch.component) {\n    branch = branch.component.subTree;\n    el = branch.el;\n  }\n  vnode.el = el;\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\nfunction isVNodeSuspensible(vnode) {\n  const suspensible = vnode.props && vnode.props.suspensible;\n  return suspensible != null && suspensible !== false;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      pauseTracking();\n      const reset = setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      reset();\n      resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    const apiName = toHandlerKey(ErrorTypeStrings$1[type].replace(/ hook$/, \"\"));\n    warn$1(\n      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().` + (` If you are using async setup(), make sure to register lifecycle hooks before the first await statement.` )\n    );\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => {\n  if (!isInSSRComponentSetup || lifecycle === \"sp\") {\n    injectHook(lifecycle, (...args) => hook(...args), target);\n  }\n};\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\"bu\");\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\"bum\");\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\"sp\");\nconst onRenderTriggered = createHook(\n  \"rtg\"\n);\nconst onRenderTracked = createHook(\n  \"rtc\"\n);\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nfunction validateDirectiveName(name) {\n  if (isBuiltInDirective(name)) {\n    warn$1(\"Do not use built-in directive ids as custom directive id: \" + name);\n  }\n}\nfunction withDirectives(vnode, directives) {\n  if (currentRenderingInstance === null) {\n    !!(process.env.NODE_ENV !== \"production\") && warn$1(`withDirectives can only be used inside render functions.`);\n    return vnode;\n  }\n  const instance = getComponentPublicInstance(currentRenderingInstance);\n  const bindings = vnode.dirs || (vnode.dirs = []);\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\n    if (dir) {\n      if (isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        };\n      }\n      if (dir.deep) {\n        traverse(value);\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      });\n    }\n  }\n  return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      resetTracking();\n    }\n  }\n}\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n  if (isArray(source) || isString(source)) {\n    ret = new Array(source.length);\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, void 0, cached && cached[i]);\n    }\n  } else if (typeof source === \"number\") {\n    if (!!(process.env.NODE_ENV !== \"production\") && !Number.isInteger(source)) {\n      warn$1(`The v-for range expect an integer value but got ${source}.`);\n    }\n    ret = new Array(source);\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);\n    }\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(\n        source,\n        (item, i) => renderItem(item, i, void 0, cached && cached[i])\n      );\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n  if (cache) {\n    cache[index] = ret;\n  }\n  return ret;\n}\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i];\n    if (isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      slots[slot.name] = slot.key ? (...args) => {\n        const res = slot.fn(...args);\n        if (res) res.key = slot.key;\n        return res;\n      } : slot.fn;\n    }\n  }\n  return slots;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineComponent(options, extraOptions) {\n  return isFunction(options) ? (\n    // #8326: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineAsyncComponent(source) {\n  if (isFunction(source)) {\n    source = { loader: source };\n  }\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {\n      err = err instanceof Error ? err : new Error(String(err));\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n          const userFail = () => reject(err);\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then((comp) => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && !comp) {\n        warn$1(\n          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`\n        );\n      }\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === \"Module\")) {\n        comp = comp.default;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && comp && !isObject(comp) && !isFunction(comp)) {\n        throw new Error(`Invalid async component load result: ${comp}`);\n      }\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n  return defineComponent({\n    name: \"AsyncComponentWrapper\",\n    __asyncLoader: load,\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n    setup() {\n      const instance = currentInstance;\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n      const onError = (err) => {\n        pendingRequest = null;\n        handleError(\n          err,\n          instance,\n          13,\n          !errorComponent\n        );\n      };\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then((comp) => {\n          return () => createInnerComp(comp, instance);\n        }).catch((err) => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n      const loaded = ref(false);\n      const error = ref();\n      const delayed = ref(!!delay);\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            );\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n      load().then(() => {\n        loaded.value = true;\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          instance.parent.effect.dirty = true;\n          queueJob(instance.parent.update);\n        }\n      }).catch((err) => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n  });\n}\nfunction createInnerComp(comp, parent) {\n  const { ref: ref2, props, children, ce } = parent.vnode;\n  const vnode = createVNode(comp, props, children);\n  vnode.ref = ref2;\n  vnode.ce = ce;\n  delete parent.vnode.ce;\n  return vnode;\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    if (name !== \"default\") props.name = name;\n    return createVNode(\"slot\", props, fallback && fallback());\n  }\n  let slot = slots[name];\n  if (!!(process.env.NODE_ENV !== \"production\") && slot && slot.length > 1) {\n    warn$1(\n      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`\n    );\n    slot = () => [];\n  }\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child)) return true;\n    if (child.type === Comment) return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n  const ret = {};\n  if (!!(process.env.NODE_ENV !== \"production\") && !isObject(obj)) {\n    warn$1(`v-on with no argument expects an object value.`);\n    return ret;\n  }\n  for (const key in obj) {\n    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : toHandlerKey(key)] = obj[key];\n  }\n  return ret;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i) return null;\n  if (isStatefulComponent(i)) return getComponentPublicInstance(i);\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.props) : i.props,\n    $attrs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.attrs) : i.attrs,\n    $slots: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.slots) : i.slots,\n    $refs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.refs) : i.refs,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $emit: (i) => i.emit,\n    $options: (i) => __VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type,\n    $forceUpdate: (i) => i.f || (i.f = () => {\n      i.effect.dirty = true;\n      queueJob(i.update);\n    }),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => __VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP\n  })\n);\nconst isReservedPrefix = (key) => key === \"_\" || key === \"$\";\nconst hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    if (key === \"__v_skip\") {\n      return true;\n    }\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    if (!!(process.env.NODE_ENV !== \"production\") && key === \"__isVue\") {\n      return true;\n    }\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        track(instance.attrs, \"get\", \"\");\n        !!(process.env.NODE_ENV !== \"production\") && markAttrsAccessed();\n      } else if (!!(process.env.NODE_ENV !== \"production\") && key === \"$slots\") {\n        track(instance, \"get\", key);\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\") && currentRenderingInstance && (!isString(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading\n    // to infinite warning loop\n    key.indexOf(\"__v\") !== 0)) {\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n        warn$1(\n          `Property ${JSON.stringify(\n            key\n          )} must be accessed via $data because it starts with a reserved character (\"$\" or \"_\") and is not proxied on the render context.`\n        );\n      } else if (instance === currentRenderingInstance) {\n        warn$1(\n          `Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`\n        );\n      }\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (!!(process.env.NODE_ENV !== \"production\") && setupState.__isScriptSetup && hasOwn(setupState, key)) {\n      warn$1(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n      return false;\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (hasOwn(instance.props, key)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn$1(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn$1(\n        `Attempting to mutate public property \"${key}\". Properties starting with $ are reserved and readonly.`\n      );\n      return false;\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        });\n      } else {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== EMPTY_OBJ && hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key) || hasOwn(ctx, key) || hasOwn(publicPropertiesMap, key) || hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\nif (!!(process.env.NODE_ENV !== \"production\") && true) {\n  PublicInstanceProxyHandlers.ownKeys = (target) => {\n    warn$1(\n      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`\n    );\n    return Reflect.ownKeys(target);\n  };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend(\n  {},\n  PublicInstanceProxyHandlers,\n  {\n    get(target, key) {\n      if (key === Symbol.unscopables) {\n        return;\n      }\n      return PublicInstanceProxyHandlers.get(target, key, target);\n    },\n    has(_, key) {\n      const has = key[0] !== \"_\" && !isGloballyAllowed(key);\n      if (!!(process.env.NODE_ENV !== \"production\") && !has && PublicInstanceProxyHandlers.has(_, key)) {\n        warn$1(\n          `Property ${JSON.stringify(\n            key\n          )} should not start with _ which is a reserved prefix for Vue internals.`\n        );\n      }\n      return has;\n    }\n  }\n);\nfunction createDevRenderContext(instance) {\n  const target = {};\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  });\n  Object.keys(publicPropertiesMap).forEach((key) => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: NOOP\n    });\n  });\n  return target;\n}\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach((key) => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: NOOP\n      });\n    });\n  }\n}\nfunction exposeSetupStateOnRenderContext(instance) {\n  const { ctx, setupState } = instance;\n  Object.keys(toRaw(setupState)).forEach((key) => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn$1(\n          `setup() return property ${JSON.stringify(\n            key\n          )} should not start with \"$\" or \"_\" which are reserved prefixes for Vue internals.`\n        );\n        return;\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: NOOP\n      });\n    }\n  });\n}\n\nconst warnRuntimeUsage = (method) => warn$1(\n  `${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`\n);\nfunction defineProps() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineProps`);\n  }\n  return null;\n}\nfunction defineEmits() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineEmits`);\n  }\n  return null;\n}\nfunction defineExpose(exposed) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineExpose`);\n  }\n}\nfunction defineOptions(options) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineOptions`);\n  }\n}\nfunction defineSlots() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineSlots`);\n  }\n  return null;\n}\nfunction defineModel() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(\"defineModel\");\n  }\n}\nfunction withDefaults(props, defaults) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`withDefaults`);\n  }\n  return null;\n}\nfunction useSlots() {\n  return getContext().slots;\n}\nfunction useAttrs() {\n  return getContext().attrs;\n}\nfunction getContext() {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn$1(`useContext() called without active instance.`);\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\nfunction normalizePropsOrEmits(props) {\n  return isArray(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nfunction mergeDefaults(raw, defaults) {\n  const props = normalizePropsOrEmits(raw);\n  for (const key in defaults) {\n    if (key.startsWith(\"__skip\")) continue;\n    let opt = props[key];\n    if (opt) {\n      if (isArray(opt) || isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] };\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn$1(`props default key \"${key}\" has no corresponding declaration.`);\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true;\n    }\n  }\n  return props;\n}\nfunction mergeModels(a, b) {\n  if (!a || !b) return a || b;\n  if (isArray(a) && isArray(b)) return a.concat(b);\n  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));\n}\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n  return ret;\n}\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !ctx) {\n    warn$1(\n      `withAsyncContext called without active current instance. This is likely a bug.`\n    );\n  }\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n  if (isPromise(awaitable)) {\n    awaitable = awaitable.catch((e) => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n  return [awaitable, () => setCurrentInstance(ctx)];\n}\n\nfunction createDuplicateChecker() {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      warn$1(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = !!(process.env.NODE_ENV !== \"production\") ? createDuplicateChecker() : null;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const [propsOptions] = instance.propsOptions;\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties(\"Props\" /* PROPS */, key);\n      }\n    }\n  }\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (isFunction(methodHandler)) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        } else {\n          ctx[key] = methodHandler.bind(publicThis);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          checkDuplicateProperties(\"Methods\" /* METHODS */, key);\n        }\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn$1(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. Did you reference the function correctly?`\n        );\n      }\n    }\n  }\n  if (dataOptions) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(dataOptions)) {\n      warn$1(\n        `The data option must be a function. Plain object usage is no longer supported.`\n      );\n    }\n    const data = dataOptions.call(publicThis, publicThis);\n    if (!!(process.env.NODE_ENV !== \"production\") && isPromise(data)) {\n      warn$1(\n        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`\n      );\n    }\n    if (!isObject(data)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn$1(`data() should return an object.`);\n    } else {\n      instance.data = reactive(data);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        for (const key in data) {\n          checkDuplicateProperties(\"Data\" /* DATA */, key);\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: NOOP\n            });\n          }\n        }\n      }\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;\n      if (!!(process.env.NODE_ENV !== \"production\") && get === NOOP) {\n        warn$1(`Computed property \"${key}\" has no getter.`);\n      }\n      const set = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : !!(process.env.NODE_ENV !== \"production\") ? () => {\n        warn$1(\n          `Write operation failed: computed property \"${key}\" is readonly.`\n        );\n      } : NOOP;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\n      }\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (isArray(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components) instance.components = components;\n  if (directives) instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\n  if (isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      checkDuplicateProperties(\"Inject\" /* INJECT */, key);\n    }\n  }\n}\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    isArray(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (isString(raw)) {\n    const handler = ctx[raw];\n    if (isFunction(handler)) {\n      watch(getter, handler);\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn$1(`Invalid watch handler specified by key \"${raw}\"`, handler);\n    }\n  } else if (isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (isObject(raw)) {\n    if (isArray(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn$1(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n      }\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn$1(`Invalid watch option: \"${key}\"`, raw);\n  }\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n  if (isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") {\n      !!(process.env.NODE_ENV !== \"production\") && warn$1(\n        `\"expose\" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`\n      );\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (extend)(\n      isFunction(to) ? to.call(this, this) : to,\n      isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (isArray(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (isArray(to) && isArray(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to) return from;\n  if (!from) return to;\n  const merged = extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent);\n    }\n    if (rootProps != null && !isObject(rootProps)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn$1(`root props passed to app.mount() must be an object.`);\n      rootProps = null;\n    }\n    const context = createAppContext();\n    const installedPlugins = /* @__PURE__ */ new WeakSet();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(\n            `app.config cannot be replaced. Modify individual options instead.`\n          );\n        }\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n          !!(process.env.NODE_ENV !== \"production\") && warn$1(`Plugin has already been applied to target app.`);\n        } else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(\n            `A plugin must either be a function or an object with an \"install\" function.`\n          );\n        }\n        return app;\n      },\n      mixin(mixin) {\n        if (__VUE_OPTIONS_API__) {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn$1(\n              \"Mixin has already been applied to target app\" + (mixin.name ? `: ${mixin.name}` : \"\")\n            );\n          }\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(\"Mixins are only available in builds supporting Options API\");\n        }\n        return app;\n      },\n      component(name, component) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateComponentName(name, context.config);\n        }\n        if (!component) {\n          return context.components[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.components[name]) {\n          warn$1(`Component \"${name}\" has already been registered in target app.`);\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateDirectiveName(name);\n        }\n        if (!directive) {\n          return context.directives[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.directives[name]) {\n          warn$1(`Directive \"${name}\" has already been registered in target app.`);\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, namespace) {\n        if (!isMounted) {\n          if (!!(process.env.NODE_ENV !== \"production\") && rootContainer.__vue_app__) {\n            warn$1(\n              `There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling \\`app.unmount()\\` first.`\n            );\n          }\n          const vnode = createVNode(rootComponent, rootProps);\n          vnode.appContext = context;\n          if (namespace === true) {\n            namespace = \"svg\";\n          } else if (namespace === false) {\n            namespace = void 0;\n          }\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            context.reload = () => {\n              render(\n                cloneVNode(vnode),\n                rootContainer,\n                namespace\n              );\n            };\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, namespace);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n          return getComponentPublicInstance(vnode.component);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(\n            `App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \\`const createMyApp = () => createApp(App)\\``\n          );\n        }\n      },\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n          delete app._container.__vue_app__;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(`Cannot unmount an app that is not mounted.`);\n        }\n      },\n      provide(key, value) {\n        if (!!(process.env.NODE_ENV !== \"production\") && key in context.provides) {\n          warn$1(\n            `App already provides property with key \"${String(key)}\". It will be overwritten with the new value.`\n          );\n        }\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        const lastApp = currentApp;\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = lastApp;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn$1(`provide() can only be used inside setup().`);\n    }\n  } else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : currentApp._context.provides;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn$1(`injection \"${String(key)}\" not found.`);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn$1(`inject() can only be used inside setup() or functional components.`);\n  }\n}\nfunction hasInjectionContext() {\n  return !!(currentInstance || currentRenderingInstance || currentApp);\n}\n\nconst internalObjectProto = {};\nconst createInternalObject = () => Object.create(internalObjectProto);\nconst isInternalObject = (obj) => Object.getPrototypeOf(obj) === internalObjectProto;\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = createInternalObject();\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n  while (instance) {\n    if (instance.type.__hmrId) return true;\n    instance = instance.parent;\n  }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !(!!(process.env.NODE_ENV !== \"production\") && isInHmrContext(instance)) && (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    trigger(instance.attrs, \"set\", \"\");\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && hasOwn(options, camelKey = camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = toRaw(props);\n    const castValues = rawCastValues || EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          const reset = setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          reset();\n        }\n      } else {\n        value = defaultValue;\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      extend(normalized, props);\n      if (keys) needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, EMPTY_ARR);\n    }\n    return EMPTY_ARR;\n  }\n  if (isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (!!(process.env.NODE_ENV !== \"production\") && !isString(raw[i])) {\n        warn$1(`props must be strings when using array syntax.`, raw[i]);\n      }\n      const normalizedKey = camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isObject(raw)) {\n      warn$1(`invalid props options`, raw);\n    }\n    for (const key in raw) {\n      const normalizedKey = camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt);\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0 /* shouldCast */] = booleanIndex > -1;\n          prop[1 /* shouldCastTrue */] = stringIndex < 0 || booleanIndex < stringIndex;\n          if (booleanIndex > -1 || hasOwn(prop, \"default\")) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\" && !isReservedProp(key)) {\n    return true;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn$1(`Invalid prop name: \"${key}\" is a reserved property.`);\n  }\n  return false;\n}\nfunction getType(ctor) {\n  if (ctor === null) {\n    return \"null\";\n  }\n  if (typeof ctor === \"function\") {\n    return ctor.name || \"\";\n  } else if (typeof ctor === \"object\") {\n    const name = ctor.constructor && ctor.constructor.name;\n    return name || \"\";\n  }\n  return \"\";\n}\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n  if (isArray(expectedTypes)) {\n    return expectedTypes.findIndex((t) => isSameType(t, type));\n  } else if (isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n  return -1;\n}\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = toRaw(props);\n  const options = instance.propsOptions[0];\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null) continue;\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(resolvedValues) : resolvedValues,\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\n    );\n  }\n}\nfunction validateProp(name, value, prop, props, isAbsent) {\n  const { type, required, validator, skipCheck } = prop;\n  if (required && isAbsent) {\n    warn$1('Missing required prop: \"' + name + '\"');\n    return;\n  }\n  if (value == null && !required) {\n    return;\n  }\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false;\n    const types = isArray(type) ? type : [type];\n    const expectedTypes = [];\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || \"\");\n      isValid = valid;\n    }\n    if (!isValid) {\n      warn$1(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  }\n  if (validator && !validator(value, props)) {\n    warn$1('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\nconst isSimpleType = /* @__PURE__ */ makeMap(\n  \"String,Number,Boolean,Function,Symbol,BigInt\"\n);\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n  if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    if (!valid && t === \"object\") {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === \"Object\") {\n    valid = isObject(value);\n  } else if (expectedType === \"Array\") {\n    valid = isArray(value);\n  } else if (expectedType === \"null\") {\n    valid = value === null;\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid,\n    expectedType\n  };\n}\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  if (expectedTypes.length === 0) {\n    return `Prop type [] for prop \"${name}\" won't match anything. Did you mean to use type Array instead?`;\n  }\n  let message = `Invalid prop: type check failed for prop \"${name}\". Expected ${expectedTypes.map(capitalize).join(\" | \")}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType);\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n  message += `, got ${receivedType} `;\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n  return message;\n}\nfunction styleValue(value, type) {\n  if (type === \"String\") {\n    return `\"${value}\"`;\n  } else if (type === \"Number\") {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\nfunction isExplicable(type) {\n  const explicitTypes = [\"string\", \"number\", \"boolean\"];\n  return explicitTypes.some((elem) => type.toLowerCase() === elem);\n}\nfunction isBoolean(...args) {\n  return args.some((elem) => elem.toLowerCase() === \"boolean\");\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && currentInstance && (!ctx || ctx.root === currentInstance.root)) {\n      warn$1(\n        `Slot \"${key}\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`\n      );\n    }\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key)) continue;\n    const value = rawSlots[key];\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      if (!!(process.env.NODE_ENV !== \"production\") && true) {\n        warn$1(\n          `Non-function value encountered for slot \"${key}\". Prefer function slots for better performance.`\n        );\n      }\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isKeepAlive(instance.vnode) && true) {\n    warn$1(\n      `Non-function value encountered for default slot. Prefer function slots for better performance.`\n    );\n  }\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n  const slots = instance.slots = createInternalObject();\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      extend(slots, children);\n      def(slots, \"_\", type, true);\n    } else {\n      normalizeObjectSlots(children, slots);\n    }\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n  }\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n        extend(slots, children);\n        trigger(instance, \"set\", \"$slots\");\n      } else if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        extend(slots, children);\n        if (!optimized && type === 1) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (isArray(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getComponentPublicInstance(vnode.component) : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  if (!!(process.env.NODE_ENV !== \"production\") && !owner) {\n    warn$1(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`\n    );\n    return;\n  }\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  if (oldRef != null && oldRef !== ref) {\n    if (isString(oldRef)) {\n      refs[oldRef] = null;\n      if (hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = isString(ref);\n    const _isRef = isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? hasOwn(setupState, ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            isArray(existing) && remove(existing, refValue);\n          } else {\n            if (!isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k) refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k) refs[rawRef.k] = value;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n        }\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn$1(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n    }\n  }\n}\n\nlet hasLoggedMismatchError = false;\nconst logMismatchError = () => {\n  if (hasLoggedMismatchError) {\n    return;\n  }\n  console.error(\"Hydration completed but contains mismatches.\");\n  hasLoggedMismatchError = true;\n};\nconst isSVGContainer = (container) => container.namespaceURI.includes(\"svg\") && container.tagName !== \"foreignObject\";\nconst isMathMLContainer = (container) => container.namespaceURI.includes(\"MathML\");\nconst getContainerType = (container) => {\n  if (isSVGContainer(container)) return \"svg\";\n  if (isMathMLContainer(container)) return \"mathml\";\n  return void 0;\n};\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) && warn$1(\n        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`\n      );\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const isFragmentStart = isComment(node) && node.data === \"[\";\n    const onMismatch = () => handleMismatch(\n      node,\n      vnode,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      isFragmentStart\n    );\n    const { type, ref, shapeFlag, patchFlag } = vnode;\n    let domType = node.nodeType;\n    vnode.el = node;\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      def(node, \"__vnode\", vnode, true);\n      def(node, \"__vueParentComponent\", parentComponent, true);\n    }\n    if (patchFlag === -2) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n    let nextNode = null;\n    switch (type) {\n      case Text:\n        if (domType !== 3 /* TEXT */) {\n          if (vnode.children === \"\") {\n            insert(vnode.el = createText(\"\"), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) && warn$1(\n              `Hydration text mismatch in`,\n              node.parentNode,\n              `\n  - rendered on server: ${JSON.stringify(\n                node.data\n              )}\n  - expected on client: ${JSON.stringify(vnode.children)}`\n            );\n            logMismatchError();\n            node.data = vnode.children;\n          }\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Comment:\n        if (isTemplateNode(node)) {\n          nextNode = nextSibling(node);\n          replaceNode(\n            vnode.el = node.content.firstChild,\n            node,\n            parentComponent\n          );\n        } else if (domType !== 8 /* COMMENT */ || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Static:\n        if (isFragmentStart) {\n          node = nextSibling(node);\n          domType = node.nodeType;\n        }\n        if (domType === 1 /* ELEMENT */ || domType === 3 /* TEXT */) {\n          nextNode = node;\n          const needToAdoptContent = !vnode.children.length;\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent)\n              vnode.children += nextNode.nodeType === 1 /* ELEMENT */ ? nextNode.outerHTML : nextNode.data;\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n            nextNode = nextSibling(nextNode);\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode;\n        } else {\n          onMismatch();\n        }\n        break;\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          );\n        }\n        break;\n      default:\n        if (shapeFlag & 1) {\n          if ((domType !== 1 /* ELEMENT */ || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            );\n          }\n        } else if (shapeFlag & 6) {\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          if (isFragmentStart) {\n            nextNode = locateClosingAnchor(node);\n          } else if (isComment(node) && node.data === \"teleport start\") {\n            nextNode = locateClosingAnchor(node, node.data, \"teleport end\");\n          } else {\n            nextNode = nextSibling(node);\n          }\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            getContainerType(container),\n            optimized\n          );\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode(\"\") : createVNode(\"div\");\n            }\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64) {\n          if (domType !== 8 /* COMMENT */) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            );\n          }\n        } else if (shapeFlag & 128) {\n          nextNode = vnode.type.hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            getContainerType(parentNode(node)),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) {\n          warn$1(\"Invalid HostVNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n    return nextNode;\n  };\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;\n    const forcePatch = type === \"input\" || type === \"option\";\n    if (!!(process.env.NODE_ENV !== \"production\") || forcePatch || patchFlag !== -1) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n      }\n      let needCallTransitionHooks = false;\n      if (isTemplateNode(el)) {\n        needCallTransitionHooks = needTransition(parentSuspense, transition) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;\n        const content = el.content.firstChild;\n        if (needCallTransitionHooks) {\n          transition.beforeEnter(content);\n        }\n        replaceNode(content, el, parentComponent);\n        vnode.el = el = content;\n      }\n      if (shapeFlag & 16 && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        let hasWarned = false;\n        while (next) {\n          if ((!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) && !hasWarned) {\n            warn$1(\n              `Hydration children mismatch on`,\n              el,\n              `\nServer rendered element contains more child nodes than client vdom.`\n            );\n            hasWarned = true;\n          }\n          logMismatchError();\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8) {\n        if (el.textContent !== vnode.children) {\n          (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) && warn$1(\n            `Hydration text content mismatch on`,\n            el,\n            `\n  - rendered on server: ${el.textContent}\n  - expected on client: ${vnode.children}`\n          );\n          logMismatchError();\n          el.textContent = vnode.children;\n        }\n      }\n      if (props) {\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__ || forcePatch || !optimized || patchFlag & (16 | 32)) {\n          for (const key in props) {\n            if ((!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) && // #11189 skip if this node has directives that have created hooks\n            // as it could have mutated the DOM in any possible way\n            !(dirs && dirs.some((d) => d.dir.created)) && propHasMismatch(el, key, props[key], vnode, parentComponent)) {\n              logMismatchError();\n            }\n            if (forcePatch && (key.endsWith(\"value\") || key === \"indeterminate\") || isOn(key) && !isReservedProp(key) || // force hydrate v-bind with .prop modifiers\n            key[0] === \".\") {\n              patchProp(\n                el,\n                key,\n                null,\n                props[key],\n                void 0,\n                void 0,\n                parentComponent\n              );\n            }\n          }\n        } else if (props.onClick) {\n          patchProp(\n            el,\n            \"onClick\",\n            null,\n            props.onClick,\n            void 0,\n            void 0,\n            parentComponent\n          );\n        }\n      }\n      let vnodeHooks;\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          needCallTransitionHooks && transition.enter(el);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n        }, parentSuspense);\n      }\n    }\n    return el.nextSibling;\n  };\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n      if (node) {\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      } else if (vnode.type === Text && !vnode.children) {\n        insert(vnode.el = createText(\"\"), container);\n      } else {\n        if ((!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) && !hasWarned) {\n          warn$1(\n            `Hydration children mismatch on`,\n            container,\n            `\nServer rendered element contains fewer child nodes than client vdom.`\n          );\n          hasWarned = true;\n        }\n        logMismatchError();\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          getContainerType(container),\n          slotScopeIds\n        );\n      }\n    }\n    return node;\n  };\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    const container = parentNode(node);\n    const next = hydrateChildren(\n      nextSibling(node),\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    );\n    if (next && isComment(next) && next.data === \"]\") {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      logMismatchError();\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_HYDRATION_MISMATCH_DETAILS__) && warn$1(\n      `Hydration node mismatch:\n- rendered on server:`,\n      node,\n      node.nodeType === 3 /* TEXT */ ? `(text)` : isComment(node) && node.data === \"[\" ? `(start of fragment)` : ``,\n      `\n- expected on client:`,\n      vnode.type\n    );\n    logMismatchError();\n    vnode.el = null;\n    if (isFragment) {\n      const end = locateClosingAnchor(node);\n      while (true) {\n        const next2 = nextSibling(node);\n        if (next2 && next2 !== end) {\n          remove(next2);\n        } else {\n          break;\n        }\n      }\n    }\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      getContainerType(container),\n      slotScopeIds\n    );\n    return next;\n  };\n  const locateClosingAnchor = (node, open = \"[\", close = \"]\") => {\n    let match = 0;\n    while (node) {\n      node = nextSibling(node);\n      if (node && isComment(node)) {\n        if (node.data === open) match++;\n        if (node.data === close) {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n    return node;\n  };\n  const replaceNode = (newNode, oldNode, parentComponent) => {\n    const parentNode2 = oldNode.parentNode;\n    if (parentNode2) {\n      parentNode2.replaceChild(newNode, oldNode);\n    }\n    let parent = parentComponent;\n    while (parent) {\n      if (parent.vnode.el === oldNode) {\n        parent.vnode.el = parent.subTree.el = newNode;\n      }\n      parent = parent.parent;\n    }\n  };\n  const isTemplateNode = (node) => {\n    return node.nodeType === 1 /* ELEMENT */ && node.tagName.toLowerCase() === \"template\";\n  };\n  return [hydrate, hydrateNode];\n}\nfunction propHasMismatch(el, key, clientValue, vnode, instance) {\n  let mismatchType;\n  let mismatchKey;\n  let actual;\n  let expected;\n  if (key === \"class\") {\n    actual = el.getAttribute(\"class\");\n    expected = normalizeClass(clientValue);\n    if (!isSetEqual(toClassSet(actual || \"\"), toClassSet(expected))) {\n      mismatchType = mismatchKey = `class`;\n    }\n  } else if (key === \"style\") {\n    actual = el.getAttribute(\"style\") || \"\";\n    expected = isString(clientValue) ? clientValue : stringifyStyle(normalizeStyle(clientValue));\n    const actualMap = toStyleMap(actual);\n    const expectedMap = toStyleMap(expected);\n    if (vnode.dirs) {\n      for (const { dir, value } of vnode.dirs) {\n        if (dir.name === \"show\" && !value) {\n          expectedMap.set(\"display\", \"none\");\n        }\n      }\n    }\n    if (instance) {\n      resolveCssVars(instance, vnode, expectedMap);\n    }\n    if (!isMapEqual(actualMap, expectedMap)) {\n      mismatchType = mismatchKey = \"style\";\n    }\n  } else if (el instanceof SVGElement && isKnownSvgAttr(key) || el instanceof HTMLElement && (isBooleanAttr(key) || isKnownHtmlAttr(key))) {\n    if (isBooleanAttr(key)) {\n      actual = el.hasAttribute(key);\n      expected = includeBooleanAttr(clientValue);\n    } else if (clientValue == null) {\n      actual = el.hasAttribute(key);\n      expected = false;\n    } else {\n      if (el.hasAttribute(key)) {\n        actual = el.getAttribute(key);\n      } else if (key === \"value\" && el.tagName === \"TEXTAREA\") {\n        actual = el.value;\n      } else {\n        actual = false;\n      }\n      expected = isRenderableAttrValue(clientValue) ? String(clientValue) : false;\n    }\n    if (actual !== expected) {\n      mismatchType = `attribute`;\n      mismatchKey = key;\n    }\n  }\n  if (mismatchType) {\n    const format = (v) => v === false ? `(not rendered)` : `${mismatchKey}=\"${v}\"`;\n    const preSegment = `Hydration ${mismatchType} mismatch on`;\n    const postSegment = `\n  - rendered on server: ${format(actual)}\n  - expected on client: ${format(expected)}\n  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.\n  You should fix the source of the mismatch.`;\n    {\n      warn$1(preSegment, el, postSegment);\n    }\n    return true;\n  }\n  return false;\n}\nfunction toClassSet(str) {\n  return new Set(str.trim().split(/\\s+/));\n}\nfunction isSetEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const s of a) {\n    if (!b.has(s)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toStyleMap(str) {\n  const styleMap = /* @__PURE__ */ new Map();\n  for (const item of str.split(\";\")) {\n    let [key, value] = item.split(\":\");\n    key = key.trim();\n    value = value && value.trim();\n    if (key && value) {\n      styleMap.set(key, value);\n    }\n  }\n  return styleMap;\n}\nfunction isMapEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const [key, value] of a) {\n    if (value !== b.get(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction resolveCssVars(instance, vnode, expectedMap) {\n  const root = instance.subTree;\n  if (instance.getCssVars && (vnode === root || root && root.type === Fragment && root.children.includes(vnode))) {\n    const cssVars = instance.getCssVars();\n    for (const key in cssVars) {\n      expectedMap.set(`--${key}`, String(cssVars[key]));\n    }\n  }\n  if (vnode === root && instance.parent) {\n    resolveCssVars(instance.parent, instance.vnode, expectedMap);\n  }\n}\n\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag\n    );\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction isSupported() {\n  if (supported !== void 0) {\n    return supported;\n  }\n  if (typeof window !== \"undefined\" && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n  return supported;\n}\n\nfunction initFeatureFlags() {\n  const needWarn = [];\n  if (typeof __VUE_OPTIONS_API__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_OPTIONS_API__`);\n    getGlobalThis().__VUE_OPTIONS_API__ = true;\n  }\n  if (typeof __VUE_PROD_DEVTOOLS__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\n    getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\n  }\n  if (typeof __VUE_PROD_HYDRATION_MISMATCH_DETAILS__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_PROD_HYDRATION_MISMATCH_DETAILS__`);\n    getGlobalThis().__VUE_PROD_HYDRATION_MISMATCH_DETAILS__ = false;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && needWarn.length) {\n    const multi = needWarn.length > 1;\n    console.warn(\n      `Feature flag${multi ? `s` : ``} ${needWarn.join(\", \")} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.\n\nFor more details, see https://link.vuejs.org/feature-flags.`\n    );\n  }\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  {\n    initFeatureFlags();\n  }\n  const target = getGlobalThis();\n  target.__VUE__ = true;\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    setDevtoolsHook$1(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, namespace = void 0, slotScopeIds = null, optimized = !!(process.env.NODE_ENV !== \"production\") && isHmrUpdating ? false : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, namespace);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          patchStaticNode(n1, n2, container, namespace);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(\"Invalid VNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, namespace) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      namespace,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const patchStaticNode = (n1, n2, container, namespace) => {\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor);\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(\n        n2.children,\n        container,\n        anchor,\n        namespace\n      );\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    if (n2.type === \"svg\") {\n      namespace = \"svg\";\n    } else if (n2.type === \"math\") {\n      namespace = \"mathml\";\n    }\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      namespace,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(vnode, namespace),\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !isReservedProp(key)) {\n          hostPatchProp(\n            el,\n            key,\n            null,\n            props[key],\n            namespace,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value, namespace);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      def(el, \"__vnode\", vnode, true);\n      def(el, \"__vueParentComponent\", parentComponent, true);\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = needTransition(parentSuspense, transition);\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (!!(process.env.NODE_ENV !== \"production\") && subTree.patchFlag > 0 && subTree.patchFlag & 2048) {\n        subTree = filterSingleRoot(subTree.children) || subTree;\n      }\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      el.__vnode = n2;\n    }\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || EMPTY_OBJ;\n    const newProps = n2.props || EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds\n      );\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        traverseStaticChildren(n1, n2);\n      }\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          namespace\n        );\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, namespace);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, namespace);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(\n                el,\n                key,\n                prev,\n                next,\n                namespace,\n                n1.children,\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              );\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        namespace\n      );\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, namespace) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              namespace,\n              vnode.children,\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (isReservedProp(key)) continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(\n            el,\n            key,\n            prev,\n            next,\n            namespace,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value, namespace);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && // #5523 dev root fragment may inherit directives\n    (isHmrUpdating || patchFlag & 2048)) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        // #10007\n        // such fragment like `<></>` will be compiled into\n        // a fragment which doesn't have a children.\n        // In this case fallback to an empty array\n        n2.children || [],\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          traverseStaticChildren(n1, n2);\n        } else if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null || parentComponent && n2 === parentComponent.subTree\n        ) {\n          traverseStaticChildren(\n            n1,\n            n2,\n            true\n            /* shallow */\n          );\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          namespace,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      registerHMR(instance);\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      pushWarningContext(initialVNode);\n      startMeasure(instance, `mount`);\n    }\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        startMeasure(instance, `init`);\n      }\n      setupComponent(instance);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        endMeasure(instance, `init`);\n      }\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect, optimized);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n    } else {\n      setupRenderEffect(\n        instance,\n        initialVNode,\n        container,\n        anchor,\n        parentSuspense,\n        namespace,\n        optimized\n      );\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      popWarningContext();\n      endMeasure(instance, `mount`);\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(n2);\n        }\n        updateComponentPreRender(instance, n2, optimized);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        return;\n      } else {\n        instance.next = n2;\n        invalidateJob(instance.update);\n        instance.effect.dirty = true;\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `render`);\n            }\n            instance.subTree = renderComponentRoot(instance);\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `render`);\n            }\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `hydrate`);\n            }\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `hydrate`);\n            }\n          };\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then(\n              // note: we are moving the render call into an async callback,\n              // which means it won't track dependencies - but it's ok because\n              // a server-rendered async wrapper is already in resolved state\n              // and it will never need to change.\n              () => !instance.isUnmounted && hydrateSubTree()\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `render`);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `render`);\n          }\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `patch`);\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            namespace\n          );\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `patch`);\n          }\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentAdded(instance);\n        }\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        {\n          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);\n          if (nonHydratedAsyncRoot) {\n            if (next) {\n              next.el = vnode.el;\n              updateComponentPreRender(instance, next, optimized);\n            }\n            nonHydratedAsyncRoot.asyncDep.then(() => {\n              if (!instance.isUnmounted) {\n                componentUpdateFn();\n              }\n            });\n            return;\n          }\n        }\n        let originNext = next;\n        let vnodeHook;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(next || instance.vnode);\n        }\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `render`);\n        }\n        const nextTree = renderComponentRoot(instance);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `render`);\n        }\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `patch`);\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          namespace\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `patch`);\n        }\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentUpdated(instance);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n      }\n    };\n    const effect = instance.effect = new ReactiveEffect(\n      componentUpdateFn,\n      NOOP,\n      () => queueJob(update),\n      instance.scope\n      // track it in component's effect scope\n    );\n    const update = instance.update = () => {\n      if (effect.dirty) {\n        effect.run();\n      }\n    };\n    update.id = instance.uid;\n    toggleRecurse(instance, true);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      effect.onTrack = instance.rtc ? (e) => invokeArrayFns(instance.rtc, e) : void 0;\n      effect.onTrigger = instance.rtg ? (e) => invokeArrayFns(instance.rtg, e) : void 0;\n      update.ownerInstance = instance;\n    }\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    pauseTracking();\n    flushPreFlushCbs(instance);\n    resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    c1 = c1 || EMPTY_ARR;\n    c2 = c2 || EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          if (!!(process.env.NODE_ENV !== \"production\") && keyToNewIndexMap.has(nextChild.key)) {\n            warn$1(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            );\n          }\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition2) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs,\n      memoIndex\n    } = vnode;\n    if (patchFlag === -2) {\n      optimized = false;\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (memoIndex != null) {\n      parentComponent.renderCache[memoIndex] = void 0;\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      if (!!(process.env.NODE_ENV !== \"production\") && vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {\n        vnode.children.forEach((child) => {\n          if (child.type === Comment) {\n            hostRemove(child.el);\n          } else {\n            remove(child);\n          }\n        });\n      } else {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      unregisterHMR(instance);\n    }\n    const { bum, scope, update, subTree, um, m, a } = instance;\n    invalidateMount(m);\n    invalidateMount(a);\n    if (bum) {\n      invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (update) {\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n  let isFlushing = false;\n  const render = (vnode, container, namespace) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(\n        container._vnode || null,\n        vnode,\n        container,\n        null,\n        null,\n        null,\n        namespace\n      );\n    }\n    if (!isFlushing) {\n      isFlushing = true;\n      flushPreFlushCbs();\n      flushPostFlushCbs();\n      isFlushing = false;\n    }\n    container._vnode = vnode;\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction resolveChildrenNamespace({ type, props }, currentNamespace) {\n  return currentNamespace === \"svg\" && type === \"foreignObject\" || currentNamespace === \"mathml\" && type === \"annotation-xml\" && props && props.encoding && props.encoding.includes(\"html\") ? void 0 : currentNamespace;\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\nfunction needTransition(parentSuspense, transition) {\n  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (isArray(ch1) && isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow && c2.patchFlag !== -2)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && c2.type === Comment && !c2.el) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\nfunction locateNonHydratedAsyncRoot(instance) {\n  const subComponent = instance.subTree.component;\n  if (subComponent) {\n    if (subComponent.asyncDep && !subComponent.asyncResolved) {\n      return subComponent;\n    } else {\n      return locateNonHydratedAsyncRoot(subComponent);\n    }\n  }\n}\nfunction invalidateMount(hooks) {\n  if (hooks) {\n    for (let i = 0; i < hooks.length; i++) hooks[i].active = false;\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    if (!ctx) {\n      !!(process.env.NODE_ENV !== \"production\") && warn$1(\n        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`\n      );\n    }\n    return ctx;\n  }\n};\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"post\" }) : { flush: \"post\" }\n  );\n}\nfunction watchSyncEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"sync\" }) : { flush: \"sync\" }\n  );\n}\nconst INITIAL_WATCHER_VALUE = {};\nfunction watch(source, cb, options) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(cb)) {\n    warn$1(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only supports \\`watch(source, cb, options?) signature.`\n    );\n  }\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, {\n  immediate,\n  deep,\n  flush,\n  once,\n  onTrack,\n  onTrigger\n} = EMPTY_OBJ) {\n  if (cb && once) {\n    const _cb = cb;\n    cb = (...args) => {\n      _cb(...args);\n      unwatch();\n    };\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && deep !== void 0 && typeof deep === \"number\") {\n    warn$1(\n      `watch() \"deep\" option with number value will be used as watch depth in future versions. Please use a boolean instead to avoid potential breakage.`\n    );\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !cb) {\n    if (immediate !== void 0) {\n      warn$1(\n        `watch() \"immediate\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (deep !== void 0) {\n      warn$1(\n        `watch() \"deep\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (once !== void 0) {\n      warn$1(\n        `watch() \"once\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n  }\n  const warnInvalidSource = (s) => {\n    warn$1(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`\n    );\n  };\n  const instance = currentInstance;\n  const reactiveGetter = (source2) => deep === true ? source2 : (\n    // for deep: false, only traverse root-level properties\n    traverse(source2, deep === false ? 1 : void 0)\n  );\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow(source);\n  } else if (isReactive(source)) {\n    getter = () => reactiveGetter(source);\n    forceTrigger = true;\n  } else if (isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return reactiveGetter(s);\n      } else if (isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2);\n      } else {\n        !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(s);\n      }\n    });\n  } else if (isFunction(source)) {\n    if (cb) {\n      getter = () => callWithErrorHandling(source, instance, 2);\n    } else {\n      getter = () => {\n        if (cleanup) {\n          cleanup();\n        }\n        return callWithAsyncErrorHandling(\n          source,\n          instance,\n          3,\n          [onCleanup]\n        );\n      };\n    }\n  } else {\n    getter = NOOP;\n    !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(source);\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    getter = () => traverse(baseGetter());\n  }\n  let cleanup;\n  let onCleanup = (fn) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4);\n      cleanup = effect.onStop = void 0;\n    };\n  };\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    onCleanup = NOOP;\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3, [\n        getter(),\n        isMultiSource ? [] : void 0,\n        onCleanup\n      ]);\n    }\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else {\n      return NOOP;\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = () => {\n    if (!effect.active || !effect.dirty) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => hasChanged(v, oldValue[i])) : hasChanged(newValue, oldValue)) || false) {\n        if (cleanup) {\n          cleanup();\n        }\n        callWithAsyncErrorHandling(cb, instance, 3, [\n          newValue,\n          // pass undefined as the old value when it's changed for the first time\n          oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n          onCleanup\n        ]);\n        oldValue = newValue;\n      }\n    } else {\n      effect.run();\n    }\n  };\n  job.allowRecurse = !!cb;\n  let scheduler;\n  if (flush === \"sync\") {\n    scheduler = job;\n  } else if (flush === \"post\") {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    job.pre = true;\n    if (instance) job.id = instance.uid;\n    scheduler = () => queueJob(job);\n  }\n  const effect = new ReactiveEffect(getter, NOOP, scheduler);\n  const scope = getCurrentScope();\n  const unwatch = () => {\n    effect.stop();\n    if (scope) {\n      remove(scope.effects, effect);\n    }\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    effect.onTrack = onTrack;\n    effect.onTrigger = onTrigger;\n  }\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === \"post\") {\n    queuePostRenderEffect(\n      effect.run.bind(effect),\n      instance && instance.suspense\n    );\n  } else {\n    effect.run();\n  }\n  if (ssrCleanup) ssrCleanup.push(unwatch);\n  return unwatch;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const reset = setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  reset();\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\nfunction traverse(value, depth = Infinity, seen) {\n  if (depth <= 0 || !isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  depth--;\n  if (isRef(value)) {\n    traverse(value.value, depth, seen);\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], depth, seen);\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, depth, seen);\n    });\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], depth, seen);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n      if (Object.prototype.propertyIsEnumerable.call(value, key)) {\n        traverse(value[key], depth, seen);\n      }\n    }\n  }\n  return value;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const sharedContext = instance.ctx;\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n    const cache = /* @__PURE__ */ new Map();\n    const keys = /* @__PURE__ */ new Set();\n    let current = null;\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.__v_cache = cache;\n    }\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext;\n    const storageContainer = createElement(\"div\");\n    sharedContext.activate = (vnode, container, anchor, namespace, optimized) => {\n      const instance2 = vnode.component;\n      move(vnode, container, anchor, 0, parentSuspense);\n      patch(\n        instance2.vnode,\n        vnode,\n        container,\n        anchor,\n        instance2,\n        parentSuspense,\n        namespace,\n        vnode.slotScopeIds,\n        optimized\n      );\n      queuePostRenderEffect(() => {\n        instance2.isDeactivated = false;\n        if (instance2.a) {\n          invokeArrayFns(instance2.a);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    sharedContext.deactivate = (vnode) => {\n      const instance2 = vnode.component;\n      invalidateMount(instance2.m);\n      invalidateMount(instance2.a);\n      move(vnode, storageContainer, null, 1, parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance2.da) {\n          invokeArrayFns(instance2.da);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n        instance2.isDeactivated = true;\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    function unmount(vnode) {\n      resetShapeFlag(vnode);\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n      if (!current || !isSameVNodeType(cached, current)) {\n        unmount(cached);\n      } else if (current) {\n        resetShapeFlag(current);\n      }\n      cache.delete(key);\n      keys.delete(key);\n    }\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache((name) => matches(include, name));\n        exclude && pruneCache((name) => !matches(exclude, name));\n      },\n      // prune post-render after `current` has been updated\n      { flush: \"post\", deep: true }\n    );\n    let pendingCacheKey = null;\n    const cacheSubtree = () => {\n      if (pendingCacheKey != null) {\n        if (isSuspense(instance.subTree.type)) {\n          queuePostRenderEffect(() => {\n            cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n          }, instance.subTree.suspense);\n        } else {\n          cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n        }\n      }\n    };\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach((cached) => {\n        const { subTree, suspense } = instance;\n        const vnode = getInnerChild(subTree);\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          resetShapeFlag(vnode);\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n      if (!slots.default) {\n        return null;\n      }\n      const children = slots.default();\n      const rawVNode = children[0];\n      if (children.length > 1) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn$1(`KeepAlive should contain exactly one component child.`);\n        }\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {\n        current = null;\n        return rawVNode;\n      }\n      let vnode = getInnerChild(rawVNode);\n      const comp = vnode.type;\n      const name = getComponentName(\n        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp\n      );\n      const { include, exclude, max } = props;\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        current = vnode;\n        return rawVNode;\n      }\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key);\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n        if (rawVNode.shapeFlag & 128) {\n          rawVNode.ssContent = vnode;\n        }\n      }\n      pendingCacheKey = key;\n      if (cachedVNode) {\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n        if (vnode.transition) {\n          setTransitionHooks(vnode, vnode.transition);\n        }\n        vnode.shapeFlag |= 512;\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key);\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      }\n      vnode.shapeFlag |= 256;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n};\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n  if (isArray(pattern)) {\n    return pattern.some((p) => matches(p, name));\n  } else if (isString(pattern)) {\n    return pattern.split(\",\").includes(name);\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name);\n  }\n  return false;\n}\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    remove(keepAliveRoot[type], injected);\n  }, target);\n}\nfunction resetShapeFlag(vnode) {\n  vnode.shapeFlag &= ~256;\n  vnode.shapeFlag &= ~512;\n}\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;\n}\n\nconst leaveCbKey = Symbol(\"_leaveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst recursiveGetSubtree = (instance) => {\n  const subTree = instance.subTree;\n  return subTree.component ? recursiveGetSubtree(subTree.component) : subTree;\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      let child = children[0];\n      if (children.length > 1) {\n        let hasFound = false;\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (!!(process.env.NODE_ENV !== \"production\") && hasFound) {\n              warn$1(\n                \"<transition> can only be used on a single element or component. Use <transition-group> for lists.\"\n              );\n              break;\n            }\n            child = c;\n            hasFound = true;\n            if (!!!(process.env.NODE_ENV !== \"production\")) break;\n          }\n        }\n      }\n      const rawProps = toRaw(props);\n      const { mode } = rawProps;\n      if (!!(process.env.NODE_ENV !== \"production\") && mode && mode !== \"in-out\" && mode !== \"out-in\" && mode !== \"default\") {\n        warn$1(`invalid <transition> mode: ${mode}`);\n      }\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getKeepAliveChild(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      let enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance,\n        // #11061, ensure enterHooks is fresh after clone\n        (hooks) => enterHooks = hooks\n      );\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(innerChild, oldInnerChild) && recursiveGetSubtree(instance).type !== Comment) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\" && innerChild.type !== Comment) {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (instance.update.active !== false) {\n              instance.effect.dirty = true;\n              instance.update();\n            }\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el[leaveCbKey] = () => {\n              earlyRemove();\n              el[leaveCbKey] = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance, postClone) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (isArray(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1)) done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {\n        leavingVNode.el[leaveCbKey]();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el[enterCbKey] = (cancelled) => {\n        if (called) return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el[enterCbKey] = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el[enterCbKey]) {\n        el[enterCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el[leaveCbKey] = (cancelled) => {\n        if (called) return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el[leaveCbKey] = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      const hooks2 = resolveTransitionHooks(\n        vnode2,\n        props,\n        state,\n        instance,\n        postClone\n      );\n      if (postClone) postClone(hooks2);\n      return hooks2;\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getKeepAliveChild(vnode) {\n  if (!isKeepAlive(vnode)) {\n    return vnode;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && vnode.component) {\n    return vnode.component.subTree;\n  }\n  const { shapeFlag, children } = vnode;\n  if (children) {\n    if (shapeFlag & 16) {\n      return children[0];\n    }\n    if (shapeFlag & 32 && isFunction(children.default)) {\n      return children.default();\n    }\n  }\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128) keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === \"\");\nconst isTargetSVG = (target) => typeof SVGElement !== \"undefined\" && target instanceof SVGElement;\nconst isTargetMathML = (target) => typeof MathMLElement === \"function\" && target instanceof MathMLElement;\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n  if (isString(targetSelector)) {\n    if (!select) {\n      !!(process.env.NODE_ENV !== \"production\") && warn$1(\n        `Current renderer does not support string target for Teleports. (missing querySelector renderer option)`\n      );\n      return null;\n    } else {\n      const target = select(targetSelector);\n      if (!!(process.env.NODE_ENV !== \"production\") && !target && !isTeleportDisabled(props)) {\n        warn$1(\n          `Failed to locate Teleport target with selector \"${targetSelector}\". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`\n        );\n      }\n      return target;\n    }\n  } else {\n    if (!!(process.env.NODE_ENV !== \"production\") && !targetSelector && !isTeleportDisabled(props)) {\n      warn$1(`Invalid Teleport target: ${targetSelector}`);\n    }\n    return targetSelector;\n  }\n};\nconst TeleportImpl = {\n  name: \"Teleport\",\n  __isTeleport: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let { shapeFlag, children, dynamicChildren } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (n1 == null) {\n      const placeholder = n2.el = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport start\") : createText(\"\");\n      const mainAnchor = n2.anchor = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport end\") : createText(\"\");\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const target = n2.target = resolveTarget(n2.props, querySelector);\n      const targetAnchor = n2.targetAnchor = createText(\"\");\n      if (target) {\n        insert(targetAnchor, target);\n        if (namespace === \"svg\" || isTargetSVG(target)) {\n          namespace = \"svg\";\n        } else if (namespace === \"mathml\" || isTargetMathML(target)) {\n          namespace = \"mathml\";\n        }\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !disabled) {\n        warn$1(\"Invalid Teleport target on mount:\", target, `(${typeof target})`);\n      }\n      const mount = (container2, anchor2) => {\n        if (shapeFlag & 16) {\n          mountChildren(\n            children,\n            container2,\n            anchor2,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        }\n      };\n      if (disabled) {\n        mount(container, mainAnchor);\n      } else if (target) {\n        mount(target, targetAnchor);\n      }\n    } else {\n      n2.el = n1.el;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      if (namespace === \"svg\" || isTargetSVG(target)) {\n        namespace = \"svg\";\n      } else if (namespace === \"mathml\" || isTargetMathML(target)) {\n        namespace = \"mathml\";\n      }\n      if (dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds\n        );\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          false\n        );\n      }\n      if (disabled) {\n        if (!wasDisabled) {\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            1\n          );\n        } else {\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\n            n2.props.to = n1.props.to;\n          }\n        }\n      } else {\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          );\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              0\n            );\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn$1(\n              \"Invalid Teleport target on update:\",\n              target,\n              `(${typeof target})`\n            );\n          }\n        } else if (wasDisabled) {\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            1\n          );\n        }\n      }\n    }\n    updateCssVars(n2);\n  },\n  remove(vnode, parentComponent, parentSuspense, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\n    if (target) {\n      hostRemove(targetAnchor);\n    }\n    doRemove && hostRemove(anchor);\n    if (shapeFlag & 16) {\n      const shouldRemove = doRemove || !isTeleportDisabled(props);\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        unmount(\n          child,\n          parentComponent,\n          parentSuspense,\n          shouldRemove,\n          !!child.dynamicChildren\n        );\n      }\n    }\n  },\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {\n  if (moveType === 0) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode;\n  const isReorder = moveType === 2;\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  }\n  if (!isReorder || isTeleportDisabled(props)) {\n    if (shapeFlag & 16) {\n      for (let i = 0; i < children.length; i++) {\n        move(\n          children[i],\n          container,\n          parentAnchor,\n          2\n        );\n      }\n    }\n  }\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: { nextSibling, parentNode, querySelector }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(\n    vnode.props,\n    querySelector\n  );\n  if (target) {\n    const targetNode = target._lpa || target.firstChild;\n    if (vnode.shapeFlag & 16) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node),\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        vnode.targetAnchor = targetNode;\n      } else {\n        vnode.anchor = nextSibling(node);\n        let targetAnchor = targetNode;\n        while (targetAnchor) {\n          targetAnchor = nextSibling(targetAnchor);\n          if (targetAnchor && targetAnchor.nodeType === 8 && targetAnchor.data === \"teleport anchor\") {\n            vnode.targetAnchor = targetAnchor;\n            target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n            break;\n          }\n        }\n        hydrateChildren(\n          targetNode,\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n    updateCssVars(vnode);\n  }\n  return vnode.anchor && nextSibling(vnode.anchor);\n}\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n  const ctx = vnode.ctx;\n  if (ctx && ctx.ut) {\n    let node = vnode.children[0].el;\n    while (node && node !== vnode.targetAnchor) {\n      if (node.nodeType === 1) node.setAttribute(\"data-v-owner\", ctx.uid);\n      node = node.nextSibling;\n    }\n    ctx.ut();\n  }\n}\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  if (!!(process.env.NODE_ENV !== \"production\") && n2.shapeFlag & 6 && hmrDirtyComponents.has(n2.type)) {\n    n1.shapeFlag &= ~256;\n    n2.shapeFlag &= ~512;\n    return false;\n  }\n  return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(\n    ...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args\n  );\n};\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? isString(ref) || isRef(ref) || isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= isString(children) ? 8 : 16;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && vnode.key !== vnode.key) {\n    warn$1(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = !!(process.env.NODE_ENV !== \"production\") ? createVNodeWithArgsTransform : _createVNode;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !type) {\n      warn$1(`Invalid vnode type when creating vnode: ${type}.`);\n    }\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag = -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !isString(klass)) {\n      props.class = normalizeClass(klass);\n    }\n    if (isObject(style)) {\n      if (isProxy(style) && !isArray(style)) {\n        style = extend({}, style);\n      }\n      props.style = normalizeStyle(style);\n    }\n  }\n  const shapeFlag = isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject(type) ? 4 : isFunction(type) ? 2 : 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && shapeFlag & 4 && isProxy(type)) {\n    type = toRaw(type);\n    warn$1(\n      `Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with \\`markRaw\\` or using \\`shallowRef\\` instead of \\`ref\\`.`,\n      `\nComponent that was made reactive: `,\n      type\n    );\n  }\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props) return null;\n  return isProxy(props) || isInternalObject(props) ? extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false, cloneTransition = false) {\n  const { props, ref, patchFlag, children, transition } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: !!(process.env.NODE_ENV !== \"production\") && patchFlag === -1 && isArray(children) ? children.map(deepCloneVNode) : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  if (transition && cloneTransition) {\n    setTransitionHooks(\n      cloned,\n      transition.clone(cloned)\n    );\n  }\n  return cloned;\n}\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n  if (isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (isArray(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (isArray(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !isInternalObject(children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = normalizeStyle([ret.style, toMerge.style]);\n      } else if (isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    scope: new EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n    attrsProxy: null,\n    slotsProxy: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    instance.ctx = createDevRenderContext(instance);\n  } else {\n    instance.ctx = { _: instance };\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet setInSSRSetupState;\n{\n  const g = getGlobalThis();\n  const registerGlobalSetter = (key, setter) => {\n    let setters;\n    if (!(setters = g[key])) setters = g[key] = [];\n    setters.push(setter);\n    return (v) => {\n      if (setters.length > 1) setters.forEach((set) => set(v));\n      else setters[0](v);\n    };\n  };\n  internalSetCurrentInstance = registerGlobalSetter(\n    `__VUE_INSTANCE_SETTERS__`,\n    (v) => currentInstance = v\n  );\n  setInSSRSetupState = registerGlobalSetter(\n    `__VUE_SSR_SETTERS__`,\n    (v) => isInSSRComponentSetup = v\n  );\n}\nconst setCurrentInstance = (instance) => {\n  const prev = currentInstance;\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n  return () => {\n    instance.scope.off();\n    internalSetCurrentInstance(prev);\n  };\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nconst isBuiltInTag = /* @__PURE__ */ makeMap(\"slot,component\");\nfunction validateComponentName(name, { isNativeTag }) {\n  if (isBuiltInTag(name) || isNativeTag(name)) {\n    warn$1(\n      \"Do not use built-in or reserved HTML elements as component id: \" + name\n    );\n  }\n}\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n  isSSR && setInSSRSetupState(isSSR);\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isSSR && setInSSRSetupState(false);\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n  const Component = instance.type;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config);\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components);\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config);\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives);\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i]);\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn$1(\n        `\"compilerOptions\" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`\n      );\n    }\n  }\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    exposePropsOnRenderContext(instance);\n  }\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    const reset = setCurrentInstance(instance);\n    pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [\n        !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(instance.props) : instance.props,\n        setupContext\n      ]\n    );\n    resetTracking();\n    reset();\n    if (isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n        if (!!(process.env.NODE_ENV !== \"production\") && !instance.suspense) {\n          const name = (_a = Component.name) != null ? _a : \"Anonymous\";\n          warn$1(\n            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`\n          );\n        }\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (isObject(setupResult)) {\n    if (!!(process.env.NODE_ENV !== \"production\") && isVNode(setupResult)) {\n      warn$1(\n        `setup() should not return VNodes directly - return a render function instead.`\n      );\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n    instance.setupState = proxyRefs(setupResult);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      exposeSetupStateOnRenderContext(instance);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\") && setupResult !== void 0) {\n    warn$1(\n      `setup() should return an object. Received: ${setupResult === null ? \"null\" : typeof setupResult}`\n    );\n  }\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n  installWithProxy = (i) => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n}\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `compile`);\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = extend(\n          extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `compile`);\n        }\n      }\n    }\n    instance.render = Component.render || NOOP;\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  }\n  if (__VUE_OPTIONS_API__ && true) {\n    const reset = setCurrentInstance(instance);\n    pauseTracking();\n    try {\n      applyOptions(instance);\n    } finally {\n      resetTracking();\n      reset();\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !Component.render && instance.render === NOOP && !isSSR) {\n    if (!compile && Component.template) {\n      warn$1(\n        `Component provided template option but runtime compilation is not supported in this build of Vue.` + (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".` )\n      );\n    } else {\n      warn$1(`Component is missing template or render function: `, Component);\n    }\n  }\n}\nconst attrsProxyHandlers = !!(process.env.NODE_ENV !== \"production\") ? {\n  get(target, key) {\n    markAttrsAccessed();\n    track(target, \"get\", \"\");\n    return target[key];\n  },\n  set() {\n    warn$1(`setupContext.attrs is readonly.`);\n    return false;\n  },\n  deleteProperty() {\n    warn$1(`setupContext.attrs is readonly.`);\n    return false;\n  }\n} : {\n  get(target, key) {\n    track(target, \"get\", \"\");\n    return target[key];\n  }\n};\nfunction getSlotsProxy(instance) {\n  return instance.slotsProxy || (instance.slotsProxy = new Proxy(instance.slots, {\n    get(target, key) {\n      track(instance, \"get\", \"$slots\");\n      return target[key];\n    }\n  }));\n}\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (instance.exposed) {\n        warn$1(`expose() should be called only once per setup().`);\n      }\n      if (exposed != null) {\n        let exposedType = typeof exposed;\n        if (exposedType === \"object\") {\n          if (isArray(exposed)) {\n            exposedType = \"array\";\n          } else if (isRef(exposed)) {\n            exposedType = \"ref\";\n          }\n        }\n        if (exposedType !== \"object\") {\n          warn$1(\n            `expose() should be passed a plain object, received ${exposedType}.`\n          );\n        }\n      }\n    }\n    instance.exposed = exposed || {};\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    let attrsProxy;\n    return Object.freeze({\n      get attrs() {\n        return attrsProxy || (attrsProxy = new Proxy(instance.attrs, attrsProxyHandlers));\n      },\n      get slots() {\n        return getSlotsProxy(instance);\n      },\n      get emit() {\n        return (event, ...args) => instance.emit(event, ...args);\n      },\n      expose\n    });\n  } else {\n    return {\n      attrs: new Proxy(instance.attrs, attrsProxyHandlers),\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    };\n  }\n}\nfunction getComponentPublicInstance(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  } else {\n    return instance.proxy;\n  }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, \"\");\nfunction getComponentName(Component, includeInferred = true) {\n  return isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n  if (!name && instance && instance.parent) {\n    const inferFromRegistry = (registry) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n    name = inferFromRegistry(\n      instance.components || instance.parent.type.components\n    ) || inferFromRegistry(instance.appContext.components);\n  }\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n  return isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  const c = computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const i = getCurrentInstance();\n    if (i && i.appContext.config.warnRecursiveComputed) {\n      c._warnRecursive = true;\n    }\n  }\n  return c;\n};\n\nfunction useModel(props, name, options = EMPTY_OBJ) {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn$1(`useModel() called without active instance.`);\n    return ref();\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !i.propsOptions[0][name]) {\n    warn$1(`useModel() called with prop \"${name}\" which is not declared.`);\n    return ref();\n  }\n  const camelizedName = camelize(name);\n  const hyphenatedName = hyphenate(name);\n  const res = customRef((track, trigger) => {\n    let localValue;\n    watchSyncEffect(() => {\n      const propValue = props[name];\n      if (hasChanged(localValue, propValue)) {\n        localValue = propValue;\n        trigger();\n      }\n    });\n    return {\n      get() {\n        track();\n        return options.get ? options.get(localValue) : localValue;\n      },\n      set(value) {\n        const rawProps = i.vnode.props;\n        if (!(rawProps && // check if parent has passed v-model\n        (name in rawProps || camelizedName in rawProps || hyphenatedName in rawProps) && (`onUpdate:${name}` in rawProps || `onUpdate:${camelizedName}` in rawProps || `onUpdate:${hyphenatedName}` in rawProps)) && hasChanged(value, localValue)) {\n          localValue = value;\n          trigger();\n        }\n        i.emit(`update:${name}`, options.set ? options.set(value) : value);\n      }\n    };\n  });\n  const modifierKey = name === \"modelValue\" ? \"modelModifiers\" : `${name}Modifiers`;\n  res[Symbol.iterator] = () => {\n    let i2 = 0;\n    return {\n      next() {\n        if (i2 < 2) {\n          return { value: i2++ ? props[modifierKey] || {} : res, done: false };\n        } else {\n          return { done: true };\n        }\n      }\n    };\n  };\n  return res;\n}\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nfunction initCustomFormatter() {\n  if (!!!(process.env.NODE_ENV !== \"production\") || typeof window === \"undefined\") {\n    return;\n  }\n  const vueStyle = { style: \"color:#3ba776\" };\n  const numberStyle = { style: \"color:#1677ff\" };\n  const stringStyle = { style: \"color:#f5222d\" };\n  const keywordStyle = { style: \"color:#eb2f96\" };\n  const formatter = {\n    header(obj) {\n      if (!isObject(obj)) {\n        return null;\n      }\n      if (obj.__isVue) {\n        return [\"div\", vueStyle, `VueInstance`];\n      } else if (isRef(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, genRefFlag(obj)],\n          \"<\",\n          formatValue(obj.value),\n          `>`\n        ];\n      } else if (isReactive(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReactive\" : \"Reactive\"],\n          \"<\",\n          formatValue(obj),\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\n        ];\n      } else if (isReadonly(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReadonly\" : \"Readonly\"],\n          \"<\",\n          formatValue(obj),\n          \">\"\n        ];\n      }\n      return null;\n    },\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return [\n          \"div\",\n          {},\n          ...formatInstance(obj.$)\n        ];\n      }\n    }\n  };\n  function formatInstance(instance) {\n    const blocks = [];\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock(\"props\", toRaw(instance.props)));\n    }\n    if (instance.setupState !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"setup\", instance.setupState));\n    }\n    if (instance.data !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"data\", toRaw(instance.data)));\n    }\n    const computed = extractKeys(instance, \"computed\");\n    if (computed) {\n      blocks.push(createInstanceBlock(\"computed\", computed));\n    }\n    const injected = extractKeys(instance, \"inject\");\n    if (injected) {\n      blocks.push(createInstanceBlock(\"injected\", injected));\n    }\n    blocks.push([\n      \"div\",\n      {},\n      [\n        \"span\",\n        {\n          style: keywordStyle.style + \";opacity:0.66\"\n        },\n        \"$ (internal): \"\n      ],\n      [\"object\", { object: instance }]\n    ]);\n    return blocks;\n  }\n  function createInstanceBlock(type, target) {\n    target = extend({}, target);\n    if (!Object.keys(target).length) {\n      return [\"span\", {}];\n    }\n    return [\n      \"div\",\n      { style: \"line-height:1.25em;margin-bottom:0.6em\" },\n      [\n        \"div\",\n        {\n          style: \"color:#476582\"\n        },\n        type\n      ],\n      [\n        \"div\",\n        {\n          style: \"padding-left:1.25em\"\n        },\n        ...Object.keys(target).map((key) => {\n          return [\n            \"div\",\n            {},\n            [\"span\", keywordStyle, key + \": \"],\n            formatValue(target[key], false)\n          ];\n        })\n      ]\n    ];\n  }\n  function formatValue(v, asRaw = true) {\n    if (typeof v === \"number\") {\n      return [\"span\", numberStyle, v];\n    } else if (typeof v === \"string\") {\n      return [\"span\", stringStyle, JSON.stringify(v)];\n    } else if (typeof v === \"boolean\") {\n      return [\"span\", keywordStyle, v];\n    } else if (isObject(v)) {\n      return [\"object\", { object: asRaw ? toRaw(v) : v }];\n    } else {\n      return [\"span\", stringStyle, String(v)];\n    }\n  }\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n    if (isFunction(Comp)) {\n      return;\n    }\n    const extracted = {};\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n    return extracted;\n  }\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n    if (isArray(opts) && opts.includes(key) || isObject(opts) && key in opts) {\n      return true;\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n    if (Comp.mixins && Comp.mixins.some((m) => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n  function genRefFlag(v) {\n    if (isShallow(v)) {\n      return `ShallowRef`;\n    }\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n    return `Ref`;\n  }\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n  const ret = render();\n  ret.memo = memo.slice();\n  ret.memoIndex = index;\n  return cache[index] = ret;\n}\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n  if (prev.length != memo.length) {\n    return false;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  }\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n  return true;\n}\n\nconst version = \"3.4.31\";\nconst warn = !!(process.env.NODE_ENV !== \"production\") ? warn$1 : NOOP;\nconst ErrorTypeStrings = ErrorTypeStrings$1 ;\nconst devtools = !!(process.env.NODE_ENV !== \"production\") || true ? devtools$1 : void 0;\nconst setDevtoolsHook = !!(process.env.NODE_ENV !== \"production\") || true ? setDevtoolsHook$1 : NOOP;\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode: isVNode,\n  normalizeVNode,\n  getComponentPublicInstance\n};\nconst ssrUtils = _ssrUtils ;\nconst resolveFilter = null;\nconst compatUtils = null;\nconst DeprecationTypes = null;\n\nexport { BaseTransition, BaseTransitionPropsValidators, Comment, DeprecationTypes, ErrorCodes, ErrorTypeStrings, Fragment, KeepAlive, Static, Suspense, Teleport, Text, assertNumber, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineModel, defineOptions, defineProps, defineSlots, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, hasInjectionContext, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeModels, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useModel, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","/**\n* @vue/runtime-dom v3.4.31\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nimport { h, BaseTransition, BaseTransitionPropsValidators, assertNumber, getCurrentInstance, warn, onMounted, watchPostEffect, onUnmounted, Fragment, Static, camelize, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, isRuntimeOnly, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { extend, isObject, toNumber, isArray, isString, hyphenate, capitalize, includeBooleanAttr, isSymbol, isSpecialBooleanAttr, isFunction, NOOP, isOn, isModelListener, camelize as camelize$1, EMPTY_OBJ, looseToNumber, looseIndexOf, isSet, looseEqual, invokeArrayFns, isHTMLTag, isSVGTag, isMathMLTag } from '@vue/shared';\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst mathmlNS = \"http://www.w3.org/1998/Math/MathML\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, namespace, is, props) => {\n    const el = namespace === \"svg\" ? doc.createElementNS(svgNS, tag) : namespace === \"mathml\" ? doc.createElementNS(mathmlNS, tag) : is ? doc.createElement(tag, { is }) : doc.createElement(tag);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, namespace, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling)) break;\n      }\n    } else {\n      templateContainer.innerHTML = namespace === \"svg\" ? `<svg>${content}</svg>` : namespace === \"mathml\" ? `<math>${content}</math>` : content;\n      const template = templateContainer.content;\n      if (namespace === \"svg\" || namespace === \"mathml\") {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst vtcKey = Symbol(\"_vtc\");\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = \"Transition\";\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = Transition.props = /* @__PURE__ */ extend(\n  {},\n  BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst callHook = (hook, args = []) => {\n  if (isArray(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? isArray(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      addTransitionClass(el, leaveActiveClass);\n      forceReflow();\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = toNumber(val);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(res, \"<transition> explicit duration\");\n  }\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el[vtcKey] = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  if (s === \"auto\") return 0;\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el[vtcKey];\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nconst vShowOriginalDisplay = Symbol(\"_vod\");\nconst vShowHidden = Symbol(\"_vsh\");\nconst vShow = {\n  beforeMount(el, { value }, { transition }) {\n    el[vShowOriginalDisplay] = el.style.display === \"none\" ? \"\" : el.style.display;\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue) return;\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value);\n  }\n};\nif (!!(process.env.NODE_ENV !== \"production\")) {\n  vShow.name = \"show\";\n}\nfunction setDisplay(el, value) {\n  el.style.display = value ? el[vShowOriginalDisplay] : \"none\";\n  el[vShowHidden] = !value;\n}\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: \"none\" } };\n    }\n  };\n}\n\nconst CSS_VAR_TEXT = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"CSS_VAR_TEXT\" : \"\");\nfunction useCssVars(getter) {\n  const instance = getCurrentInstance();\n  if (!instance) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(`useCssVars is called without current active component instance.`);\n    return;\n  }\n  const updateTeleports = instance.ut = (vars = getter(instance.proxy)) => {\n    Array.from(\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)\n    ).forEach((node) => setVarsOnNode(node, vars));\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    instance.getCssVars = () => getter(instance.proxy);\n  }\n  const setVars = () => {\n    const vars = getter(instance.proxy);\n    setVarsOnVNode(instance.subTree, vars);\n    updateTeleports(vars);\n  };\n  onMounted(() => {\n    watchPostEffect(setVars);\n    const ob = new MutationObserver(setVars);\n    ob.observe(instance.subTree.el.parentNode, { childList: true });\n    onUnmounted(() => ob.disconnect());\n  });\n}\nfunction setVarsOnVNode(vnode, vars) {\n  if (vnode.shapeFlag & 128) {\n    const suspense = vnode.suspense;\n    vnode = suspense.activeBranch;\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch, vars);\n      });\n    }\n  }\n  while (vnode.component) {\n    vnode = vnode.component.subTree;\n  }\n  if (vnode.shapeFlag & 1 && vnode.el) {\n    setVarsOnNode(vnode.el, vars);\n  } else if (vnode.type === Fragment) {\n    vnode.children.forEach((c) => setVarsOnVNode(c, vars));\n  } else if (vnode.type === Static) {\n    let { el, anchor } = vnode;\n    while (el) {\n      setVarsOnNode(el, vars);\n      if (el === anchor) break;\n      el = el.nextSibling;\n    }\n  }\n}\nfunction setVarsOnNode(el, vars) {\n  if (el.nodeType === 1) {\n    const style = el.style;\n    let cssText = \"\";\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key]);\n      cssText += `--${key}: ${vars[key]};`;\n    }\n    style[CSS_VAR_TEXT] = cssText;\n  }\n}\n\nconst displayRE = /(^|;)\\s*display\\s*:/;\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = isString(next);\n  let hasControlledDisplay = false;\n  if (next && !isCssString) {\n    if (prev) {\n      if (!isString(prev)) {\n        for (const key in prev) {\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      } else {\n        for (const prevStyle of prev.split(\";\")) {\n          const key = prevStyle.slice(0, prevStyle.indexOf(\":\")).trim();\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      }\n    }\n    for (const key in next) {\n      if (key === \"display\") {\n        hasControlledDisplay = true;\n      }\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    if (isCssString) {\n      if (prev !== next) {\n        const cssVarText = style[CSS_VAR_TEXT];\n        if (cssVarText) {\n          next += \";\" + cssVarText;\n        }\n        style.cssText = next;\n        hasControlledDisplay = displayRE.test(next);\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n  }\n  if (vShowOriginalDisplay in el) {\n    el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : \"\";\n    if (el[vShowHidden]) {\n      style.display = \"none\";\n    }\n  }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (isArray(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null) val = \"\";\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (semicolonRE.test(val)) {\n        warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`\n        );\n      }\n    }\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance, isBoolean = isSpecialBooleanAttr(key)) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (value == null || isBoolean && !includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(\n        key,\n        isBoolean ? \"\" : isSymbol(value) ? String(value) : value\n      );\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, prevChildren, parentComponent, parentSuspense, unmountChildren) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense);\n    }\n    el[key] = value == null ? \"\" : value;\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") || \"\" : el.value;\n    const newValue = value == null ? \"\" : String(value);\n    if (oldValue !== newValue || !(\"_value\" in el)) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    el._value = value;\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !needRemove) {\n      warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: value ${value} is invalid.`,\n        e\n      );\n    }\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nconst veiKey = Symbol(\"_vei\");\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el[veiKey] || (el[veiKey] = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = !!(process.env.NODE_ENV !== \"production\") ? sanitizeEventValue(nextValue, rawName) : nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(\n        !!(process.env.NODE_ENV !== \"production\") ? sanitizeEventValue(nextValue, rawName) : nextValue,\n        instance\n      );\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction sanitizeEventValue(value, propName) {\n  if (isFunction(value) || isArray(value)) {\n    return value;\n  }\n  warn(\n    `Wrong type passed as event handler to ${propName} - did you forget @ or : in front of your prop?\nExpected function or array of functions, received type ${typeof value}.`\n  );\n  return NOOP;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map(\n      (fn) => (e2) => !e2._stopped && fn && fn(e2)\n    );\n  } else {\n    return value;\n  }\n}\n\nconst isNativeOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // lowercase letter\nkey.charCodeAt(2) > 96 && key.charCodeAt(2) < 123;\nconst patchProp = (el, key, prevValue, nextValue, namespace, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n  const isSVG = namespace === \"svg\";\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (isOn(key)) {\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(\n      el,\n      key,\n      nextValue,\n      prevChildren,\n      parentComponent,\n      parentSuspense,\n      unmountChildren\n    );\n    if (!el.tagName.includes(\"-\") && (key === \"value\" || key === \"checked\" || key === \"selected\")) {\n      patchAttr(el, key, nextValue, isSVG, parentComponent, key !== \"value\");\n    }\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && isNativeOn(key) && isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (key === \"width\" || key === \"height\") {\n    const tag = el.tagName;\n    if (tag === \"IMG\" || tag === \"VIDEO\" || tag === \"CANVAS\" || tag === \"SOURCE\") {\n      return false;\n    }\n  }\n  if (isNativeOn(key) && isString(value)) {\n    return false;\n  }\n  return key in el;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineCustomElement(options, extraOptions, hydrate2) {\n  const Comp = defineComponent(options, extraOptions);\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, hydrate2);\n    }\n  }\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\n/*! #__NO_SIDE_EFFECTS__ */\nconst defineSSRCustomElement = /* @__NO_SIDE_EFFECTS__ */ (options, extraOptions) => {\n  return /* @__PURE__ */ defineCustomElement(options, extraOptions, hydrate);\n};\nconst BaseClass = typeof HTMLElement !== \"undefined\" ? HTMLElement : class {\n};\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, hydrate2) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    /**\n     * @internal\n     */\n    this._instance = null;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n    this._ob = null;\n    if (this.shadowRoot && hydrate2) {\n      hydrate2(this._createVNode(), this.shadowRoot);\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && this.shadowRoot) {\n        warn(\n          `Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \\`defineSSRCustomElement\\`.`\n        );\n      }\n      this.attachShadow({ mode: \"open\" });\n      if (!this._def.__asyncLoader) {\n        this._resolveProps(this._def);\n      }\n    }\n  }\n  connectedCallback() {\n    this._connected = true;\n    if (!this._instance) {\n      if (this._resolved) {\n        this._update();\n      } else {\n        this._resolveDef();\n      }\n    }\n  }\n  disconnectedCallback() {\n    this._connected = false;\n    nextTick(() => {\n      if (!this._connected) {\n        if (this._ob) {\n          this._ob.disconnect();\n          this._ob = null;\n        }\n        render(null, this.shadowRoot);\n        this._instance = null;\n      }\n    });\n  }\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  _resolveDef() {\n    this._resolved = true;\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    }\n    this._ob = new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    });\n    this._ob.observe(this, { attributes: true });\n    const resolve = (def, isAsync = false) => {\n      const { props, styles } = def;\n      let numberProps;\n      if (props && !isArray(props)) {\n        for (const key in props) {\n          const opt = props[key];\n          if (opt === Number || opt && opt.type === Number) {\n            if (key in this._props) {\n              this._props[key] = toNumber(this._props[key]);\n            }\n            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[camelize$1(key)] = true;\n          }\n        }\n      }\n      this._numberProps = numberProps;\n      if (isAsync) {\n        this._resolveProps(def);\n      }\n      this._applyStyles(styles);\n      this._update();\n    };\n    const asyncDef = this._def.__asyncLoader;\n    if (asyncDef) {\n      asyncDef().then((def) => resolve(def, true));\n    } else {\n      resolve(this._def);\n    }\n  }\n  _resolveProps(def) {\n    const { props } = def;\n    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});\n    for (const key of Object.keys(this)) {\n      if (key[0] !== \"_\" && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key], true, false);\n      }\n    }\n    for (const key of declaredPropKeys.map(camelize$1)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key);\n        },\n        set(val) {\n          this._setProp(key, val);\n        }\n      });\n    }\n  }\n  _setAttr(key) {\n    let value = this.hasAttribute(key) ? this.getAttribute(key) : void 0;\n    const camelKey = camelize$1(key);\n    if (this._numberProps && this._numberProps[camelKey]) {\n      value = toNumber(value);\n    }\n    this._setProp(camelKey, value, false);\n  }\n  /**\n   * @internal\n   */\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\n   * @internal\n   */\n  _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n    if (val !== this._props[key]) {\n      this._props[key] = val;\n      if (shouldUpdate && this._instance) {\n        this._update();\n      }\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(hyphenate(key), \"\");\n        } else if (typeof val === \"string\" || typeof val === \"number\") {\n          this.setAttribute(hyphenate(key), val + \"\");\n        } else if (!val) {\n          this.removeAttribute(hyphenate(key));\n        }\n      }\n    }\n  }\n  _update() {\n    render(this._createVNode(), this.shadowRoot);\n  }\n  _createVNode() {\n    const vnode = createVNode(this._def, extend({}, this._props));\n    if (!this._instance) {\n      vnode.ce = (instance) => {\n        this._instance = instance;\n        instance.isCE = true;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          instance.ceReload = (newStyles) => {\n            if (this._styles) {\n              this._styles.forEach((s) => this.shadowRoot.removeChild(s));\n              this._styles.length = 0;\n            }\n            this._applyStyles(newStyles);\n            this._instance = null;\n            this._update();\n          };\n        }\n        const dispatch = (event, args) => {\n          this.dispatchEvent(\n            new CustomEvent(event, {\n              detail: args\n            })\n          );\n        };\n        instance.emit = (event, ...args) => {\n          dispatch(event, args);\n          if (hyphenate(event) !== event) {\n            dispatch(hyphenate(event), args);\n          }\n        };\n        let parent = this;\n        while (parent = parent && (parent.parentNode || parent.host)) {\n          if (parent instanceof VueElement) {\n            instance.parent = parent._instance;\n            instance.provides = parent._instance.provides;\n            break;\n          }\n        }\n      };\n    }\n    return vnode;\n  }\n  _applyStyles(styles) {\n    if (styles) {\n      styles.forEach((css) => {\n        const s = document.createElement(\"style\");\n        s.textContent = css;\n        this.shadowRoot.appendChild(s);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          (this._styles || (this._styles = [])).push(s);\n        }\n      });\n    }\n  }\n}\n\nfunction useCssModule(name = \"$style\") {\n  {\n    const instance = getCurrentInstance();\n    if (!instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`useCssModule must be called inside setup()`);\n      return EMPTY_OBJ;\n    }\n    const modules = instance.type.__cssModules;\n    if (!modules) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS modules injected.`);\n      return EMPTY_OBJ;\n    }\n    const mod = modules[name];\n    if (!mod) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS module named \"${name}\".`);\n      return EMPTY_OBJ;\n    }\n    return mod;\n  }\n}\n\nconst positionMap = /* @__PURE__ */ new WeakMap();\nconst newPositionMap = /* @__PURE__ */ new WeakMap();\nconst moveCbKey = Symbol(\"_moveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nconst TransitionGroupImpl = {\n  name: \"TransitionGroup\",\n  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevChildren;\n    let children;\n    onUpdated(() => {\n      if (!prevChildren.length) {\n        return;\n      }\n      const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n      if (!hasCSSTransform(\n        prevChildren[0].el,\n        instance.vnode.el,\n        moveClass\n      )) {\n        return;\n      }\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation);\n      forceReflow();\n      movedChildren.forEach((c) => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = \"\";\n        const cb = el[moveCbKey] = (e) => {\n          if (e && e.target !== el) {\n            return;\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(\"transitionend\", cb);\n            el[moveCbKey] = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n        el.addEventListener(\"transitionend\", cb);\n      });\n    });\n    return () => {\n      const rawProps = toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || Fragment;\n      prevChildren = [];\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          if (child.el && child.el instanceof Element) {\n            prevChildren.push(child);\n            setTransitionHooks(\n              child,\n              resolveTransitionHooks(\n                child,\n                cssTransitionProps,\n                state,\n                instance\n              )\n            );\n            positionMap.set(\n              child,\n              child.el.getBoundingClientRect()\n            );\n          }\n        }\n      }\n      children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.key != null) {\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`<TransitionGroup> children must be keyed.`);\n        }\n      }\n      return createVNode(tag, null, children);\n    };\n  }\n};\nconst removeMode = (props) => delete props.mode;\n/* @__PURE__ */ removeMode(TransitionGroupImpl.props);\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n  const el = c.el;\n  if (el[moveCbKey]) {\n    el[moveCbKey]();\n  }\n  if (el[enterCbKey]) {\n    el[enterCbKey]();\n  }\n}\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = \"0s\";\n    return c;\n  }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n  const clone = el.cloneNode();\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.forEach((cls) => {\n      cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n    });\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n  clone.style.display = \"none\";\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const { hasTransform } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n  const fn = vnode.props[\"onUpdate:modelValue\"] || false;\n  return isArray(fn) ? (value) => invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  const target = e.target;\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nconst assignKey = Symbol(\"_assign\");\nconst vModelText = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === \"number\";\n    addEventListener(el, lazy ? \"change\" : \"input\", (e) => {\n      if (e.target.composing) return;\n      let domValue = el.value;\n      if (trim) {\n        domValue = domValue.trim();\n      }\n      if (castToNumber) {\n        domValue = looseToNumber(domValue);\n      }\n      el[assignKey](domValue);\n    });\n    if (trim) {\n      addEventListener(el, \"change\", () => {\n        el.value = el.value.trim();\n      });\n    }\n    if (!lazy) {\n      addEventListener(el, \"compositionstart\", onCompositionStart);\n      addEventListener(el, \"compositionend\", onCompositionEnd);\n      addEventListener(el, \"change\", onCompositionEnd);\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? \"\" : value;\n  },\n  beforeUpdate(el, { value, oldValue, modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (el.composing) return;\n    const elValue = (number || el.type === \"number\") && !/^0\\d/.test(el.value) ? looseToNumber(el.value) : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (elValue === newValue) {\n      return;\n    }\n    if (document.activeElement === el && el.type !== \"range\") {\n      if (lazy && value === oldValue) {\n        return;\n      }\n      if (trim && el.value.trim() === newValue) {\n        return;\n      }\n    }\n    el.value = newValue;\n  }\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el[assignKey];\n      if (isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n  el._modelValue = value;\n  if (isArray(value)) {\n    el.checked = looseIndexOf(value, vnode.props.value) > -1;\n  } else if (isSet(value)) {\n    el.checked = value.has(vnode.props.value);\n  } else if (value !== oldValue) {\n    el.checked = looseEqual(value, getCheckboxValue(el, true));\n  }\n}\nconst vModelRadio = {\n  created(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props.value);\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      el[assignKey](getValue(el));\n    });\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (value !== oldValue) {\n      el.checked = looseEqual(value, vnode.props.value);\n    }\n  }\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = isSet(value);\n    addEventListener(el, \"change\", () => {\n      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(\n        (o) => number ? looseToNumber(getValue(o)) : getValue(o)\n      );\n      el[assignKey](\n        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]\n      );\n      el._assigning = true;\n      nextTick(() => {\n        el._assigning = false;\n      });\n    });\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value, modifiers: { number } }) {\n    setSelected(el, value);\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  updated(el, { value, modifiers: { number } }) {\n    if (!el._assigning) {\n      setSelected(el, value);\n    }\n  }\n};\nfunction setSelected(el, value, number) {\n  const isMultiple = el.multiple;\n  const isArrayValue = isArray(value);\n  if (isMultiple && !isArrayValue && !isSet(value)) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(\n      `<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n    );\n    return;\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n    if (isMultiple) {\n      if (isArrayValue) {\n        const optionType = typeof optionValue;\n        if (optionType === \"string\" || optionType === \"number\") {\n          option.selected = value.some((v) => String(v) === String(optionValue));\n        } else {\n          option.selected = looseIndexOf(value, optionValue) > -1;\n        }\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else if (looseEqual(getValue(option), value)) {\n      if (el.selectedIndex !== i) el.selectedIndex = i;\n      return;\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n}\nfunction getValue(el) {\n  return \"_value\" in el ? el._value : el.value;\n}\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? \"_trueValue\" : \"_falseValue\";\n  return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"created\");\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"mounted\");\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"beforeUpdate\");\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"updated\");\n  }\n};\nfunction resolveDynamicModel(tagName, type) {\n  switch (tagName) {\n    case \"SELECT\":\n      return vModelSelect;\n    case \"TEXTAREA\":\n      return vModelText;\n    default:\n      switch (type) {\n        case \"checkbox\":\n          return vModelCheckbox;\n        case \"radio\":\n          return vModelRadio;\n        default:\n          return vModelText;\n      }\n  }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  );\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n}\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value });\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\n      return { checked: true };\n    }\n  };\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (isArray(value)) {\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true };\n      }\n    } else if (isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true };\n      }\n    } else if (value) {\n      return { checked: true };\n    }\n  };\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== \"string\") {\n      return;\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    );\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode);\n    }\n  };\n}\n\nconst systemModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\"];\nconst modifierGuards = {\n  stop: (e) => e.stopPropagation(),\n  prevent: (e) => e.preventDefault(),\n  self: (e) => e.target !== e.currentTarget,\n  ctrl: (e) => !e.ctrlKey,\n  shift: (e) => !e.shiftKey,\n  alt: (e) => !e.altKey,\n  meta: (e) => !e.metaKey,\n  left: (e) => \"button\" in e && e.button !== 0,\n  middle: (e) => \"button\" in e && e.button !== 1,\n  right: (e) => \"button\" in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))\n};\nconst withModifiers = (fn, modifiers) => {\n  const cache = fn._withMods || (fn._withMods = {});\n  const cacheKey = modifiers.join(\".\");\n  return cache[cacheKey] || (cache[cacheKey] = (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers)) return;\n    }\n    return fn(event, ...args);\n  });\n};\nconst keyNames = {\n  esc: \"escape\",\n  space: \" \",\n  up: \"arrow-up\",\n  left: \"arrow-left\",\n  right: \"arrow-right\",\n  down: \"arrow-down\",\n  delete: \"backspace\"\n};\nconst withKeys = (fn, modifiers) => {\n  const cache = fn._withKeys || (fn._withKeys = {});\n  const cacheKey = modifiers.join(\".\");\n  return cache[cacheKey] || (cache[cacheKey] = (event) => {\n    if (!(\"key\" in event)) {\n      return;\n    }\n    const eventKey = hyphenate(event.key);\n    if (modifiers.some((k) => k === eventKey || keyNames[k] === eventKey)) {\n      return fn(event);\n    }\n  });\n};\n\nconst rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n  return renderer || (renderer = createRenderer(rendererOptions));\n}\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n}\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container) return;\n    const component = app._component;\n    if (!isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    container.innerHTML = \"\";\n    const proxy = mount(container, false, resolveRootNamespace(container));\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (container) {\n      return mount(container, true, resolveRootNamespace(container));\n    }\n  };\n  return app;\n};\nfunction resolveRootNamespace(container) {\n  if (container instanceof SVGElement) {\n    return \"svg\";\n  }\n  if (typeof MathMLElement === \"function\" && container instanceof MathMLElement) {\n    return \"mathml\";\n  }\n}\nfunction injectNativeTagCheck(app) {\n  Object.defineProperty(app.config, \"isNativeTag\", {\n    value: (tag) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\n    writable: false\n  });\n}\nfunction injectCompilerOptionsCheck(app) {\n  if (isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement;\n    Object.defineProperty(app.config, \"isCustomElement\", {\n      get() {\n        return isCustomElement;\n      },\n      set() {\n        warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use \\`compilerOptions.isCustomElement\\` instead.`\n        );\n      }\n    });\n    const compilerOptions = app.config.compilerOptions;\n    const msg = `The \\`compilerOptions\\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka \"full build\"). Since you are using the runtime-only build, \\`compilerOptions\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\n- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\n- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\n- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;\n    Object.defineProperty(app.config, \"compilerOptions\", {\n      get() {\n        warn(msg);\n        return compilerOptions;\n      },\n      set() {\n        warn(msg);\n      }\n    });\n  }\n}\nfunction normalizeContainer(container) {\n  if (isString(container)) {\n    const res = document.querySelector(container);\n    if (!!(process.env.NODE_ENV !== \"production\") && !res) {\n      warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\n      );\n    }\n    return res;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === \"closed\") {\n    warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\n    );\n  }\n  return container;\n}\nlet ssrDirectiveInitialized = false;\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n} ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\n* @vue/shared v3.4.31\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction makeMap(str, expectsLowerCase) {\n  const set = new Set(str.split(\",\"));\n  return expectsLowerCase ? (val) => set.has(val.toLowerCase()) : (val) => set.has(val);\n}\n\nconst EMPTY_OBJ = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze({}) : {};\nconst EMPTY_ARR = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze([]) : [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter\n(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction((str) => {\n  const s = str ? `on${capitalize(str)}` : ``;\n  return s;\n});\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, ...arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](...arg);\n  }\n};\nconst def = (obj, key, value, writable = false) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    writable,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlags = {\n  \"TEXT\": 1,\n  \"1\": \"TEXT\",\n  \"CLASS\": 2,\n  \"2\": \"CLASS\",\n  \"STYLE\": 4,\n  \"4\": \"STYLE\",\n  \"PROPS\": 8,\n  \"8\": \"PROPS\",\n  \"FULL_PROPS\": 16,\n  \"16\": \"FULL_PROPS\",\n  \"NEED_HYDRATION\": 32,\n  \"32\": \"NEED_HYDRATION\",\n  \"STABLE_FRAGMENT\": 64,\n  \"64\": \"STABLE_FRAGMENT\",\n  \"KEYED_FRAGMENT\": 128,\n  \"128\": \"KEYED_FRAGMENT\",\n  \"UNKEYED_FRAGMENT\": 256,\n  \"256\": \"UNKEYED_FRAGMENT\",\n  \"NEED_PATCH\": 512,\n  \"512\": \"NEED_PATCH\",\n  \"DYNAMIC_SLOTS\": 1024,\n  \"1024\": \"DYNAMIC_SLOTS\",\n  \"DEV_ROOT_FRAGMENT\": 2048,\n  \"2048\": \"DEV_ROOT_FRAGMENT\",\n  \"HOISTED\": -1,\n  \"-1\": \"HOISTED\",\n  \"BAIL\": -2,\n  \"-2\": \"BAIL\"\n};\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `NEED_HYDRATION`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst ShapeFlags = {\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"FUNCTIONAL_COMPONENT\": 2,\n  \"2\": \"FUNCTIONAL_COMPONENT\",\n  \"STATEFUL_COMPONENT\": 4,\n  \"4\": \"STATEFUL_COMPONENT\",\n  \"TEXT_CHILDREN\": 8,\n  \"8\": \"TEXT_CHILDREN\",\n  \"ARRAY_CHILDREN\": 16,\n  \"16\": \"ARRAY_CHILDREN\",\n  \"SLOTS_CHILDREN\": 32,\n  \"32\": \"SLOTS_CHILDREN\",\n  \"TELEPORT\": 64,\n  \"64\": \"TELEPORT\",\n  \"SUSPENSE\": 128,\n  \"128\": \"SUSPENSE\",\n  \"COMPONENT_SHOULD_KEEP_ALIVE\": 256,\n  \"256\": \"COMPONENT_SHOULD_KEEP_ALIVE\",\n  \"COMPONENT_KEPT_ALIVE\": 512,\n  \"512\": \"COMPONENT_KEPT_ALIVE\",\n  \"COMPONENT\": 6,\n  \"6\": \"COMPONENT\"\n};\n\nconst SlotFlags = {\n  \"STABLE\": 1,\n  \"1\": \"STABLE\",\n  \"DYNAMIC\": 2,\n  \"2\": \"DYNAMIC\",\n  \"FORWARDED\": 3,\n  \"3\": \"FORWARDED\"\n};\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_ALLOWED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error\";\nconst isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);\nconst isGloballyWhitelisted = isGloballyAllowed;\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  start = Math.max(0, Math.min(start, source.length));\n  end = Math.max(0, Math.min(end, source.length));\n  if (start > end) return \"\";\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value) || isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    if (isString(value) || typeof value === \"number\") {\n      const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props) return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst MATH_TAGS = \"annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\nfunction isRenderableAttrValue(value) {\n  if (value == null) {\n    return false;\n  }\n  const type = typeof value;\n  return type === \"string\" || type === \"number\" || type === \"boolean\";\n}\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length) return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b) return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst isRef = (val) => {\n  return !!(val && val.__v_isRef === true);\n};\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? isRef(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (isRef(val)) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce(\n        (entries, [key, val2], i) => {\n          entries[stringifySymbol(key, i) + \" =>\"] = val2;\n          return entries;\n        },\n        {}\n      )\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()].map((v) => stringifySymbol(v))\n    };\n  } else if (isSymbol(val)) {\n    return stringifySymbol(val);\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\nconst stringifySymbol = (v, i = \"\") => {\n  var _a;\n  return (\n    // Symbol.description in es2019+ so we need to cast here to pass\n    // the lib: es2016 check\n    isSymbol(v) ? `Symbol(${(_a = v.description) != null ? _a : i})` : v\n  );\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, PatchFlags, ShapeFlags, SlotFlags, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, genPropsAccessExp, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyAllowed, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isMathMLTag, isModelListener, isObject, isOn, isPlainObject, isPromise, isRegExp, isRenderableAttrValue, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, looseToNumber, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ZXing = {}));\n}(this, (function (exports) { 'use strict';\n\n    function isNullOrUndefined(obj) {\n        return obj === null || obj === undefined;\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /* global Reflect, Promise */\n\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n\n    function fixProto(target, prototype) {\n        var setPrototypeOf = Object.setPrototypeOf;\n        setPrototypeOf ? setPrototypeOf(target, prototype) : (target.__proto__ = prototype);\n    }\n\n    function fixStack(target, fn) {\n        if (fn === void 0) {\n            fn = target.constructor;\n        }\n        var captureStackTrace = Error.captureStackTrace;\n        captureStackTrace && captureStackTrace(target, fn);\n    }\n\n    var CustomError = (function (_super) {\n        __extends(CustomError, _super);\n        function CustomError(message) {\n            var _newTarget = this.constructor;\n            var _this = _super.call(this, message) || this;\n            Object.defineProperty(_this, 'name', {\n                value: _newTarget.name,\n                enumerable: false\n            });\n            fixProto(_this, _newTarget.prototype);\n            fixStack(_this);\n            return _this;\n        }\n        \n        return CustomError;\n    })(Error);\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class Exception extends CustomError {\n        /**\n         * Allows Exception to be constructed directly\n         * with some message and prototype definition.\n         */\n        constructor(message = undefined) {\n            super(message);\n            this.message = message;\n        }\n        getKind() {\n            const ex = this.constructor;\n            return ex.kind;\n        }\n    }\n    /**\n     * It's typed as string so it can be extended and overriden.\n     */\n    Exception.kind = 'Exception';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ArgumentException extends Exception {\n    }\n    ArgumentException.kind = 'ArgumentException';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class IllegalArgumentException extends Exception {\n    }\n    IllegalArgumentException.kind = 'IllegalArgumentException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    class BinaryBitmap {\n        constructor(binarizer) {\n            this.binarizer = binarizer;\n            if (binarizer === null) {\n                throw new IllegalArgumentException('Binarizer must be non-null.');\n            }\n        }\n        /**\n         * @return The width of the bitmap.\n         */\n        getWidth() {\n            return this.binarizer.getWidth();\n        }\n        /**\n         * @return The height of the bitmap.\n         */\n        getHeight() {\n            return this.binarizer.getHeight();\n        }\n        /**\n         * Converts one row of luminance data to 1 bit data. May actually do the conversion, or return\n         * cached data. Callers should assume this method is expensive and call it as seldom as possible.\n         * This method is intended for decoding 1D barcodes and may choose to apply sharpening.\n         *\n         * @param y The row to fetch, which must be in [0, bitmap height)\n         * @param row An optional preallocated array. If null or too small, it will be ignored.\n         *            If used, the Binarizer will call BitArray.clear(). Always use the returned object.\n         * @return The array of bits for this row (true means black).\n         * @throws NotFoundException if row can't be binarized\n         */\n        getBlackRow(y /*int*/, row) {\n            return this.binarizer.getBlackRow(y, row);\n        }\n        /**\n         * Converts a 2D array of luminance data to 1 bit. As above, assume this method is expensive\n         * and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or\n         * may not apply sharpening. Therefore, a row from this matrix may not be identical to one\n         * fetched using getBlackRow(), so don't mix and match between them.\n         *\n         * @return The 2D array of bits for the image (true means black).\n         * @throws NotFoundException if image can't be binarized to make a matrix\n         */\n        getBlackMatrix() {\n            // The matrix is created on demand the first time it is requested, then cached. There are two\n            // reasons for this:\n            // 1. This work will never be done if the caller only installs 1D Reader objects, or if a\n            //    1D Reader finds a barcode before the 2D Readers run.\n            // 2. This work will only be done once even if the caller installs multiple 2D Readers.\n            if (this.matrix === null || this.matrix === undefined) {\n                this.matrix = this.binarizer.getBlackMatrix();\n            }\n            return this.matrix;\n        }\n        /**\n         * @return Whether this bitmap can be cropped.\n         */\n        isCropSupported() {\n            return this.binarizer.getLuminanceSource().isCropSupported();\n        }\n        /**\n         * Returns a new object with cropped image data. Implementations may keep a reference to the\n         * original data rather than a copy. Only callable if isCropSupported() is true.\n         *\n         * @param left The left coordinate, which must be in [0,getWidth())\n         * @param top The top coordinate, which must be in [0,getHeight())\n         * @param width The width of the rectangle to crop.\n         * @param height The height of the rectangle to crop.\n         * @return A cropped version of this object.\n         */\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            const newSource = this.binarizer.getLuminanceSource().crop(left, top, width, height);\n            return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n        }\n        /**\n         * @return Whether this bitmap supports counter-clockwise rotation.\n         */\n        isRotateSupported() {\n            return this.binarizer.getLuminanceSource().isRotateSupported();\n        }\n        /**\n         * Returns a new object with rotated image data by 90 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise() {\n            const newSource = this.binarizer.getLuminanceSource().rotateCounterClockwise();\n            return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n        }\n        /**\n         * Returns a new object with rotated image data by 45 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise45() {\n            const newSource = this.binarizer.getLuminanceSource().rotateCounterClockwise45();\n            return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n        }\n        /*@Override*/\n        toString() {\n            try {\n                return this.getBlackMatrix().toString();\n            }\n            catch (e /*: NotFoundException*/) {\n                return '';\n            }\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ChecksumException extends Exception {\n        static getChecksumInstance() {\n            return new ChecksumException();\n        }\n    }\n    ChecksumException.kind = 'ChecksumException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This class hierarchy provides a set of methods to convert luminance data to 1 bit data.\n     * It allows the algorithm to vary polymorphically, for example allowing a very expensive\n     * thresholding technique for servers and a fast one for mobile. It also permits the implementation\n     * to vary, e.g. a JNI version for Android and a Java fallback version for other platforms.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class Binarizer {\n        constructor(source) {\n            this.source = source;\n        }\n        getLuminanceSource() {\n            return this.source;\n        }\n        getWidth() {\n            return this.source.getWidth();\n        }\n        getHeight() {\n            return this.source.getHeight();\n        }\n    }\n\n    class System {\n        // public static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)\n        /**\n         * Makes a copy of a array.\n         */\n        static arraycopy(src, srcPos, dest, destPos, length) {\n            // TODO: better use split or set?\n            while (length--) {\n                dest[destPos++] = src[srcPos++];\n            }\n        }\n        /**\n         * Returns the current time in milliseconds.\n         */\n        static currentTimeMillis() {\n            return Date.now();\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class IndexOutOfBoundsException extends Exception {\n    }\n    IndexOutOfBoundsException.kind = 'IndexOutOfBoundsException';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ArrayIndexOutOfBoundsException extends IndexOutOfBoundsException {\n        constructor(index = undefined, message = undefined) {\n            super(message);\n            this.index = index;\n            this.message = message;\n        }\n    }\n    ArrayIndexOutOfBoundsException.kind = 'ArrayIndexOutOfBoundsException';\n\n    class Arrays {\n        /**\n         * Assigns the specified int value to each element of the specified array\n         * of ints.\n         *\n         * @param a the array to be filled\n         * @param val the value to be stored in all elements of the array\n         */\n        static fill(a, val) {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] = val;\n        }\n        /**\n         * Assigns the specified int value to each element of the specified\n         * range of the specified array of ints.  The range to be filled\n         * extends from index {@code fromIndex}, inclusive, to index\n         * {@code toIndex}, exclusive.  (If {@code fromIndex==toIndex}, the\n         * range to be filled is empty.)\n         *\n         * @param a the array to be filled\n         * @param fromIndex the index of the first element (inclusive) to be\n         *        filled with the specified value\n         * @param toIndex the index of the last element (exclusive) to be\n         *        filled with the specified value\n         * @param val the value to be stored in all elements of the array\n         * @throws IllegalArgumentException if {@code fromIndex > toIndex}\n         * @throws ArrayIndexOutOfBoundsException if {@code fromIndex < 0} or\n         *         {@code toIndex > a.length}\n         */\n        static fillWithin(a, fromIndex, toIndex, val) {\n            Arrays.rangeCheck(a.length, fromIndex, toIndex);\n            for (let i = fromIndex; i < toIndex; i++)\n                a[i] = val;\n        }\n        /**\n         * Checks that {@code fromIndex} and {@code toIndex} are in\n         * the range and throws an exception if they aren't.\n         */\n        static rangeCheck(arrayLength, fromIndex, toIndex) {\n            if (fromIndex > toIndex) {\n                throw new IllegalArgumentException('fromIndex(' + fromIndex + ') > toIndex(' + toIndex + ')');\n            }\n            if (fromIndex < 0) {\n                throw new ArrayIndexOutOfBoundsException(fromIndex);\n            }\n            if (toIndex > arrayLength) {\n                throw new ArrayIndexOutOfBoundsException(toIndex);\n            }\n        }\n        static asList(...args) {\n            return args;\n        }\n        static create(rows, cols, value) {\n            let arr = Array.from({ length: rows });\n            return arr.map(x => Array.from({ length: cols }).fill(value));\n        }\n        static createInt32Array(rows, cols, value) {\n            let arr = Array.from({ length: rows });\n            return arr.map(x => Int32Array.from({ length: cols }).fill(value));\n        }\n        static equals(first, second) {\n            if (!first) {\n                return false;\n            }\n            if (!second) {\n                return false;\n            }\n            if (!first.length) {\n                return false;\n            }\n            if (!second.length) {\n                return false;\n            }\n            if (first.length !== second.length) {\n                return false;\n            }\n            for (let i = 0, length = first.length; i < length; i++) {\n                if (first[i] !== second[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        static hashCode(a) {\n            if (a === null) {\n                return 0;\n            }\n            let result = 1;\n            for (const element of a) {\n                result = 31 * result + element;\n            }\n            return result;\n        }\n        static fillUint8Array(a, value) {\n            for (let i = 0; i !== a.length; i++) {\n                a[i] = value;\n            }\n        }\n        static copyOf(original, newLength) {\n            return original.slice(0, newLength);\n        }\n        static copyOfUint8Array(original, newLength) {\n            if (original.length <= newLength) {\n                const newArray = new Uint8Array(newLength);\n                newArray.set(original);\n                return newArray;\n            }\n            return original.slice(0, newLength);\n        }\n        static copyOfRange(original, from, to) {\n            const newLength = to - from;\n            const copy = new Int32Array(newLength);\n            System.arraycopy(original, from, copy, 0, newLength);\n            return copy;\n        }\n        /*\n        * Returns the index of of the element in a sorted array or (-n-1) where n is the insertion point\n        * for the new element.\n        * Parameters:\n        *     ar - A sorted array\n        *     el - An element to search for\n        *     comparator - A comparator function. The function takes two arguments: (a, b) and returns:\n        *        a negative number  if a is less than b;\n        *        0 if a is equal to b;\n        *        a positive number of a is greater than b.\n        * The array may contain duplicate elements. If there are more than one equal elements in the array,\n        * the returned value can be the index of any one of the equal elements.\n        *\n        * http://jsfiddle.net/aryzhov/pkfst550/\n        */\n        static binarySearch(ar, el, comparator) {\n            if (undefined === comparator) {\n                comparator = Arrays.numberComparator;\n            }\n            let m = 0;\n            let n = ar.length - 1;\n            while (m <= n) {\n                const k = (n + m) >> 1;\n                const cmp = comparator(el, ar[k]);\n                if (cmp > 0) {\n                    m = k + 1;\n                }\n                else if (cmp < 0) {\n                    n = k - 1;\n                }\n                else {\n                    return k;\n                }\n            }\n            return -m - 1;\n        }\n        static numberComparator(a, b) {\n            return a - b;\n        }\n    }\n\n    /**\n     * Ponyfill for Java's Integer class.\n     */\n    class Integer {\n        static numberOfTrailingZeros(i) {\n            let y;\n            if (i === 0)\n                return 32;\n            let n = 31;\n            y = i << 16;\n            if (y !== 0) {\n                n -= 16;\n                i = y;\n            }\n            y = i << 8;\n            if (y !== 0) {\n                n -= 8;\n                i = y;\n            }\n            y = i << 4;\n            if (y !== 0) {\n                n -= 4;\n                i = y;\n            }\n            y = i << 2;\n            if (y !== 0) {\n                n -= 2;\n                i = y;\n            }\n            return n - ((i << 1) >>> 31);\n        }\n        static numberOfLeadingZeros(i) {\n            // HD, Figure 5-6\n            if (i === 0) {\n                return 32;\n            }\n            let n = 1;\n            if (i >>> 16 === 0) {\n                n += 16;\n                i <<= 16;\n            }\n            if (i >>> 24 === 0) {\n                n += 8;\n                i <<= 8;\n            }\n            if (i >>> 28 === 0) {\n                n += 4;\n                i <<= 4;\n            }\n            if (i >>> 30 === 0) {\n                n += 2;\n                i <<= 2;\n            }\n            n -= i >>> 31;\n            return n;\n        }\n        static toHexString(i) {\n            return i.toString(16);\n        }\n        static toBinaryString(intNumber) {\n            return String(parseInt(String(intNumber), 2));\n        }\n        // Returns the number of one-bits in the two's complement binary representation of the specified int value. This function is sometimes referred to as the population count.\n        // Returns:\n        // the number of one-bits in the two's complement binary representation of the specified int value.\n        static bitCount(i) {\n            // HD, Figure 5-2\n            i = i - ((i >>> 1) & 0x55555555);\n            i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n            i = (i + (i >>> 4)) & 0x0f0f0f0f;\n            i = i + (i >>> 8);\n            i = i + (i >>> 16);\n            return i & 0x3f;\n        }\n        static truncDivision(dividend, divisor) {\n            return Math.trunc(dividend / divisor);\n        }\n        /**\n         * Converts A string to an integer.\n         * @param s A string to convert into a number.\n         * @param radix A value between 2 and 36 that specifies the base of the number in numString. If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal. All other strings are considered decimal.\n         */\n        static parseInt(num, radix = undefined) {\n            return parseInt(num, radix);\n        }\n    }\n    Integer.MIN_VALUE_32_BITS = -2147483648;\n    Integer.MAX_VALUE = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * <p>A simple, fast array of bits, represented compactly by an array of ints internally.</p>\n     *\n     * @author Sean Owen\n     */\n    class BitArray /*implements Cloneable*/ {\n        // For testing only\n        constructor(size /*int*/, bits) {\n            if (undefined === size) {\n                this.size = 0;\n                this.bits = new Int32Array(1);\n            }\n            else {\n                this.size = size;\n                if (undefined === bits || null === bits) {\n                    this.bits = BitArray.makeArray(size);\n                }\n                else {\n                    this.bits = bits;\n                }\n            }\n        }\n        getSize() {\n            return this.size;\n        }\n        getSizeInBytes() {\n            return Math.floor((this.size + 7) / 8);\n        }\n        ensureCapacity(size /*int*/) {\n            if (size > this.bits.length * 32) {\n                const newBits = BitArray.makeArray(size);\n                System.arraycopy(this.bits, 0, newBits, 0, this.bits.length);\n                this.bits = newBits;\n            }\n        }\n        /**\n         * @param i bit to get\n         * @return true iff bit i is set\n         */\n        get(i /*int*/) {\n            return (this.bits[Math.floor(i / 32)] & (1 << (i & 0x1F))) !== 0;\n        }\n        /**\n         * Sets bit i.\n         *\n         * @param i bit to set\n         */\n        set(i /*int*/) {\n            this.bits[Math.floor(i / 32)] |= 1 << (i & 0x1F);\n        }\n        /**\n         * Flips bit i.\n         *\n         * @param i bit to set\n         */\n        flip(i /*int*/) {\n            this.bits[Math.floor(i / 32)] ^= 1 << (i & 0x1F);\n        }\n        /**\n         * @param from first bit to check\n         * @return index of first bit that is set, starting from the given index, or size if none are set\n         *  at or beyond this given index\n         * @see #getNextUnset(int)\n         */\n        getNextSet(from /*int*/) {\n            const size = this.size;\n            if (from >= size) {\n                return size;\n            }\n            const bits = this.bits;\n            let bitsOffset = Math.floor(from / 32);\n            let currentBits = bits[bitsOffset];\n            // mask off lesser bits first\n            currentBits &= ~((1 << (from & 0x1F)) - 1);\n            const length = bits.length;\n            while (currentBits === 0) {\n                if (++bitsOffset === length) {\n                    return size;\n                }\n                currentBits = bits[bitsOffset];\n            }\n            const result = (bitsOffset * 32) + Integer.numberOfTrailingZeros(currentBits);\n            return result > size ? size : result;\n        }\n        /**\n         * @param from index to start looking for unset bit\n         * @return index of next unset bit, or {@code size} if none are unset until the end\n         * @see #getNextSet(int)\n         */\n        getNextUnset(from /*int*/) {\n            const size = this.size;\n            if (from >= size) {\n                return size;\n            }\n            const bits = this.bits;\n            let bitsOffset = Math.floor(from / 32);\n            let currentBits = ~bits[bitsOffset];\n            // mask off lesser bits first\n            currentBits &= ~((1 << (from & 0x1F)) - 1);\n            const length = bits.length;\n            while (currentBits === 0) {\n                if (++bitsOffset === length) {\n                    return size;\n                }\n                currentBits = ~bits[bitsOffset];\n            }\n            const result = (bitsOffset * 32) + Integer.numberOfTrailingZeros(currentBits);\n            return result > size ? size : result;\n        }\n        /**\n         * Sets a block of 32 bits, starting at bit i.\n         *\n         * @param i first bit to set\n         * @param newBits the new value of the next 32 bits. Note again that the least-significant bit\n         * corresponds to bit i, the next-least-significant to i+1, and so on.\n         */\n        setBulk(i /*int*/, newBits /*int*/) {\n            this.bits[Math.floor(i / 32)] = newBits;\n        }\n        /**\n         * Sets a range of bits.\n         *\n         * @param start start of range, inclusive.\n         * @param end end of range, exclusive\n         */\n        setRange(start /*int*/, end /*int*/) {\n            if (end < start || start < 0 || end > this.size) {\n                throw new IllegalArgumentException();\n            }\n            if (end === start) {\n                return;\n            }\n            end--; // will be easier to treat this as the last actually set bit -- inclusive\n            const firstInt = Math.floor(start / 32);\n            const lastInt = Math.floor(end / 32);\n            const bits = this.bits;\n            for (let i = firstInt; i <= lastInt; i++) {\n                const firstBit = i > firstInt ? 0 : start & 0x1F;\n                const lastBit = i < lastInt ? 31 : end & 0x1F;\n                // Ones from firstBit to lastBit, inclusive\n                const mask = (2 << lastBit) - (1 << firstBit);\n                bits[i] |= mask;\n            }\n        }\n        /**\n         * Clears all bits (sets to false).\n         */\n        clear() {\n            const max = this.bits.length;\n            const bits = this.bits;\n            for (let i = 0; i < max; i++) {\n                bits[i] = 0;\n            }\n        }\n        /**\n         * Efficient method to check if a range of bits is set, or not set.\n         *\n         * @param start start of range, inclusive.\n         * @param end end of range, exclusive\n         * @param value if true, checks that bits in range are set, otherwise checks that they are not set\n         * \n         * @return true iff all bits are set or not set in range, according to value argument\n         * @throws IllegalArgumentException if end is less than start or the range is not contained in the array\n         */\n        isRange(start /*int*/, end /*int*/, value) {\n            if (end < start || start < 0 || end > this.size) {\n                throw new IllegalArgumentException();\n            }\n            if (end === start) {\n                return true; // empty range matches\n            }\n            end--; // will be easier to treat this as the last actually set bit -- inclusive\n            const firstInt = Math.floor(start / 32);\n            const lastInt = Math.floor(end / 32);\n            const bits = this.bits;\n            for (let i = firstInt; i <= lastInt; i++) {\n                const firstBit = i > firstInt ? 0 : start & 0x1F;\n                const lastBit = i < lastInt ? 31 : end & 0x1F;\n                // Ones from firstBit to lastBit, inclusive\n                const mask = (2 << lastBit) - (1 << firstBit) & 0xFFFFFFFF;\n                // TYPESCRIPTPORT: & 0xFFFFFFFF added to discard anything after 32 bits, as ES has 53 bits\n                // Return false if we're looking for 1s and the masked bits[i] isn't all 1s (is: that,\n                // equals the mask, or we're looking for 0s and the masked portion is not all 0s\n                if ((bits[i] & mask) !== (value ? mask : 0)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        appendBit(bit) {\n            this.ensureCapacity(this.size + 1);\n            if (bit) {\n                this.bits[Math.floor(this.size / 32)] |= 1 << (this.size & 0x1F);\n            }\n            this.size++;\n        }\n        /**\n         * Appends the least-significant bits, from value, in order from most-significant to\n         * least-significant. For example, appending 6 bits from 0x000001E will append the bits\n         * 0, 1, 1, 1, 1, 0 in that order.\n         *\n         * @param value {@code int} containing bits to append\n         * @param numBits bits from value to append\n         */\n        appendBits(value /*int*/, numBits /*int*/) {\n            if (numBits < 0 || numBits > 32) {\n                throw new IllegalArgumentException('Num bits must be between 0 and 32');\n            }\n            this.ensureCapacity(this.size + numBits);\n            // const appendBit = this.appendBit;\n            for (let numBitsLeft = numBits; numBitsLeft > 0; numBitsLeft--) {\n                this.appendBit(((value >> (numBitsLeft - 1)) & 0x01) === 1);\n            }\n        }\n        appendBitArray(other) {\n            const otherSize = other.size;\n            this.ensureCapacity(this.size + otherSize);\n            // const appendBit = this.appendBit;\n            for (let i = 0; i < otherSize; i++) {\n                this.appendBit(other.get(i));\n            }\n        }\n        xor(other) {\n            if (this.size !== other.size) {\n                throw new IllegalArgumentException('Sizes don\\'t match');\n            }\n            const bits = this.bits;\n            for (let i = 0, length = bits.length; i < length; i++) {\n                // The last int could be incomplete (i.e. not have 32 bits in\n                // it) but there is no problem since 0 XOR 0 == 0.\n                bits[i] ^= other.bits[i];\n            }\n        }\n        /**\n         *\n         * @param bitOffset first bit to start writing\n         * @param array array to write into. Bytes are written most-significant byte first. This is the opposite\n         *  of the internal representation, which is exposed by {@link #getBitArray()}\n         * @param offset position in array to start writing\n         * @param numBytes how many bytes to write\n         */\n        toBytes(bitOffset /*int*/, array, offset /*int*/, numBytes /*int*/) {\n            for (let i = 0; i < numBytes; i++) {\n                let theByte = 0;\n                for (let j = 0; j < 8; j++) {\n                    if (this.get(bitOffset)) {\n                        theByte |= 1 << (7 - j);\n                    }\n                    bitOffset++;\n                }\n                array[offset + i] = /*(byte)*/ theByte;\n            }\n        }\n        /**\n         * @return underlying array of ints. The first element holds the first 32 bits, and the least\n         *         significant bit is bit 0.\n         */\n        getBitArray() {\n            return this.bits;\n        }\n        /**\n         * Reverses all bits in the array.\n         */\n        reverse() {\n            const newBits = new Int32Array(this.bits.length);\n            // reverse all int's first\n            const len = Math.floor((this.size - 1) / 32);\n            const oldBitsLen = len + 1;\n            const bits = this.bits;\n            for (let i = 0; i < oldBitsLen; i++) {\n                let x = bits[i];\n                x = ((x >> 1) & 0x55555555) | ((x & 0x55555555) << 1);\n                x = ((x >> 2) & 0x33333333) | ((x & 0x33333333) << 2);\n                x = ((x >> 4) & 0x0f0f0f0f) | ((x & 0x0f0f0f0f) << 4);\n                x = ((x >> 8) & 0x00ff00ff) | ((x & 0x00ff00ff) << 8);\n                x = ((x >> 16) & 0x0000ffff) | ((x & 0x0000ffff) << 16);\n                newBits[len - i] = /*(int)*/ x;\n            }\n            // now correct the int's if the bit size isn't a multiple of 32\n            if (this.size !== oldBitsLen * 32) {\n                const leftOffset = oldBitsLen * 32 - this.size;\n                let currentInt = newBits[0] >>> leftOffset;\n                for (let i = 1; i < oldBitsLen; i++) {\n                    const nextInt = newBits[i];\n                    currentInt |= nextInt << (32 - leftOffset);\n                    newBits[i - 1] = currentInt;\n                    currentInt = nextInt >>> leftOffset;\n                }\n                newBits[oldBitsLen - 1] = currentInt;\n            }\n            this.bits = newBits;\n        }\n        static makeArray(size /*int*/) {\n            return new Int32Array(Math.floor((size + 31) / 32));\n        }\n        /*@Override*/\n        equals(o) {\n            if (!(o instanceof BitArray)) {\n                return false;\n            }\n            const other = o;\n            return this.size === other.size && Arrays.equals(this.bits, other.bits);\n        }\n        /*@Override*/\n        hashCode() {\n            return 31 * this.size + Arrays.hashCode(this.bits);\n        }\n        /*@Override*/\n        toString() {\n            let result = '';\n            for (let i = 0, size = this.size; i < size; i++) {\n                if ((i & 0x07) === 0) {\n                    result += ' ';\n                }\n                result += this.get(i) ? 'X' : '.';\n            }\n            return result;\n        }\n        /*@Override*/\n        clone() {\n            return new BitArray(this.size, this.bits.slice());\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * Encapsulates a type of hint that a caller may pass to a barcode reader to help it\n     * more quickly or accurately decode it. It is up to implementations to decide what,\n     * if anything, to do with the information that is supplied.\n     *\n     * @author Sean Owen\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @see Reader#decode(BinaryBitmap,java.util.Map)\n     */\n    var DecodeHintType;\n    (function (DecodeHintType) {\n        /**\n         * Unspecified, application-specific hint. Maps to an unspecified {@link Object}.\n         */\n        DecodeHintType[DecodeHintType[\"OTHER\"] = 0] = \"OTHER\"; /*(Object.class)*/\n        /**\n         * Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;\n         * use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"PURE_BARCODE\"] = 1] = \"PURE_BARCODE\"; /*(Void.class)*/\n        /**\n         * Image is known to be of one of a few possible formats.\n         * Maps to a {@link List} of {@link BarcodeFormat}s.\n         */\n        DecodeHintType[DecodeHintType[\"POSSIBLE_FORMATS\"] = 2] = \"POSSIBLE_FORMATS\"; /*(List.class)*/\n        /**\n         * Spend more time to try to find a barcode; optimize for accuracy, not speed.\n         * Doesn't matter what it maps to; use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"TRY_HARDER\"] = 3] = \"TRY_HARDER\"; /*(Void.class)*/\n        /**\n         * Specifies what character encoding to use when decoding, where applicable (type String)\n         */\n        DecodeHintType[DecodeHintType[\"CHARACTER_SET\"] = 4] = \"CHARACTER_SET\"; /*(String.class)*/\n        /**\n         * Allowed lengths of encoded data -- reject anything else. Maps to an {@code Int32Array}.\n         */\n        DecodeHintType[DecodeHintType[\"ALLOWED_LENGTHS\"] = 5] = \"ALLOWED_LENGTHS\"; /*(Int32Array.class)*/\n        /**\n         * Assume Code 39 codes employ a check digit. Doesn't matter what it maps to;\n         * use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"ASSUME_CODE_39_CHECK_DIGIT\"] = 6] = \"ASSUME_CODE_39_CHECK_DIGIT\"; /*(Void.class)*/\n        /**\n         * Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed.\n         * For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to;\n         * use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"ASSUME_GS1\"] = 7] = \"ASSUME_GS1\"; /*(Void.class)*/\n        /**\n         * If true, return the start and end digits in a Codabar barcode instead of stripping them. They\n         * are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them\n         * to not be. Doesn't matter what it maps to; use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"RETURN_CODABAR_START_END\"] = 8] = \"RETURN_CODABAR_START_END\"; /*(Void.class)*/\n        /**\n         * The caller needs to be notified via callback when a possible {@link ResultPoint}\n         * is found. Maps to a {@link ResultPointCallback}.\n         */\n        DecodeHintType[DecodeHintType[\"NEED_RESULT_POINT_CALLBACK\"] = 9] = \"NEED_RESULT_POINT_CALLBACK\"; /*(ResultPointCallback.class)*/\n        /**\n         * Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this.\n         * Maps to an {@code Int32Array} of the allowed extension lengths, for example [2], [5], or [2, 5].\n         * If it is optional to have an extension, do not set this hint. If this is set,\n         * and a UPC or EAN barcode is found but an extension is not, then no result will be returned\n         * at all.\n         */\n        DecodeHintType[DecodeHintType[\"ALLOWED_EAN_EXTENSIONS\"] = 10] = \"ALLOWED_EAN_EXTENSIONS\"; /*(Int32Array.class)*/\n        // End of enumeration values.\n        /**\n         * Data type the hint is expecting.\n         * Among the possible values the {@link Void} stands out as being used for\n         * hints that do not expect a value to be supplied (flag hints). Such hints\n         * will possibly have their value ignored, or replaced by a\n         * {@link Boolean#TRUE}. Hint suppliers should probably use\n         * {@link Boolean#TRUE} as directed by the actual hint documentation.\n         */\n        // private valueType: Class<?>\n        // DecodeHintType(valueType: Class<?>) {\n        //   this.valueType = valueType\n        // }\n        // public getValueType(): Class<?> {\n        //   return valueType\n        // }\n    })(DecodeHintType || (DecodeHintType = {}));\n    var DecodeHintType$1 = DecodeHintType;\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class FormatException extends Exception {\n        static getFormatInstance() {\n            return new FormatException();\n        }\n    }\n    FormatException.kind = 'FormatException';\n\n    /*import java.util.HashMap;*/\n    /*import java.util.Map;*/\n    var CharacterSetValueIdentifiers;\n    (function (CharacterSetValueIdentifiers) {\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp437\"] = 0] = \"Cp437\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_1\"] = 1] = \"ISO8859_1\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_2\"] = 2] = \"ISO8859_2\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_3\"] = 3] = \"ISO8859_3\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_4\"] = 4] = \"ISO8859_4\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_5\"] = 5] = \"ISO8859_5\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_6\"] = 6] = \"ISO8859_6\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_7\"] = 7] = \"ISO8859_7\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_8\"] = 8] = \"ISO8859_8\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_9\"] = 9] = \"ISO8859_9\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_10\"] = 10] = \"ISO8859_10\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_11\"] = 11] = \"ISO8859_11\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_13\"] = 12] = \"ISO8859_13\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_14\"] = 13] = \"ISO8859_14\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_15\"] = 14] = \"ISO8859_15\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_16\"] = 15] = \"ISO8859_16\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"SJIS\"] = 16] = \"SJIS\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1250\"] = 17] = \"Cp1250\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1251\"] = 18] = \"Cp1251\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1252\"] = 19] = \"Cp1252\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1256\"] = 20] = \"Cp1256\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"UnicodeBigUnmarked\"] = 21] = \"UnicodeBigUnmarked\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"UTF8\"] = 22] = \"UTF8\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ASCII\"] = 23] = \"ASCII\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Big5\"] = 24] = \"Big5\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"GB18030\"] = 25] = \"GB18030\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"EUC_KR\"] = 26] = \"EUC_KR\";\n    })(CharacterSetValueIdentifiers || (CharacterSetValueIdentifiers = {}));\n    /**\n     * Encapsulates a Character Set ECI, according to \"Extended Channel Interpretations\" 5.3.1.1\n     * of ISO 18004.\n     *\n     * @author Sean Owen\n     */\n    class CharacterSetECI {\n        constructor(valueIdentifier, valuesParam, name, ...otherEncodingNames) {\n            this.valueIdentifier = valueIdentifier;\n            this.name = name;\n            if (typeof valuesParam === 'number') {\n                this.values = Int32Array.from([valuesParam]);\n            }\n            else {\n                this.values = valuesParam;\n            }\n            this.otherEncodingNames = otherEncodingNames;\n            CharacterSetECI.VALUE_IDENTIFIER_TO_ECI.set(valueIdentifier, this);\n            CharacterSetECI.NAME_TO_ECI.set(name, this);\n            const values = this.values;\n            for (let i = 0, length = values.length; i !== length; i++) {\n                const v = values[i];\n                CharacterSetECI.VALUES_TO_ECI.set(v, this);\n            }\n            for (const otherName of otherEncodingNames) {\n                CharacterSetECI.NAME_TO_ECI.set(otherName, this);\n            }\n        }\n        // CharacterSetECI(value: number /*int*/) {\n        //   this(new Int32Array {value})\n        // }\n        // CharacterSetECI(value: number /*int*/, String... otherEncodingNames) {\n        //   this.values = new Int32Array {value}\n        //   this.otherEncodingNames = otherEncodingNames\n        // }\n        // CharacterSetECI(values: Int32Array, String... otherEncodingNames) {\n        //   this.values = values\n        //   this.otherEncodingNames = otherEncodingNames\n        // }\n        getValueIdentifier() {\n            return this.valueIdentifier;\n        }\n        getName() {\n            return this.name;\n        }\n        getValue() {\n            return this.values[0];\n        }\n        /**\n         * @param value character set ECI value\n         * @return {@code CharacterSetECI} representing ECI of given value, or null if it is legal but\n         *   unsupported\n         * @throws FormatException if ECI value is invalid\n         */\n        static getCharacterSetECIByValue(value /*int*/) {\n            if (value < 0 || value >= 900) {\n                throw new FormatException('incorect value');\n            }\n            const characterSet = CharacterSetECI.VALUES_TO_ECI.get(value);\n            if (undefined === characterSet) {\n                throw new FormatException('incorect value');\n            }\n            return characterSet;\n        }\n        /**\n         * @param name character set ECI encoding name\n         * @return CharacterSetECI representing ECI for character encoding, or null if it is legal\n         *   but unsupported\n         */\n        static getCharacterSetECIByName(name) {\n            const characterSet = CharacterSetECI.NAME_TO_ECI.get(name);\n            if (undefined === characterSet) {\n                throw new FormatException('incorect value');\n            }\n            return characterSet;\n        }\n        equals(o) {\n            if (!(o instanceof CharacterSetECI)) {\n                return false;\n            }\n            const other = o;\n            return this.getName() === other.getName();\n        }\n    }\n    CharacterSetECI.VALUE_IDENTIFIER_TO_ECI = new Map();\n    CharacterSetECI.VALUES_TO_ECI = new Map();\n    CharacterSetECI.NAME_TO_ECI = new Map();\n    // Enum name is a Java encoding valid for java.lang and java.io\n    // TYPESCRIPTPORT: changed the main label for ISO as the TextEncoder did not recognized them in the form from java\n    // (eg ISO8859_1 must be ISO88591 or ISO8859-1 or ISO-8859-1)\n    // later on: well, except 16 wich does not work with ISO885916 so used ISO-8859-1 form for default\n    CharacterSetECI.Cp437 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp437, Int32Array.from([0, 2]), 'Cp437');\n    CharacterSetECI.ISO8859_1 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_1, Int32Array.from([1, 3]), 'ISO-8859-1', 'ISO88591', 'ISO8859_1');\n    CharacterSetECI.ISO8859_2 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_2, 4, 'ISO-8859-2', 'ISO88592', 'ISO8859_2');\n    CharacterSetECI.ISO8859_3 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_3, 5, 'ISO-8859-3', 'ISO88593', 'ISO8859_3');\n    CharacterSetECI.ISO8859_4 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_4, 6, 'ISO-8859-4', 'ISO88594', 'ISO8859_4');\n    CharacterSetECI.ISO8859_5 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_5, 7, 'ISO-8859-5', 'ISO88595', 'ISO8859_5');\n    CharacterSetECI.ISO8859_6 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_6, 8, 'ISO-8859-6', 'ISO88596', 'ISO8859_6');\n    CharacterSetECI.ISO8859_7 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_7, 9, 'ISO-8859-7', 'ISO88597', 'ISO8859_7');\n    CharacterSetECI.ISO8859_8 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_8, 10, 'ISO-8859-8', 'ISO88598', 'ISO8859_8');\n    CharacterSetECI.ISO8859_9 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_9, 11, 'ISO-8859-9', 'ISO88599', 'ISO8859_9');\n    CharacterSetECI.ISO8859_10 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_10, 12, 'ISO-8859-10', 'ISO885910', 'ISO8859_10');\n    CharacterSetECI.ISO8859_11 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_11, 13, 'ISO-8859-11', 'ISO885911', 'ISO8859_11');\n    CharacterSetECI.ISO8859_13 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_13, 15, 'ISO-8859-13', 'ISO885913', 'ISO8859_13');\n    CharacterSetECI.ISO8859_14 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_14, 16, 'ISO-8859-14', 'ISO885914', 'ISO8859_14');\n    CharacterSetECI.ISO8859_15 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_15, 17, 'ISO-8859-15', 'ISO885915', 'ISO8859_15');\n    CharacterSetECI.ISO8859_16 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_16, 18, 'ISO-8859-16', 'ISO885916', 'ISO8859_16');\n    CharacterSetECI.SJIS = new CharacterSetECI(CharacterSetValueIdentifiers.SJIS, 20, 'SJIS', 'Shift_JIS');\n    CharacterSetECI.Cp1250 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1250, 21, 'Cp1250', 'windows-1250');\n    CharacterSetECI.Cp1251 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1251, 22, 'Cp1251', 'windows-1251');\n    CharacterSetECI.Cp1252 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1252, 23, 'Cp1252', 'windows-1252');\n    CharacterSetECI.Cp1256 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1256, 24, 'Cp1256', 'windows-1256');\n    CharacterSetECI.UnicodeBigUnmarked = new CharacterSetECI(CharacterSetValueIdentifiers.UnicodeBigUnmarked, 25, 'UnicodeBigUnmarked', 'UTF-16BE', 'UnicodeBig');\n    CharacterSetECI.UTF8 = new CharacterSetECI(CharacterSetValueIdentifiers.UTF8, 26, 'UTF8', 'UTF-8');\n    CharacterSetECI.ASCII = new CharacterSetECI(CharacterSetValueIdentifiers.ASCII, Int32Array.from([27, 170]), 'ASCII', 'US-ASCII');\n    CharacterSetECI.Big5 = new CharacterSetECI(CharacterSetValueIdentifiers.Big5, 28, 'Big5');\n    CharacterSetECI.GB18030 = new CharacterSetECI(CharacterSetValueIdentifiers.GB18030, 29, 'GB18030', 'GB2312', 'EUC_CN', 'GBK');\n    CharacterSetECI.EUC_KR = new CharacterSetECI(CharacterSetValueIdentifiers.EUC_KR, 30, 'EUC_KR', 'EUC-KR');\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class UnsupportedOperationException extends Exception {\n    }\n    UnsupportedOperationException.kind = 'UnsupportedOperationException';\n\n    /**\n     * Responsible for en/decoding strings.\n     */\n    class StringEncoding {\n        /**\n         * Decodes some Uint8Array to a string format.\n         */\n        static decode(bytes, encoding) {\n            const encodingName = this.encodingName(encoding);\n            if (this.customDecoder) {\n                return this.customDecoder(bytes, encodingName);\n            }\n            // Increases browser support.\n            if (typeof TextDecoder === 'undefined' || this.shouldDecodeOnFallback(encodingName)) {\n                return this.decodeFallback(bytes, encodingName);\n            }\n            return new TextDecoder(encodingName).decode(bytes);\n        }\n        /**\n         * Checks if the decoding method should use the fallback for decoding\n         * once Node TextDecoder doesn't support all encoding formats.\n         *\n         * @param encodingName\n         */\n        static shouldDecodeOnFallback(encodingName) {\n            return !StringEncoding.isBrowser() && encodingName === 'ISO-8859-1';\n        }\n        /**\n         * Encodes some string into a Uint8Array.\n         */\n        static encode(s, encoding) {\n            const encodingName = this.encodingName(encoding);\n            if (this.customEncoder) {\n                return this.customEncoder(s, encodingName);\n            }\n            // Increases browser support.\n            if (typeof TextEncoder === 'undefined') {\n                return this.encodeFallback(s);\n            }\n            // TextEncoder only encodes to UTF8 by default as specified by encoding.spec.whatwg.org\n            return new TextEncoder().encode(s);\n        }\n        static isBrowser() {\n            return (typeof window !== 'undefined' && {}.toString.call(window) === '[object Window]');\n        }\n        /**\n         * Returns the string value from some encoding character set.\n         */\n        static encodingName(encoding) {\n            return typeof encoding === 'string'\n                ? encoding\n                : encoding.getName();\n        }\n        /**\n         * Returns character set from some encoding character set.\n         */\n        static encodingCharacterSet(encoding) {\n            if (encoding instanceof CharacterSetECI) {\n                return encoding;\n            }\n            return CharacterSetECI.getCharacterSetECIByName(encoding);\n        }\n        /**\n         * Runs a fallback for the native decoding funcion.\n         */\n        static decodeFallback(bytes, encoding) {\n            const characterSet = this.encodingCharacterSet(encoding);\n            if (StringEncoding.isDecodeFallbackSupported(characterSet)) {\n                let s = '';\n                for (let i = 0, length = bytes.length; i < length; i++) {\n                    let h = bytes[i].toString(16);\n                    if (h.length < 2) {\n                        h = '0' + h;\n                    }\n                    s += '%' + h;\n                }\n                return decodeURIComponent(s);\n            }\n            if (characterSet.equals(CharacterSetECI.UnicodeBigUnmarked)) {\n                return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n            }\n            throw new UnsupportedOperationException(`Encoding ${this.encodingName(encoding)} not supported by fallback.`);\n        }\n        static isDecodeFallbackSupported(characterSet) {\n            return characterSet.equals(CharacterSetECI.UTF8) ||\n                characterSet.equals(CharacterSetECI.ISO8859_1) ||\n                characterSet.equals(CharacterSetECI.ASCII);\n        }\n        /**\n         * Runs a fallback for the native encoding funcion.\n         *\n         * @see https://stackoverflow.com/a/17192845/4367683\n         */\n        static encodeFallback(s) {\n            const encodedURIstring = btoa(unescape(encodeURIComponent(s)));\n            const charList = encodedURIstring.split('');\n            const uintArray = [];\n            for (let i = 0; i < charList.length; i++) {\n                uintArray.push(charList[i].charCodeAt(0));\n            }\n            return new Uint8Array(uintArray);\n        }\n    }\n\n    /*\n     * Copyright (C) 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Common string-related functions.\n     *\n     * @author Sean Owen\n     * @author Alex Dupre\n     */\n    class StringUtils {\n        // SHIFT_JIS.equalsIgnoreCase(PLATFORM_DEFAULT_ENCODING) ||\n        // EUC_JP.equalsIgnoreCase(PLATFORM_DEFAULT_ENCODING);\n        static castAsNonUtf8Char(code, encoding = null) {\n            // ISO 8859-1 is the Java default as UTF-8 is JavaScripts\n            // you can see this method as a Java version of String.fromCharCode\n            const e = encoding ? encoding.getName() : this.ISO88591;\n            // use passed format (fromCharCode will return UTF8 encoding)\n            return StringEncoding.decode(new Uint8Array([code]), e);\n        }\n        /**\n         * @param bytes bytes encoding a string, whose encoding should be guessed\n         * @param hints decode hints if applicable\n         * @return name of guessed encoding; at the moment will only guess one of:\n         *  {@link #SHIFT_JIS}, {@link #UTF8}, {@link #ISO88591}, or the platform\n         *  default encoding if none of these can possibly be correct\n         */\n        static guessEncoding(bytes, hints) {\n            if (hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType$1.CHARACTER_SET)) {\n                return hints.get(DecodeHintType$1.CHARACTER_SET).toString();\n            }\n            // For now, merely tries to distinguish ISO-8859-1, UTF-8 and Shift_JIS,\n            // which should be by far the most common encodings.\n            const length = bytes.length;\n            let canBeISO88591 = true;\n            let canBeShiftJIS = true;\n            let canBeUTF8 = true;\n            let utf8BytesLeft = 0;\n            // int utf8LowChars = 0\n            let utf2BytesChars = 0;\n            let utf3BytesChars = 0;\n            let utf4BytesChars = 0;\n            let sjisBytesLeft = 0;\n            // int sjisLowChars = 0\n            let sjisKatakanaChars = 0;\n            // int sjisDoubleBytesChars = 0\n            let sjisCurKatakanaWordLength = 0;\n            let sjisCurDoubleBytesWordLength = 0;\n            let sjisMaxKatakanaWordLength = 0;\n            let sjisMaxDoubleBytesWordLength = 0;\n            // int isoLowChars = 0\n            // int isoHighChars = 0\n            let isoHighOther = 0;\n            const utf8bom = bytes.length > 3 &&\n                bytes[0] === /*(byte) */ 0xEF &&\n                bytes[1] === /*(byte) */ 0xBB &&\n                bytes[2] === /*(byte) */ 0xBF;\n            for (let i = 0; i < length && (canBeISO88591 || canBeShiftJIS || canBeUTF8); i++) {\n                const value = bytes[i] & 0xFF;\n                // UTF-8 stuff\n                if (canBeUTF8) {\n                    if (utf8BytesLeft > 0) {\n                        if ((value & 0x80) === 0) {\n                            canBeUTF8 = false;\n                        }\n                        else {\n                            utf8BytesLeft--;\n                        }\n                    }\n                    else if ((value & 0x80) !== 0) {\n                        if ((value & 0x40) === 0) {\n                            canBeUTF8 = false;\n                        }\n                        else {\n                            utf8BytesLeft++;\n                            if ((value & 0x20) === 0) {\n                                utf2BytesChars++;\n                            }\n                            else {\n                                utf8BytesLeft++;\n                                if ((value & 0x10) === 0) {\n                                    utf3BytesChars++;\n                                }\n                                else {\n                                    utf8BytesLeft++;\n                                    if ((value & 0x08) === 0) {\n                                        utf4BytesChars++;\n                                    }\n                                    else {\n                                        canBeUTF8 = false;\n                                    }\n                                }\n                            }\n                        }\n                    } // else {\n                    // utf8LowChars++\n                    // }\n                }\n                // ISO-8859-1 stuff\n                if (canBeISO88591) {\n                    if (value > 0x7F && value < 0xA0) {\n                        canBeISO88591 = false;\n                    }\n                    else if (value > 0x9F) {\n                        if (value < 0xC0 || value === 0xD7 || value === 0xF7) {\n                            isoHighOther++;\n                        } // else {\n                        // isoHighChars++\n                        // }\n                    } // else {\n                    // isoLowChars++\n                    // }\n                }\n                // Shift_JIS stuff\n                if (canBeShiftJIS) {\n                    if (sjisBytesLeft > 0) {\n                        if (value < 0x40 || value === 0x7F || value > 0xFC) {\n                            canBeShiftJIS = false;\n                        }\n                        else {\n                            sjisBytesLeft--;\n                        }\n                    }\n                    else if (value === 0x80 || value === 0xA0 || value > 0xEF) {\n                        canBeShiftJIS = false;\n                    }\n                    else if (value > 0xA0 && value < 0xE0) {\n                        sjisKatakanaChars++;\n                        sjisCurDoubleBytesWordLength = 0;\n                        sjisCurKatakanaWordLength++;\n                        if (sjisCurKatakanaWordLength > sjisMaxKatakanaWordLength) {\n                            sjisMaxKatakanaWordLength = sjisCurKatakanaWordLength;\n                        }\n                    }\n                    else if (value > 0x7F) {\n                        sjisBytesLeft++;\n                        // sjisDoubleBytesChars++\n                        sjisCurKatakanaWordLength = 0;\n                        sjisCurDoubleBytesWordLength++;\n                        if (sjisCurDoubleBytesWordLength > sjisMaxDoubleBytesWordLength) {\n                            sjisMaxDoubleBytesWordLength = sjisCurDoubleBytesWordLength;\n                        }\n                    }\n                    else {\n                        // sjisLowChars++\n                        sjisCurKatakanaWordLength = 0;\n                        sjisCurDoubleBytesWordLength = 0;\n                    }\n                }\n            }\n            if (canBeUTF8 && utf8BytesLeft > 0) {\n                canBeUTF8 = false;\n            }\n            if (canBeShiftJIS && sjisBytesLeft > 0) {\n                canBeShiftJIS = false;\n            }\n            // Easy -- if there is BOM or at least 1 valid not-single byte character (and no evidence it can't be UTF-8), done\n            if (canBeUTF8 && (utf8bom || utf2BytesChars + utf3BytesChars + utf4BytesChars > 0)) {\n                return StringUtils.UTF8;\n            }\n            // Easy -- if assuming Shift_JIS or at least 3 valid consecutive not-ascii characters (and no evidence it can't be), done\n            if (canBeShiftJIS && (StringUtils.ASSUME_SHIFT_JIS || sjisMaxKatakanaWordLength >= 3 || sjisMaxDoubleBytesWordLength >= 3)) {\n                return StringUtils.SHIFT_JIS;\n            }\n            // Distinguishing Shift_JIS and ISO-8859-1 can be a little tough for short words. The crude heuristic is:\n            // - If we saw\n            //   - only two consecutive katakana chars in the whole text, or\n            //   - at least 10% of bytes that could be \"upper\" not-alphanumeric Latin1,\n            // - then we conclude Shift_JIS, else ISO-8859-1\n            if (canBeISO88591 && canBeShiftJIS) {\n                return (sjisMaxKatakanaWordLength === 2 && sjisKatakanaChars === 2) || isoHighOther * 10 >= length\n                    ? StringUtils.SHIFT_JIS : StringUtils.ISO88591;\n            }\n            // Otherwise, try in order ISO-8859-1, Shift JIS, UTF-8 and fall back to default platform encoding\n            if (canBeISO88591) {\n                return StringUtils.ISO88591;\n            }\n            if (canBeShiftJIS) {\n                return StringUtils.SHIFT_JIS;\n            }\n            if (canBeUTF8) {\n                return StringUtils.UTF8;\n            }\n            // Otherwise, we take a wild guess with platform encoding\n            return StringUtils.PLATFORM_DEFAULT_ENCODING;\n        }\n        /**\n         *\n         * @see https://stackoverflow.com/a/13439711/4367683\n         *\n         * @param append The new string to append.\n         * @param args Argumets values to be formated.\n         */\n        static format(append, ...args) {\n            let i = -1;\n            function callback(exp, p0, p1, p2, p3, p4) {\n                if (exp === '%%')\n                    return '%';\n                if (args[++i] === undefined)\n                    return undefined;\n                exp = p2 ? parseInt(p2.substr(1)) : undefined;\n                let base = p3 ? parseInt(p3.substr(1)) : undefined;\n                let val;\n                switch (p4) {\n                    case 's':\n                        val = args[i];\n                        break;\n                    case 'c':\n                        val = args[i][0];\n                        break;\n                    case 'f':\n                        val = parseFloat(args[i]).toFixed(exp);\n                        break;\n                    case 'p':\n                        val = parseFloat(args[i]).toPrecision(exp);\n                        break;\n                    case 'e':\n                        val = parseFloat(args[i]).toExponential(exp);\n                        break;\n                    case 'x':\n                        val = parseInt(args[i]).toString(base ? base : 16);\n                        break;\n                    case 'd':\n                        val = parseFloat(parseInt(args[i], base ? base : 10).toPrecision(exp)).toFixed(0);\n                        break;\n                }\n                val = typeof val === 'object' ? JSON.stringify(val) : (+val).toString(base);\n                let size = parseInt(p1); /* padding size */\n                let ch = p1 && (p1[0] + '') === '0' ? '0' : ' '; /* isnull? */\n                while (val.length < size)\n                    val = p0 !== undefined ? val + ch : ch + val; /* isminus? */\n                return val;\n            }\n            let regex = /%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;\n            return append.replace(regex, callback);\n        }\n        /**\n         *\n         */\n        static getBytes(str, encoding) {\n            return StringEncoding.encode(str, encoding);\n        }\n        /**\n         * Returns the charcode at the specified index or at index zero.\n         */\n        static getCharCode(str, index = 0) {\n            return str.charCodeAt(index);\n        }\n        /**\n         * Returns char for given charcode\n         */\n        static getCharAt(charCode) {\n            return String.fromCharCode(charCode);\n        }\n    }\n    StringUtils.SHIFT_JIS = CharacterSetECI.SJIS.getName(); // \"SJIS\"\n    StringUtils.GB2312 = 'GB2312';\n    StringUtils.ISO88591 = CharacterSetECI.ISO8859_1.getName(); // \"ISO8859_1\"\n    StringUtils.EUC_JP = 'EUC_JP';\n    StringUtils.UTF8 = CharacterSetECI.UTF8.getName(); // \"UTF8\"\n    StringUtils.PLATFORM_DEFAULT_ENCODING = StringUtils.UTF8; // \"UTF8\"//Charset.defaultCharset().name()\n    StringUtils.ASSUME_SHIFT_JIS = false;\n\n    class StringBuilder {\n        constructor(value = '') {\n            this.value = value;\n        }\n        enableDecoding(encoding) {\n            this.encoding = encoding;\n            return this;\n        }\n        append(s) {\n            if (typeof s === 'string') {\n                this.value += s.toString();\n            }\n            else if (this.encoding) {\n                // use passed format (fromCharCode will return UTF8 encoding)\n                this.value += StringUtils.castAsNonUtf8Char(s, this.encoding);\n            }\n            else {\n                // correctly converts from UTF-8, but not other encodings\n                this.value += String.fromCharCode(s);\n            }\n            return this;\n        }\n        appendChars(str, offset, len) {\n            for (let i = offset; offset < offset + len; i++) {\n                this.append(str[i]);\n            }\n            return this;\n        }\n        length() {\n            return this.value.length;\n        }\n        charAt(n) {\n            return this.value.charAt(n);\n        }\n        deleteCharAt(n) {\n            this.value = this.value.substr(0, n) + this.value.substring(n + 1);\n        }\n        setCharAt(n, c) {\n            this.value = this.value.substr(0, n) + c + this.value.substr(n + 1);\n        }\n        substring(start, end) {\n            return this.value.substring(start, end);\n        }\n        /**\n         * @note helper method for RSS Expanded\n         */\n        setLengthToZero() {\n            this.value = '';\n        }\n        toString() {\n            return this.value;\n        }\n        insert(n, c) {\n            this.value = this.value.substr(0, n) + c + this.value.substr(n + c.length);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Represents a 2D matrix of bits. In function arguments below, and throughout the common\n     * module, x is the column position, and y is the row position. The ordering is always x, y.\n     * The origin is at the top-left.</p>\n     *\n     * <p>Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins\n     * with a new int. This is done intentionally so that we can copy out a row into a BitArray very\n     * efficiently.</p>\n     *\n     * <p>The ordering of bits is row-major. Within each int, the least significant bits are used first,\n     * meaning they represent lower x values. This is compatible with BitArray's implementation.</p>\n     *\n     * @author Sean Owen\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class BitMatrix /*implements Cloneable*/ {\n        /**\n         * Creates an empty square {@link BitMatrix}.\n         *\n         * @param dimension height and width\n         */\n        // public constructor(dimension: number /*int*/) {\n        //   this(dimension, dimension)\n        // }\n        /**\n         * Creates an empty {@link BitMatrix}.\n         *\n         * @param width bit matrix width\n         * @param height bit matrix height\n         */\n        // public constructor(width: number /*int*/, height: number /*int*/) {\n        //   if (width < 1 || height < 1) {\n        //     throw new IllegalArgumentException(\"Both dimensions must be greater than 0\")\n        //   }\n        //   this.width = width\n        //   this.height = height\n        //   this.rowSize = (width + 31) / 32\n        //   bits = new int[rowSize * height];\n        // }\n        constructor(width /*int*/, height /*int*/, rowSize /*int*/, bits) {\n            this.width = width;\n            this.height = height;\n            this.rowSize = rowSize;\n            this.bits = bits;\n            if (undefined === height || null === height) {\n                height = width;\n            }\n            this.height = height;\n            if (width < 1 || height < 1) {\n                throw new IllegalArgumentException('Both dimensions must be greater than 0');\n            }\n            if (undefined === rowSize || null === rowSize) {\n                rowSize = Math.floor((width + 31) / 32);\n            }\n            this.rowSize = rowSize;\n            if (undefined === bits || null === bits) {\n                this.bits = new Int32Array(this.rowSize * this.height);\n            }\n        }\n        /**\n         * Interprets a 2D array of booleans as a {@link BitMatrix}, where \"true\" means an \"on\" bit.\n         *\n         * @function parse\n         * @param image bits of the image, as a row-major 2D array. Elements are arrays representing rows\n         * @return {@link BitMatrix} representation of image\n         */\n        static parseFromBooleanArray(image) {\n            const height = image.length;\n            const width = image[0].length;\n            const bits = new BitMatrix(width, height);\n            for (let i = 0; i < height; i++) {\n                const imageI = image[i];\n                for (let j = 0; j < width; j++) {\n                    if (imageI[j]) {\n                        bits.set(j, i);\n                    }\n                }\n            }\n            return bits;\n        }\n        /**\n         *\n         * @function parse\n         * @param stringRepresentation\n         * @param setString\n         * @param unsetString\n         */\n        static parseFromString(stringRepresentation, setString, unsetString) {\n            if (stringRepresentation === null) {\n                throw new IllegalArgumentException('stringRepresentation cannot be null');\n            }\n            const bits = new Array(stringRepresentation.length);\n            let bitsPos = 0;\n            let rowStartPos = 0;\n            let rowLength = -1;\n            let nRows = 0;\n            let pos = 0;\n            while (pos < stringRepresentation.length) {\n                if (stringRepresentation.charAt(pos) === '\\n' ||\n                    stringRepresentation.charAt(pos) === '\\r') {\n                    if (bitsPos > rowStartPos) {\n                        if (rowLength === -1) {\n                            rowLength = bitsPos - rowStartPos;\n                        }\n                        else if (bitsPos - rowStartPos !== rowLength) {\n                            throw new IllegalArgumentException('row lengths do not match');\n                        }\n                        rowStartPos = bitsPos;\n                        nRows++;\n                    }\n                    pos++;\n                }\n                else if (stringRepresentation.substring(pos, pos + setString.length) === setString) {\n                    pos += setString.length;\n                    bits[bitsPos] = true;\n                    bitsPos++;\n                }\n                else if (stringRepresentation.substring(pos, pos + unsetString.length) === unsetString) {\n                    pos += unsetString.length;\n                    bits[bitsPos] = false;\n                    bitsPos++;\n                }\n                else {\n                    throw new IllegalArgumentException('illegal character encountered: ' + stringRepresentation.substring(pos));\n                }\n            }\n            // no EOL at end?\n            if (bitsPos > rowStartPos) {\n                if (rowLength === -1) {\n                    rowLength = bitsPos - rowStartPos;\n                }\n                else if (bitsPos - rowStartPos !== rowLength) {\n                    throw new IllegalArgumentException('row lengths do not match');\n                }\n                nRows++;\n            }\n            const matrix = new BitMatrix(rowLength, nRows);\n            for (let i = 0; i < bitsPos; i++) {\n                if (bits[i]) {\n                    matrix.set(Math.floor(i % rowLength), Math.floor(i / rowLength));\n                }\n            }\n            return matrix;\n        }\n        /**\n         * <p>Gets the requested bit, where true means black.</p>\n         *\n         * @param x The horizontal component (i.e. which column)\n         * @param y The vertical component (i.e. which row)\n         * @return value of given bit in matrix\n         */\n        get(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            return ((this.bits[offset] >>> (x & 0x1f)) & 1) !== 0;\n        }\n        /**\n         * <p>Sets the given bit to true.</p>\n         *\n         * @param x The horizontal component (i.e. which column)\n         * @param y The vertical component (i.e. which row)\n         */\n        set(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            this.bits[offset] |= (1 << (x & 0x1f)) & 0xFFFFFFFF;\n        }\n        unset(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            this.bits[offset] &= ~((1 << (x & 0x1f)) & 0xFFFFFFFF);\n        }\n        /**\n         * <p>Flips the given bit.</p>\n         *\n         * @param x The horizontal component (i.e. which column)\n         * @param y The vertical component (i.e. which row)\n         */\n        flip(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            this.bits[offset] ^= ((1 << (x & 0x1f)) & 0xFFFFFFFF);\n        }\n        /**\n         * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding\n         * mask bit is set.\n         *\n         * @param mask XOR mask\n         */\n        xor(mask) {\n            if (this.width !== mask.getWidth() || this.height !== mask.getHeight()\n                || this.rowSize !== mask.getRowSize()) {\n                throw new IllegalArgumentException('input matrix dimensions do not match');\n            }\n            const rowArray = new BitArray(Math.floor(this.width / 32) + 1);\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            for (let y = 0, height = this.height; y < height; y++) {\n                const offset = y * rowSize;\n                const row = mask.getRow(y, rowArray).getBitArray();\n                for (let x = 0; x < rowSize; x++) {\n                    bits[offset + x] ^= row[x];\n                }\n            }\n        }\n        /**\n         * Clears all bits (sets to false).\n         */\n        clear() {\n            const bits = this.bits;\n            const max = bits.length;\n            for (let i = 0; i < max; i++) {\n                bits[i] = 0;\n            }\n        }\n        /**\n         * <p>Sets a square region of the bit matrix to true.</p>\n         *\n         * @param left The horizontal position to begin at (inclusive)\n         * @param top The vertical position to begin at (inclusive)\n         * @param width The width of the region\n         * @param height The height of the region\n         */\n        setRegion(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            if (top < 0 || left < 0) {\n                throw new IllegalArgumentException('Left and top must be nonnegative');\n            }\n            if (height < 1 || width < 1) {\n                throw new IllegalArgumentException('Height and width must be at least 1');\n            }\n            const right = left + width;\n            const bottom = top + height;\n            if (bottom > this.height || right > this.width) {\n                throw new IllegalArgumentException('The region must fit inside the matrix');\n            }\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            for (let y = top; y < bottom; y++) {\n                const offset = y * rowSize;\n                for (let x = left; x < right; x++) {\n                    bits[offset + Math.floor(x / 32)] |= ((1 << (x & 0x1f)) & 0xFFFFFFFF);\n                }\n            }\n        }\n        /**\n         * A fast method to retrieve one row of data from the matrix as a BitArray.\n         *\n         * @param y The row to retrieve\n         * @param row An optional caller-allocated BitArray, will be allocated if null or too small\n         * @return The resulting BitArray - this reference should always be used even when passing\n         *         your own row\n         */\n        getRow(y /*int*/, row) {\n            if (row === null || row === undefined || row.getSize() < this.width) {\n                row = new BitArray(this.width);\n            }\n            else {\n                row.clear();\n            }\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            const offset = y * rowSize;\n            for (let x = 0; x < rowSize; x++) {\n                row.setBulk(x * 32, bits[offset + x]);\n            }\n            return row;\n        }\n        /**\n         * @param y row to set\n         * @param row {@link BitArray} to copy from\n         */\n        setRow(y /*int*/, row) {\n            System.arraycopy(row.getBitArray(), 0, this.bits, y * this.rowSize, this.rowSize);\n        }\n        /**\n         * Modifies this {@code BitMatrix} to represent the same but rotated 180 degrees\n         */\n        rotate180() {\n            const width = this.getWidth();\n            const height = this.getHeight();\n            let topRow = new BitArray(width);\n            let bottomRow = new BitArray(width);\n            for (let i = 0, length = Math.floor((height + 1) / 2); i < length; i++) {\n                topRow = this.getRow(i, topRow);\n                bottomRow = this.getRow(height - 1 - i, bottomRow);\n                topRow.reverse();\n                bottomRow.reverse();\n                this.setRow(i, bottomRow);\n                this.setRow(height - 1 - i, topRow);\n            }\n        }\n        /**\n         * This is useful in detecting the enclosing rectangle of a 'pure' barcode.\n         *\n         * @return {@code left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white\n         */\n        getEnclosingRectangle() {\n            const width = this.width;\n            const height = this.height;\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            let left = width;\n            let top = height;\n            let right = -1;\n            let bottom = -1;\n            for (let y = 0; y < height; y++) {\n                for (let x32 = 0; x32 < rowSize; x32++) {\n                    const theBits = bits[y * rowSize + x32];\n                    if (theBits !== 0) {\n                        if (y < top) {\n                            top = y;\n                        }\n                        if (y > bottom) {\n                            bottom = y;\n                        }\n                        if (x32 * 32 < left) {\n                            let bit = 0;\n                            while (((theBits << (31 - bit)) & 0xFFFFFFFF) === 0) {\n                                bit++;\n                            }\n                            if ((x32 * 32 + bit) < left) {\n                                left = x32 * 32 + bit;\n                            }\n                        }\n                        if (x32 * 32 + 31 > right) {\n                            let bit = 31;\n                            while ((theBits >>> bit) === 0) {\n                                bit--;\n                            }\n                            if ((x32 * 32 + bit) > right) {\n                                right = x32 * 32 + bit;\n                            }\n                        }\n                    }\n                }\n            }\n            if (right < left || bottom < top) {\n                return null;\n            }\n            return Int32Array.from([left, top, right - left + 1, bottom - top + 1]);\n        }\n        /**\n         * This is useful in detecting a corner of a 'pure' barcode.\n         *\n         * @return {@code x,y} coordinate of top-left-most 1 bit, or null if it is all white\n         */\n        getTopLeftOnBit() {\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            let bitsOffset = 0;\n            while (bitsOffset < bits.length && bits[bitsOffset] === 0) {\n                bitsOffset++;\n            }\n            if (bitsOffset === bits.length) {\n                return null;\n            }\n            const y = bitsOffset / rowSize;\n            let x = (bitsOffset % rowSize) * 32;\n            const theBits = bits[bitsOffset];\n            let bit = 0;\n            while (((theBits << (31 - bit)) & 0xFFFFFFFF) === 0) {\n                bit++;\n            }\n            x += bit;\n            return Int32Array.from([x, y]);\n        }\n        getBottomRightOnBit() {\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            let bitsOffset = bits.length - 1;\n            while (bitsOffset >= 0 && bits[bitsOffset] === 0) {\n                bitsOffset--;\n            }\n            if (bitsOffset < 0) {\n                return null;\n            }\n            const y = Math.floor(bitsOffset / rowSize);\n            let x = Math.floor(bitsOffset % rowSize) * 32;\n            const theBits = bits[bitsOffset];\n            let bit = 31;\n            while ((theBits >>> bit) === 0) {\n                bit--;\n            }\n            x += bit;\n            return Int32Array.from([x, y]);\n        }\n        /**\n         * @return The width of the matrix\n         */\n        getWidth() {\n            return this.width;\n        }\n        /**\n         * @return The height of the matrix\n         */\n        getHeight() {\n            return this.height;\n        }\n        /**\n         * @return The row size of the matrix\n         */\n        getRowSize() {\n            return this.rowSize;\n        }\n        /*@Override*/\n        equals(o) {\n            if (!(o instanceof BitMatrix)) {\n                return false;\n            }\n            const other = o;\n            return this.width === other.width && this.height === other.height && this.rowSize === other.rowSize &&\n                Arrays.equals(this.bits, other.bits);\n        }\n        /*@Override*/\n        hashCode() {\n            let hash = this.width;\n            hash = 31 * hash + this.width;\n            hash = 31 * hash + this.height;\n            hash = 31 * hash + this.rowSize;\n            hash = 31 * hash + Arrays.hashCode(this.bits);\n            return hash;\n        }\n        /**\n         * @return string representation using \"X\" for set and \" \" for unset bits\n         */\n        /*@Override*/\n        // public toString(): string {\n        //   return toString(\": \"X, \"  \")\n        // }\n        /**\n         * @param setString representation of a set bit\n         * @param unsetString representation of an unset bit\n         * @return string representation of entire matrix utilizing given strings\n         */\n        // public toString(setString: string = \"X \", unsetString: string = \"  \"): string {\n        //   return this.buildToString(setString, unsetString, \"\\n\")\n        // }\n        /**\n         * @param setString representation of a set bit\n         * @param unsetString representation of an unset bit\n         * @param lineSeparator newline character in string representation\n         * @return string representation of entire matrix utilizing given strings and line separator\n         * @deprecated call {@link #toString(String,String)} only, which uses \\n line separator always\n         */\n        // @Deprecated\n        toString(setString = 'X ', unsetString = '  ', lineSeparator = '\\n') {\n            return this.buildToString(setString, unsetString, lineSeparator);\n        }\n        buildToString(setString, unsetString, lineSeparator) {\n            let result = new StringBuilder();\n            // result.append(lineSeparator);\n            for (let y = 0, height = this.height; y < height; y++) {\n                for (let x = 0, width = this.width; x < width; x++) {\n                    result.append(this.get(x, y) ? setString : unsetString);\n                }\n                result.append(lineSeparator);\n            }\n            return result.toString();\n        }\n        /*@Override*/\n        clone() {\n            return new BitMatrix(this.width, this.height, this.rowSize, this.bits.slice());\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class NotFoundException extends Exception {\n        static getNotFoundInstance() {\n            return new NotFoundException();\n        }\n    }\n    NotFoundException.kind = 'NotFoundException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This Binarizer implementation uses the old ZXing global histogram approach. It is suitable\n     * for low-end mobile devices which don't have enough CPU or memory to use a local thresholding\n     * algorithm. However, because it picks a global black point, it cannot handle difficult shadows\n     * and gradients.\n     *\n     * Faster mobile devices and all desktop applications should probably use HybridBinarizer instead.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     */\n    class GlobalHistogramBinarizer extends Binarizer {\n        constructor(source) {\n            super(source);\n            this.luminances = GlobalHistogramBinarizer.EMPTY;\n            this.buckets = new Int32Array(GlobalHistogramBinarizer.LUMINANCE_BUCKETS);\n        }\n        // Applies simple sharpening to the row data to improve performance of the 1D Readers.\n        /*@Override*/\n        getBlackRow(y /*int*/, row) {\n            const source = this.getLuminanceSource();\n            const width = source.getWidth();\n            if (row === undefined || row === null || row.getSize() < width) {\n                row = new BitArray(width);\n            }\n            else {\n                row.clear();\n            }\n            this.initArrays(width);\n            const localLuminances = source.getRow(y, this.luminances);\n            const localBuckets = this.buckets;\n            for (let x = 0; x < width; x++) {\n                localBuckets[(localLuminances[x] & 0xff) >> GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;\n            }\n            const blackPoint = GlobalHistogramBinarizer.estimateBlackPoint(localBuckets);\n            if (width < 3) {\n                // Special case for very small images\n                for (let x = 0; x < width; x++) {\n                    if ((localLuminances[x] & 0xff) < blackPoint) {\n                        row.set(x);\n                    }\n                }\n            }\n            else {\n                let left = localLuminances[0] & 0xff;\n                let center = localLuminances[1] & 0xff;\n                for (let x = 1; x < width - 1; x++) {\n                    const right = localLuminances[x + 1] & 0xff;\n                    // A simple -1 4 -1 box filter with a weight of 2.\n                    if (((center * 4) - left - right) / 2 < blackPoint) {\n                        row.set(x);\n                    }\n                    left = center;\n                    center = right;\n                }\n            }\n            return row;\n        }\n        // Does not sharpen the data, as this call is intended to only be used by 2D Readers.\n        /*@Override*/\n        getBlackMatrix() {\n            const source = this.getLuminanceSource();\n            const width = source.getWidth();\n            const height = source.getHeight();\n            const matrix = new BitMatrix(width, height);\n            // Quickly calculates the histogram by sampling four rows from the image. This proved to be\n            // more robust on the blackbox tests than sampling a diagonal as we used to do.\n            this.initArrays(width);\n            const localBuckets = this.buckets;\n            for (let y = 1; y < 5; y++) {\n                const row = Math.floor((height * y) / 5);\n                const localLuminances = source.getRow(row, this.luminances);\n                const right = Math.floor((width * 4) / 5);\n                for (let x = Math.floor(width / 5); x < right; x++) {\n                    const pixel = localLuminances[x] & 0xff;\n                    localBuckets[pixel >> GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;\n                }\n            }\n            const blackPoint = GlobalHistogramBinarizer.estimateBlackPoint(localBuckets);\n            // We delay reading the entire image luminance until the black point estimation succeeds.\n            // Although we end up reading four rows twice, it is consistent with our motto of\n            // \"fail quickly\" which is necessary for continuous scanning.\n            const localLuminances = source.getMatrix();\n            for (let y = 0; y < height; y++) {\n                const offset = y * width;\n                for (let x = 0; x < width; x++) {\n                    const pixel = localLuminances[offset + x] & 0xff;\n                    if (pixel < blackPoint) {\n                        matrix.set(x, y);\n                    }\n                }\n            }\n            return matrix;\n        }\n        /*@Override*/\n        createBinarizer(source) {\n            return new GlobalHistogramBinarizer(source);\n        }\n        initArrays(luminanceSize /*int*/) {\n            if (this.luminances.length < luminanceSize) {\n                this.luminances = new Uint8ClampedArray(luminanceSize);\n            }\n            const buckets = this.buckets;\n            for (let x = 0; x < GlobalHistogramBinarizer.LUMINANCE_BUCKETS; x++) {\n                buckets[x] = 0;\n            }\n        }\n        static estimateBlackPoint(buckets) {\n            // Find the tallest peak in the histogram.\n            const numBuckets = buckets.length;\n            let maxBucketCount = 0;\n            let firstPeak = 0;\n            let firstPeakSize = 0;\n            for (let x = 0; x < numBuckets; x++) {\n                if (buckets[x] > firstPeakSize) {\n                    firstPeak = x;\n                    firstPeakSize = buckets[x];\n                }\n                if (buckets[x] > maxBucketCount) {\n                    maxBucketCount = buckets[x];\n                }\n            }\n            // Find the second-tallest peak which is somewhat far from the tallest peak.\n            let secondPeak = 0;\n            let secondPeakScore = 0;\n            for (let x = 0; x < numBuckets; x++) {\n                const distanceToBiggest = x - firstPeak;\n                // Encourage more distant second peaks by multiplying by square of distance.\n                const score = buckets[x] * distanceToBiggest * distanceToBiggest;\n                if (score > secondPeakScore) {\n                    secondPeak = x;\n                    secondPeakScore = score;\n                }\n            }\n            // Make sure firstPeak corresponds to the black peak.\n            if (firstPeak > secondPeak) {\n                const temp = firstPeak;\n                firstPeak = secondPeak;\n                secondPeak = temp;\n            }\n            // If there is too little contrast in the image to pick a meaningful black point, throw rather\n            // than waste time trying to decode the image, and risk false positives.\n            if (secondPeak - firstPeak <= numBuckets / 16) {\n                throw new NotFoundException();\n            }\n            // Find a valley between them that is low and closer to the white peak.\n            let bestValley = secondPeak - 1;\n            let bestValleyScore = -1;\n            for (let x = secondPeak - 1; x > firstPeak; x--) {\n                const fromFirst = x - firstPeak;\n                const score = fromFirst * fromFirst * (secondPeak - x) * (maxBucketCount - buckets[x]);\n                if (score > bestValleyScore) {\n                    bestValley = x;\n                    bestValleyScore = score;\n                }\n            }\n            return bestValley << GlobalHistogramBinarizer.LUMINANCE_SHIFT;\n        }\n    }\n    GlobalHistogramBinarizer.LUMINANCE_BITS = 5;\n    GlobalHistogramBinarizer.LUMINANCE_SHIFT = 8 - GlobalHistogramBinarizer.LUMINANCE_BITS;\n    GlobalHistogramBinarizer.LUMINANCE_BUCKETS = 1 << GlobalHistogramBinarizer.LUMINANCE_BITS;\n    GlobalHistogramBinarizer.EMPTY = Uint8ClampedArray.from([0]);\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This class implements a local thresholding algorithm, which while slower than the\n     * GlobalHistogramBinarizer, is fairly efficient for what it does. It is designed for\n     * high frequency images of barcodes with black data on white backgrounds. For this application,\n     * it does a much better job than a global blackpoint with severe shadows and gradients.\n     * However it tends to produce artifacts on lower frequency images and is therefore not\n     * a good general purpose binarizer for uses outside ZXing.\n     *\n     * This class extends GlobalHistogramBinarizer, using the older histogram approach for 1D readers,\n     * and the newer local approach for 2D readers. 1D decoding using a per-row histogram is already\n     * inherently local, and only fails for horizontal gradients. We can revisit that problem later,\n     * but for now it was not a win to use local blocks for 1D.\n     *\n     * This Binarizer is the default for the unit tests and the recommended class for library users.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class HybridBinarizer extends GlobalHistogramBinarizer {\n        constructor(source) {\n            super(source);\n            this.matrix = null;\n        }\n        /**\n         * Calculates the final BitMatrix once for all requests. This could be called once from the\n         * constructor instead, but there are some advantages to doing it lazily, such as making\n         * profiling easier, and not doing heavy lifting when callers don't expect it.\n         */\n        /*@Override*/\n        getBlackMatrix() {\n            if (this.matrix !== null) {\n                return this.matrix;\n            }\n            const source = this.getLuminanceSource();\n            const width = source.getWidth();\n            const height = source.getHeight();\n            if (width >= HybridBinarizer.MINIMUM_DIMENSION && height >= HybridBinarizer.MINIMUM_DIMENSION) {\n                const luminances = source.getMatrix();\n                let subWidth = width >> HybridBinarizer.BLOCK_SIZE_POWER;\n                if ((width & HybridBinarizer.BLOCK_SIZE_MASK) !== 0) {\n                    subWidth++;\n                }\n                let subHeight = height >> HybridBinarizer.BLOCK_SIZE_POWER;\n                if ((height & HybridBinarizer.BLOCK_SIZE_MASK) !== 0) {\n                    subHeight++;\n                }\n                const blackPoints = HybridBinarizer.calculateBlackPoints(luminances, subWidth, subHeight, width, height);\n                const newMatrix = new BitMatrix(width, height);\n                HybridBinarizer.calculateThresholdForBlock(luminances, subWidth, subHeight, width, height, blackPoints, newMatrix);\n                this.matrix = newMatrix;\n            }\n            else {\n                // If the image is too small, fall back to the global histogram approach.\n                this.matrix = super.getBlackMatrix();\n            }\n            return this.matrix;\n        }\n        /*@Override*/\n        createBinarizer(source) {\n            return new HybridBinarizer(source);\n        }\n        /**\n         * For each block in the image, calculate the average black point using a 5x5 grid\n         * of the blocks around it. Also handles the corner cases (fractional blocks are computed based\n         * on the last pixels in the row/column which are also used in the previous block).\n         */\n        static calculateThresholdForBlock(luminances, subWidth /*int*/, subHeight /*int*/, width /*int*/, height /*int*/, blackPoints, matrix) {\n            const maxYOffset = height - HybridBinarizer.BLOCK_SIZE;\n            const maxXOffset = width - HybridBinarizer.BLOCK_SIZE;\n            for (let y = 0; y < subHeight; y++) {\n                let yoffset = y << HybridBinarizer.BLOCK_SIZE_POWER;\n                if (yoffset > maxYOffset) {\n                    yoffset = maxYOffset;\n                }\n                const top = HybridBinarizer.cap(y, 2, subHeight - 3);\n                for (let x = 0; x < subWidth; x++) {\n                    let xoffset = x << HybridBinarizer.BLOCK_SIZE_POWER;\n                    if (xoffset > maxXOffset) {\n                        xoffset = maxXOffset;\n                    }\n                    const left = HybridBinarizer.cap(x, 2, subWidth - 3);\n                    let sum = 0;\n                    for (let z = -2; z <= 2; z++) {\n                        const blackRow = blackPoints[top + z];\n                        sum += blackRow[left - 2] + blackRow[left - 1] + blackRow[left] + blackRow[left + 1] + blackRow[left + 2];\n                    }\n                    const average = sum / 25;\n                    HybridBinarizer.thresholdBlock(luminances, xoffset, yoffset, average, width, matrix);\n                }\n            }\n        }\n        static cap(value /*int*/, min /*int*/, max /*int*/) {\n            return value < min ? min : value > max ? max : value;\n        }\n        /**\n         * Applies a single threshold to a block of pixels.\n         */\n        static thresholdBlock(luminances, xoffset /*int*/, yoffset /*int*/, threshold /*int*/, stride /*int*/, matrix) {\n            for (let y = 0, offset = yoffset * stride + xoffset; y < HybridBinarizer.BLOCK_SIZE; y++, offset += stride) {\n                for (let x = 0; x < HybridBinarizer.BLOCK_SIZE; x++) {\n                    // Comparison needs to be <= so that black == 0 pixels are black even if the threshold is 0.\n                    if ((luminances[offset + x] & 0xFF) <= threshold) {\n                        matrix.set(xoffset + x, yoffset + y);\n                    }\n                }\n            }\n        }\n        /**\n         * Calculates a single black point for each block of pixels and saves it away.\n         * See the following thread for a discussion of this algorithm:\n         *  http://groups.google.com/group/zxing/browse_thread/thread/d06efa2c35a7ddc0\n         */\n        static calculateBlackPoints(luminances, subWidth /*int*/, subHeight /*int*/, width /*int*/, height /*int*/) {\n            const maxYOffset = height - HybridBinarizer.BLOCK_SIZE;\n            const maxXOffset = width - HybridBinarizer.BLOCK_SIZE;\n            // tslint:disable-next-line:whitespace\n            const blackPoints = new Array(subHeight); // subWidth\n            for (let y = 0; y < subHeight; y++) {\n                blackPoints[y] = new Int32Array(subWidth);\n                let yoffset = y << HybridBinarizer.BLOCK_SIZE_POWER;\n                if (yoffset > maxYOffset) {\n                    yoffset = maxYOffset;\n                }\n                for (let x = 0; x < subWidth; x++) {\n                    let xoffset = x << HybridBinarizer.BLOCK_SIZE_POWER;\n                    if (xoffset > maxXOffset) {\n                        xoffset = maxXOffset;\n                    }\n                    let sum = 0;\n                    let min = 0xFF;\n                    let max = 0;\n                    for (let yy = 0, offset = yoffset * width + xoffset; yy < HybridBinarizer.BLOCK_SIZE; yy++, offset += width) {\n                        for (let xx = 0; xx < HybridBinarizer.BLOCK_SIZE; xx++) {\n                            const pixel = luminances[offset + xx] & 0xFF;\n                            sum += pixel;\n                            // still looking for good contrast\n                            if (pixel < min) {\n                                min = pixel;\n                            }\n                            if (pixel > max) {\n                                max = pixel;\n                            }\n                        }\n                        // short-circuit min/max tests once dynamic range is met\n                        if (max - min > HybridBinarizer.MIN_DYNAMIC_RANGE) {\n                            // finish the rest of the rows quickly\n                            for (yy++, offset += width; yy < HybridBinarizer.BLOCK_SIZE; yy++, offset += width) {\n                                for (let xx = 0; xx < HybridBinarizer.BLOCK_SIZE; xx++) {\n                                    sum += luminances[offset + xx] & 0xFF;\n                                }\n                            }\n                        }\n                    }\n                    // The default estimate is the average of the values in the block.\n                    let average = sum >> (HybridBinarizer.BLOCK_SIZE_POWER * 2);\n                    if (max - min <= HybridBinarizer.MIN_DYNAMIC_RANGE) {\n                        // If variation within the block is low, assume this is a block with only light or only\n                        // dark pixels. In that case we do not want to use the average, as it would divide this\n                        // low contrast area into black and white pixels, essentially creating data out of noise.\n                        //\n                        // The default assumption is that the block is light/background. Since no estimate for\n                        // the level of dark pixels exists locally, use half the min for the block.\n                        average = min / 2;\n                        if (y > 0 && x > 0) {\n                            // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n                            // the pixels in this block to the previously calculated black points. This is based on\n                            // the fact that dark barcode symbology is always surrounded by some amount of light\n                            // background for which reasonable black point estimates were made. The bp estimated at\n                            // the boundaries is used for the interior.\n                            // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n                            const averageNeighborBlackPoint = (blackPoints[y - 1][x] + (2 * blackPoints[y][x - 1]) + blackPoints[y - 1][x - 1]) / 4;\n                            if (min < averageNeighborBlackPoint) {\n                                average = averageNeighborBlackPoint;\n                            }\n                        }\n                    }\n                    blackPoints[y][x] = average;\n                }\n            }\n            return blackPoints;\n        }\n    }\n    // This class uses 5x5 blocks to compute local luminance, where each block is 8x8 pixels.\n    // So this is the smallest dimension in each axis we can accept.\n    HybridBinarizer.BLOCK_SIZE_POWER = 3;\n    HybridBinarizer.BLOCK_SIZE = 1 << HybridBinarizer.BLOCK_SIZE_POWER; // ...0100...00\n    HybridBinarizer.BLOCK_SIZE_MASK = HybridBinarizer.BLOCK_SIZE - 1; // ...0011...11\n    HybridBinarizer.MINIMUM_DIMENSION = HybridBinarizer.BLOCK_SIZE * 5;\n    HybridBinarizer.MIN_DYNAMIC_RANGE = 24;\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * The purpose of this class hierarchy is to abstract different bitmap implementations across\n     * platforms into a standard interface for requesting greyscale luminance values. The interface\n     * only provides immutable methods; therefore crop and rotation create copies. This is to ensure\n     * that one Reader does not modify the original luminance source and leave it in an unknown state\n     * for other Readers in the chain.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class LuminanceSource {\n        constructor(width /*int*/, height /*int*/) {\n            this.width = width;\n            this.height = height;\n        }\n        /**\n         * @return The width of the bitmap.\n         */\n        getWidth() {\n            return this.width;\n        }\n        /**\n         * @return The height of the bitmap.\n         */\n        getHeight() {\n            return this.height;\n        }\n        /**\n         * @return Whether this subclass supports cropping.\n         */\n        isCropSupported() {\n            return false;\n        }\n        /**\n         * Returns a new object with cropped image data. Implementations may keep a reference to the\n         * original data rather than a copy. Only callable if isCropSupported() is true.\n         *\n         * @param left The left coordinate, which must be in [0,getWidth())\n         * @param top The top coordinate, which must be in [0,getHeight())\n         * @param width The width of the rectangle to crop.\n         * @param height The height of the rectangle to crop.\n         * @return A cropped version of this object.\n         */\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            throw new UnsupportedOperationException('This luminance source does not support cropping.');\n        }\n        /**\n         * @return Whether this subclass supports counter-clockwise rotation.\n         */\n        isRotateSupported() {\n            return false;\n        }\n        /**\n         * Returns a new object with rotated image data by 90 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise() {\n            throw new UnsupportedOperationException('This luminance source does not support rotation by 90 degrees.');\n        }\n        /**\n         * Returns a new object with rotated image data by 45 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise45() {\n            throw new UnsupportedOperationException('This luminance source does not support rotation by 45 degrees.');\n        }\n        /*@Override*/\n        toString() {\n            const row = new Uint8ClampedArray(this.width);\n            let result = new StringBuilder();\n            for (let y = 0; y < this.height; y++) {\n                const sourceRow = this.getRow(y, row);\n                for (let x = 0; x < this.width; x++) {\n                    const luminance = sourceRow[x] & 0xFF;\n                    let c;\n                    if (luminance < 0x40) {\n                        c = '#';\n                    }\n                    else if (luminance < 0x80) {\n                        c = '+';\n                    }\n                    else if (luminance < 0xC0) {\n                        c = '.';\n                    }\n                    else {\n                        c = ' ';\n                    }\n                    result.append(c);\n                }\n                result.append('\\n');\n            }\n            return result.toString();\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * A wrapper implementation of {@link LuminanceSource} which inverts the luminances it returns -- black becomes\n     * white and vice versa, and each value becomes (255-value).\n     *\n     * @author Sean Owen\n     */\n    class InvertedLuminanceSource extends LuminanceSource {\n        constructor(delegate) {\n            super(delegate.getWidth(), delegate.getHeight());\n            this.delegate = delegate;\n        }\n        /*@Override*/\n        getRow(y /*int*/, row) {\n            const sourceRow = this.delegate.getRow(y, row);\n            const width = this.getWidth();\n            for (let i = 0; i < width; i++) {\n                sourceRow[i] = /*(byte)*/ (255 - (sourceRow[i] & 0xFF));\n            }\n            return sourceRow;\n        }\n        /*@Override*/\n        getMatrix() {\n            const matrix = this.delegate.getMatrix();\n            const length = this.getWidth() * this.getHeight();\n            const invertedMatrix = new Uint8ClampedArray(length);\n            for (let i = 0; i < length; i++) {\n                invertedMatrix[i] = /*(byte)*/ (255 - (matrix[i] & 0xFF));\n            }\n            return invertedMatrix;\n        }\n        /*@Override*/\n        isCropSupported() {\n            return this.delegate.isCropSupported();\n        }\n        /*@Override*/\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            return new InvertedLuminanceSource(this.delegate.crop(left, top, width, height));\n        }\n        /*@Override*/\n        isRotateSupported() {\n            return this.delegate.isRotateSupported();\n        }\n        /**\n         * @return original delegate {@link LuminanceSource} since invert undoes itself\n         */\n        /*@Override*/\n        invert() {\n            return this.delegate;\n        }\n        /*@Override*/\n        rotateCounterClockwise() {\n            return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise());\n        }\n        /*@Override*/\n        rotateCounterClockwise45() {\n            return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise45());\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     */\n    class HTMLCanvasElementLuminanceSource extends LuminanceSource {\n        constructor(canvas) {\n            super(canvas.width, canvas.height);\n            this.canvas = canvas;\n            this.tempCanvasElement = null;\n            this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);\n        }\n        static makeBufferFromCanvasImageData(canvas) {\n            const imageData = canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\n            return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data, canvas.width, canvas.height);\n        }\n        static toGrayscaleBuffer(imageBuffer, width, height) {\n            const grayscaleBuffer = new Uint8ClampedArray(width * height);\n            for (let i = 0, j = 0, length = imageBuffer.length; i < length; i += 4, j++) {\n                let gray;\n                const alpha = imageBuffer[i + 3];\n                // The color of fully-transparent pixels is irrelevant. They are often, technically, fully-transparent\n                // black (0 alpha, and then 0 RGB). They are often used, of course as the \"white\" area in a\n                // barcode image. Force any such pixel to be white:\n                if (alpha === 0) {\n                    gray = 0xFF;\n                }\n                else {\n                    const pixelR = imageBuffer[i];\n                    const pixelG = imageBuffer[i + 1];\n                    const pixelB = imageBuffer[i + 2];\n                    // .299R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC),\n                    // (306*R) >> 10 is approximately equal to R*0.299, and so on.\n                    // 0x200 >> 10 is 0.5, it implements rounding.\n                    gray = (306 * pixelR +\n                        601 * pixelG +\n                        117 * pixelB +\n                        0x200) >> 10;\n                }\n                grayscaleBuffer[j] = gray;\n            }\n            return grayscaleBuffer;\n        }\n        getRow(y /*int*/, row) {\n            if (y < 0 || y >= this.getHeight()) {\n                throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n            }\n            const width = this.getWidth();\n            const start = y * width;\n            if (row === null) {\n                row = this.buffer.slice(start, start + width);\n            }\n            else {\n                if (row.length < width) {\n                    row = new Uint8ClampedArray(width);\n                }\n                // The underlying raster of image consists of bytes with the luminance values\n                // TODO: can avoid set/slice?\n                row.set(this.buffer.slice(start, start + width));\n            }\n            return row;\n        }\n        getMatrix() {\n            return this.buffer;\n        }\n        isCropSupported() {\n            return true;\n        }\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            super.crop(left, top, width, height);\n            return this;\n        }\n        /**\n         * This is always true, since the image is a gray-scale image.\n         *\n         * @return true\n         */\n        isRotateSupported() {\n            return true;\n        }\n        rotateCounterClockwise() {\n            this.rotate(-90);\n            return this;\n        }\n        rotateCounterClockwise45() {\n            this.rotate(-45);\n            return this;\n        }\n        getTempCanvasElement() {\n            if (null === this.tempCanvasElement) {\n                const tempCanvasElement = this.canvas.ownerDocument.createElement('canvas');\n                tempCanvasElement.width = this.canvas.width;\n                tempCanvasElement.height = this.canvas.height;\n                this.tempCanvasElement = tempCanvasElement;\n            }\n            return this.tempCanvasElement;\n        }\n        rotate(angle) {\n            const tempCanvasElement = this.getTempCanvasElement();\n            const tempContext = tempCanvasElement.getContext('2d');\n            const angleRadians = angle * HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS;\n            // Calculate and set new dimensions for temp canvas\n            const width = this.canvas.width;\n            const height = this.canvas.height;\n            const newWidth = Math.ceil(Math.abs(Math.cos(angleRadians)) * width + Math.abs(Math.sin(angleRadians)) * height);\n            const newHeight = Math.ceil(Math.abs(Math.sin(angleRadians)) * width + Math.abs(Math.cos(angleRadians)) * height);\n            tempCanvasElement.width = newWidth;\n            tempCanvasElement.height = newHeight;\n            // Draw at center of temp canvas to prevent clipping of image data\n            tempContext.translate(newWidth / 2, newHeight / 2);\n            tempContext.rotate(angleRadians);\n            tempContext.drawImage(this.canvas, width / -2, height / -2);\n            this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);\n            return this;\n        }\n        invert() {\n            return new InvertedLuminanceSource(this);\n        }\n    }\n    HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS = Math.PI / 180;\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * Video input device metadata containing the id and label of the device if available.\n     */\n    class VideoInputDevice {\n        /**\n         * Creates an instance of VideoInputDevice.\n         *\n         * @param {string} deviceId the video input device id\n         * @param {string} label the label of the device if available\n         */\n        constructor(deviceId, label, groupId) {\n            this.deviceId = deviceId;\n            this.label = label;\n            /** @inheritdoc */\n            this.kind = 'videoinput';\n            this.groupId = groupId || undefined;\n        }\n        /** @inheritdoc */\n        toJSON() {\n            return {\n                kind: this.kind,\n                groupId: this.groupId,\n                deviceId: this.deviceId,\n                label: this.label,\n            };\n        }\n    }\n\n    var __awaiter = ((globalThis || global || self || window || undefined) && (globalThis || global || self || window || undefined).__awaiter) || function (thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * Base class for browser code reader.\n     */\n    class BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserCodeReader.\n         * @param {Reader} reader The reader instance to decode the barcode\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent successful decode tries\n         *\n         * @memberOf BrowserCodeReader\n         */\n        constructor(reader, timeBetweenScansMillis = 500, _hints) {\n            this.reader = reader;\n            this.timeBetweenScansMillis = timeBetweenScansMillis;\n            this._hints = _hints;\n            /**\n             * This will break the loop.\n             */\n            this._stopContinuousDecode = false;\n            /**\n             * This will break the loop.\n             */\n            this._stopAsyncDecode = false;\n            /**\n             * Delay time between decode attempts made by the scanner.\n             */\n            this._timeBetweenDecodingAttempts = 0;\n        }\n        /**\n         * If navigator is present.\n         */\n        get hasNavigator() {\n            return typeof navigator !== 'undefined';\n        }\n        /**\n         * If mediaDevices under navigator is supported.\n         */\n        get isMediaDevicesSuported() {\n            return this.hasNavigator && !!navigator.mediaDevices;\n        }\n        /**\n         * If enumerateDevices under navigator is supported.\n         */\n        get canEnumerateDevices() {\n            return !!(this.isMediaDevicesSuported && navigator.mediaDevices.enumerateDevices);\n        }\n        /** Time between two decoding tries in milli seconds. */\n        get timeBetweenDecodingAttempts() {\n            return this._timeBetweenDecodingAttempts;\n        }\n        /**\n         * Change the time span the decoder waits between two decoding tries.\n         *\n         * @param {number} millis Time between two decoding tries in milli seconds.\n         */\n        set timeBetweenDecodingAttempts(millis) {\n            this._timeBetweenDecodingAttempts = millis < 0 ? 0 : millis;\n        }\n        /**\n         * Sets the hints.\n         */\n        set hints(hints) {\n            this._hints = hints || null;\n        }\n        /**\n         * Sets the hints.\n         */\n        get hints() {\n            return this._hints;\n        }\n        /**\n         * Lists all the available video input devices.\n         */\n        listVideoInputDevices() {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (!this.hasNavigator) {\n                    throw new Error('Can\\'t enumerate devices, navigator is not present.');\n                }\n                if (!this.canEnumerateDevices) {\n                    throw new Error('Can\\'t enumerate devices, method not supported.');\n                }\n                const devices = yield navigator.mediaDevices.enumerateDevices();\n                const videoDevices = [];\n                for (const device of devices) {\n                    const kind = device.kind === 'video' ? 'videoinput' : device.kind;\n                    if (kind !== 'videoinput') {\n                        continue;\n                    }\n                    const deviceId = device.deviceId || device.id;\n                    const label = device.label || `Video device ${videoDevices.length + 1}`;\n                    const groupId = device.groupId;\n                    const videoDevice = { deviceId, label, kind, groupId };\n                    videoDevices.push(videoDevice);\n                }\n                return videoDevices;\n            });\n        }\n        /**\n         * Obtain the list of available devices with type 'videoinput'.\n         *\n         * @returns {Promise<VideoInputDevice[]>} an array of available video input devices\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @deprecated Use `listVideoInputDevices` instead.\n         */\n        getVideoInputDevices() {\n            return __awaiter(this, void 0, void 0, function* () {\n                const devices = yield this.listVideoInputDevices();\n                return devices.map(d => new VideoInputDevice(d.deviceId, d.label));\n            });\n        }\n        /**\n         * Let's you find a device using it's Id.\n         */\n        findDeviceById(deviceId) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const devices = yield this.listVideoInputDevices();\n                if (!devices) {\n                    return null;\n                }\n                return devices.find(x => x.deviceId === deviceId);\n            });\n        }\n        /**\n         * Decodes the barcode from the device specified by deviceId while showing the video in the specified video element.\n         *\n         * @param deviceId the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param video the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @deprecated Use `decodeOnceFromVideoDevice` instead.\n         */\n        decodeFromInputVideoDevice(deviceId, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                return yield this.decodeOnceFromVideoDevice(deviceId, videoSource);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from the device specified by deviceId while showing the video in the specified video element.\n         *\n         * @param deviceId the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param video the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeOnceFromVideoDevice(deviceId, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.reset();\n                let videoConstraints;\n                if (!deviceId) {\n                    videoConstraints = { facingMode: 'environment' };\n                }\n                else {\n                    videoConstraints = { deviceId: { exact: deviceId } };\n                }\n                const constraints = { video: videoConstraints };\n                return yield this.decodeOnceFromConstraints(constraints, videoSource);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param constraints the media stream constraints to get s valid media stream to decode from\n         * @param video the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeOnceFromConstraints(constraints, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n                return yield this.decodeOnceFromStream(stream, videoSource);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n         * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeOnceFromStream(stream, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.reset();\n                const video = yield this.attachStreamToVideo(stream, videoSource);\n                const result = yield this.decodeOnce(video);\n                return result;\n            });\n        }\n        /**\n         * Continuously decodes the barcode from the device specified by device while showing the video in the specified video element.\n         *\n         * @param {string|null} [deviceId] the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param {string|HTMLVideoElement|null} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<void>}\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @deprecated Use `decodeFromVideoDevice` instead.\n         */\n        decodeFromInputVideoDeviceContinuously(deviceId, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                return yield this.decodeFromVideoDevice(deviceId, videoSource, callbackFn);\n            });\n        }\n        /**\n         * Continuously tries to decode the barcode from the device specified by device while showing the video in the specified video element.\n         *\n         * @param {string|null} [deviceId] the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param {string|HTMLVideoElement|null} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<void>}\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromVideoDevice(deviceId, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let videoConstraints;\n                if (!deviceId) {\n                    videoConstraints = { facingMode: 'environment' };\n                }\n                else {\n                    videoConstraints = { deviceId: { exact: deviceId } };\n                }\n                const constraints = { video: videoConstraints };\n                return yield this.decodeFromConstraints(constraints, videoSource, callbackFn);\n            });\n        }\n        /**\n         * Continuously tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n         * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromConstraints(constraints, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n                return yield this.decodeFromStream(stream, videoSource, callbackFn);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n         * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromStream(stream, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.reset();\n                const video = yield this.attachStreamToVideo(stream, videoSource);\n                return yield this.decodeContinuously(video, callbackFn);\n            });\n        }\n        /**\n         * Breaks the decoding loop.\n         */\n        stopAsyncDecode() {\n            this._stopAsyncDecode = true;\n        }\n        /**\n         * Breaks the decoding loop.\n         */\n        stopContinuousDecode() {\n            this._stopContinuousDecode = true;\n        }\n        /**\n         * Sets the new stream and request a new decoding-with-delay.\n         *\n         * @param stream The stream to be shown in the video element.\n         * @param decodeFn A callback for the decode method.\n         */\n        attachStreamToVideo(stream, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const videoElement = this.prepareVideoElement(videoSource);\n                this.addVideoSource(videoElement, stream);\n                this.videoElement = videoElement;\n                this.stream = stream;\n                yield this.playVideoOnLoadAsync(videoElement);\n                return videoElement;\n            });\n        }\n        /**\n         *\n         * @param videoElement\n         */\n        playVideoOnLoadAsync(videoElement) {\n            return new Promise((resolve, reject) => this.playVideoOnLoad(videoElement, () => resolve()));\n        }\n        /**\n         * Binds listeners and callbacks to the videoElement.\n         *\n         * @param element\n         * @param callbackFn\n         */\n        playVideoOnLoad(element, callbackFn) {\n            this.videoEndedListener = () => this.stopStreams();\n            this.videoCanPlayListener = () => this.tryPlayVideo(element);\n            element.addEventListener('ended', this.videoEndedListener);\n            element.addEventListener('canplay', this.videoCanPlayListener);\n            element.addEventListener('playing', callbackFn);\n            // if canplay was already fired, we won't know when to play, so just give it a try\n            this.tryPlayVideo(element);\n        }\n        /**\n         * Checks if the given video element is currently playing.\n         */\n        isVideoPlaying(video) {\n            return video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2;\n        }\n        /**\n         * Just tries to play the video and logs any errors.\n         * The play call is only made is the video is not already playing.\n         */\n        tryPlayVideo(videoElement) {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (this.isVideoPlaying(videoElement)) {\n                    console.warn('Trying to play video that is already playing.');\n                    return;\n                }\n                try {\n                    yield videoElement.play();\n                }\n                catch (_a) {\n                    console.warn('It was not possible to play the video.');\n                }\n            });\n        }\n        /**\n         * Searches and validates a media element.\n         */\n        getMediaElement(mediaElementId, type) {\n            const mediaElement = document.getElementById(mediaElementId);\n            if (!mediaElement) {\n                throw new ArgumentException(`element with id '${mediaElementId}' not found`);\n            }\n            if (mediaElement.nodeName.toLowerCase() !== type.toLowerCase()) {\n                throw new ArgumentException(`element with id '${mediaElementId}' must be an ${type} element`);\n            }\n            return mediaElement;\n        }\n        /**\n         * Decodes the barcode from an image.\n         *\n         * @param {(string|HTMLImageElement)} [source] The image element that can be either an element id or the element itself. Can be undefined in which case the decoding will be done from the imageUrl parameter.\n         * @param {string} [url]\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromImage(source, url) {\n            if (!source && !url) {\n                throw new ArgumentException('either imageElement with a src set or an url must be provided');\n            }\n            if (url && !source) {\n                return this.decodeFromImageUrl(url);\n            }\n            return this.decodeFromImageElement(source);\n        }\n        /**\n         * Decodes the barcode from a video.\n         *\n         * @param {(string|HTMLImageElement)} [source] The image element that can be either an element id or the element itself. Can be undefined in which case the decoding will be done from the imageUrl parameter.\n         * @param {string} [url]\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromVideo(source, url) {\n            if (!source && !url) {\n                throw new ArgumentException('Either an element with a src set or an URL must be provided');\n            }\n            if (url && !source) {\n                return this.decodeFromVideoUrl(url);\n            }\n            return this.decodeFromVideoElement(source);\n        }\n        /**\n         * Decodes continuously the barcode from a video.\n         *\n         * @param {(string|HTMLImageElement)} [source] The image element that can be either an element id or the element itself. Can be undefined in which case the decoding will be done from the imageUrl parameter.\n         * @param {string} [url]\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @experimental\n         */\n        decodeFromVideoContinuously(source, url, callbackFn) {\n            if (undefined === source && undefined === url) {\n                throw new ArgumentException('Either an element with a src set or an URL must be provided');\n            }\n            if (url && !source) {\n                return this.decodeFromVideoUrlContinuously(url, callbackFn);\n            }\n            return this.decodeFromVideoElementContinuously(source, callbackFn);\n        }\n        /**\n         * Decodes something from an image HTML element.\n         */\n        decodeFromImageElement(source) {\n            if (!source) {\n                throw new ArgumentException('An image element must be provided.');\n            }\n            this.reset();\n            const element = this.prepareImageElement(source);\n            this.imageElement = element;\n            let task;\n            if (this.isImageLoaded(element)) {\n                task = this.decodeOnce(element, false, true);\n            }\n            else {\n                task = this._decodeOnLoadImage(element);\n            }\n            return task;\n        }\n        /**\n         * Decodes something from an image HTML element.\n         */\n        decodeFromVideoElement(source) {\n            const element = this._decodeFromVideoElementSetup(source);\n            return this._decodeOnLoadVideo(element);\n        }\n        /**\n         * Decodes something from an image HTML element.\n         */\n        decodeFromVideoElementContinuously(source, callbackFn) {\n            const element = this._decodeFromVideoElementSetup(source);\n            return this._decodeOnLoadVideoContinuously(element, callbackFn);\n        }\n        /**\n         * Sets up the video source so it can be decoded when loaded.\n         *\n         * @param source The video source element.\n         */\n        _decodeFromVideoElementSetup(source) {\n            if (!source) {\n                throw new ArgumentException('A video element must be provided.');\n            }\n            this.reset();\n            const element = this.prepareVideoElement(source);\n            // defines the video element before starts decoding\n            this.videoElement = element;\n            return element;\n        }\n        /**\n         * Decodes an image from a URL.\n         */\n        decodeFromImageUrl(url) {\n            if (!url) {\n                throw new ArgumentException('An URL must be provided.');\n            }\n            this.reset();\n            const element = this.prepareImageElement();\n            this.imageElement = element;\n            const decodeTask = this._decodeOnLoadImage(element);\n            element.src = url;\n            return decodeTask;\n        }\n        /**\n         * Decodes an image from a URL.\n         */\n        decodeFromVideoUrl(url) {\n            if (!url) {\n                throw new ArgumentException('An URL must be provided.');\n            }\n            this.reset();\n            // creates a new element\n            const element = this.prepareVideoElement();\n            const decodeTask = this.decodeFromVideoElement(element);\n            element.src = url;\n            return decodeTask;\n        }\n        /**\n         * Decodes an image from a URL.\n         *\n         * @experimental\n         */\n        decodeFromVideoUrlContinuously(url, callbackFn) {\n            if (!url) {\n                throw new ArgumentException('An URL must be provided.');\n            }\n            this.reset();\n            // creates a new element\n            const element = this.prepareVideoElement();\n            const decodeTask = this.decodeFromVideoElementContinuously(element, callbackFn);\n            element.src = url;\n            return decodeTask;\n        }\n        _decodeOnLoadImage(element) {\n            return new Promise((resolve, reject) => {\n                this.imageLoadedListener = () => this.decodeOnce(element, false, true).then(resolve, reject);\n                element.addEventListener('load', this.imageLoadedListener);\n            });\n        }\n        _decodeOnLoadVideo(videoElement) {\n            return __awaiter(this, void 0, void 0, function* () {\n                // plays the video\n                yield this.playVideoOnLoadAsync(videoElement);\n                // starts decoding after played the video\n                return yield this.decodeOnce(videoElement);\n            });\n        }\n        _decodeOnLoadVideoContinuously(videoElement, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                // plays the video\n                yield this.playVideoOnLoadAsync(videoElement);\n                // starts decoding after played the video\n                this.decodeContinuously(videoElement, callbackFn);\n            });\n        }\n        isImageLoaded(img) {\n            // During the onload event, IE correctly identifies any images that\n            // weren’t downloaded as not complete. Others should too. Gecko-based\n            // browsers act like NS4 in that they report this incorrectly.\n            if (!img.complete) {\n                return false;\n            }\n            // However, they do have two very useful properties: naturalWidth and\n            // naturalHeight. These give the true size of the image. If it failed\n            // to load, either of these should be zero.\n            if (img.naturalWidth === 0) {\n                return false;\n            }\n            // No other way of checking: assume it’s ok.\n            return true;\n        }\n        prepareImageElement(imageSource) {\n            let imageElement;\n            if (typeof imageSource === 'undefined') {\n                imageElement = document.createElement('img');\n                imageElement.width = 200;\n                imageElement.height = 200;\n            }\n            if (typeof imageSource === 'string') {\n                imageElement = this.getMediaElement(imageSource, 'img');\n            }\n            if (imageSource instanceof HTMLImageElement) {\n                imageElement = imageSource;\n            }\n            return imageElement;\n        }\n        /**\n         * Sets a HTMLVideoElement for scanning or creates a new one.\n         *\n         * @param videoSource The HTMLVideoElement to be set.\n         */\n        prepareVideoElement(videoSource) {\n            let videoElement;\n            if (!videoSource && typeof document !== 'undefined') {\n                videoElement = document.createElement('video');\n                videoElement.width = 200;\n                videoElement.height = 200;\n            }\n            if (typeof videoSource === 'string') {\n                videoElement = this.getMediaElement(videoSource, 'video');\n            }\n            if (videoSource instanceof HTMLVideoElement) {\n                videoElement = videoSource;\n            }\n            // Needed for iOS 11\n            videoElement.setAttribute('autoplay', 'true');\n            videoElement.setAttribute('muted', 'true');\n            videoElement.setAttribute('playsinline', 'true');\n            return videoElement;\n        }\n        /**\n         * Tries to decode from the video input until it finds some value.\n         */\n        decodeOnce(element, retryIfNotFound = true, retryIfChecksumOrFormatError = true) {\n            this._stopAsyncDecode = false;\n            const loop = (resolve, reject) => {\n                if (this._stopAsyncDecode) {\n                    reject(new NotFoundException('Video stream has ended before any code could be detected.'));\n                    this._stopAsyncDecode = undefined;\n                    return;\n                }\n                try {\n                    const result = this.decode(element);\n                    resolve(result);\n                }\n                catch (e) {\n                    const ifNotFound = retryIfNotFound && e instanceof NotFoundException;\n                    const isChecksumOrFormatError = e instanceof ChecksumException || e instanceof FormatException;\n                    const ifChecksumOrFormat = isChecksumOrFormatError && retryIfChecksumOrFormatError;\n                    if (ifNotFound || ifChecksumOrFormat) {\n                        // trying again\n                        return setTimeout(loop, this._timeBetweenDecodingAttempts, resolve, reject);\n                    }\n                    reject(e);\n                }\n            };\n            return new Promise((resolve, reject) => loop(resolve, reject));\n        }\n        /**\n         * Continuously decodes from video input.\n         */\n        decodeContinuously(element, callbackFn) {\n            this._stopContinuousDecode = false;\n            const loop = () => {\n                if (this._stopContinuousDecode) {\n                    this._stopContinuousDecode = undefined;\n                    return;\n                }\n                try {\n                    const result = this.decode(element);\n                    callbackFn(result, null);\n                    setTimeout(loop, this.timeBetweenScansMillis);\n                }\n                catch (e) {\n                    callbackFn(null, e);\n                    const isChecksumOrFormatError = e instanceof ChecksumException || e instanceof FormatException;\n                    const isNotFound = e instanceof NotFoundException;\n                    if (isChecksumOrFormatError || isNotFound) {\n                        // trying again\n                        setTimeout(loop, this._timeBetweenDecodingAttempts);\n                    }\n                }\n            };\n            loop();\n        }\n        /**\n         * Gets the BinaryBitmap for ya! (and decodes it)\n         */\n        decode(element) {\n            // get binary bitmap for decode function\n            const binaryBitmap = this.createBinaryBitmap(element);\n            return this.decodeBitmap(binaryBitmap);\n        }\n        /**\n         * Returns true if media element is indeed a {@link HtmlVideoElement}.\n         */\n        _isHTMLVideoElement(mediaElement) {\n            const potentialVideo = mediaElement;\n            return potentialVideo.videoWidth !== 0;\n        }\n        /**\n         * Overwriting this allows you to manipulate the next frame in anyway\n         * you want before decode.\n         */\n        drawFrameOnCanvas(\n            srcElement, dimensions, canvasElementContext) {\n            if (!dimensions) {\n                dimensions = {\n                    sx: 0,\n                    sy: 0,\n                    sWidth: srcElement.videoWidth,\n                    sHeight: srcElement.videoHeight,\n                    dx: 0,\n                    dy: 0,\n                    dWidth: srcElement.videoWidth,\n                    dHeight: srcElement.videoHeight};\n            }\n            if (!canvasElementContext) {\n                canvasElementContext = this.captureCanvasContext;\n            }\n            canvasElementContext.drawImage(\n                srcElement,\n                dimensions.sx,\n                dimensions.sy,\n                dimensions.sWidth,\n                dimensions.sHeight,\n                dimensions.dx,\n                dimensions.dy,\n                dimensions.dWidth,\n                dimensions.dHeight);\n        }\n        /**\n         * Ovewriting this allows you to manipulate the snapshot image in anyway\n         *  you want before decode.\n         */\n        drawImageOnCanvas(\n            srcElement,\n            dimensions,\n            canvasElementContext = this.captureCanvasContext) {\n            if (!dimensions) {\n                dimensions = {\n                    sx: 0,\n                    sy: 0,\n                    sWidth: srcElement.naturalWidth,\n                    sHeight: srcElement.naturalHeight,\n                    dx: 0,\n                    dy: 0,\n                    dWidth: srcElement.naturalWidth,\n                    dHeight: srcElement.naturalHeight\n                };\n            }\n            if (!canvasElementContext) {\n                canvasElementContext = this.captureCanvasContext;\n            }\n            canvasElementContext.drawImage(\n                srcElement,\n                dimensions.sx,\n                dimensions.sy,\n                dimensions.sWidth,\n                dimensions.sHeight,\n                dimensions.dx,\n                dimensions.dy,\n                dimensions.dWidth,\n                dimensions.dHeight);\n        }\n        /**\n         * Creates a binaryBitmap based in some image source.\n         *\n         * @param mediaElement HTML element containing drawable image source.\n         */\n        createBinaryBitmap(mediaElement) {\n            const ctx = this.getCaptureCanvasContext(mediaElement);\n            if (this._isHTMLVideoElement(mediaElement)) {\n                this.drawFrameOnCanvas(mediaElement);\n            } else {\n                this.drawImageOnCanvas(mediaElement);\n            }\n            const canvas = this.getCaptureCanvas(mediaElement);\n            const luminanceSource = new HTMLCanvasElementLuminanceSource(canvas);\n            const hybridBinarizer = new HybridBinarizer(luminanceSource);\n\n            return new BinaryBitmap(hybridBinarizer);\n        }\n\n        getCaptureCanvasContext(mediaElement) {\n            if (!this.captureCanvasContext) {\n                const elem = this.getCaptureCanvas(mediaElement);\n                const ctx = elem.getContext('2d');\n                this.captureCanvasContext = ctx;\n            }\n            return this.captureCanvasContext;\n        }\n        getCaptureCanvas(mediaElement) {\n            if (!this.captureCanvas) {\n                const elem = this.createCaptureCanvas(mediaElement);\n                this.captureCanvas = elem;\n            }\n            return this.captureCanvas;\n        }\n        /**\n         * Call the encapsulated readers decode\n         */\n        decodeBitmap(binaryBitmap) {\n            return this.reader.decode(binaryBitmap, this._hints);\n        }\n        /**\n         * 🖌 Prepares the canvas for capture and scan frames.\n         */\n        createCaptureCanvas(mediaElement) {\n            if (typeof document === 'undefined') {\n                this._destroyCaptureCanvas();\n                return null;\n            }\n            const canvasElement = document.createElement('canvas');\n            let width;\n            let height;\n            if (typeof mediaElement !== 'undefined') {\n                if (mediaElement instanceof HTMLVideoElement) {\n                    width = mediaElement.videoWidth;\n                    height = mediaElement.videoHeight;\n                }\n                else if (mediaElement instanceof HTMLImageElement) {\n                    width = mediaElement.naturalWidth || mediaElement.width;\n                    height = mediaElement.naturalHeight || mediaElement.height;\n                }\n            }\n            canvasElement.style.width = width + 'px';\n            canvasElement.style.height = height + 'px';\n            canvasElement.width = width;\n            canvasElement.height = height;\n            return canvasElement;\n        }\n        /**\n         * Stops the continuous scan and cleans the stream.\n         */\n        stopStreams() {\n            if (this.stream) {\n                this.stream.getVideoTracks().forEach(t => t.stop());\n                this.stream = undefined;\n            }\n            if (this._stopAsyncDecode === false) {\n                this.stopAsyncDecode();\n            }\n            if (this._stopContinuousDecode === false) {\n                this.stopContinuousDecode();\n            }\n        }\n        /**\n         * Resets the code reader to the initial state. Cancels any ongoing barcode scanning from video or camera.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        reset() {\n            // stops the camera, preview and scan 🔴\n            this.stopStreams();\n            // clean and forget about HTML elements\n            this._destroyVideoElement();\n            this._destroyImageElement();\n            this._destroyCaptureCanvas();\n        }\n        _destroyVideoElement() {\n            if (!this.videoElement) {\n                return;\n            }\n            // first gives freedon to the element 🕊\n            if (typeof this.videoEndedListener !== 'undefined') {\n                this.videoElement.removeEventListener('ended', this.videoEndedListener);\n            }\n            if (typeof this.videoPlayingEventListener !== 'undefined') {\n                this.videoElement.removeEventListener('playing', this.videoPlayingEventListener);\n            }\n            if (typeof this.videoCanPlayListener !== 'undefined') {\n                this.videoElement.removeEventListener('loadedmetadata', this.videoCanPlayListener);\n            }\n            // then forgets about that element 😢\n            this.cleanVideoSource(this.videoElement);\n            this.videoElement = undefined;\n        }\n        _destroyImageElement() {\n            if (!this.imageElement) {\n                return;\n            }\n            // first gives freedon to the element 🕊\n            if (undefined !== this.imageLoadedListener) {\n                this.imageElement.removeEventListener('load', this.imageLoadedListener);\n            }\n            // then forget about that element 😢\n            this.imageElement.src = undefined;\n            this.imageElement.removeAttribute('src');\n            this.imageElement = undefined;\n        }\n        /**\n         * Cleans canvas references 🖌\n         */\n        _destroyCaptureCanvas() {\n            // then forget about that element 😢\n            this.captureCanvasContext = undefined;\n            this.captureCanvas = undefined;\n        }\n        /**\n         * Defines what the videoElement src will be.\n         *\n         * @param videoElement\n         * @param stream\n         */\n        addVideoSource(videoElement, stream) {\n            // Older browsers may not have `srcObject`\n            try {\n                // @note Throws Exception if interrupted by a new loaded request\n                videoElement.srcObject = stream;\n            }\n            catch (err) {\n                // @note Avoid using this in new browsers, as it is going away.\n                videoElement.src = URL.createObjectURL(stream);\n            }\n        }\n        /**\n         * Unbinds a HTML video src property.\n         *\n         * @param videoElement\n         */\n        cleanVideoSource(videoElement) {\n            try {\n                videoElement.srcObject = null;\n            }\n            catch (err) {\n                videoElement.src = '';\n            }\n            this.videoElement.removeAttribute('src');\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates the result of decoding a barcode within an image.</p>\n     *\n     * @author Sean Owen\n     */\n    class Result {\n        // public constructor(private text: string,\n        //               Uint8Array rawBytes,\n        //               ResultPoconst resultPoints: Int32Array,\n        //               BarcodeFormat format) {\n        //   this(text, rawBytes, resultPoints, format, System.currentTimeMillis())\n        // }\n        // public constructor(text: string,\n        //               Uint8Array rawBytes,\n        //               ResultPoconst resultPoints: Int32Array,\n        //               BarcodeFormat format,\n        //               long timestamp) {\n        //   this(text, rawBytes, rawBytes == null ? 0 : 8 * rawBytes.length,\n        //        resultPoints, format, timestamp)\n        // }\n        constructor(text, rawBytes, numBits = rawBytes == null ? 0 : 8 * rawBytes.length, resultPoints, format, timestamp = System.currentTimeMillis()) {\n            this.text = text;\n            this.rawBytes = rawBytes;\n            this.numBits = numBits;\n            this.resultPoints = resultPoints;\n            this.format = format;\n            this.timestamp = timestamp;\n            this.text = text;\n            this.rawBytes = rawBytes;\n            if (undefined === numBits || null === numBits) {\n                this.numBits = (rawBytes === null || rawBytes === undefined) ? 0 : 8 * rawBytes.length;\n            }\n            else {\n                this.numBits = numBits;\n            }\n            this.resultPoints = resultPoints;\n            this.format = format;\n            this.resultMetadata = null;\n            if (undefined === timestamp || null === timestamp) {\n                this.timestamp = System.currentTimeMillis();\n            }\n            else {\n                this.timestamp = timestamp;\n            }\n        }\n        /**\n         * @return raw text encoded by the barcode\n         */\n        getText() {\n            return this.text;\n        }\n        /**\n         * @return raw bytes encoded by the barcode, if applicable, otherwise {@code null}\n         */\n        getRawBytes() {\n            return this.rawBytes;\n        }\n        /**\n         * @return how many bits of {@link #getRawBytes()} are valid; typically 8 times its length\n         * @since 3.3.0\n         */\n        getNumBits() {\n            return this.numBits;\n        }\n        /**\n         * @return points related to the barcode in the image. These are typically points\n         *         identifying finder patterns or the corners of the barcode. The exact meaning is\n         *         specific to the type of barcode that was decoded.\n         */\n        getResultPoints() {\n            return this.resultPoints;\n        }\n        /**\n         * @return {@link BarcodeFormat} representing the format of the barcode that was decoded\n         */\n        getBarcodeFormat() {\n            return this.format;\n        }\n        /**\n         * @return {@link Map} mapping {@link ResultMetadataType} keys to values. May be\n         *   {@code null}. This contains optional metadata about what was detected about the barcode,\n         *   like orientation.\n         */\n        getResultMetadata() {\n            return this.resultMetadata;\n        }\n        putMetadata(type, value) {\n            if (this.resultMetadata === null) {\n                this.resultMetadata = new Map();\n            }\n            this.resultMetadata.set(type, value);\n        }\n        putAllMetadata(metadata) {\n            if (metadata !== null) {\n                if (this.resultMetadata === null) {\n                    this.resultMetadata = metadata;\n                }\n                else {\n                    this.resultMetadata = new Map(metadata);\n                }\n            }\n        }\n        addResultPoints(newPoints) {\n            const oldPoints = this.resultPoints;\n            if (oldPoints === null) {\n                this.resultPoints = newPoints;\n            }\n            else if (newPoints !== null && newPoints.length > 0) {\n                const allPoints = new Array(oldPoints.length + newPoints.length);\n                System.arraycopy(oldPoints, 0, allPoints, 0, oldPoints.length);\n                System.arraycopy(newPoints, 0, allPoints, oldPoints.length, newPoints.length);\n                this.resultPoints = allPoints;\n            }\n        }\n        getTimestamp() {\n            return this.timestamp;\n        }\n        /*@Override*/\n        toString() {\n            return this.text;\n        }\n    }\n\n    /*\n     * Direct port to TypeScript of ZXing by Adrian Toșcă\n     */\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * Enumerates barcode formats known to this package. Please keep alphabetized.\n     *\n     * @author Sean Owen\n     */\n    var BarcodeFormat;\n    (function (BarcodeFormat) {\n        /** Aztec 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"AZTEC\"] = 0] = \"AZTEC\";\n        /** CODABAR 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODABAR\"] = 1] = \"CODABAR\";\n        /** Code 39 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODE_39\"] = 2] = \"CODE_39\";\n        /** Code 93 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODE_93\"] = 3] = \"CODE_93\";\n        /** Code 128 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODE_128\"] = 4] = \"CODE_128\";\n        /** Data Matrix 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"DATA_MATRIX\"] = 5] = \"DATA_MATRIX\";\n        /** EAN-8 1D format. */\n        BarcodeFormat[BarcodeFormat[\"EAN_8\"] = 6] = \"EAN_8\";\n        /** EAN-13 1D format. */\n        BarcodeFormat[BarcodeFormat[\"EAN_13\"] = 7] = \"EAN_13\";\n        /** ITF (Interleaved Two of Five) 1D format. */\n        BarcodeFormat[BarcodeFormat[\"ITF\"] = 8] = \"ITF\";\n        /** MaxiCode 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"MAXICODE\"] = 9] = \"MAXICODE\";\n        /** PDF417 format. */\n        BarcodeFormat[BarcodeFormat[\"PDF_417\"] = 10] = \"PDF_417\";\n        /** QR Code 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"QR_CODE\"] = 11] = \"QR_CODE\";\n        /** RSS 14 */\n        BarcodeFormat[BarcodeFormat[\"RSS_14\"] = 12] = \"RSS_14\";\n        /** RSS EXPANDED */\n        BarcodeFormat[BarcodeFormat[\"RSS_EXPANDED\"] = 13] = \"RSS_EXPANDED\";\n        /** UPC-A 1D format. */\n        BarcodeFormat[BarcodeFormat[\"UPC_A\"] = 14] = \"UPC_A\";\n        /** UPC-E 1D format. */\n        BarcodeFormat[BarcodeFormat[\"UPC_E\"] = 15] = \"UPC_E\";\n        /** UPC/EAN extension format. Not a stand-alone format. */\n        BarcodeFormat[BarcodeFormat[\"UPC_EAN_EXTENSION\"] = 16] = \"UPC_EAN_EXTENSION\";\n    })(BarcodeFormat || (BarcodeFormat = {}));\n    var BarcodeFormat$1 = BarcodeFormat;\n\n    /*namespace com.google.zxing {*/\n    /**\n     * Represents some type of metadata about the result of the decoding that the decoder\n     * wishes to communicate back to the caller.\n     *\n     * @author Sean Owen\n     */\n    var ResultMetadataType;\n    (function (ResultMetadataType) {\n        /**\n         * Unspecified, application-specific metadata. Maps to an unspecified {@link Object}.\n         */\n        ResultMetadataType[ResultMetadataType[\"OTHER\"] = 0] = \"OTHER\";\n        /**\n         * Denotes the likely approximate orientation of the barcode in the image. This value\n         * is given as degrees rotated clockwise from the normal, upright orientation.\n         * For example a 1D barcode which was found by reading top-to-bottom would be\n         * said to have orientation \"90\". This key maps to an {@link Integer} whose\n         * value is in the range [0,360).\n         */\n        ResultMetadataType[ResultMetadataType[\"ORIENTATION\"] = 1] = \"ORIENTATION\";\n        /**\n         * <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode'\n         * which is sometimes used to encode binary data. While {@link Result} makes available\n         * the complete raw bytes in the barcode for these formats, it does not offer the bytes\n         * from the byte segments alone.</p>\n         *\n         * <p>This maps to a {@link java.util.List} of byte arrays corresponding to the\n         * raw bytes in the byte segments in the barcode, in order.</p>\n         */\n        ResultMetadataType[ResultMetadataType[\"BYTE_SEGMENTS\"] = 2] = \"BYTE_SEGMENTS\";\n        /**\n         * Error correction level used, if applicable. The value type depends on the\n         * format, but is typically a String.\n         */\n        ResultMetadataType[ResultMetadataType[\"ERROR_CORRECTION_LEVEL\"] = 3] = \"ERROR_CORRECTION_LEVEL\";\n        /**\n         * For some periodicals, indicates the issue number as an {@link Integer}.\n         */\n        ResultMetadataType[ResultMetadataType[\"ISSUE_NUMBER\"] = 4] = \"ISSUE_NUMBER\";\n        /**\n         * For some products, indicates the suggested retail price in the barcode as a\n         * formatted {@link String}.\n         */\n        ResultMetadataType[ResultMetadataType[\"SUGGESTED_PRICE\"] = 5] = \"SUGGESTED_PRICE\";\n        /**\n         * For some products, the possible country of manufacture as a {@link String} denoting the\n         * ISO country code. Some map to multiple possible countries, like \"US/CA\".\n         */\n        ResultMetadataType[ResultMetadataType[\"POSSIBLE_COUNTRY\"] = 6] = \"POSSIBLE_COUNTRY\";\n        /**\n         * For some products, the extension text\n         */\n        ResultMetadataType[ResultMetadataType[\"UPC_EAN_EXTENSION\"] = 7] = \"UPC_EAN_EXTENSION\";\n        /**\n         * PDF417-specific metadata\n         */\n        ResultMetadataType[ResultMetadataType[\"PDF417_EXTRA_METADATA\"] = 8] = \"PDF417_EXTRA_METADATA\";\n        /**\n         * If the code format supports structured append and the current scanned code is part of one then the\n         * sequence number is given with it.\n         */\n        ResultMetadataType[ResultMetadataType[\"STRUCTURED_APPEND_SEQUENCE\"] = 9] = \"STRUCTURED_APPEND_SEQUENCE\";\n        /**\n         * If the code format supports structured append and the current scanned code is part of one then the\n         * parity is given with it.\n         */\n        ResultMetadataType[ResultMetadataType[\"STRUCTURED_APPEND_PARITY\"] = 10] = \"STRUCTURED_APPEND_PARITY\";\n    })(ResultMetadataType || (ResultMetadataType = {}));\n    var ResultMetadataType$1 = ResultMetadataType;\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing.common {*/\n    /*import java.util.List;*/\n    /**\n     * <p>Encapsulates the result of decoding a matrix of bits. This typically\n     * applies to 2D barcode formats. For now it contains the raw bytes obtained,\n     * as well as a String interpretation of those bytes, if applicable.</p>\n     *\n     * @author Sean Owen\n     */\n    class DecoderResult {\n        // public constructor(rawBytes: Uint8Array,\n        //                      text: string,\n        //                      List<Uint8Array> byteSegments,\n        //                      String ecLevel) {\n        //   this(rawBytes, text, byteSegments, ecLevel, -1, -1)\n        // }\n        constructor(rawBytes, text, byteSegments, ecLevel, structuredAppendSequenceNumber = -1, structuredAppendParity = -1) {\n            this.rawBytes = rawBytes;\n            this.text = text;\n            this.byteSegments = byteSegments;\n            this.ecLevel = ecLevel;\n            this.structuredAppendSequenceNumber = structuredAppendSequenceNumber;\n            this.structuredAppendParity = structuredAppendParity;\n            this.numBits = (rawBytes === undefined || rawBytes === null) ? 0 : 8 * rawBytes.length;\n        }\n        /**\n         * @return raw bytes representing the result, or {@code null} if not applicable\n         */\n        getRawBytes() {\n            return this.rawBytes;\n        }\n        /**\n         * @return how many bits of {@link #getRawBytes()} are valid; typically 8 times its length\n         * @since 3.3.0\n         */\n        getNumBits() {\n            return this.numBits;\n        }\n        /**\n         * @param numBits overrides the number of bits that are valid in {@link #getRawBytes()}\n         * @since 3.3.0\n         */\n        setNumBits(numBits /*int*/) {\n            this.numBits = numBits;\n        }\n        /**\n         * @return text representation of the result\n         */\n        getText() {\n            return this.text;\n        }\n        /**\n         * @return list of byte segments in the result, or {@code null} if not applicable\n         */\n        getByteSegments() {\n            return this.byteSegments;\n        }\n        /**\n         * @return name of error correction level used, or {@code null} if not applicable\n         */\n        getECLevel() {\n            return this.ecLevel;\n        }\n        /**\n         * @return number of errors corrected, or {@code null} if not applicable\n         */\n        getErrorsCorrected() {\n            return this.errorsCorrected;\n        }\n        setErrorsCorrected(errorsCorrected /*Integer*/) {\n            this.errorsCorrected = errorsCorrected;\n        }\n        /**\n         * @return number of erasures corrected, or {@code null} if not applicable\n         */\n        getErasures() {\n            return this.erasures;\n        }\n        setErasures(erasures /*Integer*/) {\n            this.erasures = erasures;\n        }\n        /**\n         * @return arbitrary additional metadata\n         */\n        getOther() {\n            return this.other;\n        }\n        setOther(other) {\n            this.other = other;\n        }\n        hasStructuredAppend() {\n            return this.structuredAppendParity >= 0 && this.structuredAppendSequenceNumber >= 0;\n        }\n        getStructuredAppendParity() {\n            return this.structuredAppendParity;\n        }\n        getStructuredAppendSequenceNumber() {\n            return this.structuredAppendSequenceNumber;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>This class contains utility methods for performing mathematical operations over\n     * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\n     *\n     * <p>Throughout this package, elements of the GF are represented as an {@code int}\n     * for convenience and speed (but at the cost of memory).\n     * </p>\n     *\n     * @author Sean Owen\n     * @author David Olivier\n     */\n    class AbstractGenericGF {\n        /**\n         * @return 2 to the power of a in GF(size)\n         */\n        exp(a) {\n            return this.expTable[a];\n        }\n        /**\n         * @return base 2 log of a in GF(size)\n         */\n        log(a /*int*/) {\n            if (a === 0) {\n                throw new IllegalArgumentException();\n            }\n            return this.logTable[a];\n        }\n        /**\n         * Implements both addition and subtraction -- they are the same in GF(size).\n         *\n         * @return sum/difference of a and b\n         */\n        static addOrSubtract(a /*int*/, b /*int*/) {\n            return a ^ b;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Represents a polynomial whose coefficients are elements of a GF.\n     * Instances of this class are immutable.</p>\n     *\n     * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\n     * port of his C++ Reed-Solomon implementation.</p>\n     *\n     * @author Sean Owen\n     */\n    class GenericGFPoly {\n        /**\n         * @param field the {@link GenericGF} instance representing the field to use\n         * to perform computations\n         * @param coefficients coefficients as ints representing elements of GF(size), arranged\n         * from most significant (highest-power term) coefficient to least significant\n         * @throws IllegalArgumentException if argument is null or empty,\n         * or if leading coefficient is 0 and this is not a\n         * constant polynomial (that is, it is not the monomial \"0\")\n         */\n        constructor(field, coefficients) {\n            if (coefficients.length === 0) {\n                throw new IllegalArgumentException();\n            }\n            this.field = field;\n            const coefficientsLength = coefficients.length;\n            if (coefficientsLength > 1 && coefficients[0] === 0) {\n                // Leading term must be non-zero for anything except the constant polynomial \"0\"\n                let firstNonZero = 1;\n                while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                    firstNonZero++;\n                }\n                if (firstNonZero === coefficientsLength) {\n                    this.coefficients = Int32Array.from([0]);\n                }\n                else {\n                    this.coefficients = new Int32Array(coefficientsLength - firstNonZero);\n                    System.arraycopy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\n                }\n            }\n            else {\n                this.coefficients = coefficients;\n            }\n        }\n        getCoefficients() {\n            return this.coefficients;\n        }\n        /**\n         * @return degree of this polynomial\n         */\n        getDegree() {\n            return this.coefficients.length - 1;\n        }\n        /**\n         * @return true iff this polynomial is the monomial \"0\"\n         */\n        isZero() {\n            return this.coefficients[0] === 0;\n        }\n        /**\n         * @return coefficient of x^degree term in this polynomial\n         */\n        getCoefficient(degree /*int*/) {\n            return this.coefficients[this.coefficients.length - 1 - degree];\n        }\n        /**\n         * @return evaluation of this polynomial at a given point\n         */\n        evaluateAt(a /*int*/) {\n            if (a === 0) {\n                // Just return the x^0 coefficient\n                return this.getCoefficient(0);\n            }\n            const coefficients = this.coefficients;\n            let result;\n            if (a === 1) {\n                // Just the sum of the coefficients\n                result = 0;\n                for (let i = 0, length = coefficients.length; i !== length; i++) {\n                    const coefficient = coefficients[i];\n                    result = AbstractGenericGF.addOrSubtract(result, coefficient);\n                }\n                return result;\n            }\n            result = coefficients[0];\n            const size = coefficients.length;\n            const field = this.field;\n            for (let i = 1; i < size; i++) {\n                result = AbstractGenericGF.addOrSubtract(field.multiply(a, result), coefficients[i]);\n            }\n            return result;\n        }\n        addOrSubtract(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');\n            }\n            if (this.isZero()) {\n                return other;\n            }\n            if (other.isZero()) {\n                return this;\n            }\n            let smallerCoefficients = this.coefficients;\n            let largerCoefficients = other.coefficients;\n            if (smallerCoefficients.length > largerCoefficients.length) {\n                const temp = smallerCoefficients;\n                smallerCoefficients = largerCoefficients;\n                largerCoefficients = temp;\n            }\n            let sumDiff = new Int32Array(largerCoefficients.length);\n            const lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n            // Copy high-order terms only found in higher-degree polynomial's coefficients\n            System.arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n            for (let i = lengthDiff; i < largerCoefficients.length; i++) {\n                sumDiff[i] = AbstractGenericGF.addOrSubtract(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n            }\n            return new GenericGFPoly(this.field, sumDiff);\n        }\n        multiply(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');\n            }\n            if (this.isZero() || other.isZero()) {\n                return this.field.getZero();\n            }\n            const aCoefficients = this.coefficients;\n            const aLength = aCoefficients.length;\n            const bCoefficients = other.coefficients;\n            const bLength = bCoefficients.length;\n            const product = new Int32Array(aLength + bLength - 1);\n            const field = this.field;\n            for (let i = 0; i < aLength; i++) {\n                const aCoeff = aCoefficients[i];\n                for (let j = 0; j < bLength; j++) {\n                    product[i + j] = AbstractGenericGF.addOrSubtract(product[i + j], field.multiply(aCoeff, bCoefficients[j]));\n                }\n            }\n            return new GenericGFPoly(field, product);\n        }\n        multiplyScalar(scalar /*int*/) {\n            if (scalar === 0) {\n                return this.field.getZero();\n            }\n            if (scalar === 1) {\n                return this;\n            }\n            const size = this.coefficients.length;\n            const field = this.field;\n            const product = new Int32Array(size);\n            const coefficients = this.coefficients;\n            for (let i = 0; i < size; i++) {\n                product[i] = field.multiply(coefficients[i], scalar);\n            }\n            return new GenericGFPoly(field, product);\n        }\n        multiplyByMonomial(degree /*int*/, coefficient /*int*/) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return this.field.getZero();\n            }\n            const coefficients = this.coefficients;\n            const size = coefficients.length;\n            const product = new Int32Array(size + degree);\n            const field = this.field;\n            for (let i = 0; i < size; i++) {\n                product[i] = field.multiply(coefficients[i], coefficient);\n            }\n            return new GenericGFPoly(field, product);\n        }\n        divide(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');\n            }\n            if (other.isZero()) {\n                throw new IllegalArgumentException('Divide by 0');\n            }\n            const field = this.field;\n            let quotient = field.getZero();\n            let remainder = this;\n            const denominatorLeadingTerm = other.getCoefficient(other.getDegree());\n            const inverseDenominatorLeadingTerm = field.inverse(denominatorLeadingTerm);\n            while (remainder.getDegree() >= other.getDegree() && !remainder.isZero()) {\n                const degreeDifference = remainder.getDegree() - other.getDegree();\n                const scale = field.multiply(remainder.getCoefficient(remainder.getDegree()), inverseDenominatorLeadingTerm);\n                const term = other.multiplyByMonomial(degreeDifference, scale);\n                const iterationQuotient = field.buildMonomial(degreeDifference, scale);\n                quotient = quotient.addOrSubtract(iterationQuotient);\n                remainder = remainder.addOrSubtract(term);\n            }\n            return [quotient, remainder];\n        }\n        /*@Override*/\n        toString() {\n            let result = '';\n            for (let degree = this.getDegree(); degree >= 0; degree--) {\n                let coefficient = this.getCoefficient(degree);\n                if (coefficient !== 0) {\n                    if (coefficient < 0) {\n                        result += ' - ';\n                        coefficient = -coefficient;\n                    }\n                    else {\n                        if (result.length > 0) {\n                            result += ' + ';\n                        }\n                    }\n                    if (degree === 0 || coefficient !== 1) {\n                        const alphaPower = this.field.log(coefficient);\n                        if (alphaPower === 0) {\n                            result += '1';\n                        }\n                        else if (alphaPower === 1) {\n                            result += 'a';\n                        }\n                        else {\n                            result += 'a^';\n                            result += alphaPower;\n                        }\n                    }\n                    if (degree !== 0) {\n                        if (degree === 1) {\n                            result += 'x';\n                        }\n                        else {\n                            result += 'x^';\n                            result += degree;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ArithmeticException extends Exception {\n    }\n    ArithmeticException.kind = 'ArithmeticException';\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>This class contains utility methods for performing mathematical operations over\n     * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\n     *\n     * <p>Throughout this package, elements of the GF are represented as an {@code int}\n     * for convenience and speed (but at the cost of memory).\n     * </p>\n     *\n     * @author Sean Owen\n     * @author David Olivier\n     */\n    class GenericGF extends AbstractGenericGF {\n        /**\n         * Create a representation of GF(size) using the given primitive polynomial.\n         *\n         * @param primitive irreducible polynomial whose coefficients are represented by\n         *  the bits of an int, where the least-significant bit represents the constant\n         *  coefficient\n         * @param size the size of the field\n         * @param b the factor b in the generator polynomial can be 0- or 1-based\n         *  (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))).\n         *  In most cases it should be 1, but for QR code it is 0.\n         */\n        constructor(primitive /*int*/, size /*int*/, generatorBase /*int*/) {\n            super();\n            this.primitive = primitive;\n            this.size = size;\n            this.generatorBase = generatorBase;\n            const expTable = new Int32Array(size);\n            let x = 1;\n            for (let i = 0; i < size; i++) {\n                expTable[i] = x;\n                x *= 2; // we're assuming the generator alpha is 2\n                if (x >= size) {\n                    x ^= primitive;\n                    x &= size - 1;\n                }\n            }\n            this.expTable = expTable;\n            const logTable = new Int32Array(size);\n            for (let i = 0; i < size - 1; i++) {\n                logTable[expTable[i]] = i;\n            }\n            this.logTable = logTable;\n            // logTable[0] == 0 but this should never be used\n            this.zero = new GenericGFPoly(this, Int32Array.from([0]));\n            this.one = new GenericGFPoly(this, Int32Array.from([1]));\n        }\n        getZero() {\n            return this.zero;\n        }\n        getOne() {\n            return this.one;\n        }\n        /**\n         * @return the monomial representing coefficient * x^degree\n         */\n        buildMonomial(degree /*int*/, coefficient /*int*/) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return this.zero;\n            }\n            const coefficients = new Int32Array(degree + 1);\n            coefficients[0] = coefficient;\n            return new GenericGFPoly(this, coefficients);\n        }\n        /**\n         * @return multiplicative inverse of a\n         */\n        inverse(a /*int*/) {\n            if (a === 0) {\n                throw new ArithmeticException();\n            }\n            return this.expTable[this.size - this.logTable[a] - 1];\n        }\n        /**\n         * @return product of a and b in GF(size)\n         */\n        multiply(a /*int*/, b /*int*/) {\n            if (a === 0 || b === 0) {\n                return 0;\n            }\n            return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n        }\n        getSize() {\n            return this.size;\n        }\n        getGeneratorBase() {\n            return this.generatorBase;\n        }\n        /*@Override*/\n        toString() {\n            return ('GF(0x' + Integer.toHexString(this.primitive) + ',' + this.size + ')');\n        }\n        equals(o) {\n            return o === this;\n        }\n    }\n    GenericGF.AZTEC_DATA_12 = new GenericGF(0x1069, 4096, 1); // x^12 + x^6 + x^5 + x^3 + 1\n    GenericGF.AZTEC_DATA_10 = new GenericGF(0x409, 1024, 1); // x^10 + x^3 + 1\n    GenericGF.AZTEC_DATA_6 = new GenericGF(0x43, 64, 1); // x^6 + x + 1\n    GenericGF.AZTEC_PARAM = new GenericGF(0x13, 16, 1); // x^4 + x + 1\n    GenericGF.QR_CODE_FIELD_256 = new GenericGF(0x011d, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n    GenericGF.DATA_MATRIX_FIELD_256 = new GenericGF(0x012d, 256, 1); // x^8 + x^5 + x^3 + x^2 + 1\n    GenericGF.AZTEC_DATA_8 = GenericGF.DATA_MATRIX_FIELD_256;\n    GenericGF.MAXICODE_FIELD_64 = GenericGF.AZTEC_DATA_6;\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ReedSolomonException extends Exception {\n    }\n    ReedSolomonException.kind = 'ReedSolomonException';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class IllegalStateException extends Exception {\n    }\n    IllegalStateException.kind = 'IllegalStateException';\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Implements Reed-Solomon decoding, as the name implies.</p>\n     *\n     * <p>The algorithm will not be explained here, but the following references were helpful\n     * in creating this implementation:</p>\n     *\n     * <ul>\n     * <li>Bruce Maggs.\n     * <a href=\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/pscico-guyb/realworld/www/rs_decode.ps\">\n     * \"Decoding Reed-Solomon Codes\"</a> (see discussion of Forney's Formula)</li>\n     * <li>J.I. Hall. <a href=\"www.mth.msu.edu/~jhall/classes/codenotes/GRS.pdf\">\n     * \"Chapter 5. Generalized Reed-Solomon Codes\"</a>\n     * (see discussion of Euclidean algorithm)</li>\n     * </ul>\n     *\n     * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\n     * port of his C++ Reed-Solomon implementation.</p>\n     *\n     * @author Sean Owen\n     * @author William Rucklidge\n     * @author sanfordsquires\n     */\n    class ReedSolomonDecoder {\n        constructor(field) {\n            this.field = field;\n        }\n        /**\n         * <p>Decodes given set of received codewords, which include both data and error-correction\n         * codewords. Really, this means it uses Reed-Solomon to detect and correct errors, in-place,\n         * in the input.</p>\n         *\n         * @param received data and error-correction codewords\n         * @param twoS number of error-correction codewords available\n         * @throws ReedSolomonException if decoding fails for any reason\n         */\n        decode(received, twoS /*int*/) {\n            const field = this.field;\n            const poly = new GenericGFPoly(field, received);\n            const syndromeCoefficients = new Int32Array(twoS);\n            let noError = true;\n            for (let i = 0; i < twoS; i++) {\n                const evalResult = poly.evaluateAt(field.exp(i + field.getGeneratorBase()));\n                syndromeCoefficients[syndromeCoefficients.length - 1 - i] = evalResult;\n                if (evalResult !== 0) {\n                    noError = false;\n                }\n            }\n            if (noError) {\n                return;\n            }\n            const syndrome = new GenericGFPoly(field, syndromeCoefficients);\n            const sigmaOmega = this.runEuclideanAlgorithm(field.buildMonomial(twoS, 1), syndrome, twoS);\n            const sigma = sigmaOmega[0];\n            const omega = sigmaOmega[1];\n            const errorLocations = this.findErrorLocations(sigma);\n            const errorMagnitudes = this.findErrorMagnitudes(omega, errorLocations);\n            for (let i = 0; i < errorLocations.length; i++) {\n                const position = received.length - 1 - field.log(errorLocations[i]);\n                if (position < 0) {\n                    throw new ReedSolomonException('Bad error location');\n                }\n                received[position] = GenericGF.addOrSubtract(received[position], errorMagnitudes[i]);\n            }\n        }\n        runEuclideanAlgorithm(a, b, R /*int*/) {\n            // Assume a's degree is >= b's\n            if (a.getDegree() < b.getDegree()) {\n                const temp = a;\n                a = b;\n                b = temp;\n            }\n            const field = this.field;\n            let rLast = a;\n            let r = b;\n            let tLast = field.getZero();\n            let t = field.getOne();\n            // Run Euclidean algorithm until r's degree is less than R/2\n            while (r.getDegree() >= (R / 2 | 0)) {\n                let rLastLast = rLast;\n                let tLastLast = tLast;\n                rLast = r;\n                tLast = t;\n                // Divide rLastLast by rLast, with quotient in q and remainder in r\n                if (rLast.isZero()) {\n                    // Oops, Euclidean algorithm already terminated?\n                    throw new ReedSolomonException('r_{i-1} was zero');\n                }\n                r = rLastLast;\n                let q = field.getZero();\n                const denominatorLeadingTerm = rLast.getCoefficient(rLast.getDegree());\n                const dltInverse = field.inverse(denominatorLeadingTerm);\n                while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n                    const degreeDiff = r.getDegree() - rLast.getDegree();\n                    const scale = field.multiply(r.getCoefficient(r.getDegree()), dltInverse);\n                    q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n                    r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n                }\n                t = q.multiply(tLast).addOrSubtract(tLastLast);\n                if (r.getDegree() >= rLast.getDegree()) {\n                    throw new IllegalStateException('Division algorithm failed to reduce polynomial?');\n                }\n            }\n            const sigmaTildeAtZero = t.getCoefficient(0);\n            if (sigmaTildeAtZero === 0) {\n                throw new ReedSolomonException('sigmaTilde(0) was zero');\n            }\n            const inverse = field.inverse(sigmaTildeAtZero);\n            const sigma = t.multiplyScalar(inverse);\n            const omega = r.multiplyScalar(inverse);\n            return [sigma, omega];\n        }\n        findErrorLocations(errorLocator) {\n            // This is a direct application of Chien's search\n            const numErrors = errorLocator.getDegree();\n            if (numErrors === 1) { // shortcut\n                return Int32Array.from([errorLocator.getCoefficient(1)]);\n            }\n            const result = new Int32Array(numErrors);\n            let e = 0;\n            const field = this.field;\n            for (let i = 1; i < field.getSize() && e < numErrors; i++) {\n                if (errorLocator.evaluateAt(i) === 0) {\n                    result[e] = field.inverse(i);\n                    e++;\n                }\n            }\n            if (e !== numErrors) {\n                throw new ReedSolomonException('Error locator degree does not match number of roots');\n            }\n            return result;\n        }\n        findErrorMagnitudes(errorEvaluator, errorLocations) {\n            // This is directly applying Forney's Formula\n            const s = errorLocations.length;\n            const result = new Int32Array(s);\n            const field = this.field;\n            for (let i = 0; i < s; i++) {\n                const xiInverse = field.inverse(errorLocations[i]);\n                let denominator = 1;\n                for (let j = 0; j < s; j++) {\n                    if (i !== j) {\n                        // denominator = field.multiply(denominator,\n                        //    GenericGF.addOrSubtract(1, field.multiply(errorLocations[j], xiInverse)))\n                        // Above should work but fails on some Apple and Linux JDKs due to a Hotspot bug.\n                        // Below is a funny-looking workaround from Steven Parkes\n                        const term = field.multiply(errorLocations[j], xiInverse);\n                        const termPlus1 = (term & 0x1) === 0 ? term | 1 : term & ~1;\n                        denominator = field.multiply(denominator, termPlus1);\n                    }\n                }\n                result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n                if (field.getGeneratorBase() !== 0) {\n                    result[i] = field.multiply(result[i], xiInverse);\n                }\n            }\n            return result;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.Arrays;\n    var Table;\n    (function (Table) {\n        Table[Table[\"UPPER\"] = 0] = \"UPPER\";\n        Table[Table[\"LOWER\"] = 1] = \"LOWER\";\n        Table[Table[\"MIXED\"] = 2] = \"MIXED\";\n        Table[Table[\"DIGIT\"] = 3] = \"DIGIT\";\n        Table[Table[\"PUNCT\"] = 4] = \"PUNCT\";\n        Table[Table[\"BINARY\"] = 5] = \"BINARY\";\n    })(Table || (Table = {}));\n    /**\n     * <p>The main class which implements Aztec Code decoding -- as opposed to locating and extracting\n     * the Aztec Code from an image.</p>\n     *\n     * @author David Olivier\n     */\n    class Decoder {\n        decode(detectorResult) {\n            this.ddata = detectorResult;\n            let matrix = detectorResult.getBits();\n            let rawbits = this.extractBits(matrix);\n            let correctedBits = this.correctBits(rawbits);\n            let rawBytes = Decoder.convertBoolArrayToByteArray(correctedBits);\n            let result = Decoder.getEncodedData(correctedBits);\n            let decoderResult = new DecoderResult(rawBytes, result, null, null);\n            decoderResult.setNumBits(correctedBits.length);\n            return decoderResult;\n        }\n        // This method is used for testing the high-level encoder\n        static highLevelDecode(correctedBits) {\n            return this.getEncodedData(correctedBits);\n        }\n        /**\n         * Gets the string encoded in the aztec code bits\n         *\n         * @return the decoded string\n         */\n        static getEncodedData(correctedBits) {\n            let endIndex = correctedBits.length;\n            let latchTable = Table.UPPER; // table most recently latched to\n            let shiftTable = Table.UPPER; // table to use for the next read\n            let result = '';\n            let index = 0;\n            while (index < endIndex) {\n                if (shiftTable === Table.BINARY) {\n                    if (endIndex - index < 5) {\n                        break;\n                    }\n                    let length = Decoder.readCode(correctedBits, index, 5);\n                    index += 5;\n                    if (length === 0) {\n                        if (endIndex - index < 11) {\n                            break;\n                        }\n                        length = Decoder.readCode(correctedBits, index, 11) + 31;\n                        index += 11;\n                    }\n                    for (let charCount = 0; charCount < length; charCount++) {\n                        if (endIndex - index < 8) {\n                            index = endIndex; // Force outer loop to exit\n                            break;\n                        }\n                        const code = Decoder.readCode(correctedBits, index, 8);\n                        result += /*(char)*/ StringUtils.castAsNonUtf8Char(code);\n                        index += 8;\n                    }\n                    // Go back to whatever mode we had been in\n                    shiftTable = latchTable;\n                }\n                else {\n                    let size = shiftTable === Table.DIGIT ? 4 : 5;\n                    if (endIndex - index < size) {\n                        break;\n                    }\n                    let code = Decoder.readCode(correctedBits, index, size);\n                    index += size;\n                    let str = Decoder.getCharacter(shiftTable, code);\n                    if (str.startsWith('CTRL_')) {\n                        // Table changes\n                        // ISO/IEC 24778:2008 prescribes ending a shift sequence in the mode from which it was invoked.\n                        // That's including when that mode is a shift.\n                        // Our test case dlusbs.png for issue #642 exercises that.\n                        latchTable = shiftTable; // Latch the current mode, so as to return to Upper after U/S B/S\n                        shiftTable = Decoder.getTable(str.charAt(5));\n                        if (str.charAt(6) === 'L') {\n                            latchTable = shiftTable;\n                        }\n                    }\n                    else {\n                        result += str;\n                        // Go back to whatever mode we had been in\n                        shiftTable = latchTable;\n                    }\n                }\n            }\n            return result;\n        }\n        /**\n         * gets the table corresponding to the char passed\n         */\n        static getTable(t) {\n            switch (t) {\n                case 'L':\n                    return Table.LOWER;\n                case 'P':\n                    return Table.PUNCT;\n                case 'M':\n                    return Table.MIXED;\n                case 'D':\n                    return Table.DIGIT;\n                case 'B':\n                    return Table.BINARY;\n                case 'U':\n                default:\n                    return Table.UPPER;\n            }\n        }\n        /**\n         * Gets the character (or string) corresponding to the passed code in the given table\n         *\n         * @param table the table used\n         * @param code the code of the character\n         */\n        static getCharacter(table, code) {\n            switch (table) {\n                case Table.UPPER:\n                    return Decoder.UPPER_TABLE[code];\n                case Table.LOWER:\n                    return Decoder.LOWER_TABLE[code];\n                case Table.MIXED:\n                    return Decoder.MIXED_TABLE[code];\n                case Table.PUNCT:\n                    return Decoder.PUNCT_TABLE[code];\n                case Table.DIGIT:\n                    return Decoder.DIGIT_TABLE[code];\n                default:\n                    // Should not reach here.\n                    throw new IllegalStateException('Bad table');\n            }\n        }\n        /**\n         * <p>Performs RS error correction on an array of bits.</p>\n         *\n         * @return the corrected array\n         * @throws FormatException if the input contains too many errors\n         */\n        correctBits(rawbits) {\n            let gf;\n            let codewordSize;\n            if (this.ddata.getNbLayers() <= 2) {\n                codewordSize = 6;\n                gf = GenericGF.AZTEC_DATA_6;\n            }\n            else if (this.ddata.getNbLayers() <= 8) {\n                codewordSize = 8;\n                gf = GenericGF.AZTEC_DATA_8;\n            }\n            else if (this.ddata.getNbLayers() <= 22) {\n                codewordSize = 10;\n                gf = GenericGF.AZTEC_DATA_10;\n            }\n            else {\n                codewordSize = 12;\n                gf = GenericGF.AZTEC_DATA_12;\n            }\n            let numDataCodewords = this.ddata.getNbDatablocks();\n            let numCodewords = rawbits.length / codewordSize;\n            if (numCodewords < numDataCodewords) {\n                throw new FormatException();\n            }\n            let offset = rawbits.length % codewordSize;\n            let dataWords = new Int32Array(numCodewords);\n            for (let i = 0; i < numCodewords; i++, offset += codewordSize) {\n                dataWords[i] = Decoder.readCode(rawbits, offset, codewordSize);\n            }\n            try {\n                let rsDecoder = new ReedSolomonDecoder(gf);\n                rsDecoder.decode(dataWords, numCodewords - numDataCodewords);\n            }\n            catch (ex) {\n                throw new FormatException(ex);\n            }\n            // Now perform the unstuffing operation.\n            // First, count how many bits are going to be thrown out as stuffing\n            let mask = (1 << codewordSize) - 1;\n            let stuffedBits = 0;\n            for (let i = 0; i < numDataCodewords; i++) {\n                let dataWord = dataWords[i];\n                if (dataWord === 0 || dataWord === mask) {\n                    throw new FormatException();\n                }\n                else if (dataWord === 1 || dataWord === mask - 1) {\n                    stuffedBits++;\n                }\n            }\n            // Now, actually unpack the bits and remove the stuffing\n            let correctedBits = new Array(numDataCodewords * codewordSize - stuffedBits);\n            let index = 0;\n            for (let i = 0; i < numDataCodewords; i++) {\n                let dataWord = dataWords[i];\n                if (dataWord === 1 || dataWord === mask - 1) {\n                    // next codewordSize-1 bits are all zeros or all ones\n                    correctedBits.fill(dataWord > 1, index, index + codewordSize - 1);\n                    // Arrays.fill(correctedBits, index, index + codewordSize - 1, dataWord > 1);\n                    index += codewordSize - 1;\n                }\n                else {\n                    for (let bit = codewordSize - 1; bit >= 0; --bit) {\n                        correctedBits[index++] = (dataWord & (1 << bit)) !== 0;\n                    }\n                }\n            }\n            return correctedBits;\n        }\n        /**\n         * Gets the array of bits from an Aztec Code matrix\n         *\n         * @return the array of bits\n         */\n        extractBits(matrix) {\n            let compact = this.ddata.isCompact();\n            let layers = this.ddata.getNbLayers();\n            let baseMatrixSize = (compact ? 11 : 14) + layers * 4; // not including alignment lines\n            let alignmentMap = new Int32Array(baseMatrixSize);\n            let rawbits = new Array(this.totalBitsInLayer(layers, compact));\n            if (compact) {\n                for (let i = 0; i < alignmentMap.length; i++) {\n                    alignmentMap[i] = i;\n                }\n            }\n            else {\n                let matrixSize = baseMatrixSize + 1 + 2 * Integer.truncDivision((Integer.truncDivision(baseMatrixSize, 2) - 1), 15);\n                let origCenter = baseMatrixSize / 2;\n                let center = Integer.truncDivision(matrixSize, 2);\n                for (let i = 0; i < origCenter; i++) {\n                    let newOffset = i + Integer.truncDivision(i, 15);\n                    alignmentMap[origCenter - i - 1] = center - newOffset - 1;\n                    alignmentMap[origCenter + i] = center + newOffset + 1;\n                }\n            }\n            for (let i = 0, rowOffset = 0; i < layers; i++) {\n                let rowSize = (layers - i) * 4 + (compact ? 9 : 12);\n                // The top-left most point of this layer is <low, low> (not including alignment lines)\n                let low = i * 2;\n                // The bottom-right most point of this layer is <high, high> (not including alignment lines)\n                let high = baseMatrixSize - 1 - low;\n                // We pull bits from the two 2 x rowSize columns and two rowSize x 2 rows\n                for (let j = 0; j < rowSize; j++) {\n                    let columnOffset = j * 2;\n                    for (let k = 0; k < 2; k++) {\n                        // left column\n                        rawbits[rowOffset + columnOffset + k] =\n                            matrix.get(alignmentMap[low + k], alignmentMap[low + j]);\n                        // bottom row\n                        rawbits[rowOffset + 2 * rowSize + columnOffset + k] =\n                            matrix.get(alignmentMap[low + j], alignmentMap[high - k]);\n                        // right column\n                        rawbits[rowOffset + 4 * rowSize + columnOffset + k] =\n                            matrix.get(alignmentMap[high - k], alignmentMap[high - j]);\n                        // top row\n                        rawbits[rowOffset + 6 * rowSize + columnOffset + k] =\n                            matrix.get(alignmentMap[high - j], alignmentMap[low + k]);\n                    }\n                }\n                rowOffset += rowSize * 8;\n            }\n            return rawbits;\n        }\n        /**\n         * Reads a code of given length and at given index in an array of bits\n         */\n        static readCode(rawbits, startIndex, length) {\n            let res = 0;\n            for (let i = startIndex; i < startIndex + length; i++) {\n                res <<= 1;\n                if (rawbits[i]) {\n                    res |= 0x01;\n                }\n            }\n            return res;\n        }\n        /**\n         * Reads a code of length 8 in an array of bits, padding with zeros\n         */\n        static readByte(rawbits, startIndex) {\n            let n = rawbits.length - startIndex;\n            if (n >= 8) {\n                return Decoder.readCode(rawbits, startIndex, 8);\n            }\n            return Decoder.readCode(rawbits, startIndex, n) << (8 - n);\n        }\n        /**\n         * Packs a bit array into bytes, most significant bit first\n         */\n        static convertBoolArrayToByteArray(boolArr) {\n            let byteArr = new Uint8Array((boolArr.length + 7) / 8);\n            for (let i = 0; i < byteArr.length; i++) {\n                byteArr[i] = Decoder.readByte(boolArr, 8 * i);\n            }\n            return byteArr;\n        }\n        totalBitsInLayer(layers, compact) {\n            return ((compact ? 88 : 112) + 16 * layers) * layers;\n        }\n    }\n    Decoder.UPPER_TABLE = [\n        'CTRL_PS', ' ', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\n        'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'CTRL_LL', 'CTRL_ML', 'CTRL_DL', 'CTRL_BS'\n    ];\n    Decoder.LOWER_TABLE = [\n        'CTRL_PS', ' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',\n        'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'CTRL_US', 'CTRL_ML', 'CTRL_DL', 'CTRL_BS'\n    ];\n    Decoder.MIXED_TABLE = [\n        // Module parse failed: Octal literal in strict mode (50:29)\n        // so number string were scaped\n        'CTRL_PS', ' ', '\\\\1', '\\\\2', '\\\\3', '\\\\4', '\\\\5', '\\\\6', '\\\\7', '\\b', '\\t', '\\n',\n        '\\\\13', '\\f', '\\r', '\\\\33', '\\\\34', '\\\\35', '\\\\36', '\\\\37', '@', '\\\\', '^', '_',\n        '`', '|', '~', '\\\\177', 'CTRL_LL', 'CTRL_UL', 'CTRL_PL', 'CTRL_BS'\n    ];\n    Decoder.PUNCT_TABLE = [\n        '', '\\r', '\\r\\n', '. ', ', ', ': ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')',\n        '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', ']', '{', '}', 'CTRL_UL'\n    ];\n    Decoder.DIGIT_TABLE = [\n        'CTRL_PS', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ',', '.', 'CTRL_UL', 'CTRL_US'\n    ];\n\n    /*\n     * Copyright 2012 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing.common.detector {*/\n    /**\n     * General math-related and numeric utility functions.\n     */\n    class MathUtils {\n        constructor() { }\n        /**\n         * Ends up being a bit faster than {@link Math#round(float)}. This merely rounds its\n         * argument to the nearest int, where x.5 rounds up to x+1. Semantics of this shortcut\n         * differ slightly from {@link Math#round(float)} in that half rounds down for negative\n         * values. -2.5 rounds to -3, not -2. For purposes here it makes no difference.\n         *\n         * @param d real value to round\n         * @return nearest {@code int}\n         */\n        static round(d /*float*/) {\n            if (NaN === d)\n                return 0;\n            if (d <= Number.MIN_SAFE_INTEGER)\n                return Number.MIN_SAFE_INTEGER;\n            if (d >= Number.MAX_SAFE_INTEGER)\n                return Number.MAX_SAFE_INTEGER;\n            return /*(int) */ (d + (d < 0.0 ? -0.5 : 0.5)) | 0;\n        }\n        // TYPESCRIPTPORT: maybe remove round method and call directly Math.round, it looks like it doesn't make sense for js\n        /**\n         * @param aX point A x coordinate\n         * @param aY point A y coordinate\n         * @param bX point B x coordinate\n         * @param bY point B y coordinate\n         * @return Euclidean distance between points A and B\n         */\n        static distance(aX /*float|int*/, aY /*float|int*/, bX /*float|int*/, bY /*float|int*/) {\n            const xDiff = aX - bX;\n            const yDiff = aY - bY;\n            return /*(float) */ Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n        }\n        /**\n         * @param aX point A x coordinate\n         * @param aY point A y coordinate\n         * @param bX point B x coordinate\n         * @param bY point B y coordinate\n         * @return Euclidean distance between points A and B\n         */\n        // public static distance(aX: number /*int*/, aY: number /*int*/, bX: number /*int*/, bY: number /*int*/): float {\n        //   const xDiff = aX - bX\n        //   const yDiff = aY - bY\n        //   return (float) Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n        // }\n        /**\n         * @param array values to sum\n         * @return sum of values in array\n         */\n        static sum(array) {\n            let count = 0;\n            for (let i = 0, length = array.length; i !== length; i++) {\n                const a = array[i];\n                count += a;\n            }\n            return count;\n        }\n    }\n\n    /**\n     * Ponyfill for Java's Float class.\n     */\n    class Float {\n        /**\n         * SincTS has no difference between int and float, there's all numbers,\n         * this is used only to polyfill Java code.\n         */\n        static floatToIntBits(f) {\n            return f;\n        }\n    }\n    /**\n     * The float max value in JS is the number max value.\n     */\n    Float.MAX_VALUE = Number.MAX_SAFE_INTEGER;\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a point of interest in an image containing a barcode. Typically, this\n     * would be the location of a finder pattern or the corner of the barcode, for example.</p>\n     *\n     * @author Sean Owen\n     */\n    class ResultPoint {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n        getX() {\n            return this.x;\n        }\n        getY() {\n            return this.y;\n        }\n        /*@Override*/\n        equals(other) {\n            if (other instanceof ResultPoint) {\n                const otherPoint = other;\n                return this.x === otherPoint.x && this.y === otherPoint.y;\n            }\n            return false;\n        }\n        /*@Override*/\n        hashCode() {\n            return 31 * Float.floatToIntBits(this.x) + Float.floatToIntBits(this.y);\n        }\n        /*@Override*/\n        toString() {\n            return '(' + this.x + ',' + this.y + ')';\n        }\n        /**\n         * Orders an array of three ResultPoints in an order [A,B,C] such that AB is less than AC\n         * and BC is less than AC, and the angle between BC and BA is less than 180 degrees.\n         *\n         * @param patterns array of three {@code ResultPoint} to order\n         */\n        static orderBestPatterns(patterns) {\n            // Find distances between pattern centers\n            const zeroOneDistance = this.distance(patterns[0], patterns[1]);\n            const oneTwoDistance = this.distance(patterns[1], patterns[2]);\n            const zeroTwoDistance = this.distance(patterns[0], patterns[2]);\n            let pointA;\n            let pointB;\n            let pointC;\n            // Assume one closest to other two is B; A and C will just be guesses at first\n            if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {\n                pointB = patterns[0];\n                pointA = patterns[1];\n                pointC = patterns[2];\n            }\n            else if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {\n                pointB = patterns[1];\n                pointA = patterns[0];\n                pointC = patterns[2];\n            }\n            else {\n                pointB = patterns[2];\n                pointA = patterns[0];\n                pointC = patterns[1];\n            }\n            // Use cross product to figure out whether A and C are correct or flipped.\n            // This asks whether BC x BA has a positive z component, which is the arrangement\n            // we want for A, B, C. If it's negative, then we've got it flipped around and\n            // should swap A and C.\n            if (this.crossProductZ(pointA, pointB, pointC) < 0.0) {\n                const temp = pointA;\n                pointA = pointC;\n                pointC = temp;\n            }\n            patterns[0] = pointA;\n            patterns[1] = pointB;\n            patterns[2] = pointC;\n        }\n        /**\n         * @param pattern1 first pattern\n         * @param pattern2 second pattern\n         * @return distance between two points\n         */\n        static distance(pattern1, pattern2) {\n            return MathUtils.distance(pattern1.x, pattern1.y, pattern2.x, pattern2.y);\n        }\n        /**\n         * Returns the z component of the cross product between vectors BC and BA.\n         */\n        static crossProductZ(pointA, pointB, pointC) {\n            const bX = pointB.x;\n            const bY = pointB.y;\n            return ((pointC.x - bX) * (pointA.y - bY)) - ((pointC.y - bY) * (pointA.x - bX));\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates the result of detecting a barcode in an image. This includes the raw\n     * matrix of black/white pixels corresponding to the barcode, and possibly points of interest\n     * in the image, like the location of finder patterns or corners of the barcode in the image.</p>\n     *\n     * @author Sean Owen\n     */\n    class DetectorResult {\n        constructor(bits, points) {\n            this.bits = bits;\n            this.points = points;\n        }\n        getBits() {\n            return this.bits;\n        }\n        getPoints() {\n            return this.points;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Extends {@link DetectorResult} with more information specific to the Aztec format,\n     * like the number of layers and whether it's compact.</p>\n     *\n     * @author Sean Owen\n     */\n    class AztecDetectorResult extends DetectorResult {\n        constructor(bits, points, compact, nbDatablocks, nbLayers) {\n            super(bits, points);\n            this.compact = compact;\n            this.nbDatablocks = nbDatablocks;\n            this.nbLayers = nbLayers;\n        }\n        getNbLayers() {\n            return this.nbLayers;\n        }\n        getNbDatablocks() {\n            return this.nbDatablocks;\n        }\n        isCompact() {\n            return this.compact;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>\n     * Detects a candidate barcode-like rectangular region within an image. It\n     * starts around the center of the image, increases the size of the candidate\n     * region until it finds a white rectangular region. By keeping track of the\n     * last black points it encountered, it determines the corners of the barcode.\n     * </p>\n     *\n     * @author David Olivier\n     */\n    class WhiteRectangleDetector {\n        // public constructor(private image: BitMatrix) /*throws NotFoundException*/ {\n        //   this(image, INIT_SIZE, image.getWidth() / 2, image.getHeight() / 2)\n        // }\n        /**\n         * @param image barcode image to find a rectangle in\n         * @param initSize initial size of search area around center\n         * @param x x position of search center\n         * @param y y position of search center\n         * @throws NotFoundException if image is too small to accommodate {@code initSize}\n         */\n        constructor(image, initSize /*int*/, x /*int*/, y /*int*/) {\n            this.image = image;\n            this.height = image.getHeight();\n            this.width = image.getWidth();\n            if (undefined === initSize || null === initSize) {\n                initSize = WhiteRectangleDetector.INIT_SIZE;\n            }\n            if (undefined === x || null === x) {\n                x = image.getWidth() / 2 | 0;\n            }\n            if (undefined === y || null === y) {\n                y = image.getHeight() / 2 | 0;\n            }\n            const halfsize = initSize / 2 | 0;\n            this.leftInit = x - halfsize;\n            this.rightInit = x + halfsize;\n            this.upInit = y - halfsize;\n            this.downInit = y + halfsize;\n            if (this.upInit < 0 || this.leftInit < 0 || this.downInit >= this.height || this.rightInit >= this.width) {\n                throw new NotFoundException();\n            }\n        }\n        /**\n         * <p>\n         * Detects a candidate barcode-like rectangular region within an image. It\n         * starts around the center of the image, increases the size of the candidate\n         * region until it finds a white rectangular region.\n         * </p>\n         *\n         * @return {@link ResultPoint}[] describing the corners of the rectangular\n         *         region. The first and last points are opposed on the diagonal, as\n         *         are the second and third. The first point will be the topmost\n         *         point and the last, the bottommost. The second point will be\n         *         leftmost and the third, the rightmost\n         * @throws NotFoundException if no Data Matrix Code can be found\n         */\n        detect() {\n            let left = this.leftInit;\n            let right = this.rightInit;\n            let up = this.upInit;\n            let down = this.downInit;\n            let sizeExceeded = false;\n            let aBlackPointFoundOnBorder = true;\n            let atLeastOneBlackPointFoundOnBorder = false;\n            let atLeastOneBlackPointFoundOnRight = false;\n            let atLeastOneBlackPointFoundOnBottom = false;\n            let atLeastOneBlackPointFoundOnLeft = false;\n            let atLeastOneBlackPointFoundOnTop = false;\n            const width = this.width;\n            const height = this.height;\n            while (aBlackPointFoundOnBorder) {\n                aBlackPointFoundOnBorder = false;\n                // .....\n                // .   |\n                // .....\n                let rightBorderNotWhite = true;\n                while ((rightBorderNotWhite || !atLeastOneBlackPointFoundOnRight) && right < width) {\n                    rightBorderNotWhite = this.containsBlackPoint(up, down, right, false);\n                    if (rightBorderNotWhite) {\n                        right++;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnRight = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnRight) {\n                        right++;\n                    }\n                }\n                if (right >= width) {\n                    sizeExceeded = true;\n                    break;\n                }\n                // .....\n                // .   .\n                // .___.\n                let bottomBorderNotWhite = true;\n                while ((bottomBorderNotWhite || !atLeastOneBlackPointFoundOnBottom) && down < height) {\n                    bottomBorderNotWhite = this.containsBlackPoint(left, right, down, true);\n                    if (bottomBorderNotWhite) {\n                        down++;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnBottom = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnBottom) {\n                        down++;\n                    }\n                }\n                if (down >= height) {\n                    sizeExceeded = true;\n                    break;\n                }\n                // .....\n                // |   .\n                // .....\n                let leftBorderNotWhite = true;\n                while ((leftBorderNotWhite || !atLeastOneBlackPointFoundOnLeft) && left >= 0) {\n                    leftBorderNotWhite = this.containsBlackPoint(up, down, left, false);\n                    if (leftBorderNotWhite) {\n                        left--;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnLeft = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnLeft) {\n                        left--;\n                    }\n                }\n                if (left < 0) {\n                    sizeExceeded = true;\n                    break;\n                }\n                // .___.\n                // .   .\n                // .....\n                let topBorderNotWhite = true;\n                while ((topBorderNotWhite || !atLeastOneBlackPointFoundOnTop) && up >= 0) {\n                    topBorderNotWhite = this.containsBlackPoint(left, right, up, true);\n                    if (topBorderNotWhite) {\n                        up--;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnTop = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnTop) {\n                        up--;\n                    }\n                }\n                if (up < 0) {\n                    sizeExceeded = true;\n                    break;\n                }\n                if (aBlackPointFoundOnBorder) {\n                    atLeastOneBlackPointFoundOnBorder = true;\n                }\n            }\n            if (!sizeExceeded && atLeastOneBlackPointFoundOnBorder) {\n                const maxSize = right - left;\n                let z = null;\n                for (let i = 1; z === null && i < maxSize; i++) {\n                    z = this.getBlackPointOnSegment(left, down - i, left + i, down);\n                }\n                if (z == null) {\n                    throw new NotFoundException();\n                }\n                let t = null;\n                // go down right\n                for (let i = 1; t === null && i < maxSize; i++) {\n                    t = this.getBlackPointOnSegment(left, up + i, left + i, up);\n                }\n                if (t == null) {\n                    throw new NotFoundException();\n                }\n                let x = null;\n                // go down left\n                for (let i = 1; x === null && i < maxSize; i++) {\n                    x = this.getBlackPointOnSegment(right, up + i, right - i, up);\n                }\n                if (x == null) {\n                    throw new NotFoundException();\n                }\n                let y = null;\n                // go up left\n                for (let i = 1; y === null && i < maxSize; i++) {\n                    y = this.getBlackPointOnSegment(right, down - i, right - i, down);\n                }\n                if (y == null) {\n                    throw new NotFoundException();\n                }\n                return this.centerEdges(y, z, x, t);\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n        getBlackPointOnSegment(aX /*float*/, aY /*float*/, bX /*float*/, bY /*float*/) {\n            const dist = MathUtils.round(MathUtils.distance(aX, aY, bX, bY));\n            const xStep = (bX - aX) / dist;\n            const yStep = (bY - aY) / dist;\n            const image = this.image;\n            for (let i = 0; i < dist; i++) {\n                const x = MathUtils.round(aX + i * xStep);\n                const y = MathUtils.round(aY + i * yStep);\n                if (image.get(x, y)) {\n                    return new ResultPoint(x, y);\n                }\n            }\n            return null;\n        }\n        /**\n         * recenters the points of a constant distance towards the center\n         *\n         * @param y bottom most point\n         * @param z left most point\n         * @param x right most point\n         * @param t top most point\n         * @return {@link ResultPoint}[] describing the corners of the rectangular\n         *         region. The first and last points are opposed on the diagonal, as\n         *         are the second and third. The first point will be the topmost\n         *         point and the last, the bottommost. The second point will be\n         *         leftmost and the third, the rightmost\n         */\n        centerEdges(y, z, x, t) {\n            //\n            //       t            t\n            //  z                      x\n            //        x    OR    z\n            //   y                    y\n            //\n            const yi = y.getX();\n            const yj = y.getY();\n            const zi = z.getX();\n            const zj = z.getY();\n            const xi = x.getX();\n            const xj = x.getY();\n            const ti = t.getX();\n            const tj = t.getY();\n            const CORR = WhiteRectangleDetector.CORR;\n            if (yi < this.width / 2.0) {\n                return [\n                    new ResultPoint(ti - CORR, tj + CORR),\n                    new ResultPoint(zi + CORR, zj + CORR),\n                    new ResultPoint(xi - CORR, xj - CORR),\n                    new ResultPoint(yi + CORR, yj - CORR)\n                ];\n            }\n            else {\n                return [\n                    new ResultPoint(ti + CORR, tj + CORR),\n                    new ResultPoint(zi + CORR, zj - CORR),\n                    new ResultPoint(xi - CORR, xj + CORR),\n                    new ResultPoint(yi - CORR, yj - CORR)\n                ];\n            }\n        }\n        /**\n         * Determines whether a segment contains a black point\n         *\n         * @param a          min value of the scanned coordinate\n         * @param b          max value of the scanned coordinate\n         * @param fixed      value of fixed coordinate\n         * @param horizontal set to true if scan must be horizontal, false if vertical\n         * @return true if a black point has been found, else false.\n         */\n        containsBlackPoint(a /*int*/, b /*int*/, fixed /*int*/, horizontal) {\n            const image = this.image;\n            if (horizontal) {\n                for (let x = a; x <= b; x++) {\n                    if (image.get(x, fixed)) {\n                        return true;\n                    }\n                }\n            }\n            else {\n                for (let y = a; y <= b; y++) {\n                    if (image.get(fixed, y)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n    WhiteRectangleDetector.INIT_SIZE = 10;\n    WhiteRectangleDetector.CORR = 1;\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Implementations of this class can, given locations of finder patterns for a QR code in an\n     * image, sample the right points in the image to reconstruct the QR code, accounting for\n     * perspective distortion. It is abstracted since it is relatively expensive and should be allowed\n     * to take advantage of platform-specific optimized implementations, like Sun's Java Advanced\n     * Imaging library, but which may not be available in other environments such as J2ME, and vice\n     * versa.\n     *\n     * The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)}\n     * with an instance of a class which implements this interface.\n     *\n     * @author Sean Owen\n     */\n    class GridSampler {\n        /**\n         * <p>Checks a set of points that have been transformed to sample points on an image against\n         * the image's dimensions to see if the point are even within the image.</p>\n         *\n         * <p>This method will actually \"nudge\" the endpoints back onto the image if they are found to be\n         * barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder\n         * patterns in an image where the QR Code runs all the way to the image border.</p>\n         *\n         * <p>For efficiency, the method will check points from either end of the line until one is found\n         * to be within the image. Because the set of points are assumed to be linear, this is valid.</p>\n         *\n         * @param image image into which the points should map\n         * @param points actual points in x1,y1,...,xn,yn form\n         * @throws NotFoundException if an endpoint is lies outside the image boundaries\n         */\n        static checkAndNudgePoints(image, points) {\n            const width = image.getWidth();\n            const height = image.getHeight();\n            // Check and nudge points from start until we see some that are OK:\n            let nudged = true;\n            for (let offset = 0; offset < points.length && nudged; offset += 2) {\n                const x = Math.floor(points[offset]);\n                const y = Math.floor(points[offset + 1]);\n                if (x < -1 || x > width || y < -1 || y > height) {\n                    throw new NotFoundException();\n                }\n                nudged = false;\n                if (x === -1) {\n                    points[offset] = 0.0;\n                    nudged = true;\n                }\n                else if (x === width) {\n                    points[offset] = width - 1;\n                    nudged = true;\n                }\n                if (y === -1) {\n                    points[offset + 1] = 0.0;\n                    nudged = true;\n                }\n                else if (y === height) {\n                    points[offset + 1] = height - 1;\n                    nudged = true;\n                }\n            }\n            // Check and nudge points from end:\n            nudged = true;\n            for (let offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {\n                const x = Math.floor(points[offset]);\n                const y = Math.floor(points[offset + 1]);\n                if (x < -1 || x > width || y < -1 || y > height) {\n                    throw new NotFoundException();\n                }\n                nudged = false;\n                if (x === -1) {\n                    points[offset] = 0.0;\n                    nudged = true;\n                }\n                else if (x === width) {\n                    points[offset] = width - 1;\n                    nudged = true;\n                }\n                if (y === -1) {\n                    points[offset + 1] = 0.0;\n                    nudged = true;\n                }\n                else if (y === height) {\n                    points[offset + 1] = height - 1;\n                    nudged = true;\n                }\n            }\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing.common {*/\n    /**\n     * <p>This class implements a perspective transform in two dimensions. Given four source and four\n     * destination points, it will compute the transformation implied between them. The code is based\n     * directly upon section 3.4.2 of George Wolberg's \"Digital Image Warping\"; see pages 54-56.</p>\n     *\n     * @author Sean Owen\n     */\n    class PerspectiveTransform {\n        constructor(a11 /*float*/, a21 /*float*/, a31 /*float*/, a12 /*float*/, a22 /*float*/, a32 /*float*/, a13 /*float*/, a23 /*float*/, a33 /*float*/) {\n            this.a11 = a11;\n            this.a21 = a21;\n            this.a31 = a31;\n            this.a12 = a12;\n            this.a22 = a22;\n            this.a32 = a32;\n            this.a13 = a13;\n            this.a23 = a23;\n            this.a33 = a33;\n        }\n        static quadrilateralToQuadrilateral(x0 /*float*/, y0 /*float*/, x1 /*float*/, y1 /*float*/, x2 /*float*/, y2 /*float*/, x3 /*float*/, y3 /*float*/, x0p /*float*/, y0p /*float*/, x1p /*float*/, y1p /*float*/, x2p /*float*/, y2p /*float*/, x3p /*float*/, y3p /*float*/) {\n            const qToS = PerspectiveTransform.quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);\n            const sToQ = PerspectiveTransform.squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);\n            return sToQ.times(qToS);\n        }\n        transformPoints(points) {\n            const max = points.length;\n            const a11 = this.a11;\n            const a12 = this.a12;\n            const a13 = this.a13;\n            const a21 = this.a21;\n            const a22 = this.a22;\n            const a23 = this.a23;\n            const a31 = this.a31;\n            const a32 = this.a32;\n            const a33 = this.a33;\n            for (let i = 0; i < max; i += 2) {\n                const x = points[i];\n                const y = points[i + 1];\n                const denominator = a13 * x + a23 * y + a33;\n                points[i] = (a11 * x + a21 * y + a31) / denominator;\n                points[i + 1] = (a12 * x + a22 * y + a32) / denominator;\n            }\n        }\n        transformPointsWithValues(xValues, yValues) {\n            const a11 = this.a11;\n            const a12 = this.a12;\n            const a13 = this.a13;\n            const a21 = this.a21;\n            const a22 = this.a22;\n            const a23 = this.a23;\n            const a31 = this.a31;\n            const a32 = this.a32;\n            const a33 = this.a33;\n            const n = xValues.length;\n            for (let i = 0; i < n; i++) {\n                const x = xValues[i];\n                const y = yValues[i];\n                const denominator = a13 * x + a23 * y + a33;\n                xValues[i] = (a11 * x + a21 * y + a31) / denominator;\n                yValues[i] = (a12 * x + a22 * y + a32) / denominator;\n            }\n        }\n        static squareToQuadrilateral(x0 /*float*/, y0 /*float*/, x1 /*float*/, y1 /*float*/, x2 /*float*/, y2 /*float*/, x3 /*float*/, y3 /*float*/) {\n            const dx3 = x0 - x1 + x2 - x3;\n            const dy3 = y0 - y1 + y2 - y3;\n            if (dx3 === 0.0 && dy3 === 0.0) {\n                // Affine\n                return new PerspectiveTransform(x1 - x0, x2 - x1, x0, y1 - y0, y2 - y1, y0, 0.0, 0.0, 1.0);\n            }\n            else {\n                const dx1 = x1 - x2;\n                const dx2 = x3 - x2;\n                const dy1 = y1 - y2;\n                const dy2 = y3 - y2;\n                const denominator = dx1 * dy2 - dx2 * dy1;\n                const a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n                const a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n                return new PerspectiveTransform(x1 - x0 + a13 * x1, x3 - x0 + a23 * x3, x0, y1 - y0 + a13 * y1, y3 - y0 + a23 * y3, y0, a13, a23, 1.0);\n            }\n        }\n        static quadrilateralToSquare(x0 /*float*/, y0 /*float*/, x1 /*float*/, y1 /*float*/, x2 /*float*/, y2 /*float*/, x3 /*float*/, y3 /*float*/) {\n            // Here, the adjoint serves as the inverse:\n            return PerspectiveTransform.squareToQuadrilateral(x0, y0, x1, y1, x2, y2, x3, y3).buildAdjoint();\n        }\n        buildAdjoint() {\n            // Adjoint is the transpose of the cofactor matrix:\n            return new PerspectiveTransform(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21);\n        }\n        times(other) {\n            return new PerspectiveTransform(this.a11 * other.a11 + this.a21 * other.a12 + this.a31 * other.a13, this.a11 * other.a21 + this.a21 * other.a22 + this.a31 * other.a23, this.a11 * other.a31 + this.a21 * other.a32 + this.a31 * other.a33, this.a12 * other.a11 + this.a22 * other.a12 + this.a32 * other.a13, this.a12 * other.a21 + this.a22 * other.a22 + this.a32 * other.a23, this.a12 * other.a31 + this.a22 * other.a32 + this.a32 * other.a33, this.a13 * other.a11 + this.a23 * other.a12 + this.a33 * other.a13, this.a13 * other.a21 + this.a23 * other.a22 + this.a33 * other.a23, this.a13 * other.a31 + this.a23 * other.a32 + this.a33 * other.a33);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Sean Owen\n     */\n    class DefaultGridSampler extends GridSampler {\n        /*@Override*/\n        sampleGrid(image, dimensionX /*int*/, dimensionY /*int*/, p1ToX /*float*/, p1ToY /*float*/, p2ToX /*float*/, p2ToY /*float*/, p3ToX /*float*/, p3ToY /*float*/, p4ToX /*float*/, p4ToY /*float*/, p1FromX /*float*/, p1FromY /*float*/, p2FromX /*float*/, p2FromY /*float*/, p3FromX /*float*/, p3FromY /*float*/, p4FromX /*float*/, p4FromY /*float*/) {\n            const transform = PerspectiveTransform.quadrilateralToQuadrilateral(p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY);\n            return this.sampleGridWithTransform(image, dimensionX, dimensionY, transform);\n        }\n        /*@Override*/\n        sampleGridWithTransform(image, dimensionX /*int*/, dimensionY /*int*/, transform) {\n            if (dimensionX <= 0 || dimensionY <= 0) {\n                throw new NotFoundException();\n            }\n            const bits = new BitMatrix(dimensionX, dimensionY);\n            const points = new Float32Array(2 * dimensionX);\n            for (let y = 0; y < dimensionY; y++) {\n                const max = points.length;\n                const iValue = y + 0.5;\n                for (let x = 0; x < max; x += 2) {\n                    points[x] = (x / 2) + 0.5;\n                    points[x + 1] = iValue;\n                }\n                transform.transformPoints(points);\n                // Quick check to see if points transformed to something inside the image\n                // sufficient to check the endpoints\n                GridSampler.checkAndNudgePoints(image, points);\n                try {\n                    for (let x = 0; x < max; x += 2) {\n                        if (image.get(Math.floor(points[x]), Math.floor(points[x + 1]))) {\n                            // Black(-ish) pixel\n                            bits.set(x / 2, y);\n                        }\n                    }\n                }\n                catch (aioobe /*: ArrayIndexOutOfBoundsException*/) {\n                    // This feels wrong, but, sometimes if the finder patterns are misidentified, the resulting\n                    // transform gets \"twisted\" such that it maps a straight line of points to a set of points\n                    // whose endpoints are in bounds, but others are not. There is probably some mathematical\n                    // way to detect this about the transformation that I don't know yet.\n                    // This results in an ugly runtime exception despite our clever checks above -- can't have\n                    // that. We could check each point's coordinates but that feels duplicative. We settle for\n                    // catching and wrapping ArrayIndexOutOfBoundsException.\n                    throw new NotFoundException();\n                }\n            }\n            return bits;\n        }\n    }\n\n    class GridSamplerInstance {\n        /**\n         * Sets the implementation of GridSampler used by the library. One global\n         * instance is stored, which may sound problematic. But, the implementation provided\n         * ought to be appropriate for the entire platform, and all uses of this library\n         * in the whole lifetime of the JVM. For instance, an Android activity can swap in\n         * an implementation that takes advantage of native platform libraries.\n         *\n         * @param newGridSampler The platform-specific object to install.\n         */\n        static setGridSampler(newGridSampler) {\n            GridSamplerInstance.gridSampler = newGridSampler;\n        }\n        /**\n         * @return the current implementation of GridSampler\n         */\n        static getInstance() {\n            return GridSamplerInstance.gridSampler;\n        }\n    }\n    GridSamplerInstance.gridSampler = new DefaultGridSampler();\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    class Point {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n        toResultPoint() {\n            return new ResultPoint(this.getX(), this.getY());\n        }\n        getX() {\n            return this.x;\n        }\n        getY() {\n            return this.y;\n        }\n    }\n    /**\n     * Encapsulates logic that can detect an Aztec Code in an image, even if the Aztec Code\n     * is rotated or skewed, or partially obscured.\n     *\n     * @author David Olivier\n     * @author Frank Yellin\n     */\n    class Detector {\n        constructor(image) {\n            this.EXPECTED_CORNER_BITS = new Int32Array([\n                0xee0,\n                0x1dc,\n                0x83b,\n                0x707,\n            ]);\n            this.image = image;\n        }\n        detect() {\n            return this.detectMirror(false);\n        }\n        /**\n         * Detects an Aztec Code in an image.\n         *\n         * @param isMirror if true, image is a mirror-image of original\n         * @return {@link AztecDetectorResult} encapsulating results of detecting an Aztec Code\n         * @throws NotFoundException if no Aztec Code can be found\n         */\n        detectMirror(isMirror) {\n            // 1. Get the center of the aztec matrix\n            let pCenter = this.getMatrixCenter();\n            // 2. Get the center points of the four diagonal points just outside the bull's eye\n            //  [topRight, bottomRight, bottomLeft, topLeft]\n            let bullsEyeCorners = this.getBullsEyeCorners(pCenter);\n            if (isMirror) {\n                let temp = bullsEyeCorners[0];\n                bullsEyeCorners[0] = bullsEyeCorners[2];\n                bullsEyeCorners[2] = temp;\n            }\n            // 3. Get the size of the matrix and other parameters from the bull's eye\n            this.extractParameters(bullsEyeCorners);\n            // 4. Sample the grid\n            let bits = this.sampleGrid(this.image, bullsEyeCorners[this.shift % 4], bullsEyeCorners[(this.shift + 1) % 4], bullsEyeCorners[(this.shift + 2) % 4], bullsEyeCorners[(this.shift + 3) % 4]);\n            // 5. Get the corners of the matrix.\n            let corners = this.getMatrixCornerPoints(bullsEyeCorners);\n            return new AztecDetectorResult(bits, corners, this.compact, this.nbDataBlocks, this.nbLayers);\n        }\n        /**\n         * Extracts the number of data layers and data blocks from the layer around the bull's eye.\n         *\n         * @param bullsEyeCorners the array of bull's eye corners\n         * @throws NotFoundException in case of too many errors or invalid parameters\n         */\n        extractParameters(bullsEyeCorners) {\n            if (!this.isValidPoint(bullsEyeCorners[0]) || !this.isValidPoint(bullsEyeCorners[1]) ||\n                !this.isValidPoint(bullsEyeCorners[2]) || !this.isValidPoint(bullsEyeCorners[3])) {\n                throw new NotFoundException();\n            }\n            let length = 2 * this.nbCenterLayers;\n            // Get the bits around the bull's eye\n            let sides = new Int32Array([\n                this.sampleLine(bullsEyeCorners[0], bullsEyeCorners[1], length),\n                this.sampleLine(bullsEyeCorners[1], bullsEyeCorners[2], length),\n                this.sampleLine(bullsEyeCorners[2], bullsEyeCorners[3], length),\n                this.sampleLine(bullsEyeCorners[3], bullsEyeCorners[0], length) // Top\n            ]);\n            // bullsEyeCorners[shift] is the corner of the bulls'eye that has three\n            // orientation marks.\n            // sides[shift] is the row/column that goes from the corner with three\n            // orientation marks to the corner with two.\n            this.shift = this.getRotation(sides, length);\n            // Flatten the parameter bits into a single 28- or 40-bit long\n            let parameterData = 0;\n            for (let i = 0; i < 4; i++) {\n                let side = sides[(this.shift + i) % 4];\n                if (this.compact) {\n                    // Each side of the form ..XXXXXXX. where Xs are parameter data\n                    parameterData <<= 7;\n                    parameterData += (side >> 1) & 0x7F;\n                }\n                else {\n                    // Each side of the form ..XXXXX.XXXXX. where Xs are parameter data\n                    parameterData <<= 10;\n                    parameterData += ((side >> 2) & (0x1f << 5)) + ((side >> 1) & 0x1F);\n                }\n            }\n            // Corrects parameter data using RS.  Returns just the data portion\n            // without the error correction.\n            let correctedData = this.getCorrectedParameterData(parameterData, this.compact);\n            if (this.compact) {\n                // 8 bits:  2 bits layers and 6 bits data blocks\n                this.nbLayers = (correctedData >> 6) + 1;\n                this.nbDataBlocks = (correctedData & 0x3F) + 1;\n            }\n            else {\n                // 16 bits:  5 bits layers and 11 bits data blocks\n                this.nbLayers = (correctedData >> 11) + 1;\n                this.nbDataBlocks = (correctedData & 0x7FF) + 1;\n            }\n        }\n        getRotation(sides, length) {\n            // In a normal pattern, we expect to See\n            //   **    .*             D       A\n            //   *      *\n            //\n            //   .      *\n            //   ..    ..             C       B\n            //\n            // Grab the 3 bits from each of the sides the form the locator pattern and concatenate\n            // into a 12-bit integer.  Start with the bit at A\n            let cornerBits = 0;\n            sides.forEach((side, idx, arr) => {\n                // XX......X where X's are orientation marks\n                let t = ((side >> (length - 2)) << 1) + (side & 1);\n                cornerBits = (cornerBits << 3) + t;\n            });\n            // for (var side in sides) {\n            //     // XX......X where X's are orientation marks\n            //     var t = ((side >> (length - 2)) << 1) + (side & 1);\n            //     cornerBits = (cornerBits << 3) + t;\n            // }\n            // Mov the bottom bit to the top, so that the three bits of the locator pattern at A are\n            // together.  cornerBits is now:\n            //  3 orientation bits at A || 3 orientation bits at B || ... || 3 orientation bits at D\n            cornerBits = ((cornerBits & 1) << 11) + (cornerBits >> 1);\n            // The result shift indicates which element of BullsEyeCorners[] goes into the top-left\n            // corner. Since the four rotation values have a Hamming distance of 8, we\n            // can easily tolerate two errors.\n            for (let shift = 0; shift < 4; shift++) {\n                if (Integer.bitCount(cornerBits ^ this.EXPECTED_CORNER_BITS[shift]) <= 2) {\n                    return shift;\n                }\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * Corrects the parameter bits using Reed-Solomon algorithm.\n         *\n         * @param parameterData parameter bits\n         * @param compact true if this is a compact Aztec code\n         * @throws NotFoundException if the array contains too many errors\n         */\n        getCorrectedParameterData(parameterData, compact) {\n            let numCodewords;\n            let numDataCodewords;\n            if (compact) {\n                numCodewords = 7;\n                numDataCodewords = 2;\n            }\n            else {\n                numCodewords = 10;\n                numDataCodewords = 4;\n            }\n            let numECCodewords = numCodewords - numDataCodewords;\n            let parameterWords = new Int32Array(numCodewords);\n            for (let i = numCodewords - 1; i >= 0; --i) {\n                parameterWords[i] = parameterData & 0xF;\n                parameterData >>= 4;\n            }\n            try {\n                let rsDecoder = new ReedSolomonDecoder(GenericGF.AZTEC_PARAM);\n                rsDecoder.decode(parameterWords, numECCodewords);\n            }\n            catch (ignored) {\n                throw new NotFoundException();\n            }\n            // Toss the error correction.  Just return the data as an integer\n            let result = 0;\n            for (let i = 0; i < numDataCodewords; i++) {\n                result = (result << 4) + parameterWords[i];\n            }\n            return result;\n        }\n        /**\n         * Finds the corners of a bull-eye centered on the passed point.\n         * This returns the centers of the diagonal points just outside the bull's eye\n         * Returns [topRight, bottomRight, bottomLeft, topLeft]\n         *\n         * @param pCenter Center point\n         * @return The corners of the bull-eye\n         * @throws NotFoundException If no valid bull-eye can be found\n         */\n        getBullsEyeCorners(pCenter) {\n            let pina = pCenter;\n            let pinb = pCenter;\n            let pinc = pCenter;\n            let pind = pCenter;\n            let color = true;\n            for (this.nbCenterLayers = 1; this.nbCenterLayers < 9; this.nbCenterLayers++) {\n                let pouta = this.getFirstDifferent(pina, color, 1, -1);\n                let poutb = this.getFirstDifferent(pinb, color, 1, 1);\n                let poutc = this.getFirstDifferent(pinc, color, -1, 1);\n                let poutd = this.getFirstDifferent(pind, color, -1, -1);\n                // d      a\n                //\n                // c      b\n                if (this.nbCenterLayers > 2) {\n                    let q = (this.distancePoint(poutd, pouta) * this.nbCenterLayers) / (this.distancePoint(pind, pina) * (this.nbCenterLayers + 2));\n                    if (q < 0.75 || q > 1.25 || !this.isWhiteOrBlackRectangle(pouta, poutb, poutc, poutd)) {\n                        break;\n                    }\n                }\n                pina = pouta;\n                pinb = poutb;\n                pinc = poutc;\n                pind = poutd;\n                color = !color;\n            }\n            if (this.nbCenterLayers !== 5 && this.nbCenterLayers !== 7) {\n                throw new NotFoundException();\n            }\n            this.compact = this.nbCenterLayers === 5;\n            // Expand the square by .5 pixel in each direction so that we're on the border\n            // between the white square and the black square\n            let pinax = new ResultPoint(pina.getX() + 0.5, pina.getY() - 0.5);\n            let pinbx = new ResultPoint(pinb.getX() + 0.5, pinb.getY() + 0.5);\n            let pincx = new ResultPoint(pinc.getX() - 0.5, pinc.getY() + 0.5);\n            let pindx = new ResultPoint(pind.getX() - 0.5, pind.getY() - 0.5);\n            // Expand the square so that its corners are the centers of the points\n            // just outside the bull's eye.\n            return this.expandSquare([pinax, pinbx, pincx, pindx], 2 * this.nbCenterLayers - 3, 2 * this.nbCenterLayers);\n        }\n        /**\n         * Finds a candidate center point of an Aztec code from an image\n         *\n         * @return the center point\n         */\n        getMatrixCenter() {\n            let pointA;\n            let pointB;\n            let pointC;\n            let pointD;\n            // Get a white rectangle that can be the border of the matrix in center bull's eye or\n            try {\n                let cornerPoints = new WhiteRectangleDetector(this.image).detect();\n                pointA = cornerPoints[0];\n                pointB = cornerPoints[1];\n                pointC = cornerPoints[2];\n                pointD = cornerPoints[3];\n            }\n            catch (e) {\n                // This exception can be in case the initial rectangle is white\n                // In that case, surely in the bull's eye, we try to expand the rectangle.\n                let cx = this.image.getWidth() / 2;\n                let cy = this.image.getHeight() / 2;\n                pointA = this.getFirstDifferent(new Point(cx + 7, cy - 7), false, 1, -1).toResultPoint();\n                pointB = this.getFirstDifferent(new Point(cx + 7, cy + 7), false, 1, 1).toResultPoint();\n                pointC = this.getFirstDifferent(new Point(cx - 7, cy + 7), false, -1, 1).toResultPoint();\n                pointD = this.getFirstDifferent(new Point(cx - 7, cy - 7), false, -1, -1).toResultPoint();\n            }\n            // Compute the center of the rectangle\n            let cx = MathUtils.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n            let cy = MathUtils.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0);\n            // Redetermine the white rectangle starting from previously computed center.\n            // This will ensure that we end up with a white rectangle in center bull's eye\n            // in order to compute a more accurate center.\n            try {\n                let cornerPoints = new WhiteRectangleDetector(this.image, 15, cx, cy).detect();\n                pointA = cornerPoints[0];\n                pointB = cornerPoints[1];\n                pointC = cornerPoints[2];\n                pointD = cornerPoints[3];\n            }\n            catch (e) {\n                // This exception can be in case the initial rectangle is white\n                // In that case we try to expand the rectangle.\n                pointA = this.getFirstDifferent(new Point(cx + 7, cy - 7), false, 1, -1).toResultPoint();\n                pointB = this.getFirstDifferent(new Point(cx + 7, cy + 7), false, 1, 1).toResultPoint();\n                pointC = this.getFirstDifferent(new Point(cx - 7, cy + 7), false, -1, 1).toResultPoint();\n                pointD = this.getFirstDifferent(new Point(cx - 7, cy - 7), false, -1, -1).toResultPoint();\n            }\n            // Recompute the center of the rectangle\n            cx = MathUtils.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n            cy = MathUtils.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0);\n            return new Point(cx, cy);\n        }\n        /**\n         * Gets the Aztec code corners from the bull's eye corners and the parameters.\n         *\n         * @param bullsEyeCorners the array of bull's eye corners\n         * @return the array of aztec code corners\n         */\n        getMatrixCornerPoints(bullsEyeCorners) {\n            return this.expandSquare(bullsEyeCorners, 2 * this.nbCenterLayers, this.getDimension());\n        }\n        /**\n         * Creates a BitMatrix by sampling the provided image.\n         * topLeft, topRight, bottomRight, and bottomLeft are the centers of the squares on the\n         * diagonal just outside the bull's eye.\n         */\n        sampleGrid(image, topLeft, topRight, bottomRight, bottomLeft) {\n            let sampler = GridSamplerInstance.getInstance();\n            let dimension = this.getDimension();\n            let low = dimension / 2 - this.nbCenterLayers;\n            let high = dimension / 2 + this.nbCenterLayers;\n            return sampler.sampleGrid(image, dimension, dimension, low, low, // topleft\n            high, low, // topright\n            high, high, // bottomright\n            low, high, // bottomleft\n            topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n        }\n        /**\n         * Samples a line.\n         *\n         * @param p1   start point (inclusive)\n         * @param p2   end point (exclusive)\n         * @param size number of bits\n         * @return the array of bits as an int (first bit is high-order bit of result)\n         */\n        sampleLine(p1, p2, size) {\n            let result = 0;\n            let d = this.distanceResultPoint(p1, p2);\n            let moduleSize = d / size;\n            let px = p1.getX();\n            let py = p1.getY();\n            let dx = moduleSize * (p2.getX() - p1.getX()) / d;\n            let dy = moduleSize * (p2.getY() - p1.getY()) / d;\n            for (let i = 0; i < size; i++) {\n                if (this.image.get(MathUtils.round(px + i * dx), MathUtils.round(py + i * dy))) {\n                    result |= 1 << (size - i - 1);\n                }\n            }\n            return result;\n        }\n        /**\n         * @return true if the border of the rectangle passed in parameter is compound of white points only\n         *         or black points only\n         */\n        isWhiteOrBlackRectangle(p1, p2, p3, p4) {\n            let corr = 3;\n            p1 = new Point(p1.getX() - corr, p1.getY() + corr);\n            p2 = new Point(p2.getX() - corr, p2.getY() - corr);\n            p3 = new Point(p3.getX() + corr, p3.getY() - corr);\n            p4 = new Point(p4.getX() + corr, p4.getY() + corr);\n            let cInit = this.getColor(p4, p1);\n            if (cInit === 0) {\n                return false;\n            }\n            let c = this.getColor(p1, p2);\n            if (c !== cInit) {\n                return false;\n            }\n            c = this.getColor(p2, p3);\n            if (c !== cInit) {\n                return false;\n            }\n            c = this.getColor(p3, p4);\n            return c === cInit;\n        }\n        /**\n         * Gets the color of a segment\n         *\n         * @return 1 if segment more than 90% black, -1 if segment is more than 90% white, 0 else\n         */\n        getColor(p1, p2) {\n            let d = this.distancePoint(p1, p2);\n            let dx = (p2.getX() - p1.getX()) / d;\n            let dy = (p2.getY() - p1.getY()) / d;\n            let error = 0;\n            let px = p1.getX();\n            let py = p1.getY();\n            let colorModel = this.image.get(p1.getX(), p1.getY());\n            let iMax = Math.ceil(d);\n            for (let i = 0; i < iMax; i++) {\n                px += dx;\n                py += dy;\n                if (this.image.get(MathUtils.round(px), MathUtils.round(py)) !== colorModel) {\n                    error++;\n                }\n            }\n            let errRatio = error / d;\n            if (errRatio > 0.1 && errRatio < 0.9) {\n                return 0;\n            }\n            return (errRatio <= 0.1) === colorModel ? 1 : -1;\n        }\n        /**\n         * Gets the coordinate of the first point with a different color in the given direction\n         */\n        getFirstDifferent(init, color, dx, dy) {\n            let x = init.getX() + dx;\n            let y = init.getY() + dy;\n            while (this.isValid(x, y) && this.image.get(x, y) === color) {\n                x += dx;\n                y += dy;\n            }\n            x -= dx;\n            y -= dy;\n            while (this.isValid(x, y) && this.image.get(x, y) === color) {\n                x += dx;\n            }\n            x -= dx;\n            while (this.isValid(x, y) && this.image.get(x, y) === color) {\n                y += dy;\n            }\n            y -= dy;\n            return new Point(x, y);\n        }\n        /**\n         * Expand the square represented by the corner points by pushing out equally in all directions\n         *\n         * @param cornerPoints the corners of the square, which has the bull's eye at its center\n         * @param oldSide the original length of the side of the square in the target bit matrix\n         * @param newSide the new length of the size of the square in the target bit matrix\n         * @return the corners of the expanded square\n         */\n        expandSquare(cornerPoints, oldSide, newSide) {\n            let ratio = newSide / (2.0 * oldSide);\n            let dx = cornerPoints[0].getX() - cornerPoints[2].getX();\n            let dy = cornerPoints[0].getY() - cornerPoints[2].getY();\n            let centerx = (cornerPoints[0].getX() + cornerPoints[2].getX()) / 2.0;\n            let centery = (cornerPoints[0].getY() + cornerPoints[2].getY()) / 2.0;\n            let result0 = new ResultPoint(centerx + ratio * dx, centery + ratio * dy);\n            let result2 = new ResultPoint(centerx - ratio * dx, centery - ratio * dy);\n            dx = cornerPoints[1].getX() - cornerPoints[3].getX();\n            dy = cornerPoints[1].getY() - cornerPoints[3].getY();\n            centerx = (cornerPoints[1].getX() + cornerPoints[3].getX()) / 2.0;\n            centery = (cornerPoints[1].getY() + cornerPoints[3].getY()) / 2.0;\n            let result1 = new ResultPoint(centerx + ratio * dx, centery + ratio * dy);\n            let result3 = new ResultPoint(centerx - ratio * dx, centery - ratio * dy);\n            let results = [result0, result1, result2, result3];\n            return results;\n        }\n        isValid(x, y) {\n            return x >= 0 && x < this.image.getWidth() && y > 0 && y < this.image.getHeight();\n        }\n        isValidPoint(point) {\n            let x = MathUtils.round(point.getX());\n            let y = MathUtils.round(point.getY());\n            return this.isValid(x, y);\n        }\n        distancePoint(a, b) {\n            return MathUtils.distance(a.getX(), a.getY(), b.getX(), b.getY());\n        }\n        distanceResultPoint(a, b) {\n            return MathUtils.distance(a.getX(), a.getY(), b.getX(), b.getY());\n        }\n        getDimension() {\n            if (this.compact) {\n                return 4 * this.nbLayers + 11;\n            }\n            if (this.nbLayers <= 4) {\n                return 4 * this.nbLayers + 15;\n            }\n            return 4 * this.nbLayers + 2 * (Integer.truncDivision((this.nbLayers - 4), 8) + 1) + 15;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.List;\n    // import java.util.Map;\n    /**\n     * This implementation can detect and decode Aztec codes in an image.\n     *\n     * @author David Olivier\n     */\n    class AztecReader {\n        /**\n         * Locates and decodes a Data Matrix code in an image.\n         *\n         * @return a String representing the content encoded by the Data Matrix code\n         * @throws NotFoundException if a Data Matrix code cannot be found\n         * @throws FormatException if a Data Matrix code cannot be decoded\n         */\n        decode(image, hints = null) {\n            let exception = null;\n            let detector = new Detector(image.getBlackMatrix());\n            let points = null;\n            let decoderResult = null;\n            try {\n                let detectorResult = detector.detectMirror(false);\n                points = detectorResult.getPoints();\n                this.reportFoundResultPoints(hints, points);\n                decoderResult = new Decoder().decode(detectorResult);\n            }\n            catch (e) {\n                exception = e;\n            }\n            if (decoderResult == null) {\n                try {\n                    let detectorResult = detector.detectMirror(true);\n                    points = detectorResult.getPoints();\n                    this.reportFoundResultPoints(hints, points);\n                    decoderResult = new Decoder().decode(detectorResult);\n                }\n                catch (e) {\n                    if (exception != null) {\n                        throw exception;\n                    }\n                    throw e;\n                }\n            }\n            let result = new Result(decoderResult.getText(), decoderResult.getRawBytes(), decoderResult.getNumBits(), points, BarcodeFormat$1.AZTEC, System.currentTimeMillis());\n            let byteSegments = decoderResult.getByteSegments();\n            if (byteSegments != null) {\n                result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS, byteSegments);\n            }\n            let ecLevel = decoderResult.getECLevel();\n            if (ecLevel != null) {\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, ecLevel);\n            }\n            return result;\n        }\n        reportFoundResultPoints(hints, points) {\n            if (hints != null) {\n                let rpcb = hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n                if (rpcb != null) {\n                    points.forEach((point, idx, arr) => {\n                        rpcb.foundPossibleResultPoint(point);\n                    });\n                }\n            }\n        }\n        // @Override\n        reset() {\n            // do nothing\n        }\n    }\n\n    /**\n     * Aztec Code reader to use from browser.\n     *\n     * @class BrowserAztecCodeReader\n     * @extends {BrowserCodeReader}\n     */\n    class BrowserAztecCodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserAztecCodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         *\n         * @memberOf BrowserAztecCodeReader\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new AztecReader(), timeBetweenScansMillis);\n        }\n    }\n\n    /**\n     * Encapsulates functionality and implementation that is common to all families\n     * of one-dimensional barcodes.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     */\n    class OneDReader {\n        /*\n        @Override\n        public Result decode(BinaryBitmap image) throws NotFoundException, FormatException {\n          return decode(image, null);\n        }\n        */\n        // Note that we don't try rotation without the try harder flag, even if rotation was supported.\n        // @Override\n        decode(image, hints) {\n            try {\n                return this.doDecode(image, hints);\n            }\n            catch (nfe) {\n                const tryHarder = hints && (hints.get(DecodeHintType$1.TRY_HARDER) === true);\n                if (tryHarder && image.isRotateSupported()) {\n                    const rotatedImage = image.rotateCounterClockwise();\n                    const result = this.doDecode(rotatedImage, hints);\n                    // Record that we found it rotated 90 degrees CCW / 270 degrees CW\n                    const metadata = result.getResultMetadata();\n                    let orientation = 270;\n                    if (metadata !== null && (metadata.get(ResultMetadataType$1.ORIENTATION) === true)) {\n                        // But if we found it reversed in doDecode(), add in that result here:\n                        orientation = (orientation + metadata.get(ResultMetadataType$1.ORIENTATION) % 360);\n                    }\n                    result.putMetadata(ResultMetadataType$1.ORIENTATION, orientation);\n                    // Update result points\n                    const points = result.getResultPoints();\n                    if (points !== null) {\n                        const height = rotatedImage.getHeight();\n                        for (let i = 0; i < points.length; i++) {\n                            points[i] = new ResultPoint(height - points[i].getY() - 1, points[i].getX());\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    throw new NotFoundException();\n                }\n            }\n        }\n        // @Override\n        reset() {\n            // do nothing\n        }\n        /**\n         * We're going to examine rows from the middle outward, searching alternately above and below the\n         * middle, and farther out each time. rowStep is the number of rows between each successive\n         * attempt above and below the middle. So we'd scan row middle, then middle - rowStep, then\n         * middle + rowStep, then middle - (2 * rowStep), etc.\n         * rowStep is bigger as the image is taller, but is always at least 1. We've somewhat arbitrarily\n         * decided that moving up and down by about 1/16 of the image is pretty good; we try more of the\n         * image if \"trying harder\".\n         *\n         * @param image The image to decode\n         * @param hints Any hints that were requested\n         * @return The contents of the decoded barcode\n         * @throws NotFoundException Any spontaneous errors which occur\n         */\n        doDecode(image, hints) {\n            const width = image.getWidth();\n            const height = image.getHeight();\n            let row = new BitArray(width);\n            const tryHarder = hints && (hints.get(DecodeHintType$1.TRY_HARDER) === true);\n            const rowStep = Math.max(1, height >> (tryHarder ? 8 : 5));\n            let maxLines;\n            if (tryHarder) {\n                maxLines = height; // Look at the whole image, not just the center\n            }\n            else {\n                maxLines = 15; // 15 rows spaced 1/32 apart is roughly the middle half of the image\n            }\n            const middle = Math.trunc(height / 2);\n            for (let x = 0; x < maxLines; x++) {\n                // Scanning from the middle out. Determine which row we're looking at next:\n                const rowStepsAboveOrBelow = Math.trunc((x + 1) / 2);\n                const isAbove = (x & 0x01) === 0; // i.e. is x even?\n                const rowNumber = middle + rowStep * (isAbove ? rowStepsAboveOrBelow : -rowStepsAboveOrBelow);\n                if (rowNumber < 0 || rowNumber >= height) {\n                    // Oops, if we run off the top or bottom, stop\n                    break;\n                }\n                // Estimate black point for this row and load it:\n                try {\n                    row = image.getBlackRow(rowNumber, row);\n                }\n                catch (ignored) {\n                    continue;\n                }\n                // While we have the image data in a BitArray, it's fairly cheap to reverse it in place to\n                // handle decoding upside down barcodes.\n                for (let attempt = 0; attempt < 2; attempt++) {\n                    if (attempt === 1) { // trying again?\n                        row.reverse(); // reverse the row and continue\n                        // This means we will only ever draw result points *once* in the life of this method\n                        // since we want to avoid drawing the wrong points after flipping the row, and,\n                        // don't want to clutter with noise from every single row scan -- just the scans\n                        // that start on the center line.\n                        if (hints && (hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK) === true)) {\n                            const newHints = new Map();\n                            hints.forEach((hint, key) => newHints.set(key, hint));\n                            newHints.delete(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n                            hints = newHints;\n                        }\n                    }\n                    try {\n                        // Look for a barcode\n                        const result = this.decodeRow(rowNumber, row, hints);\n                        // We found our barcode\n                        if (attempt === 1) {\n                            // But it was upside down, so note that\n                            result.putMetadata(ResultMetadataType$1.ORIENTATION, 180);\n                            // And remember to flip the result points horizontally.\n                            const points = result.getResultPoints();\n                            if (points !== null) {\n                                points[0] = new ResultPoint(width - points[0].getX() - 1, points[0].getY());\n                                points[1] = new ResultPoint(width - points[1].getX() - 1, points[1].getY());\n                            }\n                        }\n                        return result;\n                    }\n                    catch (re) {\n                        // continue -- just couldn't decode this row\n                    }\n                }\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * Records the size of successive runs of white and black pixels in a row, starting at a given point.\n         * The values are recorded in the given array, and the number of runs recorded is equal to the size\n         * of the array. If the row starts on a white pixel at the given start point, then the first count\n         * recorded is the run of white pixels starting from that point; likewise it is the count of a run\n         * of black pixels if the row begin on a black pixels at that point.\n         *\n         * @param row row to count from\n         * @param start offset into row to start at\n         * @param counters array into which to record counts\n         * @throws NotFoundException if counters cannot be filled entirely from row before running out\n         *  of pixels\n         */\n        static recordPattern(row, start, counters) {\n            const numCounters = counters.length;\n            for (let index = 0; index < numCounters; index++)\n                counters[index] = 0;\n            const end = row.getSize();\n            if (start >= end) {\n                throw new NotFoundException();\n            }\n            let isWhite = !row.get(start);\n            let counterPosition = 0;\n            let i = start;\n            while (i < end) {\n                if (row.get(i) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (++counterPosition === numCounters) {\n                        break;\n                    }\n                    else {\n                        counters[counterPosition] = 1;\n                        isWhite = !isWhite;\n                    }\n                }\n                i++;\n            }\n            // If we read fully the last section of pixels and filled up our counters -- or filled\n            // the last counter but ran off the side of the image, OK. Otherwise, a problem.\n            if (!(counterPosition === numCounters || (counterPosition === numCounters - 1 && i === end))) {\n                throw new NotFoundException();\n            }\n        }\n        static recordPatternInReverse(row, start, counters) {\n            // This could be more efficient I guess\n            let numTransitionsLeft = counters.length;\n            let last = row.get(start);\n            while (start > 0 && numTransitionsLeft >= 0) {\n                if (row.get(--start) !== last) {\n                    numTransitionsLeft--;\n                    last = !last;\n                }\n            }\n            if (numTransitionsLeft >= 0) {\n                throw new NotFoundException();\n            }\n            OneDReader.recordPattern(row, start + 1, counters);\n        }\n        /**\n         * Determines how closely a set of observed counts of runs of black/white values matches a given\n         * target pattern. This is reported as the ratio of the total variance from the expected pattern\n         * proportions across all pattern elements, to the length of the pattern.\n         *\n         * @param counters observed counters\n         * @param pattern expected pattern\n         * @param maxIndividualVariance The most any counter can differ before we give up\n         * @return ratio of total variance between counters and pattern compared to total pattern size\n         */\n        static patternMatchVariance(counters, pattern, maxIndividualVariance) {\n            const numCounters = counters.length;\n            let total = 0;\n            let patternLength = 0;\n            for (let i = 0; i < numCounters; i++) {\n                total += counters[i];\n                patternLength += pattern[i];\n            }\n            if (total < patternLength) {\n                // If we don't even have one pixel per unit of bar width, assume this is too small\n                // to reliably match, so fail:\n                return Number.POSITIVE_INFINITY;\n            }\n            const unitBarWidth = total / patternLength;\n            maxIndividualVariance *= unitBarWidth;\n            let totalVariance = 0.0;\n            for (let x = 0; x < numCounters; x++) {\n                const counter = counters[x];\n                const scaledPattern = pattern[x] * unitBarWidth;\n                const variance = counter > scaledPattern ? counter - scaledPattern : scaledPattern - counter;\n                if (variance > maxIndividualVariance) {\n                    return Number.POSITIVE_INFINITY;\n                }\n                totalVariance += variance;\n            }\n            return totalVariance / total;\n        }\n    }\n\n    /**\n     * <p>Decodes Code 128 barcodes.</p>\n     *\n     * @author Sean Owen\n     */\n    class Code128Reader extends OneDReader {\n        static findStartPattern(row) {\n            const width = row.getSize();\n            const rowOffset = row.getNextSet(0);\n            let counterPosition = 0;\n            let counters = Int32Array.from([0, 0, 0, 0, 0, 0]);\n            let patternStart = rowOffset;\n            let isWhite = false;\n            const patternLength = 6;\n            for (let i = rowOffset; i < width; i++) {\n                if (row.get(i) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === (patternLength - 1)) {\n                        let bestVariance = Code128Reader.MAX_AVG_VARIANCE;\n                        let bestMatch = -1;\n                        for (let startCode = Code128Reader.CODE_START_A; startCode <= Code128Reader.CODE_START_C; startCode++) {\n                            const variance = OneDReader.patternMatchVariance(counters, Code128Reader.CODE_PATTERNS[startCode], Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n                            if (variance < bestVariance) {\n                                bestVariance = variance;\n                                bestMatch = startCode;\n                            }\n                        }\n                        // Look for whitespace before start pattern, >= 50% of width of start pattern\n                        if (bestMatch >= 0 &&\n                            row.isRange(Math.max(0, patternStart - (i - patternStart) / 2), patternStart, false)) {\n                            return Int32Array.from([patternStart, i, bestMatch]);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters = counters.slice(2, counters.length - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static decodeCode(row, counters, rowOffset) {\n            OneDReader.recordPattern(row, rowOffset, counters);\n            let bestVariance = Code128Reader.MAX_AVG_VARIANCE; // worst variance we'll accept\n            let bestMatch = -1;\n            for (let d = 0; d < Code128Reader.CODE_PATTERNS.length; d++) {\n                const pattern = Code128Reader.CODE_PATTERNS[d];\n                const variance = this.patternMatchVariance(counters, pattern, Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n                if (variance < bestVariance) {\n                    bestVariance = variance;\n                    bestMatch = d;\n                }\n            }\n            // TODO We're overlooking the fact that the STOP pattern has 7 values, not 6.\n            if (bestMatch >= 0) {\n                return bestMatch;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n        decodeRow(rowNumber, row, hints) {\n            const convertFNC1 = hints && (hints.get(DecodeHintType$1.ASSUME_GS1) === true);\n            const startPatternInfo = Code128Reader.findStartPattern(row);\n            const startCode = startPatternInfo[2];\n            let currentRawCodesIndex = 0;\n            const rawCodes = new Uint8Array(20);\n            rawCodes[currentRawCodesIndex++] = startCode;\n            let codeSet;\n            switch (startCode) {\n                case Code128Reader.CODE_START_A:\n                    codeSet = Code128Reader.CODE_CODE_A;\n                    break;\n                case Code128Reader.CODE_START_B:\n                    codeSet = Code128Reader.CODE_CODE_B;\n                    break;\n                case Code128Reader.CODE_START_C:\n                    codeSet = Code128Reader.CODE_CODE_C;\n                    break;\n                default:\n                    throw new FormatException();\n            }\n            let done = false;\n            let isNextShifted = false;\n            let result = '';\n            let lastStart = startPatternInfo[0];\n            let nextStart = startPatternInfo[1];\n            const counters = Int32Array.from([0, 0, 0, 0, 0, 0]);\n            let lastCode = 0;\n            let code = 0;\n            let checksumTotal = startCode;\n            let multiplier = 0;\n            let lastCharacterWasPrintable = true;\n            let upperMode = false;\n            let shiftUpperMode = false;\n            while (!done) {\n                const unshift = isNextShifted;\n                isNextShifted = false;\n                // Save off last code\n                lastCode = code;\n                // Decode another code from image\n                code = Code128Reader.decodeCode(row, counters, nextStart);\n                rawCodes[currentRawCodesIndex++] = code;\n                // Remember whether the last code was printable or not (excluding CODE_STOP)\n                if (code !== Code128Reader.CODE_STOP) {\n                    lastCharacterWasPrintable = true;\n                }\n                // Add to checksum computation (if not CODE_STOP of course)\n                if (code !== Code128Reader.CODE_STOP) {\n                    multiplier++;\n                    checksumTotal += multiplier * code;\n                }\n                // Advance to where the next code will to start\n                lastStart = nextStart;\n                nextStart += counters.reduce((previous, current) => previous + current, 0);\n                // Take care of illegal start codes\n                switch (code) {\n                    case Code128Reader.CODE_START_A:\n                    case Code128Reader.CODE_START_B:\n                    case Code128Reader.CODE_START_C:\n                        throw new FormatException();\n                }\n                switch (codeSet) {\n                    case Code128Reader.CODE_CODE_A:\n                        if (code < 64) {\n                            if (shiftUpperMode === upperMode) {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code));\n                            }\n                            else {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code + 128));\n                            }\n                            shiftUpperMode = false;\n                        }\n                        else if (code < 96) {\n                            if (shiftUpperMode === upperMode) {\n                                result += String.fromCharCode((code - 64));\n                            }\n                            else {\n                                result += String.fromCharCode((code + 64));\n                            }\n                            shiftUpperMode = false;\n                        }\n                        else {\n                            // Don't let CODE_STOP, which always appears, affect whether whether we think the last\n                            // code was printable or not.\n                            if (code !== Code128Reader.CODE_STOP) {\n                                lastCharacterWasPrintable = false;\n                            }\n                            switch (code) {\n                                case Code128Reader.CODE_FNC_1:\n                                    if (convertFNC1) {\n                                        if (result.length === 0) {\n                                            // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                                            // is FNC1 then this is GS1-128. We add the symbology identifier.\n                                            result += ']C1';\n                                        }\n                                        else {\n                                            // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                                            result += String.fromCharCode(29);\n                                        }\n                                    }\n                                    break;\n                                case Code128Reader.CODE_FNC_2:\n                                case Code128Reader.CODE_FNC_3:\n                                    // do nothing?\n                                    break;\n                                case Code128Reader.CODE_FNC_4_A:\n                                    if (!upperMode && shiftUpperMode) {\n                                        upperMode = true;\n                                        shiftUpperMode = false;\n                                    }\n                                    else if (upperMode && shiftUpperMode) {\n                                        upperMode = false;\n                                        shiftUpperMode = false;\n                                    }\n                                    else {\n                                        shiftUpperMode = true;\n                                    }\n                                    break;\n                                case Code128Reader.CODE_SHIFT:\n                                    isNextShifted = true;\n                                    codeSet = Code128Reader.CODE_CODE_B;\n                                    break;\n                                case Code128Reader.CODE_CODE_B:\n                                    codeSet = Code128Reader.CODE_CODE_B;\n                                    break;\n                                case Code128Reader.CODE_CODE_C:\n                                    codeSet = Code128Reader.CODE_CODE_C;\n                                    break;\n                                case Code128Reader.CODE_STOP:\n                                    done = true;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Code128Reader.CODE_CODE_B:\n                        if (code < 96) {\n                            if (shiftUpperMode === upperMode) {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code));\n                            }\n                            else {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code + 128));\n                            }\n                            shiftUpperMode = false;\n                        }\n                        else {\n                            if (code !== Code128Reader.CODE_STOP) {\n                                lastCharacterWasPrintable = false;\n                            }\n                            switch (code) {\n                                case Code128Reader.CODE_FNC_1:\n                                    if (convertFNC1) {\n                                        if (result.length === 0) {\n                                            // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                                            // is FNC1 then this is GS1-128. We add the symbology identifier.\n                                            result += ']C1';\n                                        }\n                                        else {\n                                            // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                                            result += String.fromCharCode(29);\n                                        }\n                                    }\n                                    break;\n                                case Code128Reader.CODE_FNC_2:\n                                case Code128Reader.CODE_FNC_3:\n                                    // do nothing?\n                                    break;\n                                case Code128Reader.CODE_FNC_4_B:\n                                    if (!upperMode && shiftUpperMode) {\n                                        upperMode = true;\n                                        shiftUpperMode = false;\n                                    }\n                                    else if (upperMode && shiftUpperMode) {\n                                        upperMode = false;\n                                        shiftUpperMode = false;\n                                    }\n                                    else {\n                                        shiftUpperMode = true;\n                                    }\n                                    break;\n                                case Code128Reader.CODE_SHIFT:\n                                    isNextShifted = true;\n                                    codeSet = Code128Reader.CODE_CODE_A;\n                                    break;\n                                case Code128Reader.CODE_CODE_A:\n                                    codeSet = Code128Reader.CODE_CODE_A;\n                                    break;\n                                case Code128Reader.CODE_CODE_C:\n                                    codeSet = Code128Reader.CODE_CODE_C;\n                                    break;\n                                case Code128Reader.CODE_STOP:\n                                    done = true;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Code128Reader.CODE_CODE_C:\n                        if (code < 100) {\n                            if (code < 10) {\n                                result += '0';\n                            }\n                            result += code;\n                        }\n                        else {\n                            if (code !== Code128Reader.CODE_STOP) {\n                                lastCharacterWasPrintable = false;\n                            }\n                            switch (code) {\n                                case Code128Reader.CODE_FNC_1:\n                                    if (convertFNC1) {\n                                        if (result.length === 0) {\n                                            // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                                            // is FNC1 then this is GS1-128. We add the symbology identifier.\n                                            result += ']C1';\n                                        }\n                                        else {\n                                            // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                                            result += String.fromCharCode(29);\n                                        }\n                                    }\n                                    break;\n                                case Code128Reader.CODE_CODE_A:\n                                    codeSet = Code128Reader.CODE_CODE_A;\n                                    break;\n                                case Code128Reader.CODE_CODE_B:\n                                    codeSet = Code128Reader.CODE_CODE_B;\n                                    break;\n                                case Code128Reader.CODE_STOP:\n                                    done = true;\n                                    break;\n                            }\n                        }\n                        break;\n                }\n                // Unshift back to another code set if we were shifted\n                if (unshift) {\n                    codeSet = codeSet === Code128Reader.CODE_CODE_A ? Code128Reader.CODE_CODE_B : Code128Reader.CODE_CODE_A;\n                }\n            }\n            const lastPatternSize = nextStart - lastStart;\n            // Check for ample whitespace following pattern, but, to do this we first need to remember that\n            // we fudged decoding CODE_STOP since it actually has 7 bars, not 6. There is a black bar left\n            // to read off. Would be slightly better to properly read. Here we just skip it:\n            nextStart = row.getNextUnset(nextStart);\n            if (!row.isRange(nextStart, Math.min(row.getSize(), nextStart + (nextStart - lastStart) / 2), false)) {\n                throw new NotFoundException();\n            }\n            // Pull out from sum the value of the penultimate check code\n            checksumTotal -= multiplier * lastCode;\n            // lastCode is the checksum then:\n            if (checksumTotal % 103 !== lastCode) {\n                throw new ChecksumException();\n            }\n            // Need to pull out the check digits from string\n            const resultLength = result.length;\n            if (resultLength === 0) {\n                // false positive\n                throw new NotFoundException();\n            }\n            // Only bother if the result had at least one character, and if the checksum digit happened to\n            // be a printable character. If it was just interpreted as a control code, nothing to remove.\n            if (resultLength > 0 && lastCharacterWasPrintable) {\n                if (codeSet === Code128Reader.CODE_CODE_C) {\n                    result = result.substring(0, resultLength - 2);\n                }\n                else {\n                    result = result.substring(0, resultLength - 1);\n                }\n            }\n            const left = (startPatternInfo[1] + startPatternInfo[0]) / 2.0;\n            const right = lastStart + lastPatternSize / 2.0;\n            const rawCodesSize = rawCodes.length;\n            const rawBytes = new Uint8Array(rawCodesSize);\n            for (let i = 0; i < rawCodesSize; i++) {\n                rawBytes[i] = rawCodes[i];\n            }\n            const points = [new ResultPoint(left, rowNumber), new ResultPoint(right, rowNumber)];\n            return new Result(result, rawBytes, 0, points, BarcodeFormat$1.CODE_128, new Date().getTime());\n        }\n    }\n    Code128Reader.CODE_PATTERNS = [\n        Int32Array.from([2, 1, 2, 2, 2, 2]),\n        Int32Array.from([2, 2, 2, 1, 2, 2]),\n        Int32Array.from([2, 2, 2, 2, 2, 1]),\n        Int32Array.from([1, 2, 1, 2, 2, 3]),\n        Int32Array.from([1, 2, 1, 3, 2, 2]),\n        Int32Array.from([1, 3, 1, 2, 2, 2]),\n        Int32Array.from([1, 2, 2, 2, 1, 3]),\n        Int32Array.from([1, 2, 2, 3, 1, 2]),\n        Int32Array.from([1, 3, 2, 2, 1, 2]),\n        Int32Array.from([2, 2, 1, 2, 1, 3]),\n        Int32Array.from([2, 2, 1, 3, 1, 2]),\n        Int32Array.from([2, 3, 1, 2, 1, 2]),\n        Int32Array.from([1, 1, 2, 2, 3, 2]),\n        Int32Array.from([1, 2, 2, 1, 3, 2]),\n        Int32Array.from([1, 2, 2, 2, 3, 1]),\n        Int32Array.from([1, 1, 3, 2, 2, 2]),\n        Int32Array.from([1, 2, 3, 1, 2, 2]),\n        Int32Array.from([1, 2, 3, 2, 2, 1]),\n        Int32Array.from([2, 2, 3, 2, 1, 1]),\n        Int32Array.from([2, 2, 1, 1, 3, 2]),\n        Int32Array.from([2, 2, 1, 2, 3, 1]),\n        Int32Array.from([2, 1, 3, 2, 1, 2]),\n        Int32Array.from([2, 2, 3, 1, 1, 2]),\n        Int32Array.from([3, 1, 2, 1, 3, 1]),\n        Int32Array.from([3, 1, 1, 2, 2, 2]),\n        Int32Array.from([3, 2, 1, 1, 2, 2]),\n        Int32Array.from([3, 2, 1, 2, 2, 1]),\n        Int32Array.from([3, 1, 2, 2, 1, 2]),\n        Int32Array.from([3, 2, 2, 1, 1, 2]),\n        Int32Array.from([3, 2, 2, 2, 1, 1]),\n        Int32Array.from([2, 1, 2, 1, 2, 3]),\n        Int32Array.from([2, 1, 2, 3, 2, 1]),\n        Int32Array.from([2, 3, 2, 1, 2, 1]),\n        Int32Array.from([1, 1, 1, 3, 2, 3]),\n        Int32Array.from([1, 3, 1, 1, 2, 3]),\n        Int32Array.from([1, 3, 1, 3, 2, 1]),\n        Int32Array.from([1, 1, 2, 3, 1, 3]),\n        Int32Array.from([1, 3, 2, 1, 1, 3]),\n        Int32Array.from([1, 3, 2, 3, 1, 1]),\n        Int32Array.from([2, 1, 1, 3, 1, 3]),\n        Int32Array.from([2, 3, 1, 1, 1, 3]),\n        Int32Array.from([2, 3, 1, 3, 1, 1]),\n        Int32Array.from([1, 1, 2, 1, 3, 3]),\n        Int32Array.from([1, 1, 2, 3, 3, 1]),\n        Int32Array.from([1, 3, 2, 1, 3, 1]),\n        Int32Array.from([1, 1, 3, 1, 2, 3]),\n        Int32Array.from([1, 1, 3, 3, 2, 1]),\n        Int32Array.from([1, 3, 3, 1, 2, 1]),\n        Int32Array.from([3, 1, 3, 1, 2, 1]),\n        Int32Array.from([2, 1, 1, 3, 3, 1]),\n        Int32Array.from([2, 3, 1, 1, 3, 1]),\n        Int32Array.from([2, 1, 3, 1, 1, 3]),\n        Int32Array.from([2, 1, 3, 3, 1, 1]),\n        Int32Array.from([2, 1, 3, 1, 3, 1]),\n        Int32Array.from([3, 1, 1, 1, 2, 3]),\n        Int32Array.from([3, 1, 1, 3, 2, 1]),\n        Int32Array.from([3, 3, 1, 1, 2, 1]),\n        Int32Array.from([3, 1, 2, 1, 1, 3]),\n        Int32Array.from([3, 1, 2, 3, 1, 1]),\n        Int32Array.from([3, 3, 2, 1, 1, 1]),\n        Int32Array.from([3, 1, 4, 1, 1, 1]),\n        Int32Array.from([2, 2, 1, 4, 1, 1]),\n        Int32Array.from([4, 3, 1, 1, 1, 1]),\n        Int32Array.from([1, 1, 1, 2, 2, 4]),\n        Int32Array.from([1, 1, 1, 4, 2, 2]),\n        Int32Array.from([1, 2, 1, 1, 2, 4]),\n        Int32Array.from([1, 2, 1, 4, 2, 1]),\n        Int32Array.from([1, 4, 1, 1, 2, 2]),\n        Int32Array.from([1, 4, 1, 2, 2, 1]),\n        Int32Array.from([1, 1, 2, 2, 1, 4]),\n        Int32Array.from([1, 1, 2, 4, 1, 2]),\n        Int32Array.from([1, 2, 2, 1, 1, 4]),\n        Int32Array.from([1, 2, 2, 4, 1, 1]),\n        Int32Array.from([1, 4, 2, 1, 1, 2]),\n        Int32Array.from([1, 4, 2, 2, 1, 1]),\n        Int32Array.from([2, 4, 1, 2, 1, 1]),\n        Int32Array.from([2, 2, 1, 1, 1, 4]),\n        Int32Array.from([4, 1, 3, 1, 1, 1]),\n        Int32Array.from([2, 4, 1, 1, 1, 2]),\n        Int32Array.from([1, 3, 4, 1, 1, 1]),\n        Int32Array.from([1, 1, 1, 2, 4, 2]),\n        Int32Array.from([1, 2, 1, 1, 4, 2]),\n        Int32Array.from([1, 2, 1, 2, 4, 1]),\n        Int32Array.from([1, 1, 4, 2, 1, 2]),\n        Int32Array.from([1, 2, 4, 1, 1, 2]),\n        Int32Array.from([1, 2, 4, 2, 1, 1]),\n        Int32Array.from([4, 1, 1, 2, 1, 2]),\n        Int32Array.from([4, 2, 1, 1, 1, 2]),\n        Int32Array.from([4, 2, 1, 2, 1, 1]),\n        Int32Array.from([2, 1, 2, 1, 4, 1]),\n        Int32Array.from([2, 1, 4, 1, 2, 1]),\n        Int32Array.from([4, 1, 2, 1, 2, 1]),\n        Int32Array.from([1, 1, 1, 1, 4, 3]),\n        Int32Array.from([1, 1, 1, 3, 4, 1]),\n        Int32Array.from([1, 3, 1, 1, 4, 1]),\n        Int32Array.from([1, 1, 4, 1, 1, 3]),\n        Int32Array.from([1, 1, 4, 3, 1, 1]),\n        Int32Array.from([4, 1, 1, 1, 1, 3]),\n        Int32Array.from([4, 1, 1, 3, 1, 1]),\n        Int32Array.from([1, 1, 3, 1, 4, 1]),\n        Int32Array.from([1, 1, 4, 1, 3, 1]),\n        Int32Array.from([3, 1, 1, 1, 4, 1]),\n        Int32Array.from([4, 1, 1, 1, 3, 1]),\n        Int32Array.from([2, 1, 1, 4, 1, 2]),\n        Int32Array.from([2, 1, 1, 2, 1, 4]),\n        Int32Array.from([2, 1, 1, 2, 3, 2]),\n        Int32Array.from([2, 3, 3, 1, 1, 1, 2]),\n    ];\n    Code128Reader.MAX_AVG_VARIANCE = 0.25;\n    Code128Reader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n    Code128Reader.CODE_SHIFT = 98;\n    Code128Reader.CODE_CODE_C = 99;\n    Code128Reader.CODE_CODE_B = 100;\n    Code128Reader.CODE_CODE_A = 101;\n    Code128Reader.CODE_FNC_1 = 102;\n    Code128Reader.CODE_FNC_2 = 97;\n    Code128Reader.CODE_FNC_3 = 96;\n    Code128Reader.CODE_FNC_4_A = 101;\n    Code128Reader.CODE_FNC_4_B = 100;\n    Code128Reader.CODE_START_A = 103;\n    Code128Reader.CODE_START_B = 104;\n    Code128Reader.CODE_START_C = 105;\n    Code128Reader.CODE_STOP = 106;\n\n    /**\n     * <p>Decodes Code 39 barcodes. Supports \"Full ASCII Code 39\" if USE_CODE_39_EXTENDED_MODE is set.</p>\n     *\n     * @author Sean Owen\n     * @see Code93Reader\n     */\n    class Code39Reader extends OneDReader {\n        /**\n         * Creates a reader that assumes all encoded data is data, and does not treat the final\n         * character as a check digit. It will not decoded \"extended Code 39\" sequences.\n         */\n        // public Code39Reader() {\n        //   this(false);\n        // }\n        /**\n         * Creates a reader that can be configured to check the last character as a check digit.\n         * It will not decoded \"extended Code 39\" sequences.\n         *\n         * @param usingCheckDigit if true, treat the last data character as a check digit, not\n         * data, and verify that the checksum passes.\n         */\n        // public Code39Reader(boolean usingCheckDigit) {\n        //   this(usingCheckDigit, false);\n        // }\n        /**\n         * Creates a reader that can be configured to check the last character as a check digit,\n         * or optionally attempt to decode \"extended Code 39\" sequences that are used to encode\n         * the full ASCII character set.\n         *\n         * @param usingCheckDigit if true, treat the last data character as a check digit, not\n         * data, and verify that the checksum passes.\n         * @param extendedMode if true, will attempt to decode extended Code 39 sequences in the\n         * text.\n         */\n        constructor(usingCheckDigit = false, extendedMode = false) {\n            super();\n            this.usingCheckDigit = usingCheckDigit;\n            this.extendedMode = extendedMode;\n            this.decodeRowResult = '';\n            this.counters = new Int32Array(9);\n        }\n        decodeRow(rowNumber, row, hints) {\n            let theCounters = this.counters;\n            theCounters.fill(0);\n            this.decodeRowResult = '';\n            let start = Code39Reader.findAsteriskPattern(row, theCounters);\n            // Read off white space\n            let nextStart = row.getNextSet(start[1]);\n            let end = row.getSize();\n            let decodedChar;\n            let lastStart;\n            do {\n                Code39Reader.recordPattern(row, nextStart, theCounters);\n                let pattern = Code39Reader.toNarrowWidePattern(theCounters);\n                if (pattern < 0) {\n                    throw new NotFoundException();\n                }\n                decodedChar = Code39Reader.patternToChar(pattern);\n                this.decodeRowResult += decodedChar;\n                lastStart = nextStart;\n                for (let counter of theCounters) {\n                    nextStart += counter;\n                }\n                // Read off white space\n                nextStart = row.getNextSet(nextStart);\n            } while (decodedChar !== '*');\n            this.decodeRowResult = this.decodeRowResult.substring(0, this.decodeRowResult.length - 1); // remove asterisk\n            // Look for whitespace after pattern:\n            let lastPatternSize = 0;\n            for (let counter of theCounters) {\n                lastPatternSize += counter;\n            }\n            let whiteSpaceAfterEnd = nextStart - lastStart - lastPatternSize;\n            // If 50% of last pattern size, following last pattern, is not whitespace, fail\n            // (but if it's whitespace to the very end of the image, that's OK)\n            if (nextStart !== end && (whiteSpaceAfterEnd * 2) < lastPatternSize) {\n                throw new NotFoundException();\n            }\n            if (this.usingCheckDigit) {\n                let max = this.decodeRowResult.length - 1;\n                let total = 0;\n                for (let i = 0; i < max; i++) {\n                    total += Code39Reader.ALPHABET_STRING.indexOf(this.decodeRowResult.charAt(i));\n                }\n                if (this.decodeRowResult.charAt(max) !== Code39Reader.ALPHABET_STRING.charAt(total % 43)) {\n                    throw new ChecksumException();\n                }\n                this.decodeRowResult = this.decodeRowResult.substring(0, max);\n            }\n            if (this.decodeRowResult.length === 0) {\n                // false positive\n                throw new NotFoundException();\n            }\n            let resultString;\n            if (this.extendedMode) {\n                resultString = Code39Reader.decodeExtended(this.decodeRowResult);\n            }\n            else {\n                resultString = this.decodeRowResult;\n            }\n            let left = (start[1] + start[0]) / 2.0;\n            let right = lastStart + lastPatternSize / 2.0;\n            return new Result(resultString, null, 0, [new ResultPoint(left, rowNumber), new ResultPoint(right, rowNumber)], BarcodeFormat$1.CODE_39, new Date().getTime());\n        }\n        static findAsteriskPattern(row, counters) {\n            let width = row.getSize();\n            let rowOffset = row.getNextSet(0);\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            let isWhite = false;\n            let patternLength = counters.length;\n            for (let i = rowOffset; i < width; i++) {\n                if (row.get(i) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        // Look for whitespace before start pattern, >= 50% of width of start pattern\n                        if (this.toNarrowWidePattern(counters) === Code39Reader.ASTERISK_ENCODING &&\n                            row.isRange(Math.max(0, patternStart - Math.floor((i - patternStart) / 2)), patternStart, false)) {\n                            return [patternStart, i];\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters.copyWithin(0, 2, 2 + counterPosition - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        // For efficiency, returns -1 on failure. Not throwing here saved as many as 700 exceptions\n        // per image when using some of our blackbox images.\n        static toNarrowWidePattern(counters) {\n            let numCounters = counters.length;\n            let maxNarrowCounter = 0;\n            let wideCounters;\n            do {\n                let minCounter = 0x7fffffff;\n                for (let counter of counters) {\n                    if (counter < minCounter && counter > maxNarrowCounter) {\n                        minCounter = counter;\n                    }\n                }\n                maxNarrowCounter = minCounter;\n                wideCounters = 0;\n                let totalWideCountersWidth = 0;\n                let pattern = 0;\n                for (let i = 0; i < numCounters; i++) {\n                    let counter = counters[i];\n                    if (counter > maxNarrowCounter) {\n                        pattern |= 1 << (numCounters - 1 - i);\n                        wideCounters++;\n                        totalWideCountersWidth += counter;\n                    }\n                }\n                if (wideCounters === 3) {\n                    // Found 3 wide counters, but are they close enough in width?\n                    // We can perform a cheap, conservative check to see if any individual\n                    // counter is more than 1.5 times the average:\n                    for (let i = 0; i < numCounters && wideCounters > 0; i++) {\n                        let counter = counters[i];\n                        if (counter > maxNarrowCounter) {\n                            wideCounters--;\n                            // totalWideCountersWidth = 3 * average, so this checks if counter >= 3/2 * average\n                            if ((counter * 2) >= totalWideCountersWidth) {\n                                return -1;\n                            }\n                        }\n                    }\n                    return pattern;\n                }\n            } while (wideCounters > 3);\n            return -1;\n        }\n        static patternToChar(pattern) {\n            for (let i = 0; i < Code39Reader.CHARACTER_ENCODINGS.length; i++) {\n                if (Code39Reader.CHARACTER_ENCODINGS[i] === pattern) {\n                    return Code39Reader.ALPHABET_STRING.charAt(i);\n                }\n            }\n            if (pattern === Code39Reader.ASTERISK_ENCODING) {\n                return '*';\n            }\n            throw new NotFoundException();\n        }\n        static decodeExtended(encoded) {\n            let length = encoded.length;\n            let decoded = '';\n            for (let i = 0; i < length; i++) {\n                let c = encoded.charAt(i);\n                if (c === '+' || c === '$' || c === '%' || c === '/') {\n                    let next = encoded.charAt(i + 1);\n                    let decodedChar = '\\0';\n                    switch (c) {\n                        case '+':\n                            // +A to +Z map to a to z\n                            if (next >= 'A' && next <= 'Z') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) + 32);\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case '$':\n                            // $A to $Z map to control codes SH to SB\n                            if (next >= 'A' && next <= 'Z') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 64);\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case '%':\n                            // %A to %E map to control codes ESC to US\n                            if (next >= 'A' && next <= 'E') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 38);\n                            }\n                            else if (next >= 'F' && next <= 'J') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 11);\n                            }\n                            else if (next >= 'K' && next <= 'O') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) + 16);\n                            }\n                            else if (next >= 'P' && next <= 'T') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) + 43);\n                            }\n                            else if (next === 'U') {\n                                decodedChar = '\\0';\n                            }\n                            else if (next === 'V') {\n                                decodedChar = '@';\n                            }\n                            else if (next === 'W') {\n                                decodedChar = '`';\n                            }\n                            else if (next === 'X' || next === 'Y' || next === 'Z') {\n                                decodedChar = '\\x7f';\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case '/':\n                            // /A to /O map to ! to , and /Z maps to :\n                            if (next >= 'A' && next <= 'O') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 32);\n                            }\n                            else if (next === 'Z') {\n                                decodedChar = ':';\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                    }\n                    decoded += decodedChar;\n                    // bump up i again since we read two characters\n                    i++;\n                }\n                else {\n                    decoded += c;\n                }\n            }\n            return decoded;\n        }\n    }\n    Code39Reader.ALPHABET_STRING = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%';\n    /**\n     * These represent the encodings of characters, as patterns of wide and narrow bars.\n     * The 9 least-significant bits of each int correspond to the pattern of wide and narrow,\n     * with 1s representing \"wide\" and 0s representing narrow.\n     */\n    Code39Reader.CHARACTER_ENCODINGS = [\n        0x034, 0x121, 0x061, 0x160, 0x031, 0x130, 0x070, 0x025, 0x124, 0x064,\n        0x109, 0x049, 0x148, 0x019, 0x118, 0x058, 0x00D, 0x10C, 0x04C, 0x01C,\n        0x103, 0x043, 0x142, 0x013, 0x112, 0x052, 0x007, 0x106, 0x046, 0x016,\n        0x181, 0x0C1, 0x1C0, 0x091, 0x190, 0x0D0, 0x085, 0x184, 0x0C4, 0x0A8,\n        0x0A2, 0x08A, 0x02A // /-%\n    ];\n    Code39Reader.ASTERISK_ENCODING = 0x094;\n\n    /**\n     * <p>Decodes ITF barcodes.</p>\n     *\n     * @author Tjieco\n     */\n    class ITFReader extends OneDReader {\n        constructor() {\n            // private static W = 3; // Pixel width of a 3x wide line\n            // private static w = 2; // Pixel width of a 2x wide line\n            // private static N = 1; // Pixed width of a narrow line\n            super(...arguments);\n            // Stores the actual narrow line width of the image being decoded.\n            this.narrowLineWidth = -1;\n        }\n        // See ITFWriter.PATTERNS\n        /*\n      \n        /!**\n         * Patterns of Wide / Narrow lines to indicate each digit\n         *!/\n        */\n        decodeRow(rowNumber, row, hints) {\n            // Find out where the Middle section (payload) starts & ends\n            let startRange = this.decodeStart(row);\n            let endRange = this.decodeEnd(row);\n            let result = new StringBuilder();\n            ITFReader.decodeMiddle(row, startRange[1], endRange[0], result);\n            let resultString = result.toString();\n            let allowedLengths = null;\n            if (hints != null) {\n                allowedLengths = hints.get(DecodeHintType$1.ALLOWED_LENGTHS);\n            }\n            if (allowedLengths == null) {\n                allowedLengths = ITFReader.DEFAULT_ALLOWED_LENGTHS;\n            }\n            // To avoid false positives with 2D barcodes (and other patterns), make\n            // an assumption that the decoded string must be a 'standard' length if it's short\n            let length = resultString.length;\n            let lengthOK = false;\n            let maxAllowedLength = 0;\n            for (let value of allowedLengths) {\n                if (length === value) {\n                    lengthOK = true;\n                    break;\n                }\n                if (value > maxAllowedLength) {\n                    maxAllowedLength = value;\n                }\n            }\n            if (!lengthOK && length > maxAllowedLength) {\n                lengthOK = true;\n            }\n            if (!lengthOK) {\n                throw new FormatException();\n            }\n            const points = [new ResultPoint(startRange[1], rowNumber), new ResultPoint(endRange[0], rowNumber)];\n            let resultReturn = new Result(resultString, null, // no natural byte representation for these barcodes\n            0, points, BarcodeFormat$1.ITF, new Date().getTime());\n            return resultReturn;\n        }\n        /*\n        /!**\n         * @param row          row of black/white values to search\n         * @param payloadStart offset of start pattern\n         * @param resultString {@link StringBuilder} to append decoded chars to\n         * @throws NotFoundException if decoding could not complete successfully\n         *!/*/\n        static decodeMiddle(row, payloadStart, payloadEnd, resultString) {\n            // Digits are interleaved in pairs - 5 black lines for one digit, and the\n            // 5\n            // interleaved white lines for the second digit.\n            // Therefore, need to scan 10 lines and then\n            // split these into two arrays\n            let counterDigitPair = new Int32Array(10); // 10\n            let counterBlack = new Int32Array(5); // 5\n            let counterWhite = new Int32Array(5); // 5\n            counterDigitPair.fill(0);\n            counterBlack.fill(0);\n            counterWhite.fill(0);\n            while (payloadStart < payloadEnd) {\n                // Get 10 runs of black/white.\n                OneDReader.recordPattern(row, payloadStart, counterDigitPair);\n                // Split them into each array\n                for (let k = 0; k < 5; k++) {\n                    let twoK = 2 * k;\n                    counterBlack[k] = counterDigitPair[twoK];\n                    counterWhite[k] = counterDigitPair[twoK + 1];\n                }\n                let bestMatch = ITFReader.decodeDigit(counterBlack);\n                resultString.append(bestMatch.toString());\n                bestMatch = this.decodeDigit(counterWhite);\n                resultString.append(bestMatch.toString());\n                counterDigitPair.forEach(function (counterDigit) {\n                    payloadStart += counterDigit;\n                });\n            }\n        }\n        /*/!**\n         * Identify where the start of the middle / payload section starts.\n         *\n         * @param row row of black/white values to search\n         * @return Array, containing index of start of 'start block' and end of\n         *         'start block'\n         *!/*/\n        decodeStart(row) {\n            let endStart = ITFReader.skipWhiteSpace(row);\n            let startPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.START_PATTERN);\n            // Determine the width of a narrow line in pixels. We can do this by\n            // getting the width of the start pattern and dividing by 4 because its\n            // made up of 4 narrow lines.\n            this.narrowLineWidth = (startPattern[1] - startPattern[0]) / 4;\n            this.validateQuietZone(row, startPattern[0]);\n            return startPattern;\n        }\n        /*/!**\n         * The start & end patterns must be pre/post fixed by a quiet zone. This\n         * zone must be at least 10 times the width of a narrow line.  Scan back until\n         * we either get to the start of the barcode or match the necessary number of\n         * quiet zone pixels.\n         *\n         * Note: Its assumed the row is reversed when using this method to find\n         * quiet zone after the end pattern.\n         *\n         * ref: http://www.barcode-1.net/i25code.html\n         *\n         * @param row bit array representing the scanned barcode.\n         * @param startPattern index into row of the start or end pattern.\n         * @throws NotFoundException if the quiet zone cannot be found\n         *!/*/\n        validateQuietZone(row, startPattern) {\n            let quietCount = this.narrowLineWidth * 10; // expect to find this many pixels of quiet zone\n            // if there are not so many pixel at all let's try as many as possible\n            quietCount = quietCount < startPattern ? quietCount : startPattern;\n            for (let i = startPattern - 1; quietCount > 0 && i >= 0; i--) {\n                if (row.get(i)) {\n                    break;\n                }\n                quietCount--;\n            }\n            if (quietCount !== 0) {\n                // Unable to find the necessary number of quiet zone pixels.\n                throw new NotFoundException();\n            }\n        }\n        /*\n        /!**\n         * Skip all whitespace until we get to the first black line.\n         *\n         * @param row row of black/white values to search\n         * @return index of the first black line.\n         * @throws NotFoundException Throws exception if no black lines are found in the row\n         *!/*/\n        static skipWhiteSpace(row) {\n            const width = row.getSize();\n            const endStart = row.getNextSet(0);\n            if (endStart === width) {\n                throw new NotFoundException();\n            }\n            return endStart;\n        }\n        /*/!**\n         * Identify where the end of the middle / payload section ends.\n         *\n         * @param row row of black/white values to search\n         * @return Array, containing index of start of 'end block' and end of 'end\n         *         block'\n         *!/*/\n        decodeEnd(row) {\n            // For convenience, reverse the row and then\n            // search from 'the start' for the end block\n            row.reverse();\n            try {\n                let endStart = ITFReader.skipWhiteSpace(row);\n                let endPattern;\n                try {\n                    endPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.END_PATTERN_REVERSED[0]);\n                }\n                catch (error) {\n                    if (error instanceof NotFoundException) {\n                        endPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.END_PATTERN_REVERSED[1]);\n                    }\n                }\n                // The start & end patterns must be pre/post fixed by a quiet zone. This\n                // zone must be at least 10 times the width of a narrow line.\n                // ref: http://www.barcode-1.net/i25code.html\n                this.validateQuietZone(row, endPattern[0]);\n                // Now recalculate the indices of where the 'endblock' starts & stops to\n                // accommodate\n                // the reversed nature of the search\n                let temp = endPattern[0];\n                endPattern[0] = row.getSize() - endPattern[1];\n                endPattern[1] = row.getSize() - temp;\n                return endPattern;\n            }\n            finally {\n                // Put the row back the right way.\n                row.reverse();\n            }\n        }\n        /*\n        /!**\n         * @param row       row of black/white values to search\n         * @param rowOffset position to start search\n         * @param pattern   pattern of counts of number of black and white pixels that are\n         *                  being searched for as a pattern\n         * @return start/end horizontal offset of guard pattern, as an array of two\n         *         ints\n         * @throws NotFoundException if pattern is not found\n         *!/*/\n        static findGuardPattern(row, rowOffset, pattern) {\n            let patternLength = pattern.length;\n            let counters = new Int32Array(patternLength);\n            let width = row.getSize();\n            let isWhite = false;\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            counters.fill(0);\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        if (OneDReader.patternMatchVariance(counters, pattern, ITFReader.MAX_INDIVIDUAL_VARIANCE) < ITFReader.MAX_AVG_VARIANCE) {\n                            return [patternStart, x];\n                        }\n                        patternStart += counters[0] + counters[1];\n                        System.arraycopy(counters, 2, counters, 0, counterPosition - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        /*/!**\n         * Attempts to decode a sequence of ITF black/white lines into single\n         * digit.\n         *\n         * @param counters the counts of runs of observed black/white/black/... values\n         * @return The decoded digit\n         * @throws NotFoundException if digit cannot be decoded\n         *!/*/\n        static decodeDigit(counters) {\n            let bestVariance = ITFReader.MAX_AVG_VARIANCE; // worst variance we'll accept\n            let bestMatch = -1;\n            let max = ITFReader.PATTERNS.length;\n            for (let i = 0; i < max; i++) {\n                let pattern = ITFReader.PATTERNS[i];\n                let variance = OneDReader.patternMatchVariance(counters, pattern, ITFReader.MAX_INDIVIDUAL_VARIANCE);\n                if (variance < bestVariance) {\n                    bestVariance = variance;\n                    bestMatch = i;\n                }\n                else if (variance === bestVariance) {\n                    // if we find a second 'best match' with the same variance, we can not reliably report to have a suitable match\n                    bestMatch = -1;\n                }\n            }\n            if (bestMatch >= 0) {\n                return bestMatch % 10;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n    }\n    ITFReader.PATTERNS = [\n        Int32Array.from([1, 1, 2, 2, 1]),\n        Int32Array.from([2, 1, 1, 1, 2]),\n        Int32Array.from([1, 2, 1, 1, 2]),\n        Int32Array.from([2, 2, 1, 1, 1]),\n        Int32Array.from([1, 1, 2, 1, 2]),\n        Int32Array.from([2, 1, 2, 1, 1]),\n        Int32Array.from([1, 2, 2, 1, 1]),\n        Int32Array.from([1, 1, 1, 2, 2]),\n        Int32Array.from([2, 1, 1, 2, 1]),\n        Int32Array.from([1, 2, 1, 2, 1]),\n        Int32Array.from([1, 1, 3, 3, 1]),\n        Int32Array.from([3, 1, 1, 1, 3]),\n        Int32Array.from([1, 3, 1, 1, 3]),\n        Int32Array.from([3, 3, 1, 1, 1]),\n        Int32Array.from([1, 1, 3, 1, 3]),\n        Int32Array.from([3, 1, 3, 1, 1]),\n        Int32Array.from([1, 3, 3, 1, 1]),\n        Int32Array.from([1, 1, 1, 3, 3]),\n        Int32Array.from([3, 1, 1, 3, 1]),\n        Int32Array.from([1, 3, 1, 3, 1]) // 9\n    ];\n    ITFReader.MAX_AVG_VARIANCE = 0.38;\n    ITFReader.MAX_INDIVIDUAL_VARIANCE = 0.5;\n    /* /!** Valid ITF lengths. Anything longer than the largest value is also allowed. *!/*/\n    ITFReader.DEFAULT_ALLOWED_LENGTHS = [6, 8, 10, 12, 14];\n    /*/!**\n     * Start/end guard pattern.\n     *\n     * Note: The end pattern is reversed because the row is reversed before\n     * searching for the END_PATTERN\n     *!/*/\n    ITFReader.START_PATTERN = Int32Array.from([1, 1, 1, 1]);\n    ITFReader.END_PATTERN_REVERSED = [\n        Int32Array.from([1, 1, 2]),\n        Int32Array.from([1, 1, 3]) // 3x\n    ];\n\n    /**\n     * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n     * of one-dimensional barcodes.</p>\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author alasdair@google.com (Alasdair Mackintosh)\n     */\n    class AbstractUPCEANReader extends OneDReader {\n        constructor() {\n            super(...arguments);\n            this.decodeRowStringBuffer = '';\n        }\n\n        static findStartGuardPattern(row) {\n            let foundStart = false;\n            let startRange;\n            let nextStart = 0;\n            let counters = Int32Array.from([0, 0, 0]);\n            while (!foundStart) {\n                counters = Int32Array.from([0, 0, 0]);\n                startRange = AbstractUPCEANReader.findGuardPattern(row, nextStart, false, this.START_END_PATTERN, counters);\n                let start = startRange[0];\n                nextStart = startRange[1];\n                let quietStart = start - (nextStart - start);\n                if (quietStart >= 0) {\n                    foundStart = row.isRange(quietStart, start, false);\n                }\n            }\n            return startRange;\n        }\n        static checkChecksum(s) {\n            return AbstractUPCEANReader.checkStandardUPCEANChecksum(s);\n        }\n        static checkStandardUPCEANChecksum(s) {\n            let length = s.length;\n            if (length === 0)\n                return false;\n            let check = parseInt(s.charAt(length - 1), 10);\n            return AbstractUPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n        }\n        static getStandardUPCEANChecksum(s) {\n            let length = s.length;\n            let sum = 0;\n            for (let i = length - 1; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            sum *= 3;\n            for (let i = length - 2; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            return (1000 - sum) % 10;\n        }\n        static decodeEnd(row, endStart) {\n            return AbstractUPCEANReader.findGuardPattern(row, endStart, false, AbstractUPCEANReader.START_END_PATTERN, new Int32Array(AbstractUPCEANReader.START_END_PATTERN.length).fill(0));\n        }\n        /**\n         * @throws NotFoundException\n         */\n        static findGuardPatternWithoutCounters(row, rowOffset, whiteFirst, pattern) {\n            return this.findGuardPattern(row, rowOffset, whiteFirst, pattern, new Int32Array(pattern.length));\n        }\n        /**\n         * @param row row of black/white values to search\n         * @param rowOffset position to start search\n         * @param whiteFirst if true, indicates that the pattern specifies white/black/white/...\n         * pixel counts, otherwise, it is interpreted as black/white/black/...\n         * @param pattern pattern of counts of number of black and white pixels that are being\n         * searched for as a pattern\n         * @param counters array of counters, as long as pattern, to re-use\n         * @return start/end horizontal offset of guard pattern, as an array of two ints\n         * @throws NotFoundException if pattern is not found\n         */\n        static findGuardPattern(row, rowOffset, whiteFirst, pattern, counters) {\n            let width = row.getSize();\n            rowOffset = whiteFirst ? row.getNextUnset(rowOffset) : row.getNextSet(rowOffset);\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            let patternLength = pattern.length;\n            let isWhite = whiteFirst;\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        if (OneDReader.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE) < AbstractUPCEANReader.MAX_AVG_VARIANCE) {\n                            return Int32Array.from([patternStart, x]);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        let slice = counters.slice(2, counters.length - 1);\n                        for (let i = 0; i < counterPosition - 1; i++) {\n                            counters[i] = slice[i];\n                        }\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static decodeDigit(row, counters, rowOffset, patterns) {\n            this.recordPattern(row, rowOffset, counters);\n            let bestVariance = this.MAX_AVG_VARIANCE;\n            let bestMatch = -1;\n            let max = patterns.length;\n            for (let i = 0; i < max; i++) {\n                let pattern = patterns[i];\n                let variance = OneDReader.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE);\n                if (variance < bestVariance) {\n                    bestVariance = variance;\n                    bestMatch = i;\n                }\n            }\n            if (bestMatch >= 0) {\n                return bestMatch;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n    }\n    // These two values are critical for determining how permissive the decoding will be.\n    // We've arrived at these values through a lot of trial and error. Setting them any higher\n    // lets false positives creep in quickly.\n    AbstractUPCEANReader.MAX_AVG_VARIANCE = 0.48;\n    AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n    /**\n     * Start/end guard pattern.\n     */\n    AbstractUPCEANReader.START_END_PATTERN = Int32Array.from([1, 1, 1]);\n    /**\n     * Pattern marking the middle of a UPC/EAN pattern, separating the two halves.\n     */\n    AbstractUPCEANReader.MIDDLE_PATTERN = Int32Array.from([1, 1, 1, 1, 1]);\n    /**\n     * end guard pattern.\n     */\n    AbstractUPCEANReader.END_PATTERN = Int32Array.from([1, 1, 1, 1, 1, 1]);\n    /**\n     * \"Odd\", or \"L\" patterns used to encode UPC/EAN digits.\n     */\n    AbstractUPCEANReader.L_PATTERNS = [\n        Int32Array.from([3, 2, 1, 1]),\n        Int32Array.from([2, 2, 2, 1]),\n        Int32Array.from([2, 1, 2, 2]),\n        Int32Array.from([1, 4, 1, 1]),\n        Int32Array.from([1, 1, 3, 2]),\n        Int32Array.from([1, 2, 3, 1]),\n        Int32Array.from([1, 1, 1, 4]),\n        Int32Array.from([1, 3, 1, 2]),\n        Int32Array.from([1, 2, 1, 3]),\n        Int32Array.from([3, 1, 1, 2]),\n    ];\n\n    /**\n     * @see UPCEANExtension2Support\n     */\n    class UPCEANExtension5Support {\n        constructor() {\n            this.CHECK_DIGIT_ENCODINGS = [0x18, 0x14, 0x12, 0x11, 0x0C, 0x06, 0x03, 0x0A, 0x09, 0x05];\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n            this.decodeRowStringBuffer = '';\n        }\n        decodeRow(rowNumber, row, extensionStartRange) {\n            let result = this.decodeRowStringBuffer;\n            let end = this.decodeMiddle(row, extensionStartRange, result);\n            let resultString = result.toString();\n            let extensionData = UPCEANExtension5Support.parseExtensionString(resultString);\n            let resultPoints = [\n                new ResultPoint((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber),\n                new ResultPoint(end, rowNumber)\n            ];\n            let extensionResult = new Result(resultString, null, 0, resultPoints, BarcodeFormat$1.UPC_EAN_EXTENSION, new Date().getTime());\n            if (extensionData != null) {\n                extensionResult.putAllMetadata(extensionData);\n            }\n            return extensionResult;\n        }\n        decodeMiddle(row, startRange, resultString) {\n            let counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            let lgPatternFound = 0;\n            for (let x = 0; x < 5 && rowOffset < end; x++) {\n                let bestMatch = AbstractUPCEANReader.decodeDigit(\n                    row,\n                    counters,\n                    rowOffset,\n                    AbstractUPCEANReader.L_AND_G_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    lgPatternFound |= 1 << (4 - x);\n                }\n                if (x !== 4) {\n                    // Read off separator if not last\n                    rowOffset = row.getNextSet(rowOffset);\n                    rowOffset = row.getNextUnset(rowOffset);\n                }\n            }\n            if (resultString.length !== 5) {\n                throw new NotFoundException();\n            }\n            let checkDigit = this.determineCheckDigit(lgPatternFound);\n            if (UPCEANExtension5Support.extensionChecksum(resultString.toString()) !== checkDigit) {\n                throw new NotFoundException();\n            }\n            return rowOffset;\n        }\n        static extensionChecksum(s) {\n            let length = s.length;\n            let sum = 0;\n            for (let i = length - 2; i >= 0; i -= 2) {\n                sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n            }\n            sum *= 3;\n            for (let i = length - 1; i >= 0; i -= 2) {\n                sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n            }\n            sum *= 3;\n            return sum % 10;\n        }\n        determineCheckDigit(lgPatternFound) {\n            for (let d = 0; d < 10; d++) {\n                if (lgPatternFound === this.CHECK_DIGIT_ENCODINGS[d]) {\n                    return d;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static parseExtensionString(raw) {\n            if (raw.length !== 5) {\n                return null;\n            }\n            let value = UPCEANExtension5Support.parseExtension5String(raw);\n            if (value == null) {\n                return null;\n            }\n            return new Map([[ResultMetadataType$1.SUGGESTED_PRICE, value]]);\n        }\n        static parseExtension5String(raw) {\n            let currency;\n            switch (raw.charAt(0)) {\n                case '0':\n                    currency = '£';\n                    break;\n                case '5':\n                    currency = '$';\n                    break;\n                case '9':\n                    // Reference: http://www.jollytech.com\n                    switch (raw) {\n                        case '90000':\n                            // No suggested retail price\n                            return null;\n                        case '99991':\n                            // Complementary\n                            return '0.00';\n                        case '99990':\n                            return 'Used';\n                    }\n                    // Otherwise... unknown currency?\n                    currency = '';\n                    break;\n                default:\n                    currency = '';\n                    break;\n            }\n            let rawAmount = parseInt(raw.substring(1));\n            let unitsString = (rawAmount / 100).toString();\n            let hundredths = rawAmount % 100;\n            let hundredthsString = hundredths < 10 ? '0' + hundredths : hundredths.toString(); // fixme\n            return currency + unitsString + '.' + hundredthsString;\n        }\n    }\n\n    /**\n     * @see UPCEANExtension5Support\n     */\n    class UPCEANExtension2Support {\n        constructor() {\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n            this.decodeRowStringBuffer = '';\n        }\n        decodeRow(rowNumber, row, extensionStartRange) {\n            let result = this.decodeRowStringBuffer;\n            let end = this.decodeMiddle(row, extensionStartRange, result);\n            let resultString = result.toString();\n            let extensionData = UPCEANExtension2Support.parseExtensionString(resultString);\n            let resultPoints = [\n                new ResultPoint((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber),\n                new ResultPoint(end, rowNumber)\n            ];\n            let extensionResult = new Result(resultString, null, 0, resultPoints, BarcodeFormat$1.UPC_EAN_EXTENSION, new Date().getTime());\n            if (extensionData != null) {\n                extensionResult.putAllMetadata(extensionData);\n            }\n            return extensionResult;\n        }\n        decodeMiddle(row, startRange, resultString) {\n            let counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            let checkParity = 0;\n            for (let x = 0; x < 2 && rowOffset < end; x++) {\n                let bestMatch = AbstractUPCEANReader.decodeDigit(row, counters, rowOffset, AbstractUPCEANReader.L_AND_G_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    checkParity |= 1 << (1 - x);\n                }\n                if (x !== 1) {\n                    // Read off separator if not last\n                    rowOffset = row.getNextSet(rowOffset);\n                    rowOffset = row.getNextUnset(rowOffset);\n                }\n            }\n            if (resultString.length !== 2) {\n                throw new NotFoundException();\n            }\n            if (parseInt(resultString.toString()) % 4 !== checkParity) {\n                throw new NotFoundException();\n            }\n            return rowOffset;\n        }\n        static parseExtensionString(raw) {\n            if (raw.length !== 2) {\n                return null;\n            }\n            return new Map([[ResultMetadataType$1.ISSUE_NUMBER, parseInt(raw)]]);\n        }\n    }\n\n    class UPCEANExtensionSupport {\n        static decodeRow(rowNumber, row, rowOffset) {\n            let extensionStartRange = AbstractUPCEANReader.findGuardPattern(\n                row,\n                rowOffset,\n                false,\n                this.EXTENSION_START_PATTERN,\n                new Int32Array(this.EXTENSION_START_PATTERN.length).fill(0));\n            try {\n                // return null;\n                let fiveSupport = new UPCEANExtension5Support();\n                return fiveSupport.decodeRow(rowNumber, row, extensionStartRange);\n            }\n            catch (err) {\n                // return null;\n                let twoSupport = new UPCEANExtension2Support();\n                return twoSupport.decodeRow(rowNumber, row, extensionStartRange);\n            }\n        }\n    }\n    UPCEANExtensionSupport.EXTENSION_START_PATTERN = Int32Array.from([1, 1, 2]);\n\n    /**\n     * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n     * of one-dimensional barcodes.</p>\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author alasdair@google.com (Alasdair Mackintosh)\n     */\n    class UPCEANReader extends AbstractUPCEANReader {\n        constructor() {\n            super();\n            this.decodeRowStringBuffer = '';\n            UPCEANReader.L_AND_G_PATTERNS = UPCEANReader.L_PATTERNS.map(arr => Int32Array.from(arr));\n            for (let i = 10; i < 20; i++) {\n                let widths = UPCEANReader.L_PATTERNS[i - 10];\n                let reversedWidths = new Int32Array(widths.length);\n                for (let j = 0; j < widths.length; j++) {\n                    reversedWidths[j] = widths[widths.length - j - 1];\n                }\n                UPCEANReader.L_AND_G_PATTERNS[i] = reversedWidths;\n            }\n        }\n        decodeRow(rowNumber, row, hints) {\n            let startGuardRange = UPCEANReader.findStartGuardPattern(row);\n            let resultPointCallback = hints == null ? null : hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n            if (resultPointCallback != null) {\n                const resultPoint = new ResultPoint((startGuardRange[0] + startGuardRange[1]) / 2.0, rowNumber);\n                resultPointCallback.foundPossibleResultPoint(resultPoint);\n            }\n            let budello = this.decodeMiddle(row, startGuardRange, this.decodeRowStringBuffer);\n            let endStart = budello.rowOffset;\n            let result = budello.resultString;\n            if (resultPointCallback != null) {\n                const resultPoint = new ResultPoint(endStart, rowNumber);\n                resultPointCallback.foundPossibleResultPoint(resultPoint);\n            }\n            let endRange = this.decodeEnd(row, endStart);\n            if (resultPointCallback != null) {\n                const resultPoint = new ResultPoint((endRange[0] + endRange[1]) / 2.0, rowNumber);\n                resultPointCallback.foundPossibleResultPoint(resultPoint);\n            }\n            // Make sure there is a quiet zone at least as big as the end pattern after the barcode. The\n            // spec might want more whitespace, but in practice this is the maximum we can count on.\n            let end = endRange[1];\n            let quietEnd = end + (end - endRange[0]);\n            if (quietEnd >= row.getSize() || !row.isRange(end, quietEnd, false)) {\n                throw new NotFoundException();\n            }\n            let resultString = result.toString();\n            // UPC/EAN should never be less than 8 chars anyway\n            if (resultString.length < 8) {\n                throw new FormatException();\n            }\n            if (!UPCEANReader.checkChecksum(resultString)) {\n                throw new ChecksumException();\n            }\n            let left = (startGuardRange[1] + startGuardRange[0]) / 2.0;\n            let right = (endRange[1] + endRange[0]) / 2.0;\n            let format = this.getBarcodeFormat();\n            let resultPoint = [new ResultPoint(left, rowNumber), new ResultPoint(right, rowNumber)];\n            let decodeResult = new Result(resultString, null, 0, resultPoint, format, new Date().getTime());\n            let extensionLength = 0;\n            try {\n                let extensionResult = UPCEANExtensionSupport.decodeRow(rowNumber, row, endRange[1]);\n                decodeResult.putMetadata(ResultMetadataType$1.UPC_EAN_EXTENSION, extensionResult.getText());\n                decodeResult.putAllMetadata(extensionResult.getResultMetadata());\n                decodeResult.addResultPoints(extensionResult.getResultPoints());\n                extensionLength = extensionResult.getText().length;\n            }\n            catch (ignoreError) {}\n            let allowedExtensions = hints == null ? null : hints.get(DecodeHintType$1.ALLOWED_EAN_EXTENSIONS);\n            if (allowedExtensions != null) {\n                let valid = false;\n                for (let length in allowedExtensions) {\n                    if (extensionLength.toString() === length) { // check me\n                        valid = true;\n                        break;\n                    }\n                }\n                if (!valid) {\n                    throw new NotFoundException();\n                }\n            }\n            return decodeResult;\n        }\n        decodeEnd(row, endStart) {\n            return UPCEANReader.findGuardPattern(\n                row, endStart, false, UPCEANReader.START_END_PATTERN,\n                new Int32Array(UPCEANReader.START_END_PATTERN.length).fill(0));\n        }\n        static checkChecksum(s) {\n            return UPCEANReader.checkStandardUPCEANChecksum(s);\n        }\n        static checkStandardUPCEANChecksum(s) {\n            let length = s.length;\n            if (length === 0)\n                return false;\n            let check = parseInt(s.charAt(length - 1), 10);\n            return UPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n        }\n        static getStandardUPCEANChecksum(s) {\n            let length = s.length;\n            let sum = 0;\n            for (let i = length - 1; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            sum *= 3;\n            for (let i = length - 2; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            return (1000 - sum) % 10;\n        }\n    }\n\n    /**\n     * <p>Implements decoding of the EAN-13 format.</p>\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author alasdair@google.com (Alasdair Mackintosh)\n     */\n    class EAN13Reader extends UPCEANReader {\n        constructor() {\n            super();\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n        }\n        decodeMiddle(row, startRange, resultString) {\n            let counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            let lgPatternFound = 0;\n            for (let x = 0; x < 6 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_AND_G_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    lgPatternFound |= 1 << (5 - x);\n                }\n            }\n            resultString = EAN13Reader.determineFirstDigit(resultString, lgPatternFound);\n            let middleRange = UPCEANReader.findGuardPattern(\n                row,\n                rowOffset,\n                true,\n                UPCEANReader.MIDDLE_PATTERN,\n                new Int32Array(UPCEANReader.MIDDLE_PATTERN.length).fill(0));\n            rowOffset = middleRange[1];\n            for (let x = 0; x < 6 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n            }\n            return { rowOffset, resultString };\n        }\n        getBarcodeFormat() {\n            return BarcodeFormat$1.EAN_13;\n        }\n        static determineFirstDigit(resultString, lgPatternFound) {\n            for (let d = 0; d < 10; d++) {\n                if (lgPatternFound === this.FIRST_DIGIT_ENCODINGS[d]) {\n                    resultString = String.fromCharCode(('0'.charCodeAt(0) + d)) + resultString;\n                    return resultString;\n                }\n            }\n            throw new NotFoundException();\n        }\n    }\n    EAN13Reader.FIRST_DIGIT_ENCODINGS = [0x00, 0x0B, 0x0D, 0xE, 0x13, 0x19, 0x1C, 0x15, 0x16, 0x1A];\n\n    /**\n     * <p>Implements decoding of the EAN-8 format.</p>\n     *\n     * @author Sean Owen\n     */\n    class EAN8Reader extends UPCEANReader {\n        constructor() {\n            super();\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n        }\n        decodeMiddle(row, startRange, resultString) {\n            const counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            for (let x = 0; x < 4 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n            }\n            let middleRange = UPCEANReader.findGuardPattern(row, rowOffset, true, UPCEANReader.MIDDLE_PATTERN, new Int32Array(UPCEANReader.MIDDLE_PATTERN.length).fill(0));\n            rowOffset = middleRange[1];\n            for (let x = 0; x < 4 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n            }\n            return { rowOffset, resultString };\n        }\n        getBarcodeFormat() {\n            return BarcodeFormat$1.EAN_8;\n        }\n    }\n\n    /**\n     * Encapsulates functionality and implementation that is common to all families\n     * of one-dimensional barcodes.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author sam2332 (Sam Rudloff)\n     *\n     * @source https://github.com/zxing/zxing/blob/3c96923276dd5785d58eb970b6ba3f80d36a9505/core/src/main/java/com/google/zxing/oned/UPCAReader.java\n     *\n     * @experimental\n     */\n    class UPCAReader extends UPCEANReader {\n        constructor() {\n            super(...arguments);\n            this.ean13Reader = new EAN13Reader();\n        }\n        // @Override\n        getBarcodeFormat() {\n            return BarcodeFormat$1.UPC_A;\n        }\n        // Note that we don't try rotation without the try harder flag, even if rotation was supported.\n        // @Override\n        decode(image, hints) {\n            return this.maybeReturnResult(this.ean13Reader.decode(image));\n        }\n        // @Override\n        decodeRow(rowNumber, row, hints) {\n            return this.maybeReturnResult(this.ean13Reader.decodeRow(rowNumber, row, hints));\n        }\n        // @Override\n        decodeMiddle(row, startRange, resultString) {\n            return this.ean13Reader.decodeMiddle(row, startRange, resultString);\n        }\n        maybeReturnResult(result) {\n            let text = result.getText();\n            if (text.charAt(0) === '0') {\n                let upcaResult = new Result(text.substring(1), null, null, result.getResultPoints(), BarcodeFormat$1.UPC_A);\n                if (result.getResultMetadata() != null) {\n                    upcaResult.putAllMetadata(result.getResultMetadata());\n                }\n                return upcaResult;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n        reset() {\n            this.ean13Reader.reset();\n        }\n    }\n\n    /**\n     * <p>Implements decoding of the UPC-E format.</p>\n     * <p><a href=\"http://www.barcodeisland.com/upce.phtml\">This</a> is a great reference for\n     * UPC-E information.</p>\n     *\n     * @author Sean Owen\n     *\n     * @source https://github.com/zxing/zxing/blob/3c96923276dd5785d58eb970b6ba3f80d36a9505/core/src/main/java/com/google/zxing/oned/UPCEReader.java\n     *\n     * @experimental\n     */\n    /* final */ class UPCEReader extends UPCEANReader {\n        constructor() {\n            super();\n            this.decodeMiddleCounters = new Int32Array(4);\n        }\n        /**\n         * @throws NotFoundException\n         */\n        // @Override\n        decodeMiddle(row, startRange, result) {\n            const counters = this.decodeMiddleCounters.map(x => x);\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            const end = row.getSize();\n            let rowOffset = startRange[1];\n            let lgPatternFound = 0;\n            for (let x = 0; x < 6 && rowOffset < end; x++) {\n                const bestMatch = UPCEReader.decodeDigit(\n                    row, counters, rowOffset, UPCEReader.L_AND_G_PATTERNS);\n                result += String.fromCharCode(('0'.charCodeAt(0) + (bestMatch % 10)));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    lgPatternFound |= (1 << (5 - x));\n                }\n            }\n            let resultString = UPCEReader.determineNumSysAndCheckDigit(\n                result, lgPatternFound);\n            return {rowOffset, resultString};\n        }\n        /**\n         * @throws NotFoundException\n         */\n        // @Override\n        decodeEnd(row, endStart) {\n            return UPCEReader.findGuardPatternWithoutCounters(\n                row, endStart, true, UPCEReader.MIDDLE_END_PATTERN);\n        }\n        /**\n         * @throws FormatException\n         */\n        // @Override\n        checkChecksum(s) {\n            return UPCEANReader.checkChecksum(UPCEReader.convertUPCEtoUPCA(s));\n        }\n        /**\n         * @throws NotFoundException\n         */\n        static determineNumSysAndCheckDigit(resultString, lgPatternFound) {\n            for (let numSys = 0; numSys <= 1; numSys++) {\n                for (let d = 0; d < 10; d++) {\n                    if (lgPatternFound === this.NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n                        let prefix = String.fromCharCode('0'.charCodeAt(0) + numSys);\n                        let suffix = String.fromCharCode('0'.charCodeAt(0) + d);\n                        return prefix + resultString + suffix;\n                    }\n                }\n            }\n            throw NotFoundException.getNotFoundInstance();\n        }\n        // @Override\n        getBarcodeFormat() {\n            return BarcodeFormat$1.UPC_E;\n        }\n        /**\n         * Expands a UPC-E value back into its full, equivalent UPC-A code value.\n         *\n         * @param upce UPC-E code as string of digits\n         * @return equivalent UPC-A code as string of digits\n         */\n        static convertUPCEtoUPCA(upce) {\n            // the following line is equivalent to upce.getChars(1, 7, upceChars, 0);\n            const upceChars = upce.slice(1, 7).split('').map(x => x.charCodeAt(0));\n            const result = new StringBuilder( /*12*/);\n            result.append(upce.charAt(0));\n            let lastChar = upceChars[5];\n            switch (lastChar) {\n                case 0:\n                case 1:\n                case 2:\n                    result.appendChars(upceChars, 0, 2);\n                    result.append(lastChar);\n                    result.append('0000');\n                    result.appendChars(upceChars, 2, 3);\n                    break;\n                case 3:\n                    result.appendChars(upceChars, 0, 3);\n                    result.append('00000');\n                    result.appendChars(upceChars, 3, 2);\n                    break;\n                case 4:\n                    result.appendChars(upceChars, 0, 4);\n                    result.append('00000');\n                    result.append(upceChars[4]);\n                    break;\n                default:\n                    result.appendChars(upceChars, 0, 5);\n                    result.append('0000');\n                    result.append(lastChar);\n                    break;\n            }\n            // Only append check digit in conversion if supplied\n            if (upce.length >= 8) {\n                result.append(upce.charAt(7));\n            }\n            return result.toString();\n        }\n    }\n    /**\n     * The pattern that marks the middle, and end, of a UPC-E pattern.\n     * There is no \"second half\" to a UPC-E barcode.\n     */\n    UPCEReader.MIDDLE_END_PATTERN = Int32Array.from([1, 1, 1, 1, 1, 1]);\n    // For an UPC-E barcode, the final digit is represented by the parities used\n    // to encode the middle six digits, according to the table below.\n    //\n    //                Parity of next 6 digits\n    //    Digit   0     1     2     3     4     5\n    //       0    Even   Even  Even Odd  Odd   Odd\n    //       1    Even   Even  Odd  Even Odd   Odd\n    //       2    Even   Even  Odd  Odd  Even  Odd\n    //       3    Even   Even  Odd  Odd  Odd   Even\n    //       4    Even   Odd   Even Even Odd   Odd\n    //       5    Even   Odd   Odd  Even Even  Odd\n    //       6    Even   Odd   Odd  Odd  Even  Even\n    //       7    Even   Odd   Even Odd  Even  Odd\n    //       8    Even   Odd   Even Odd  Odd   Even\n    //       9    Even   Odd   Odd  Even Odd   Even\n    //\n    // The encoding is represented by the following array, which is a bit pattern\n    // using Odd = 0 and Even = 1. For example, 5 is represented by:\n    //\n    //              Odd Even Even Odd Odd Even\n    // in binary:\n    //                0    1    1   0   0    1   == 0x19\n    //\n    /**\n     * See {@link #L_AND_G_PATTERNS}; these values similarly represent patterns of\n     * even-odd parity encodings of digits that imply both the number system (0 or 1)\n     * used, and the check digit.\n     */\n    UPCEReader.NUMSYS_AND_CHECK_DIGIT_PATTERNS = [\n        Int32Array.from([0x38, 0x34, 0x32, 0x31, 0x2C, 0x26, 0x23, 0x2A, 0x29, 0x25]),\n        Int32Array.from([0x07, 0x0B, 0x0D, 0x0E, 0x13, 0x19, 0x1C, 0x15, 0x16, 0x1A]),\n    ];\n\n    /**\n     * <p>A reader that can read all available UPC/EAN formats. If a caller wants to try to\n     * read all such formats, it is most efficient to use this implementation rather than invoke\n     * individual readers.</p>\n     *\n     * @author Sean Owen\n     */\n    class MultiFormatUPCEANReader extends OneDReader {\n        constructor(hints) {\n            super();\n            let possibleFormats = hints == null ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n            let readers = [];\n            if (!isNullOrUndefined(possibleFormats)) {\n                if (possibleFormats.indexOf(BarcodeFormat$1.EAN_13) > -1) {\n                    readers.push(new EAN13Reader());\n                }\n                if (possibleFormats.indexOf(BarcodeFormat$1.UPC_A) > -1) {\n                    readers.push(new UPCAReader());\n                }\n                if (possibleFormats.indexOf(BarcodeFormat$1.EAN_8) > -1) {\n                    readers.push(new EAN8Reader());\n                }\n                if (possibleFormats.indexOf(BarcodeFormat$1.UPC_E) > -1) {\n                    readers.push(new UPCEReader());\n                }\n            } else {\n                // No hints provided.\n                readers.push(new EAN13Reader());\n                readers.push(new UPCAReader());\n                readers.push(new EAN8Reader());\n                readers.push(new UPCEReader());\n            }\n            this.readers = readers;\n        }\n        decodeRow(rowNumber, row, hints) {\n            for (let reader of this.readers) {\n                try {\n                    // const result: Result = reader.decodeRow(rowNumber, row, startGuardPattern, hints);\n                    const result = reader.decodeRow(rowNumber, row, hints);\n                    // Special case: a 12-digit code encoded in UPC-A is identical to a \"0\"\n                    // followed by those 12 digits encoded as EAN-13. Each will recognize such a code,\n                    // UPC-A as a 12-digit string and EAN-13 as a 13-digit string starting with \"0\".\n                    // Individually these are correct and their readers will both read such a code\n                    // and correctly call it EAN-13, or UPC-A, respectively.\n                    //\n                    // In this case, if we've been looking for both types, we'd like to call it\n                    // a UPC-A code. But for efficiency we only run the EAN-13 decoder to also read\n                    // UPC-A. So we special case it here, and convert an EAN-13 result to a UPC-A\n                    // result if appropriate.\n                    //\n                    // But, don't return UPC-A if UPC-A was not a requested format!\n                    const ean13MayBeUPCA = result.getBarcodeFormat() === BarcodeFormat$1.EAN_13 &&\n                        result.getText().charAt(0) === '0';\n                    // @SuppressWarnings(\"unchecked\")\n                    const possibleFormats = hints == null ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n                    const canReturnUPCA = possibleFormats == null || possibleFormats.includes(BarcodeFormat$1.UPC_A);\n                    if (ean13MayBeUPCA && canReturnUPCA) {\n                        const rawBytes = result.getRawBytes();\n                        // Transfer the metadata across\n                        const resultUPCA = new Result(\n                            result.getText().substring(1),\n                            rawBytes,\n                            (rawBytes ? rawBytes.length : null),\n                            result.getResultPoints(),\n                            BarcodeFormat$1.UPC_A);\n                        resultUPCA.putAllMetadata(result.getResultMetadata());\n                        return resultUPCA;\n                    }\n                    return result;\n                }\n                catch (err) {\n                    // continue;\n                }\n            }\n            throw new NotFoundException();\n        }\n        reset() {\n            for (let reader of this.readers) {\n                reader.reset();\n            }\n        }\n    }\n\n    // import Integer from '../../util/Integer';\n    // import Float from '../../util/Float';\n    class AbstractRSSReader extends OneDReader {\n        constructor() {\n            super();\n            this.decodeFinderCounters = new Int32Array(4);\n            this.dataCharacterCounters = new Int32Array(8);\n            this.oddRoundingErrors = new Array(4);\n            this.evenRoundingErrors = new Array(4);\n            this.oddCounts = new Array(this.dataCharacterCounters.length / 2);\n            this.evenCounts = new Array(this.dataCharacterCounters.length / 2);\n        }\n        getDecodeFinderCounters() {\n            return this.decodeFinderCounters;\n        }\n        getDataCharacterCounters() {\n            return this.dataCharacterCounters;\n        }\n        getOddRoundingErrors() {\n            return this.oddRoundingErrors;\n        }\n        getEvenRoundingErrors() {\n            return this.evenRoundingErrors;\n        }\n        getOddCounts() {\n            return this.oddCounts;\n        }\n        getEvenCounts() {\n            return this.evenCounts;\n        }\n        parseFinderValue(counters, finderPatterns) {\n            for (let value = 0; value < finderPatterns.length; value++) {\n                if (OneDReader.patternMatchVariance(counters, finderPatterns[value], AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE) < AbstractRSSReader.MAX_AVG_VARIANCE) {\n                    return value;\n                }\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * @param array values to sum\n         * @return sum of values\n         * @deprecated call {@link MathUtils#sum(int[])}\n         */\n        static count(array) {\n            return MathUtils.sum(new Int32Array(array));\n        }\n        static increment(array, errors) {\n            let index = 0;\n            let biggestError = errors[0];\n            for (let i = 1; i < array.length; i++) {\n                if (errors[i] > biggestError) {\n                    biggestError = errors[i];\n                    index = i;\n                }\n            }\n            array[index]++;\n        }\n        static decrement(array, errors) {\n            let index = 0;\n            let biggestError = errors[0];\n            for (let i = 1; i < array.length; i++) {\n                if (errors[i] < biggestError) {\n                    biggestError = errors[i];\n                    index = i;\n                }\n            }\n            array[index]--;\n        }\n        static isFinderPattern(counters) {\n            let firstTwoSum = counters[0] + counters[1];\n            let sum = firstTwoSum + counters[2] + counters[3];\n            let ratio = firstTwoSum / sum;\n            if (ratio >= AbstractRSSReader.MIN_FINDER_PATTERN_RATIO && ratio <= AbstractRSSReader.MAX_FINDER_PATTERN_RATIO) {\n                // passes ratio test in spec, but see if the counts are unreasonable\n                let minCounter = Number.MAX_SAFE_INTEGER;\n                let maxCounter = Number.MIN_SAFE_INTEGER;\n                for (let counter of counters) {\n                    if (counter > maxCounter) {\n                        maxCounter = counter;\n                    }\n                    if (counter < minCounter) {\n                        minCounter = counter;\n                    }\n                }\n                return maxCounter < 10 * minCounter;\n            }\n            return false;\n        }\n    }\n    AbstractRSSReader.MAX_AVG_VARIANCE = 0.2;\n    AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE = 0.45;\n    AbstractRSSReader.MIN_FINDER_PATTERN_RATIO = 9.5 / 12.0;\n    AbstractRSSReader.MAX_FINDER_PATTERN_RATIO = 12.5 / 14.0;\n\n    class DataCharacter {\n        constructor(value, checksumPortion) {\n            this.value = value;\n            this.checksumPortion = checksumPortion;\n        }\n        getValue() {\n            return this.value;\n        }\n        getChecksumPortion() {\n            return this.checksumPortion;\n        }\n        toString() {\n            return this.value + '(' + this.checksumPortion + ')';\n        }\n        equals(o) {\n            if (!(o instanceof DataCharacter)) {\n                return false;\n            }\n            const that = o;\n            return this.value === that.value && this.checksumPortion === that.checksumPortion;\n        }\n        hashCode() {\n            return this.value ^ this.checksumPortion;\n        }\n    }\n\n    class FinderPattern {\n        constructor(value, startEnd, start, end, rowNumber) {\n            this.value = value;\n            this.startEnd = startEnd;\n            this.value = value;\n            this.startEnd = startEnd;\n            this.resultPoints = new Array();\n            this.resultPoints.push(new ResultPoint(start, rowNumber));\n            this.resultPoints.push(new ResultPoint(end, rowNumber));\n        }\n        getValue() {\n            return this.value;\n        }\n        getStartEnd() {\n            return this.startEnd;\n        }\n        getResultPoints() {\n            return this.resultPoints;\n        }\n        equals(o) {\n            if (!(o instanceof FinderPattern)) {\n                return false;\n            }\n            const that = o;\n            return this.value === that.value;\n        }\n        hashCode() {\n            return this.value;\n        }\n    }\n\n    /**\n     * RSS util functions.\n     */\n    class RSSUtils {\n        constructor() { }\n        static getRSSvalue(widths, maxWidth, noNarrow) {\n            let n = 0;\n            for (let width of widths) {\n                n += width;\n            }\n            let val = 0;\n            let narrowMask = 0;\n            let elements = widths.length;\n            for (let bar = 0; bar < elements - 1; bar++) {\n                let elmWidth;\n                for (elmWidth = 1, narrowMask |= 1 << bar; elmWidth < widths[bar]; elmWidth++, narrowMask &= ~(1 << bar)) {\n                    let subVal = RSSUtils.combins(n - elmWidth - 1, elements - bar - 2);\n                    if (noNarrow && (narrowMask === 0) && (n - elmWidth - (elements - bar - 1) >= elements - bar - 1)) {\n                        subVal -= RSSUtils.combins(n - elmWidth - (elements - bar), elements - bar - 2);\n                    }\n                    if (elements - bar - 1 > 1) {\n                        let lessVal = 0;\n                        for (let mxwElement = n - elmWidth - (elements - bar - 2); mxwElement > maxWidth; mxwElement--) {\n                            lessVal += RSSUtils.combins(n - elmWidth - mxwElement - 1, elements - bar - 3);\n                        }\n                        subVal -= lessVal * (elements - 1 - bar);\n                    }\n                    else if (n - elmWidth > maxWidth) {\n                        subVal--;\n                    }\n                    val += subVal;\n                }\n                n -= elmWidth;\n            }\n            return val;\n        }\n        static combins(n, r) {\n            let maxDenom;\n            let minDenom;\n            if (n - r > r) {\n                minDenom = r;\n                maxDenom = n - r;\n            }\n            else {\n                minDenom = n - r;\n                maxDenom = r;\n            }\n            let val = 1;\n            let j = 1;\n            for (let i = n; i > maxDenom; i--) {\n                val *= i;\n                if (j <= minDenom) {\n                    val /= j;\n                    j++;\n                }\n            }\n            while ((j <= minDenom)) {\n                val /= j;\n                j++;\n            }\n            return val;\n        }\n    }\n\n    class BitArrayBuilder {\n        static buildBitArray(pairs) {\n            let charNumber = (pairs.length * 2) - 1;\n            if (pairs[pairs.length - 1].getRightChar() == null) {\n                charNumber -= 1;\n            }\n            let size = 12 * charNumber;\n            let binary = new BitArray(size);\n            let accPos = 0;\n            let firstPair = pairs[0];\n            let firstValue = firstPair.getRightChar().getValue();\n            for (let i = 11; i >= 0; --i) {\n                if ((firstValue & (1 << i)) != 0) {\n                    binary.set(accPos);\n                }\n                accPos++;\n            }\n            for (let i = 1; i < pairs.length; ++i) {\n                let currentPair = pairs[i];\n                let leftValue = currentPair.getLeftChar().getValue();\n                for (let j = 11; j >= 0; --j) {\n                    if ((leftValue & (1 << j)) != 0) {\n                        binary.set(accPos);\n                    }\n                    accPos++;\n                }\n                if (currentPair.getRightChar() != null) {\n                    let rightValue = currentPair.getRightChar().getValue();\n                    for (let j = 11; j >= 0; --j) {\n                        if ((rightValue & (1 << j)) != 0) {\n                            binary.set(accPos);\n                        }\n                        accPos++;\n                    }\n                }\n            }\n            return binary;\n        }\n    }\n\n    class BlockParsedResult {\n        constructor(finished, decodedInformation) {\n            if (decodedInformation) {\n                this.decodedInformation = null;\n            }\n            else {\n                this.finished = finished;\n                this.decodedInformation = decodedInformation;\n            }\n        }\n        getDecodedInformation() {\n            return this.decodedInformation;\n        }\n        isFinished() {\n            return this.finished;\n        }\n    }\n\n    class DecodedObject {\n        constructor(newPosition) {\n            this.newPosition = newPosition;\n        }\n        getNewPosition() {\n            return this.newPosition;\n        }\n    }\n\n    class DecodedChar extends DecodedObject {\n        constructor(newPosition, value) {\n            super(newPosition);\n            this.value = value;\n        }\n        getValue() {\n            return this.value;\n        }\n        isFNC1() {\n            return this.value === DecodedChar.FNC1;\n        }\n    }\n    DecodedChar.FNC1 = '$';\n\n    class DecodedInformation extends DecodedObject {\n        constructor(newPosition, newString, remainingValue) {\n            super(newPosition);\n            if (remainingValue) {\n                this.remaining = true;\n                this.remainingValue = this.remainingValue;\n            }\n            else {\n                this.remaining = false;\n                this.remainingValue = 0;\n            }\n            this.newString = newString;\n        }\n        getNewString() {\n            return this.newString;\n        }\n        isRemaining() {\n            return this.remaining;\n        }\n        getRemainingValue() {\n            return this.remainingValue;\n        }\n    }\n\n    class DecodedNumeric extends DecodedObject {\n        constructor(newPosition, firstDigit, secondDigit) {\n            super(newPosition);\n            if (firstDigit < 0 || firstDigit > 10 || secondDigit < 0 || secondDigit > 10) {\n                throw new FormatException();\n            }\n            this.firstDigit = firstDigit;\n            this.secondDigit = secondDigit;\n        }\n        getFirstDigit() {\n            return this.firstDigit;\n        }\n        getSecondDigit() {\n            return this.secondDigit;\n        }\n        getValue() {\n            return this.firstDigit * 10 + this.secondDigit;\n        }\n        isFirstDigitFNC1() {\n            return this.firstDigit === DecodedNumeric.FNC1;\n        }\n        isSecondDigitFNC1() {\n            return this.secondDigit === DecodedNumeric.FNC1;\n        }\n        isAnyFNC1() {\n            return this.firstDigit === DecodedNumeric.FNC1 || this.secondDigit === DecodedNumeric.FNC1;\n        }\n    }\n    DecodedNumeric.FNC1 = 10;\n\n    class FieldParser {\n        constructor() {\n        }\n        static parseFieldsInGeneralPurpose(rawInformation) {\n            if (!rawInformation) {\n                return null;\n            }\n            // Processing 2-digit AIs\n            if (rawInformation.length < 2) {\n                throw new NotFoundException();\n            }\n            let firstTwoDigits = rawInformation.substring(0, 2);\n            for (let dataLength of FieldParser.TWO_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstTwoDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(2, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(2, dataLength[1], rawInformation);\n                }\n            }\n            if (rawInformation.length < 3) {\n                throw new NotFoundException();\n            }\n            let firstThreeDigits = rawInformation.substring(0, 3);\n            for (let dataLength of FieldParser.THREE_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstThreeDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(3, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(3, dataLength[1], rawInformation);\n                }\n            }\n            for (let dataLength of FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstThreeDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n                }\n            }\n            if (rawInformation.length < 4) {\n                throw new NotFoundException();\n            }\n            let firstFourDigits = rawInformation.substring(0, 4);\n            for (let dataLength of FieldParser.FOUR_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstFourDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n                }\n            }\n            throw new NotFoundException();\n        }\n        static processFixedAI(aiSize, fieldSize, rawInformation) {\n            if (rawInformation.length < aiSize) {\n                throw new NotFoundException();\n            }\n            let ai = rawInformation.substring(0, aiSize);\n            if (rawInformation.length < aiSize + fieldSize) {\n                throw new NotFoundException();\n            }\n            let field = rawInformation.substring(aiSize, aiSize + fieldSize);\n            let remaining = rawInformation.substring(aiSize + fieldSize);\n            let result = '(' + ai + ')' + field;\n            let parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n            return parsedAI == null ? result : result + parsedAI;\n        }\n        static processVariableAI(aiSize, variableFieldSize, rawInformation) {\n            let ai = rawInformation.substring(0, aiSize);\n            let maxSize;\n            if (rawInformation.length < aiSize + variableFieldSize) {\n                maxSize = rawInformation.length;\n            }\n            else {\n                maxSize = aiSize + variableFieldSize;\n            }\n            let field = rawInformation.substring(aiSize, maxSize);\n            let remaining = rawInformation.substring(maxSize);\n            let result = '(' + ai + ')' + field;\n            let parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n            return parsedAI == null ? result : result + parsedAI;\n        }\n    }\n    FieldParser.VARIABLE_LENGTH = [];\n    FieldParser.TWO_DIGIT_DATA_LENGTH = [\n        ['00', 18],\n        ['01', 14],\n        ['02', 14],\n        ['10', FieldParser.VARIABLE_LENGTH, 20],\n        ['11', 6],\n        ['12', 6],\n        ['13', 6],\n        ['15', 6],\n        ['17', 6],\n        ['20', 2],\n        ['21', FieldParser.VARIABLE_LENGTH, 20],\n        ['22', FieldParser.VARIABLE_LENGTH, 29],\n        ['30', FieldParser.VARIABLE_LENGTH, 8],\n        ['37', FieldParser.VARIABLE_LENGTH, 8],\n        // internal company codes\n        ['90', FieldParser.VARIABLE_LENGTH, 30],\n        ['91', FieldParser.VARIABLE_LENGTH, 30],\n        ['92', FieldParser.VARIABLE_LENGTH, 30],\n        ['93', FieldParser.VARIABLE_LENGTH, 30],\n        ['94', FieldParser.VARIABLE_LENGTH, 30],\n        ['95', FieldParser.VARIABLE_LENGTH, 30],\n        ['96', FieldParser.VARIABLE_LENGTH, 30],\n        ['97', FieldParser.VARIABLE_LENGTH, 3],\n        ['98', FieldParser.VARIABLE_LENGTH, 30],\n        ['99', FieldParser.VARIABLE_LENGTH, 30],\n    ];\n    FieldParser.THREE_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        ['240', FieldParser.VARIABLE_LENGTH, 30],\n        ['241', FieldParser.VARIABLE_LENGTH, 30],\n        ['242', FieldParser.VARIABLE_LENGTH, 6],\n        ['250', FieldParser.VARIABLE_LENGTH, 30],\n        ['251', FieldParser.VARIABLE_LENGTH, 30],\n        ['253', FieldParser.VARIABLE_LENGTH, 17],\n        ['254', FieldParser.VARIABLE_LENGTH, 20],\n        ['400', FieldParser.VARIABLE_LENGTH, 30],\n        ['401', FieldParser.VARIABLE_LENGTH, 30],\n        ['402', 17],\n        ['403', FieldParser.VARIABLE_LENGTH, 30],\n        ['410', 13],\n        ['411', 13],\n        ['412', 13],\n        ['413', 13],\n        ['414', 13],\n        ['420', FieldParser.VARIABLE_LENGTH, 20],\n        ['421', FieldParser.VARIABLE_LENGTH, 15],\n        ['422', 3],\n        ['423', FieldParser.VARIABLE_LENGTH, 15],\n        ['424', 3],\n        ['425', 3],\n        ['426', 3],\n    ];\n    FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        ['310', 6],\n        ['311', 6],\n        ['312', 6],\n        ['313', 6],\n        ['314', 6],\n        ['315', 6],\n        ['316', 6],\n        ['320', 6],\n        ['321', 6],\n        ['322', 6],\n        ['323', 6],\n        ['324', 6],\n        ['325', 6],\n        ['326', 6],\n        ['327', 6],\n        ['328', 6],\n        ['329', 6],\n        ['330', 6],\n        ['331', 6],\n        ['332', 6],\n        ['333', 6],\n        ['334', 6],\n        ['335', 6],\n        ['336', 6],\n        ['340', 6],\n        ['341', 6],\n        ['342', 6],\n        ['343', 6],\n        ['344', 6],\n        ['345', 6],\n        ['346', 6],\n        ['347', 6],\n        ['348', 6],\n        ['349', 6],\n        ['350', 6],\n        ['351', 6],\n        ['352', 6],\n        ['353', 6],\n        ['354', 6],\n        ['355', 6],\n        ['356', 6],\n        ['357', 6],\n        ['360', 6],\n        ['361', 6],\n        ['362', 6],\n        ['363', 6],\n        ['364', 6],\n        ['365', 6],\n        ['366', 6],\n        ['367', 6],\n        ['368', 6],\n        ['369', 6],\n        ['390', FieldParser.VARIABLE_LENGTH, 15],\n        ['391', FieldParser.VARIABLE_LENGTH, 18],\n        ['392', FieldParser.VARIABLE_LENGTH, 15],\n        ['393', FieldParser.VARIABLE_LENGTH, 18],\n        ['703', FieldParser.VARIABLE_LENGTH, 30],\n    ];\n    FieldParser.FOUR_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        ['7001', 13],\n        ['7002', FieldParser.VARIABLE_LENGTH, 30],\n        ['7003', 10],\n        ['8001', 14],\n        ['8002', FieldParser.VARIABLE_LENGTH, 20],\n        ['8003', FieldParser.VARIABLE_LENGTH, 30],\n        ['8004', FieldParser.VARIABLE_LENGTH, 30],\n        ['8005', 6],\n        ['8006', 18],\n        ['8007', FieldParser.VARIABLE_LENGTH, 30],\n        ['8008', FieldParser.VARIABLE_LENGTH, 12],\n        ['8018', 18],\n        ['8020', FieldParser.VARIABLE_LENGTH, 25],\n        ['8100', 6],\n        ['8101', 10],\n        ['8102', 2],\n        ['8110', FieldParser.VARIABLE_LENGTH, 70],\n        ['8200', FieldParser.VARIABLE_LENGTH, 70],\n    ];\n\n    class GeneralAppIdDecoder {\n        constructor(information) {\n            this.buffer = new StringBuilder();\n            this.information = information;\n        }\n        decodeAllCodes(buff, initialPosition) {\n            let currentPosition = initialPosition;\n            let remaining = null;\n            do {\n                let info = this.decodeGeneralPurposeField(currentPosition, remaining);\n                let parsedFields = FieldParser.parseFieldsInGeneralPurpose(info.getNewString());\n                if (parsedFields != null) {\n                    buff.append(parsedFields);\n                }\n                if (info.isRemaining()) {\n                    remaining = '' + info.getRemainingValue();\n                }\n                else {\n                    remaining = null;\n                }\n                if (currentPosition === info.getNewPosition()) { // No step forward!\n                    break;\n                }\n                currentPosition = info.getNewPosition();\n            } while (true);\n            return buff.toString();\n        }\n        isStillNumeric(pos) {\n            // It's numeric if it still has 7 positions\n            // and one of the first 4 bits is \"1\".\n            if (pos + 7 > this.information.getSize()) {\n                return pos + 4 <= this.information.getSize();\n            }\n            for (let i = pos; i < pos + 3; ++i) {\n                if (this.information.get(i)) {\n                    return true;\n                }\n            }\n            return this.information.get(pos + 3);\n        }\n        decodeNumeric(pos) {\n            if (pos + 7 > this.information.getSize()) {\n                let numeric = this.extractNumericValueFromBitArray(pos, 4);\n                if (numeric === 0) {\n                    return new DecodedNumeric(this.information.getSize(), DecodedNumeric.FNC1, DecodedNumeric.FNC1);\n                }\n                return new DecodedNumeric(this.information.getSize(), numeric - 1, DecodedNumeric.FNC1);\n            }\n            let numeric = this.extractNumericValueFromBitArray(pos, 7);\n            let digit1 = (numeric - 8) / 11;\n            let digit2 = (numeric - 8) % 11;\n            return new DecodedNumeric(pos + 7, digit1, digit2);\n        }\n        extractNumericValueFromBitArray(pos, bits) {\n            return GeneralAppIdDecoder.extractNumericValueFromBitArray(this.information, pos, bits);\n        }\n        static extractNumericValueFromBitArray(information, pos, bits) {\n            let value = 0;\n            for (let i = 0; i < bits; ++i) {\n                if (information.get(pos + i)) {\n                    value |= 1 << (bits - i - 1);\n                }\n            }\n            return value;\n        }\n        decodeGeneralPurposeField(pos, remaining) {\n            // this.buffer.setLength(0);\n            this.buffer.setLengthToZero();\n            if (remaining != null) {\n                this.buffer.append(remaining);\n            }\n            this.current.setPosition(pos);\n            let lastDecoded = this.parseBlocks();\n            if (lastDecoded != null && lastDecoded.isRemaining()) {\n                return new DecodedInformation(this.current.getPosition(), this.buffer.toString(), lastDecoded.getRemainingValue());\n            }\n            return new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n        }\n        parseBlocks() {\n            let isFinished;\n            let result;\n            do {\n                let initialPosition = this.current.getPosition();\n                if (this.current.isAlpha()) {\n                    result = this.parseAlphaBlock();\n                    isFinished = result.isFinished();\n                }\n                else if (this.current.isIsoIec646()) {\n                    result = this.parseIsoIec646Block();\n                    isFinished = result.isFinished();\n                }\n                else { // it must be numeric\n                    result = this.parseNumericBlock();\n                    isFinished = result.isFinished();\n                }\n                let positionChanged = initialPosition !== this.current.getPosition();\n                if (!positionChanged && !isFinished) {\n                    break;\n                }\n            } while (!isFinished);\n            return result.getDecodedInformation();\n        }\n        parseNumericBlock() {\n            while (this.isStillNumeric(this.current.getPosition())) {\n                let numeric = this.decodeNumeric(this.current.getPosition());\n                this.current.setPosition(numeric.getNewPosition());\n                if (numeric.isFirstDigitFNC1()) {\n                    let information;\n                    if (numeric.isSecondDigitFNC1()) {\n                        information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    }\n                    else {\n                        information = new DecodedInformation(this.current.getPosition(), this.buffer.toString(), numeric.getSecondDigit());\n                    }\n                    return new BlockParsedResult(true, information);\n                }\n                this.buffer.append(numeric.getFirstDigit());\n                if (numeric.isSecondDigitFNC1()) {\n                    let information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    return new BlockParsedResult(true, information);\n                }\n                this.buffer.append(numeric.getSecondDigit());\n            }\n            if (this.isNumericToAlphaNumericLatch(this.current.getPosition())) {\n                this.current.setAlpha();\n                this.current.incrementPosition(4);\n            }\n            return new BlockParsedResult(false);\n        }\n        parseIsoIec646Block() {\n            while (this.isStillIsoIec646(this.current.getPosition())) {\n                let iso = this.decodeIsoIec646(this.current.getPosition());\n                this.current.setPosition(iso.getNewPosition());\n                if (iso.isFNC1()) {\n                    let information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    return new BlockParsedResult(true, information);\n                }\n                this.buffer.append(iso.getValue());\n            }\n            if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n                this.current.incrementPosition(3);\n                this.current.setNumeric();\n            }\n            else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n                if (this.current.getPosition() + 5 < this.information.getSize()) {\n                    this.current.incrementPosition(5);\n                }\n                else {\n                    this.current.setPosition(this.information.getSize());\n                }\n                this.current.setAlpha();\n            }\n            return new BlockParsedResult(false);\n        }\n        parseAlphaBlock() {\n            while (this.isStillAlpha(this.current.getPosition())) {\n                let alpha = this.decodeAlphanumeric(this.current.getPosition());\n                this.current.setPosition(alpha.getNewPosition());\n                if (alpha.isFNC1()) {\n                    let information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    return new BlockParsedResult(true, information); // end of the char block\n                }\n                this.buffer.append(alpha.getValue());\n            }\n            if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n                this.current.incrementPosition(3);\n                this.current.setNumeric();\n            }\n            else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n                if (this.current.getPosition() + 5 < this.information.getSize()) {\n                    this.current.incrementPosition(5);\n                }\n                else {\n                    this.current.setPosition(this.information.getSize());\n                }\n                this.current.setIsoIec646();\n            }\n            return new BlockParsedResult(false);\n        }\n        isStillIsoIec646(pos) {\n            if (pos + 5 > this.information.getSize()) {\n                return false;\n            }\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue >= 5 && fiveBitValue < 16) {\n                return true;\n            }\n            if (pos + 7 > this.information.getSize()) {\n                return false;\n            }\n            let sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n            if (sevenBitValue >= 64 && sevenBitValue < 116) {\n                return true;\n            }\n            if (pos + 8 > this.information.getSize()) {\n                return false;\n            }\n            let eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n            return eightBitValue >= 232 && eightBitValue < 253;\n        }\n        decodeIsoIec646(pos) {\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue === 15) {\n                return new DecodedChar(pos + 5, DecodedChar.FNC1);\n            }\n            if (fiveBitValue >= 5 && fiveBitValue < 15) {\n                return new DecodedChar(pos + 5, ('0' + (fiveBitValue - 5)));\n            }\n            let sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n            if (sevenBitValue >= 64 && sevenBitValue < 90) {\n                return new DecodedChar(pos + 7, ('' + (sevenBitValue + 1)));\n            }\n            if (sevenBitValue >= 90 && sevenBitValue < 116) {\n                return new DecodedChar(pos + 7, ('' + (sevenBitValue + 7)));\n            }\n            let eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n            let c;\n            switch (eightBitValue) {\n                case 232:\n                    c = '!';\n                    break;\n                case 233:\n                    c = '\"';\n                    break;\n                case 234:\n                    c = '%';\n                    break;\n                case 235:\n                    c = '&';\n                    break;\n                case 236:\n                    c = '\\'';\n                    break;\n                case 237:\n                    c = '(';\n                    break;\n                case 238:\n                    c = ')';\n                    break;\n                case 239:\n                    c = '*';\n                    break;\n                case 240:\n                    c = '+';\n                    break;\n                case 241:\n                    c = ',';\n                    break;\n                case 242:\n                    c = '-';\n                    break;\n                case 243:\n                    c = '.';\n                    break;\n                case 244:\n                    c = '/';\n                    break;\n                case 245:\n                    c = ':';\n                    break;\n                case 246:\n                    c = ';';\n                    break;\n                case 247:\n                    c = '<';\n                    break;\n                case 248:\n                    c = '=';\n                    break;\n                case 249:\n                    c = '>';\n                    break;\n                case 250:\n                    c = '?';\n                    break;\n                case 251:\n                    c = '_';\n                    break;\n                case 252:\n                    c = ' ';\n                    break;\n                default:\n                    throw new FormatException();\n            }\n            return new DecodedChar(pos + 8, c);\n        }\n        isStillAlpha(pos) {\n            if (pos + 5 > this.information.getSize()) {\n                return false;\n            }\n            // We now check if it's a valid 5-bit value (0..9 and FNC1)\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue >= 5 && fiveBitValue < 16) {\n                return true;\n            }\n            if (pos + 6 > this.information.getSize()) {\n                return false;\n            }\n            let sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n            return sixBitValue >= 16 && sixBitValue < 63; // 63 not included\n        }\n        decodeAlphanumeric(pos) {\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue === 15) {\n                return new DecodedChar(pos + 5, DecodedChar.FNC1);\n            }\n            if (fiveBitValue >= 5 && fiveBitValue < 15) {\n                return new DecodedChar(pos + 5, ('0' + (fiveBitValue - 5)));\n            }\n            let sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n            if (sixBitValue >= 32 && sixBitValue < 58) {\n                return new DecodedChar(pos + 6, ('' + (sixBitValue + 33)));\n            }\n            let c;\n            switch (sixBitValue) {\n                case 58:\n                    c = '*';\n                    break;\n                case 59:\n                    c = ',';\n                    break;\n                case 60:\n                    c = '-';\n                    break;\n                case 61:\n                    c = '.';\n                    break;\n                case 62:\n                    c = '/';\n                    break;\n                default:\n                    throw new IllegalStateException('Decoding invalid alphanumeric value: ' + sixBitValue);\n            }\n            return new DecodedChar(pos + 6, c);\n        }\n        isAlphaTo646ToAlphaLatch(pos) {\n            if (pos + 1 > this.information.getSize()) {\n                return false;\n            }\n            for (let i = 0; i < 5 && i + pos < this.information.getSize(); ++i) {\n                if (i === 2) {\n                    if (!this.information.get(pos + 2)) {\n                        return false;\n                    }\n                }\n                else if (this.information.get(pos + i)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        isAlphaOr646ToNumericLatch(pos) {\n            // Next is alphanumeric if there are 3 positions and they are all zeros\n            if (pos + 3 > this.information.getSize()) {\n                return false;\n            }\n            for (let i = pos; i < pos + 3; ++i) {\n                if (this.information.get(i)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        isNumericToAlphaNumericLatch(pos) {\n            // Next is alphanumeric if there are 4 positions and they are all zeros, or\n            // if there is a subset of this just before the end of the symbol\n            if (pos + 1 > this.information.getSize()) {\n                return false;\n            }\n            for (let i = 0; i < 4 && i + pos < this.information.getSize(); ++i) {\n                if (this.information.get(pos + i)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    class AbstractExpandedDecoder {\n        constructor(information) {\n            this.information = information;\n            this.generalDecoder = new GeneralAppIdDecoder(information);\n        }\n        getInformation() {\n            return this.information;\n        }\n        getGeneralDecoder() {\n            return this.generalDecoder;\n        }\n    }\n\n    class AI01decoder extends AbstractExpandedDecoder {\n        constructor(information) {\n            super(information);\n        }\n        encodeCompressedGtin(buf, currentPos) {\n            buf.append('(01)');\n            let initialPosition = buf.length();\n            buf.append('9');\n            this.encodeCompressedGtinWithoutAI(buf, currentPos, initialPosition);\n        }\n        encodeCompressedGtinWithoutAI(buf, currentPos, initialBufferPosition) {\n            for (let i = 0; i < 4; ++i) {\n                let currentBlock = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos + 10 * i, 10);\n                if (currentBlock / 100 === 0) {\n                    buf.append('0');\n                }\n                if (currentBlock / 10 === 0) {\n                    buf.append('0');\n                }\n                buf.append(currentBlock);\n            }\n            AI01decoder.appendCheckDigit(buf, initialBufferPosition);\n        }\n        static appendCheckDigit(buf, currentPos) {\n            let checkDigit = 0;\n            for (let i = 0; i < 13; i++) {\n                // let digit = buf.charAt(i + currentPos) - '0';\n                // To be checked\n                let digit = buf.charAt(i + currentPos).charCodeAt(0) - '0'.charCodeAt(0);\n                checkDigit += (i & 0x01) === 0 ? 3 * digit : digit;\n            }\n            checkDigit = 10 - (checkDigit % 10);\n            if (checkDigit === 10) {\n                checkDigit = 0;\n            }\n            buf.append(checkDigit);\n        }\n    }\n    AI01decoder.GTIN_SIZE = 40;\n\n    class AI01AndOtherAIs extends AI01decoder {\n        // the second one is the encodation method, and the other two are for the variable length\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            let buff = new StringBuilder();\n            buff.append('(01)');\n            let initialGtinPosition = buff.length();\n            let firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n            buff.append(firstGtinDigit);\n            this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n            return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n        }\n    }\n    AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; // first bit encodes the linkage flag,\n\n    class AnyAIDecoder extends AbstractExpandedDecoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            let buf = new StringBuilder();\n            return this.getGeneralDecoder().decodeAllCodes(buf, AnyAIDecoder.HEADER_SIZE);\n        }\n    }\n    AnyAIDecoder.HEADER_SIZE = 2 + 1 + 2;\n\n    class AI01weightDecoder extends AI01decoder {\n        constructor(information) {\n            super(information);\n        }\n        encodeCompressedWeight(buf, currentPos, weightSize) {\n            let originalWeightNumeric = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos, weightSize);\n            this.addWeightCode(buf, originalWeightNumeric);\n            let weightNumeric = this.checkWeight(originalWeightNumeric);\n            let currentDivisor = 100000;\n            for (let i = 0; i < 5; ++i) {\n                if (weightNumeric / currentDivisor === 0) {\n                    buf.append('0');\n                }\n                currentDivisor /= 10;\n            }\n            buf.append(weightNumeric);\n        }\n    }\n\n    class AI013x0xDecoder extends AI01weightDecoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() != AI013x0xDecoder.HEADER_SIZE + AI01weightDecoder.GTIN_SIZE + AI013x0xDecoder.WEIGHT_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI013x0xDecoder.HEADER_SIZE);\n            this.encodeCompressedWeight(buf, AI013x0xDecoder.HEADER_SIZE + AI01weightDecoder.GTIN_SIZE, AI013x0xDecoder.WEIGHT_SIZE);\n            return buf.toString();\n        }\n    }\n    AI013x0xDecoder.HEADER_SIZE = 4 + 1;\n    AI013x0xDecoder.WEIGHT_SIZE = 15;\n\n    class AI013103decoder extends AI013x0xDecoder {\n        constructor(information) {\n            super(information);\n        }\n        addWeightCode(buf, weight) {\n            buf.append('(3103)');\n        }\n        checkWeight(weight) {\n            return weight;\n        }\n    }\n\n    class AI01320xDecoder extends AI013x0xDecoder {\n        constructor(information) {\n            super(information);\n        }\n        addWeightCode(buf, weight) {\n            if (weight < 10000) {\n                buf.append('(3202)');\n            }\n            else {\n                buf.append('(3203)');\n            }\n        }\n        checkWeight(weight) {\n            if (weight < 10000) {\n                return weight;\n            }\n            return weight - 10000;\n        }\n    }\n\n    class AI01392xDecoder extends AI01decoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() < AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI01392xDecoder.HEADER_SIZE);\n            let lastAIdigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE, AI01392xDecoder.LAST_DIGIT_SIZE);\n            buf.append('(392');\n            buf.append(lastAIdigit);\n            buf.append(')');\n            let decodedInformation = this.getGeneralDecoder().decodeGeneralPurposeField(AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE + AI01392xDecoder.LAST_DIGIT_SIZE, null);\n            buf.append(decodedInformation.getNewString());\n            return buf.toString();\n        }\n    }\n    AI01392xDecoder.HEADER_SIZE = 5 + 1 + 2;\n    AI01392xDecoder.LAST_DIGIT_SIZE = 2;\n\n    class AI01393xDecoder extends AI01decoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() < AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI01393xDecoder.HEADER_SIZE);\n            let lastAIdigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE, AI01393xDecoder.LAST_DIGIT_SIZE);\n            buf.append('(393');\n            buf.append(lastAIdigit);\n            buf.append(')');\n            let firstThreeDigits = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE + AI01393xDecoder.LAST_DIGIT_SIZE, AI01393xDecoder.FIRST_THREE_DIGITS_SIZE);\n            if (firstThreeDigits / 100 == 0) {\n                buf.append('0');\n            }\n            if (firstThreeDigits / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(firstThreeDigits);\n            let generalInformation = this.getGeneralDecoder().decodeGeneralPurposeField(AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE + AI01393xDecoder.LAST_DIGIT_SIZE + AI01393xDecoder.FIRST_THREE_DIGITS_SIZE, null);\n            buf.append(generalInformation.getNewString());\n            return buf.toString();\n        }\n    }\n    AI01393xDecoder.HEADER_SIZE = 5 + 1 + 2;\n    AI01393xDecoder.LAST_DIGIT_SIZE = 2;\n    AI01393xDecoder.FIRST_THREE_DIGITS_SIZE = 10;\n\n    class AI013x0x1xDecoder extends AI01weightDecoder {\n        constructor(information, firstAIdigits, dateCode) {\n            super(information);\n            this.dateCode = dateCode;\n            this.firstAIdigits = firstAIdigits;\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() != AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE + AI013x0x1xDecoder.WEIGHT_SIZE + AI013x0x1xDecoder.DATE_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI013x0x1xDecoder.HEADER_SIZE);\n            this.encodeCompressedWeight(buf, AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE, AI013x0x1xDecoder.WEIGHT_SIZE);\n            this.encodeCompressedDate(buf, AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE + AI013x0x1xDecoder.WEIGHT_SIZE);\n            return buf.toString();\n        }\n        encodeCompressedDate(buf, currentPos) {\n            let numericDate = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos, AI013x0x1xDecoder.DATE_SIZE);\n            if (numericDate == 38400) {\n                return;\n            }\n            buf.append('(');\n            buf.append(this.dateCode);\n            buf.append(')');\n            let day = numericDate % 32;\n            numericDate /= 32;\n            let month = numericDate % 12 + 1;\n            numericDate /= 12;\n            let year = numericDate;\n            if (year / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(year);\n            if (month / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(month);\n            if (day / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(day);\n        }\n        addWeightCode(buf, weight) {\n            buf.append('(');\n            buf.append(this.firstAIdigits);\n            buf.append(weight / 100000);\n            buf.append(')');\n        }\n        checkWeight(weight) {\n            return weight % 100000;\n        }\n    }\n    AI013x0x1xDecoder.HEADER_SIZE = 7 + 1;\n    AI013x0x1xDecoder.WEIGHT_SIZE = 20;\n    AI013x0x1xDecoder.DATE_SIZE = 16;\n\n    function createDecoder(information) {\n        try {\n            if (information.get(1)) {\n                return new AI01AndOtherAIs(information);\n            }\n            if (!information.get(2)) {\n                return new AnyAIDecoder(information);\n            }\n            let fourBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 4);\n            switch (fourBitEncodationMethod) {\n                case 4: return new AI013103decoder(information);\n                case 5: return new AI01320xDecoder(information);\n            }\n            let fiveBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 5);\n            switch (fiveBitEncodationMethod) {\n                case 12: return new AI01392xDecoder(information);\n                case 13: return new AI01393xDecoder(information);\n            }\n            let sevenBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 7);\n            switch (sevenBitEncodationMethod) {\n                case 56: return new AI013x0x1xDecoder(information, '310', '11');\n                case 57: return new AI013x0x1xDecoder(information, '320', '11');\n                case 58: return new AI013x0x1xDecoder(information, '310', '13');\n                case 59: return new AI013x0x1xDecoder(information, '320', '13');\n                case 60: return new AI013x0x1xDecoder(information, '310', '15');\n                case 61: return new AI013x0x1xDecoder(information, '320', '15');\n                case 62: return new AI013x0x1xDecoder(information, '310', '17');\n                case 63: return new AI013x0x1xDecoder(information, '320', '17');\n            }\n        }\n        catch (e) {\n            console.log(e);\n            throw new IllegalStateException('unknown decoder: ' + information);\n        }\n    }\n\n    class ExpandedPair {\n        constructor(leftChar, rightChar, finderPatter, mayBeLast) {\n            this.leftchar = leftChar;\n            this.rightchar = rightChar;\n            this.finderpattern = finderPatter;\n            this.maybeLast = mayBeLast;\n        }\n        mayBeLast() {\n            return this.maybeLast;\n        }\n        getLeftChar() {\n            return this.leftchar;\n        }\n        getRightChar() {\n            return this.rightchar;\n        }\n        getFinderPattern() {\n            return this.finderpattern;\n        }\n        mustBeLast() {\n            return this.rightchar == null;\n        }\n        toString() {\n            return '[ ' + this.leftchar + ', ' + this.rightchar + ' : ' + (this.finderpattern == null ? 'null' : this.finderpattern.getValue()) + ' ]';\n        }\n        static equals(o1, o2) {\n            if (!(o1 instanceof ExpandedPair)) {\n                return false;\n            }\n            return ExpandedPair.equalsOrNull(o1.leftchar, o2.leftchar) &&\n                ExpandedPair.equalsOrNull(o1.rightchar, o2.rightchar) &&\n                ExpandedPair.equalsOrNull(o1.finderpattern, o2.finderpattern);\n        }\n        static equalsOrNull(o1, o2) {\n            return o1 === null ? o2 === null : ExpandedPair.equals(o1, o2);\n        }\n        hashCode() {\n            // return ExpandedPair.hashNotNull(leftChar) ^ hashNotNull(rightChar) ^ hashNotNull(finderPattern);\n            let value = this.leftchar.getValue() ^ this.rightchar.getValue() ^ this.finderpattern.getValue();\n            return value;\n        }\n    }\n\n    class ExpandedRow {\n        constructor(pairs, rowNumber, wasReversed) {\n            this.pairs = pairs;\n            this.rowNumber = rowNumber;\n            this.wasReversed = wasReversed;\n        }\n        getPairs() {\n            return this.pairs;\n        }\n        getRowNumber() {\n            return this.rowNumber;\n        }\n        isReversed() {\n            return this.wasReversed;\n        }\n        // check implementation\n        isEquivalent(otherPairs) {\n            return this.checkEqualitity(this, otherPairs);\n        }\n        // @Override\n        toString() {\n            return '{ ' + this.pairs + ' }';\n        }\n        /**\n         * Two rows are equal if they contain the same pairs in the same order.\n         */\n        // @Override\n        // check implementation\n        equals(o1, o2) {\n            if (!(o1 instanceof ExpandedRow)) {\n                return false;\n            }\n            return this.checkEqualitity(o1, o2) && o1.wasReversed === o2.wasReversed;\n        }\n        checkEqualitity(pair1, pair2) {\n            if (!pair1 || !pair2)\n                return;\n            let result;\n            pair1.forEach((e1, i) => {\n                pair2.forEach(e2 => {\n                    if (e1.getLeftChar().getValue() === e2.getLeftChar().getValue() && e1.getRightChar().getValue() === e2.getRightChar().getValue() && e1.getFinderPatter().getValue() === e2.getFinderPatter().getValue()) {\n                        result = true;\n                    }\n                });\n            });\n            return result;\n        }\n    }\n\n    // import java.util.ArrayList;\n    // import java.util.Iterator;\n    // import java.util.List;\n    // import java.util.Map;\n    // import java.util.Collections;\n    class RSSExpandedReader extends AbstractRSSReader {\n        constructor(verbose) {\n            super(...arguments);\n            this.pairs = new Array(RSSExpandedReader.MAX_PAIRS);\n            this.rows = new Array();\n            this.startEnd = [2];\n            this.verbose = (verbose === true);\n        }\n        decodeRow(rowNumber, row, hints) {\n            // Rows can start with even pattern in case in prev rows there where odd number of patters.\n            // So lets try twice\n            // this.pairs.clear();\n            this.pairs.length = 0;\n            this.startFromEven = false;\n            try {\n                return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n            }\n            catch (e) {\n                // OK\n                if (this.verbose) {\n                    console.log(e);\n                }\n            }\n            this.pairs.length = 0;\n            this.startFromEven = true;\n            return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n        }\n        reset() {\n            this.pairs.length = 0;\n            this.rows.length = 0;\n        }\n        // Not private for testing\n        decodeRow2pairs(rowNumber, row) {\n            let done = false;\n            while (!done) {\n                try {\n                    this.pairs.push(this.retrieveNextPair(row, this.pairs, rowNumber));\n                }\n                catch (error) {\n                    if (error instanceof NotFoundException) {\n                        if (!this.pairs.length) {\n                            throw new NotFoundException();\n                        }\n                        // exit this loop when retrieveNextPair() fails and throws\n                        done = true;\n                    }\n                }\n            }\n            // TODO: verify sequence of finder patterns as in checkPairSequence()\n            if (this.checkChecksum()) {\n                return this.pairs;\n            }\n            let tryStackedDecode;\n            if (this.rows.length) {\n                tryStackedDecode = true;\n            }\n            else {\n                tryStackedDecode = false;\n            }\n            // let tryStackedDecode = !this.rows.isEmpty();\n            this.storeRow(rowNumber, false); // TODO: deal with reversed rows\n            if (tryStackedDecode) {\n                // When the image is 180-rotated, then rows are sorted in wrong direction.\n                // Try twice with both the directions.\n                let ps = this.checkRowsBoolean(false);\n                if (ps != null) {\n                    return ps;\n                }\n                ps = this.checkRowsBoolean(true);\n                if (ps != null) {\n                    return ps;\n                }\n            }\n            throw new NotFoundException();\n        }\n        // Need to Verify\n        checkRowsBoolean(reverse) {\n            // Limit number of rows we are checking\n            // We use recursive algorithm with pure complexity and don't want it to take forever\n            // Stacked barcode can have up to 11 rows, so 25 seems reasonable enough\n            if (this.rows.length > 25) {\n                this.rows.length = 0; // We will never have a chance to get result, so clear it\n                return null;\n            }\n            this.pairs.length = 0;\n            if (reverse) {\n                this.rows = this.rows.reverse();\n                // Collections.reverse(this.rows);\n            }\n            let ps = null;\n            try {\n                ps = this.checkRows(new Array(), 0);\n            }\n            catch (e) {\n                // OK\n                if (this.verbose) {\n                    console.log(e);\n                }\n            }\n            if (reverse) {\n                this.rows = this.rows.reverse();\n                // Collections.reverse(this.rows);\n            }\n            return ps;\n        }\n        // Try to construct a valid rows sequence\n        // Recursion is used to implement backtracking\n        checkRows(collectedRows, currentRow) {\n            for (let i = currentRow; i < this.rows.length; i++) {\n                let row = this.rows[i];\n                this.pairs.length = 0;\n                for (let collectedRow of collectedRows) {\n                    this.pairs.push(collectedRow.getPairs());\n                }\n                this.pairs.push(row.getPairs());\n                if (!RSSExpandedReader.isValidSequence(this.pairs)) {\n                    continue;\n                }\n                if (this.checkChecksum()) {\n                    return this.pairs;\n                }\n                let rs = new Array(collectedRows);\n                rs.push(row);\n                try {\n                    // Recursion: try to add more rows\n                    return this.checkRows(rs, i + 1);\n                }\n                catch (e) {\n                    // We failed, try the next candidate\n                    if (this.verbose) {\n                        console.log(e);\n                    }\n                }\n            }\n            throw new NotFoundException();\n        }\n        // Whether the pairs form a valid find pattern sequence,\n        // either complete or a prefix\n        static isValidSequence(pairs) {\n            for (let sequence of RSSExpandedReader.FINDER_PATTERN_SEQUENCES) {\n                if (pairs.length > sequence.length) {\n                    continue;\n                }\n                let stop = true;\n                for (let j = 0; j < pairs.length; j++) {\n                    if (pairs[j].getFinderPattern().getValue() != sequence[j]) {\n                        stop = false;\n                        break;\n                    }\n                }\n                if (stop) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        storeRow(rowNumber, wasReversed) {\n            // Discard if duplicate above or below; otherwise insert in order by row number.\n            let insertPos = 0;\n            let prevIsSame = false;\n            let nextIsSame = false;\n            while (insertPos < this.rows.length) {\n                let erow = this.rows[insertPos];\n                if (erow.getRowNumber() > rowNumber) {\n                    nextIsSame = erow.isEquivalent(this.pairs);\n                    break;\n                }\n                prevIsSame = erow.isEquivalent(this.pairs);\n                insertPos++;\n            }\n            if (nextIsSame || prevIsSame) {\n                return;\n            }\n            // When the row was partially decoded (e.g. 2 pairs found instead of 3),\n            // it will prevent us from detecting the barcode.\n            // Try to merge partial rows\n            // Check whether the row is part of an allready detected row\n            if (RSSExpandedReader.isPartialRow(this.pairs, this.rows)) {\n                return;\n            }\n            this.rows.push(insertPos, new ExpandedRow(this.pairs, rowNumber, wasReversed));\n            this.removePartialRows(this.pairs, this.rows);\n        }\n        // Remove all the rows that contains only specified pairs\n        removePartialRows(pairs, rows) {\n            // for (Iterator<ExpandedRow> iterator = rows.iterator(); iterator.hasNext();) {\n            //   ExpandedRow r = iterator.next();\n            //   if (r.getPairs().size() == pairs.size()) {\n            //     continue;\n            //   }\n            //   boolean allFound = true;\n            //   for (ExpandedPair p : r.getPairs()) {\n            //     boolean found = false;\n            //     for (ExpandedPair pp : pairs) {\n            //       if (p.equals(pp)) {\n            //         found = true;\n            //         break;\n            //       }\n            //     }\n            //     if (!found) {\n            //       allFound = false;\n            //       break;\n            //     }\n            //   }\n            //   if (allFound) {\n            //     // 'pairs' contains all the pairs from the row 'r'\n            //     iterator.remove();\n            //   }\n            // }\n            for (let row of rows) {\n                if (row.getPairs().length === pairs.length) {\n                    continue;\n                }\n                for (let p of row.getPairs()) {\n                    for (let pp of pairs) {\n                        if (ExpandedPair.equals(p, pp)) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        // Returns true when one of the rows already contains all the pairs\n        static isPartialRow(pairs, rows) {\n            for (let r of rows) {\n                let allFound = true;\n                for (let p of pairs) {\n                    let found = false;\n                    for (let pp of r.getPairs()) {\n                        if (p.equals(pp)) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        allFound = false;\n                        break;\n                    }\n                }\n                if (allFound) {\n                    // the row 'r' contain all the pairs from 'pairs'\n                    return true;\n                }\n            }\n            return false;\n        }\n        // Only used for unit testing\n        getRows() {\n            return this.rows;\n        }\n        // Not private for unit testing\n        static constructResult(pairs) {\n            let binary = BitArrayBuilder.buildBitArray(pairs);\n            let decoder = createDecoder(binary);\n            let resultingString = decoder.parseInformation();\n            let firstPoints = pairs[0].getFinderPattern().getResultPoints();\n            let lastPoints = pairs[pairs.length - 1].getFinderPattern().getResultPoints();\n            let points = [firstPoints[0], firstPoints[1], lastPoints[0], lastPoints[1]];\n            return new Result(resultingString, null, null, points, BarcodeFormat$1.RSS_EXPANDED, null);\n        }\n        checkChecksum() {\n            let firstPair = this.pairs.get(0);\n            let checkCharacter = firstPair.getLeftChar();\n            let firstCharacter = firstPair.getRightChar();\n            if (firstCharacter == null) {\n                return false;\n            }\n            let checksum = firstCharacter.getChecksumPortion();\n            let s = 2;\n            for (let i = 1; i < this.pairs.size(); ++i) {\n                let currentPair = this.pairs.get(i);\n                checksum += currentPair.getLeftChar().getChecksumPortion();\n                s++;\n                let currentRightChar = currentPair.getRightChar();\n                if (currentRightChar != null) {\n                    checksum += currentRightChar.getChecksumPortion();\n                    s++;\n                }\n            }\n            checksum %= 211;\n            let checkCharacterValue = 211 * (s - 4) + checksum;\n            return checkCharacterValue == checkCharacter.getValue();\n        }\n        static getNextSecondBar(row, initialPos) {\n            let currentPos;\n            if (row.get(initialPos)) {\n                currentPos = row.getNextUnset(initialPos);\n                currentPos = row.getNextSet(currentPos);\n            }\n            else {\n                currentPos = row.getNextSet(initialPos);\n                currentPos = row.getNextUnset(currentPos);\n            }\n            return currentPos;\n        }\n        // not private for testing\n        retrieveNextPair(row, previousPairs, rowNumber) {\n            let isOddPattern = previousPairs.length % 2 == 0;\n            if (this.startFromEven) {\n                isOddPattern = !isOddPattern;\n            }\n            let pattern;\n            let keepFinding = true;\n            let forcedOffset = -1;\n            do {\n                this.findNextPair(row, previousPairs, forcedOffset);\n                pattern = this.parseFoundFinderPattern(row, rowNumber, isOddPattern);\n                if (pattern == null) {\n                    forcedOffset = RSSExpandedReader.getNextSecondBar(row, this.startEnd[0]);\n                }\n                else {\n                    keepFinding = false;\n                }\n            } while (keepFinding);\n            // When stacked symbol is split over multiple rows, there's no way to guess if this pair can be last or not.\n            // boolean mayBeLast = checkPairSequence(previousPairs, pattern);\n            let leftChar = this.decodeDataCharacter(row, pattern, isOddPattern, true);\n            if (!this.isEmptyPair(previousPairs) && previousPairs[previousPairs.length - 1].mustBeLast()) {\n                throw new NotFoundException();\n            }\n            let rightChar;\n            try {\n                rightChar = this.decodeDataCharacter(row, pattern, isOddPattern, false);\n            }\n            catch (e) {\n                rightChar = null;\n                if (this.verbose) {\n                    console.log(e);\n                }\n            }\n            return new ExpandedPair(leftChar, rightChar, pattern, true);\n        }\n        isEmptyPair(pairs) {\n            if (pairs.length === 0) {\n                return true;\n            }\n            return false;\n        }\n        findNextPair(row, previousPairs, forcedOffset) {\n            let counters = this.getDecodeFinderCounters();\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let width = row.getSize();\n            let rowOffset;\n            if (forcedOffset >= 0) {\n                rowOffset = forcedOffset;\n            }\n            else if (this.isEmptyPair(previousPairs)) {\n                rowOffset = 0;\n            }\n            else {\n                let lastPair = previousPairs[previousPairs.length - 1];\n                rowOffset = lastPair.getFinderPattern().getStartEnd()[1];\n            }\n            let searchingEvenPair = previousPairs.length % 2 != 0;\n            if (this.startFromEven) {\n                searchingEvenPair = !searchingEvenPair;\n            }\n            let isWhite = false;\n            while (rowOffset < width) {\n                isWhite = !row.get(rowOffset);\n                if (!isWhite) {\n                    break;\n                }\n                rowOffset++;\n            }\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) != isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition == 3) {\n                        if (searchingEvenPair) {\n                            RSSExpandedReader.reverseCounters(counters);\n                        }\n                        if (RSSExpandedReader.isFinderPattern(counters)) {\n                            this.startEnd[0] = patternStart;\n                            this.startEnd[1] = x;\n                            return;\n                        }\n                        if (searchingEvenPair) {\n                            RSSExpandedReader.reverseCounters(counters);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters[0] = counters[2];\n                        counters[1] = counters[3];\n                        counters[2] = 0;\n                        counters[3] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static reverseCounters(counters) {\n            let length = counters.length;\n            for (let i = 0; i < length / 2; ++i) {\n                let tmp = counters[i];\n                counters[i] = counters[length - i - 1];\n                counters[length - i - 1] = tmp;\n            }\n        }\n        parseFoundFinderPattern(row, rowNumber, oddPattern) {\n            // Actually we found elements 2-5.\n            let firstCounter;\n            let start;\n            let end;\n            if (oddPattern) {\n                // If pattern number is odd, we need to locate element 1 *before* the current block.\n                let firstElementStart = this.startEnd[0] - 1;\n                // Locate element 1\n                while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n                    firstElementStart--;\n                }\n                firstElementStart++;\n                firstCounter = this.startEnd[0] - firstElementStart;\n                start = firstElementStart;\n                end = this.startEnd[1];\n            }\n            else {\n                // If pattern number is even, the pattern is reversed, so we need to locate element 1 *after* the current block.\n                start = this.startEnd[0];\n                end = row.getNextUnset(this.startEnd[1] + 1);\n                firstCounter = end - this.startEnd[1];\n            }\n            // Make 'counters' hold 1-4\n            let counters = this.getDecodeFinderCounters();\n            System.arraycopy(counters, 0, counters, 1, counters.length - 1);\n            counters[0] = firstCounter;\n            let value;\n            try {\n                value = this.parseFinderValue(counters, RSSExpandedReader.FINDER_PATTERNS);\n            }\n            catch (e) {\n                return null;\n            }\n            // return new FinderPattern(value, new int[] { start, end }, start, end, rowNumber});\n            return new FinderPattern(value, [start, end], start, end, rowNumber);\n        }\n        decodeDataCharacter(row, pattern, isOddPattern, leftChar) {\n            let counters = this.getDataCharacterCounters();\n            for (let x = 0; x < counters.length; x++) {\n                counters[x] = 0;\n            }\n            if (leftChar) {\n                RSSExpandedReader.recordPatternInReverse(row, pattern.getStartEnd()[0], counters);\n            }\n            else {\n                RSSExpandedReader.recordPattern(row, pattern.getStartEnd()[1], counters);\n                // reverse it\n                for (let i = 0, j = counters.length - 1; i < j; i++, j--) {\n                    let temp = counters[i];\n                    counters[i] = counters[j];\n                    counters[j] = temp;\n                }\n            } // counters[] has the pixels of the module\n            let numModules = 17; // left and right data characters have all the same length\n            let elementWidth = MathUtils.sum(new Int32Array(counters)) / numModules;\n            // Sanity check: element width for pattern and the character should match\n            let expectedElementWidth = (pattern.getStartEnd()[1] - pattern.getStartEnd()[0]) / 15.0;\n            if (Math.abs(elementWidth - expectedElementWidth) / expectedElementWidth > 0.3) {\n                throw new NotFoundException();\n            }\n            let oddCounts = this.getOddCounts();\n            let evenCounts = this.getEvenCounts();\n            let oddRoundingErrors = this.getOddRoundingErrors();\n            let evenRoundingErrors = this.getEvenRoundingErrors();\n            for (let i = 0; i < counters.length; i++) {\n                let value = 1.0 * counters[i] / elementWidth;\n                let count = value + 0.5; // Round\n                if (count < 1) {\n                    if (value < 0.3) {\n                        throw new NotFoundException();\n                    }\n                    count = 1;\n                }\n                else if (count > 8) {\n                    if (value > 8.7) {\n                        throw new NotFoundException();\n                    }\n                    count = 8;\n                }\n                let offset = i / 2;\n                if ((i & 0x01) == 0) {\n                    oddCounts[offset] = count;\n                    oddRoundingErrors[offset] = value - count;\n                }\n                else {\n                    evenCounts[offset] = count;\n                    evenRoundingErrors[offset] = value - count;\n                }\n            }\n            this.adjustOddEvenCounts(numModules);\n            let weightRowNumber = 4 * pattern.getValue() + (isOddPattern ? 0 : 2) + (leftChar ? 0 : 1) - 1;\n            let oddSum = 0;\n            let oddChecksumPortion = 0;\n            for (let i = oddCounts.length - 1; i >= 0; i--) {\n                if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n                    let weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i];\n                    oddChecksumPortion += oddCounts[i] * weight;\n                }\n                oddSum += oddCounts[i];\n            }\n            let evenChecksumPortion = 0;\n            // int evenSum = 0;\n            for (let i = evenCounts.length - 1; i >= 0; i--) {\n                if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n                    let weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i + 1];\n                    evenChecksumPortion += evenCounts[i] * weight;\n                }\n                // evenSum += evenCounts[i];\n            }\n            let checksumPortion = oddChecksumPortion + evenChecksumPortion;\n            if ((oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4) {\n                throw new NotFoundException();\n            }\n            let group = (13 - oddSum) / 2;\n            let oddWidest = RSSExpandedReader.SYMBOL_WIDEST[group];\n            let evenWidest = 9 - oddWidest;\n            let vOdd = RSSUtils.getRSSvalue(oddCounts, oddWidest, true);\n            let vEven = RSSUtils.getRSSvalue(evenCounts, evenWidest, false);\n            let tEven = RSSExpandedReader.EVEN_TOTAL_SUBSET[group];\n            let gSum = RSSExpandedReader.GSUM[group];\n            let value = vOdd * tEven + vEven + gSum;\n            return new DataCharacter(value, checksumPortion);\n        }\n        static isNotA1left(pattern, isOddPattern, leftChar) {\n            // A1: pattern.getValue is 0 (A), and it's an oddPattern, and it is a left char\n            return !(pattern.getValue() == 0 && isOddPattern && leftChar);\n        }\n        adjustOddEvenCounts(numModules) {\n            let oddSum = MathUtils.sum(new Int32Array(this.getOddCounts()));\n            let evenSum = MathUtils.sum(new Int32Array(this.getEvenCounts()));\n            let incrementOdd = false;\n            let decrementOdd = false;\n            if (oddSum > 13) {\n                decrementOdd = true;\n            }\n            else if (oddSum < 4) {\n                incrementOdd = true;\n            }\n            let incrementEven = false;\n            let decrementEven = false;\n            if (evenSum > 13) {\n                decrementEven = true;\n            }\n            else if (evenSum < 4) {\n                incrementEven = true;\n            }\n            let mismatch = oddSum + evenSum - numModules;\n            let oddParityBad = (oddSum & 0x01) == 1;\n            let evenParityBad = (evenSum & 0x01) == 0;\n            if (mismatch == 1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementEven = true;\n                }\n            }\n            else if (mismatch == -1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementEven = true;\n                }\n            }\n            else if (mismatch == 0) {\n                if (oddParityBad) {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Both bad\n                    if (oddSum < evenSum) {\n                        incrementOdd = true;\n                        decrementEven = true;\n                    }\n                    else {\n                        decrementOdd = true;\n                        incrementEven = true;\n                    }\n                }\n                else {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Nothing to do!\n                }\n            }\n            else {\n                throw new NotFoundException();\n            }\n            if (incrementOdd) {\n                if (decrementOdd) {\n                    throw new NotFoundException();\n                }\n                RSSExpandedReader.increment(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementOdd) {\n                RSSExpandedReader.decrement(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (incrementEven) {\n                if (decrementEven) {\n                    throw new NotFoundException();\n                }\n                RSSExpandedReader.increment(this.getEvenCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementEven) {\n                RSSExpandedReader.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());\n            }\n        }\n    }\n    RSSExpandedReader.SYMBOL_WIDEST = [7, 5, 4, 3, 1];\n    RSSExpandedReader.EVEN_TOTAL_SUBSET = [4, 20, 52, 104, 204];\n    RSSExpandedReader.GSUM = [0, 348, 1388, 2948, 3988];\n    RSSExpandedReader.FINDER_PATTERNS = [\n        Int32Array.from([1, 8, 4, 1]),\n        Int32Array.from([3, 6, 4, 1]),\n        Int32Array.from([3, 4, 6, 1]),\n        Int32Array.from([3, 2, 8, 1]),\n        Int32Array.from([2, 6, 5, 1]),\n        Int32Array.from([2, 2, 9, 1]) // F\n    ];\n    RSSExpandedReader.WEIGHTS = [\n        [1, 3, 9, 27, 81, 32, 96, 77],\n        [20, 60, 180, 118, 143, 7, 21, 63],\n        [189, 145, 13, 39, 117, 140, 209, 205],\n        [193, 157, 49, 147, 19, 57, 171, 91],\n        [62, 186, 136, 197, 169, 85, 44, 132],\n        [185, 133, 188, 142, 4, 12, 36, 108],\n        [113, 128, 173, 97, 80, 29, 87, 50],\n        [150, 28, 84, 41, 123, 158, 52, 156],\n        [46, 138, 203, 187, 139, 206, 196, 166],\n        [76, 17, 51, 153, 37, 111, 122, 155],\n        [43, 129, 176, 106, 107, 110, 119, 146],\n        [16, 48, 144, 10, 30, 90, 59, 177],\n        [109, 116, 137, 200, 178, 112, 125, 164],\n        [70, 210, 208, 202, 184, 130, 179, 115],\n        [134, 191, 151, 31, 93, 68, 204, 190],\n        [148, 22, 66, 198, 172, 94, 71, 2],\n        [6, 18, 54, 162, 64, 192, 154, 40],\n        [120, 149, 25, 75, 14, 42, 126, 167],\n        [79, 26, 78, 23, 69, 207, 199, 175],\n        [103, 98, 83, 38, 114, 131, 182, 124],\n        [161, 61, 183, 127, 170, 88, 53, 159],\n        [55, 165, 73, 8, 24, 72, 5, 15],\n        [45, 135, 194, 160, 58, 174, 100, 89]\n    ];\n    RSSExpandedReader.FINDER_PAT_A = 0;\n    RSSExpandedReader.FINDER_PAT_B = 1;\n    RSSExpandedReader.FINDER_PAT_C = 2;\n    RSSExpandedReader.FINDER_PAT_D = 3;\n    RSSExpandedReader.FINDER_PAT_E = 4;\n    RSSExpandedReader.FINDER_PAT_F = 5;\n    RSSExpandedReader.FINDER_PATTERN_SEQUENCES = [\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_C],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n    ];\n    RSSExpandedReader.MAX_PAIRS = 11;\n\n    class Pair extends DataCharacter {\n        constructor(value, checksumPortion, finderPattern) {\n            super(value, checksumPortion);\n            this.count = 0;\n            this.finderPattern = finderPattern;\n        }\n        getFinderPattern() {\n            return this.finderPattern;\n        }\n        getCount() {\n            return this.count;\n        }\n        incrementCount() {\n            this.count++;\n        }\n    }\n\n    class RSS14Reader extends AbstractRSSReader {\n        constructor() {\n            super(...arguments);\n            this.possibleLeftPairs = [];\n            this.possibleRightPairs = [];\n        }\n        decodeRow(rowNumber, row, hints) {\n            const leftPair = this.decodePair(row, false, rowNumber, hints);\n            RSS14Reader.addOrTally(this.possibleLeftPairs, leftPair);\n            row.reverse();\n            let rightPair = this.decodePair(row, true, rowNumber, hints);\n            RSS14Reader.addOrTally(this.possibleRightPairs, rightPair);\n            row.reverse();\n            for (let left of this.possibleLeftPairs) {\n                if (left.getCount() > 1) {\n                    for (let right of this.possibleRightPairs) {\n                        if (right.getCount() > 1 && RSS14Reader.checkChecksum(left, right)) {\n                            return RSS14Reader.constructResult(left, right);\n                        }\n                    }\n                }\n            }\n            throw new NotFoundException();\n        }\n        static addOrTally(possiblePairs, pair) {\n            if (pair == null) {\n                return;\n            }\n            let found = false;\n            for (let other of possiblePairs) {\n                if (other.getValue() === pair.getValue()) {\n                    other.incrementCount();\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                possiblePairs.push(pair);\n            }\n        }\n        reset() {\n            this.possibleLeftPairs.length = 0;\n            this.possibleRightPairs.length = 0;\n        }\n        static constructResult(leftPair, rightPair) {\n            let symbolValue = 4537077 * leftPair.getValue() + rightPair.getValue();\n            let text = new String(symbolValue).toString();\n            let buffer = new StringBuilder();\n            for (let i = 13 - text.length; i > 0; i--) {\n                buffer.append('0');\n            }\n            buffer.append(text);\n            let checkDigit = 0;\n            for (let i = 0; i < 13; i++) {\n                let digit = buffer.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                checkDigit += ((i & 0x01) === 0) ? 3 * digit : digit;\n            }\n            checkDigit = 10 - (checkDigit % 10);\n            if (checkDigit === 10) {\n                checkDigit = 0;\n            }\n            buffer.append(checkDigit.toString());\n            let leftPoints = leftPair.getFinderPattern().getResultPoints();\n            let rightPoints = rightPair.getFinderPattern().getResultPoints();\n            return new Result(buffer.toString(), null, 0, [leftPoints[0], leftPoints[1], rightPoints[0], rightPoints[1]], BarcodeFormat$1.RSS_14, new Date().getTime());\n        }\n        static checkChecksum(leftPair, rightPair) {\n            let checkValue = (leftPair.getChecksumPortion() + 16 * rightPair.getChecksumPortion()) % 79;\n            let targetCheckValue = 9 * leftPair.getFinderPattern().getValue() + rightPair.getFinderPattern().getValue();\n            if (targetCheckValue > 72) {\n                targetCheckValue--;\n            }\n            if (targetCheckValue > 8) {\n                targetCheckValue--;\n            }\n            return checkValue === targetCheckValue;\n        }\n        decodePair(row, right, rowNumber, hints) {\n            try {\n                let startEnd = this.findFinderPattern(row, right);\n                let pattern = this.parseFoundFinderPattern(row, rowNumber, right, startEnd);\n                let resultPointCallback = hints == null ? null : hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n                if (resultPointCallback != null) {\n                    let center = (startEnd[0] + startEnd[1]) / 2.0;\n                    if (right) {\n                        // row is actually reversed\n                        center = row.getSize() - 1 - center;\n                    }\n                    resultPointCallback.foundPossibleResultPoint(new ResultPoint(center, rowNumber));\n                }\n                let outside = this.decodeDataCharacter(row, pattern, true);\n                let inside = this.decodeDataCharacter(row, pattern, false);\n                return new Pair(1597 * outside.getValue() + inside.getValue(), outside.getChecksumPortion() + 4 * inside.getChecksumPortion(), pattern);\n            }\n            catch (err) {\n                return null;\n            }\n        }\n        decodeDataCharacter(row, pattern, outsideChar) {\n            let counters = this.getDataCharacterCounters();\n            for (let x = 0; x < counters.length; x++) {\n                counters[x] = 0;\n            }\n            if (outsideChar) {\n                OneDReader.recordPatternInReverse(row, pattern.getStartEnd()[0], counters);\n            }\n            else {\n                OneDReader.recordPattern(row, pattern.getStartEnd()[1] + 1, counters);\n                // reverse it\n                for (let i = 0, j = counters.length - 1; i < j; i++, j--) {\n                    let temp = counters[i];\n                    counters[i] = counters[j];\n                    counters[j] = temp;\n                }\n            }\n            let numModules = outsideChar ? 16 : 15;\n            let elementWidth = MathUtils.sum(new Int32Array(counters)) / numModules;\n            let oddCounts = this.getOddCounts();\n            let evenCounts = this.getEvenCounts();\n            let oddRoundingErrors = this.getOddRoundingErrors();\n            let evenRoundingErrors = this.getEvenRoundingErrors();\n            for (let i = 0; i < counters.length; i++) {\n                let value = counters[i] / elementWidth;\n                let count = Math.floor(value + 0.5);\n                if (count < 1) {\n                    count = 1;\n                }\n                else if (count > 8) {\n                    count = 8;\n                }\n                let offset = Math.floor(i / 2);\n                if ((i & 0x01) === 0) {\n                    oddCounts[offset] = count;\n                    oddRoundingErrors[offset] = value - count;\n                }\n                else {\n                    evenCounts[offset] = count;\n                    evenRoundingErrors[offset] = value - count;\n                }\n            }\n            this.adjustOddEvenCounts(outsideChar, numModules);\n            let oddSum = 0;\n            let oddChecksumPortion = 0;\n            for (let i = oddCounts.length - 1; i >= 0; i--) {\n                oddChecksumPortion *= 9;\n                oddChecksumPortion += oddCounts[i];\n                oddSum += oddCounts[i];\n            }\n            let evenChecksumPortion = 0;\n            let evenSum = 0;\n            for (let i = evenCounts.length - 1; i >= 0; i--) {\n                evenChecksumPortion *= 9;\n                evenChecksumPortion += evenCounts[i];\n                evenSum += evenCounts[i];\n            }\n            let checksumPortion = oddChecksumPortion + 3 * evenChecksumPortion;\n            if (outsideChar) {\n                if ((oddSum & 0x01) !== 0 || oddSum > 12 || oddSum < 4) {\n                    throw new NotFoundException();\n                }\n                let group = (12 - oddSum) / 2;\n                let oddWidest = RSS14Reader.OUTSIDE_ODD_WIDEST[group];\n                let evenWidest = 9 - oddWidest;\n                let vOdd = RSSUtils.getRSSvalue(oddCounts, oddWidest, false);\n                let vEven = RSSUtils.getRSSvalue(evenCounts, evenWidest, true);\n                let tEven = RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET[group];\n                let gSum = RSS14Reader.OUTSIDE_GSUM[group];\n                return new DataCharacter(vOdd * tEven + vEven + gSum, checksumPortion);\n            }\n            else {\n                if ((evenSum & 0x01) !== 0 || evenSum > 10 || evenSum < 4) {\n                    throw new NotFoundException();\n                }\n                let group = (10 - evenSum) / 2;\n                let oddWidest = RSS14Reader.INSIDE_ODD_WIDEST[group];\n                let evenWidest = 9 - oddWidest;\n                let vOdd = RSSUtils.getRSSvalue(oddCounts, oddWidest, true);\n                let vEven = RSSUtils.getRSSvalue(evenCounts, evenWidest, false);\n                let tOdd = RSS14Reader.INSIDE_ODD_TOTAL_SUBSET[group];\n                let gSum = RSS14Reader.INSIDE_GSUM[group];\n                return new DataCharacter(vEven * tOdd + vOdd + gSum, checksumPortion);\n            }\n        }\n        findFinderPattern(row, rightFinderPattern) {\n            let counters = this.getDecodeFinderCounters();\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let width = row.getSize();\n            let isWhite = false;\n            let rowOffset = 0;\n            while (rowOffset < width) {\n                isWhite = !row.get(rowOffset);\n                if (rightFinderPattern === isWhite) {\n                    // Will encounter white first when searching for right finder pattern\n                    break;\n                }\n                rowOffset++;\n            }\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === 3) {\n                        if (AbstractRSSReader.isFinderPattern(counters)) {\n                            return [patternStart, x];\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters[0] = counters[2];\n                        counters[1] = counters[3];\n                        counters[2] = 0;\n                        counters[3] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        parseFoundFinderPattern(row, rowNumber, right, startEnd) {\n            // Actually we found elements 2-5\n            let firstIsBlack = row.get(startEnd[0]);\n            let firstElementStart = startEnd[0] - 1;\n            // Locate element 1\n            while (firstElementStart >= 0 && firstIsBlack !== row.get(firstElementStart)) {\n                firstElementStart--;\n            }\n            firstElementStart++;\n            const firstCounter = startEnd[0] - firstElementStart;\n            // Make 'counters' hold 1-4\n            const counters = this.getDecodeFinderCounters();\n            const copy = new Int32Array(counters.length);\n            System.arraycopy(counters, 0, copy, 1, counters.length - 1);\n            copy[0] = firstCounter;\n            const value = this.parseFinderValue(copy, RSS14Reader.FINDER_PATTERNS);\n            let start = firstElementStart;\n            let end = startEnd[1];\n            if (right) {\n                // row is actually reversed\n                start = row.getSize() - 1 - start;\n                end = row.getSize() - 1 - end;\n            }\n            return new FinderPattern(value, [firstElementStart, startEnd[1]], start, end, rowNumber);\n        }\n        adjustOddEvenCounts(outsideChar, numModules) {\n            let oddSum = MathUtils.sum(new Int32Array(this.getOddCounts()));\n            let evenSum = MathUtils.sum(new Int32Array(this.getEvenCounts()));\n            let incrementOdd = false;\n            let decrementOdd = false;\n            let incrementEven = false;\n            let decrementEven = false;\n            if (outsideChar) {\n                if (oddSum > 12) {\n                    decrementOdd = true;\n                }\n                else if (oddSum < 4) {\n                    incrementOdd = true;\n                }\n                if (evenSum > 12) {\n                    decrementEven = true;\n                }\n                else if (evenSum < 4) {\n                    incrementEven = true;\n                }\n            }\n            else {\n                if (oddSum > 11) {\n                    decrementOdd = true;\n                }\n                else if (oddSum < 5) {\n                    incrementOdd = true;\n                }\n                if (evenSum > 10) {\n                    decrementEven = true;\n                }\n                else if (evenSum < 4) {\n                    incrementEven = true;\n                }\n            }\n            let mismatch = oddSum + evenSum - numModules;\n            let oddParityBad = (oddSum & 0x01) === (outsideChar ? 1 : 0);\n            let evenParityBad = (evenSum & 0x01) === 1;\n            if (mismatch === 1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementEven = true;\n                }\n            }\n            else if (mismatch === -1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementEven = true;\n                }\n            }\n            else if (mismatch === 0) {\n                if (oddParityBad) {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Both bad\n                    if (oddSum < evenSum) {\n                        incrementOdd = true;\n                        decrementEven = true;\n                    }\n                    else {\n                        decrementOdd = true;\n                        incrementEven = true;\n                    }\n                }\n                else {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Nothing to do!\n                }\n            }\n            else {\n                throw new NotFoundException();\n            }\n            if (incrementOdd) {\n                if (decrementOdd) {\n                    throw new NotFoundException();\n                }\n                AbstractRSSReader.increment(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementOdd) {\n                AbstractRSSReader.decrement(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (incrementEven) {\n                if (decrementEven) {\n                    throw new NotFoundException();\n                }\n                AbstractRSSReader.increment(this.getEvenCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementEven) {\n                AbstractRSSReader.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());\n            }\n        }\n    }\n    RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET = [1, 10, 34, 70, 126];\n    RSS14Reader.INSIDE_ODD_TOTAL_SUBSET = [4, 20, 48, 81];\n    RSS14Reader.OUTSIDE_GSUM = [0, 161, 961, 2015, 2715];\n    RSS14Reader.INSIDE_GSUM = [0, 336, 1036, 1516];\n    RSS14Reader.OUTSIDE_ODD_WIDEST = [8, 6, 4, 3, 1];\n    RSS14Reader.INSIDE_ODD_WIDEST = [2, 4, 6, 8];\n    RSS14Reader.FINDER_PATTERNS = [\n        Int32Array.from([3, 8, 2, 1]),\n        Int32Array.from([3, 5, 5, 1]),\n        Int32Array.from([3, 3, 7, 1]),\n        Int32Array.from([3, 1, 9, 1]),\n        Int32Array.from([2, 7, 4, 1]),\n        Int32Array.from([2, 5, 6, 1]),\n        Int32Array.from([2, 3, 8, 1]),\n        Int32Array.from([1, 5, 7, 1]),\n        Int32Array.from([1, 3, 9, 1]),\n    ];\n\n    /**\n     * @author Daniel Switkin <dswitkin@google.com>\n     * @author Sean Owen\n     */\n    class MultiFormatOneDReader extends OneDReader {\n        constructor(hints, verbose) {\n            super();\n            this.readers = [];\n            this.verbose = (verbose === true);\n            const possibleFormats = !hints ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n            const useCode39CheckDigit = hints && hints.get(DecodeHintType$1.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n            if (possibleFormats) {\n                if (possibleFormats.includes(BarcodeFormat$1.EAN_13) ||\n                    possibleFormats.includes(BarcodeFormat$1.UPC_A) ||\n                    possibleFormats.includes(BarcodeFormat$1.EAN_8) ||\n                    possibleFormats.includes(BarcodeFormat$1.UPC_E)) {\n                    this.readers.push(new MultiFormatUPCEANReader(hints));\n                }\n                if (possibleFormats.includes(BarcodeFormat$1.CODE_39)) {\n                    this.readers.push(new Code39Reader(useCode39CheckDigit));\n                }\n                // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n                //    this.readers.push(new Code93Reader());\n                // }\n                if (possibleFormats.includes(BarcodeFormat$1.CODE_128)) {\n                    this.readers.push(new Code128Reader());\n                }\n                if (possibleFormats.includes(BarcodeFormat$1.ITF)) {\n                    this.readers.push(new ITFReader());\n                }\n                // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n                //    this.readers.push(new CodaBarReader());\n                // }\n                if (possibleFormats.includes(BarcodeFormat$1.RSS_14)) {\n                    this.readers.push(new RSS14Reader());\n                }\n                if (possibleFormats.includes(BarcodeFormat$1.RSS_EXPANDED)) {\n                    this.readers.push(new RSSExpandedReader(this.verbose));\n                }\n            } else {\n                // Case when no hints were provided -> add all.\n                this.readers.push(new MultiFormatUPCEANReader(hints));\n                this.readers.push(new Code39Reader());\n                // this.readers.push(new CodaBarReader());\n                // this.readers.push(new Code93Reader());\n                this.readers.push(new MultiFormatUPCEANReader(hints));\n                this.readers.push(new Code128Reader());\n                this.readers.push(new ITFReader());\n                this.readers.push(new RSS14Reader());\n                this.readers.push(new RSSExpandedReader(this.verbose));\n            }\n        }\n        // @Override\n        decodeRow(rowNumber, row, hints) {\n            for (let i = 0; i < this.readers.length; i++) {\n                try {\n                    return this.readers[i].decodeRow(rowNumber, row, hints);\n                }\n                catch (re) {\n                    // continue\n                }\n            }\n            throw new NotFoundException();\n        }\n        // @Override\n        reset() {\n            this.readers.forEach(reader => reader.reset());\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * Barcode reader reader to use from browser.\n     */\n    class BrowserBarcodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserBarcodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         * @param {Map<DecodeHintType, any>} hints\n         */\n        constructor(timeBetweenScansMillis = 500, hints) {\n            super(new MultiFormatOneDReader(hints), timeBetweenScansMillis, hints);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will\n     * use blocks of differing sizes within one version, so, this encapsulates the parameters for\n     * each set of blocks. It also holds the number of error-correction codewords per block since it\n     * will be the same across all blocks within one version.</p>\n     */\n    class ECBlocks {\n        constructor(ecCodewords, ecBlocks1, ecBlocks2) {\n            this.ecCodewords = ecCodewords;\n            this.ecBlocks = [ecBlocks1];\n            ecBlocks2 && this.ecBlocks.push(ecBlocks2);\n        }\n        getECCodewords() {\n            return this.ecCodewords;\n        }\n        getECBlocks() {\n            return this.ecBlocks;\n        }\n    }\n    /**\n     * <p>Encapsulates the parameters for one error-correction block in one symbol version.\n     * This includes the number of data codewords, and the number of times a block with these\n     * parameters is used consecutively in the Data Matrix code version's format.</p>\n     */\n    class ECB {\n        constructor(count, dataCodewords) {\n            this.count = count;\n            this.dataCodewords = dataCodewords;\n        }\n        getCount() {\n            return this.count;\n        }\n        getDataCodewords() {\n            return this.dataCodewords;\n        }\n    }\n    /**\n     * The Version object encapsulates attributes about a particular\n     * size Data Matrix Code.\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class Version {\n        constructor(versionNumber, symbolSizeRows, symbolSizeColumns, dataRegionSizeRows, dataRegionSizeColumns, ecBlocks) {\n            this.versionNumber = versionNumber;\n            this.symbolSizeRows = symbolSizeRows;\n            this.symbolSizeColumns = symbolSizeColumns;\n            this.dataRegionSizeRows = dataRegionSizeRows;\n            this.dataRegionSizeColumns = dataRegionSizeColumns;\n            this.ecBlocks = ecBlocks;\n            // Calculate the total number of codewords\n            let total = 0;\n            const ecCodewords = ecBlocks.getECCodewords();\n            const ecbArray = ecBlocks.getECBlocks();\n            for (let ecBlock of ecbArray) {\n                total += ecBlock.getCount() * (ecBlock.getDataCodewords() + ecCodewords);\n            }\n            this.totalCodewords = total;\n        }\n        getVersionNumber() {\n            return this.versionNumber;\n        }\n        getSymbolSizeRows() {\n            return this.symbolSizeRows;\n        }\n        getSymbolSizeColumns() {\n            return this.symbolSizeColumns;\n        }\n        getDataRegionSizeRows() {\n            return this.dataRegionSizeRows;\n        }\n        getDataRegionSizeColumns() {\n            return this.dataRegionSizeColumns;\n        }\n        getTotalCodewords() {\n            return this.totalCodewords;\n        }\n        getECBlocks() {\n            return this.ecBlocks;\n        }\n        /**\n         * <p>Deduces version information from Data Matrix dimensions.</p>\n         *\n         * @param numRows Number of rows in modules\n         * @param numColumns Number of columns in modules\n         * @return Version for a Data Matrix Code of those dimensions\n         * @throws FormatException if dimensions do correspond to a valid Data Matrix size\n         */\n        static getVersionForDimensions(numRows, numColumns) {\n            if ((numRows & 0x01) !== 0 || (numColumns & 0x01) !== 0) {\n                throw new FormatException();\n            }\n            for (let version of Version.VERSIONS) {\n                if (version.symbolSizeRows === numRows && version.symbolSizeColumns === numColumns) {\n                    return version;\n                }\n            }\n            throw new FormatException();\n        }\n        //  @Override\n        toString() {\n            return '' + this.versionNumber;\n        }\n        /**\n         * See ISO 16022:2006 5.5.1 Table 7\n         */\n        static buildVersions() {\n            return [\n                new Version(1, 10, 10, 8, 8, new ECBlocks(5, new ECB(1, 3))),\n                new Version(2, 12, 12, 10, 10, new ECBlocks(7, new ECB(1, 5))),\n                new Version(3, 14, 14, 12, 12, new ECBlocks(10, new ECB(1, 8))),\n                new Version(4, 16, 16, 14, 14, new ECBlocks(12, new ECB(1, 12))),\n                new Version(5, 18, 18, 16, 16, new ECBlocks(14, new ECB(1, 18))),\n                new Version(6, 20, 20, 18, 18, new ECBlocks(18, new ECB(1, 22))),\n                new Version(7, 22, 22, 20, 20, new ECBlocks(20, new ECB(1, 30))),\n                new Version(8, 24, 24, 22, 22, new ECBlocks(24, new ECB(1, 36))),\n                new Version(9, 26, 26, 24, 24, new ECBlocks(28, new ECB(1, 44))),\n                new Version(10, 32, 32, 14, 14, new ECBlocks(36, new ECB(1, 62))),\n                new Version(11, 36, 36, 16, 16, new ECBlocks(42, new ECB(1, 86))),\n                new Version(12, 40, 40, 18, 18, new ECBlocks(48, new ECB(1, 114))),\n                new Version(13, 44, 44, 20, 20, new ECBlocks(56, new ECB(1, 144))),\n                new Version(14, 48, 48, 22, 22, new ECBlocks(68, new ECB(1, 174))),\n                new Version(15, 52, 52, 24, 24, new ECBlocks(42, new ECB(2, 102))),\n                new Version(16, 64, 64, 14, 14, new ECBlocks(56, new ECB(2, 140))),\n                new Version(17, 72, 72, 16, 16, new ECBlocks(36, new ECB(4, 92))),\n                new Version(18, 80, 80, 18, 18, new ECBlocks(48, new ECB(4, 114))),\n                new Version(19, 88, 88, 20, 20, new ECBlocks(56, new ECB(4, 144))),\n                new Version(20, 96, 96, 22, 22, new ECBlocks(68, new ECB(4, 174))),\n                new Version(21, 104, 104, 24, 24, new ECBlocks(56, new ECB(6, 136))),\n                new Version(22, 120, 120, 18, 18, new ECBlocks(68, new ECB(6, 175))),\n                new Version(23, 132, 132, 20, 20, new ECBlocks(62, new ECB(8, 163))),\n                new Version(24, 144, 144, 22, 22, new ECBlocks(62, new ECB(8, 156), new ECB(2, 155))),\n                new Version(25, 8, 18, 6, 16, new ECBlocks(7, new ECB(1, 5))),\n                new Version(26, 8, 32, 6, 14, new ECBlocks(11, new ECB(1, 10))),\n                new Version(27, 12, 26, 10, 24, new ECBlocks(14, new ECB(1, 16))),\n                new Version(28, 12, 36, 10, 16, new ECBlocks(18, new ECB(1, 22))),\n                new Version(29, 16, 36, 14, 16, new ECBlocks(24, new ECB(1, 32))),\n                new Version(30, 16, 48, 14, 22, new ECBlocks(28, new ECB(1, 49)))\n            ];\n        }\n    }\n    Version.VERSIONS = Version.buildVersions();\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class BitMatrixParser {\n        /**\n         * @param bitMatrix {@link BitMatrix} to parse\n         * @throws FormatException if dimension is < 8 or > 144 or not 0 mod 2\n         */\n        constructor(bitMatrix) {\n            const dimension = bitMatrix.getHeight();\n            if (dimension < 8 || dimension > 144 || (dimension & 0x01) !== 0) {\n                throw new FormatException();\n            }\n            this.version = BitMatrixParser.readVersion(bitMatrix);\n            this.mappingBitMatrix = this.extractDataRegion(bitMatrix);\n            this.readMappingMatrix = new BitMatrix(this.mappingBitMatrix.getWidth(), this.mappingBitMatrix.getHeight());\n        }\n        getVersion() {\n            return this.version;\n        }\n        /**\n         * <p>Creates the version object based on the dimension of the original bit matrix from\n         * the datamatrix code.</p>\n         *\n         * <p>See ISO 16022:2006 Table 7 - ECC 200 symbol attributes</p>\n         *\n         * @param bitMatrix Original {@link BitMatrix} including alignment patterns\n         * @return {@link Version} encapsulating the Data Matrix Code's \"version\"\n         * @throws FormatException if the dimensions of the mapping matrix are not valid\n         * Data Matrix dimensions.\n         */\n        static readVersion(bitMatrix) {\n            const numRows = bitMatrix.getHeight();\n            const numColumns = bitMatrix.getWidth();\n            return Version.getVersionForDimensions(numRows, numColumns);\n        }\n        /**\n         * <p>Reads the bits in the {@link BitMatrix} representing the mapping matrix (No alignment patterns)\n         * in the correct order in order to reconstitute the codewords bytes contained within the\n         * Data Matrix Code.</p>\n         *\n         * @return bytes encoded within the Data Matrix Code\n         * @throws FormatException if the exact number of bytes expected is not read\n         */\n        readCodewords() {\n            const result = new Int8Array(this.version.getTotalCodewords());\n            let resultOffset = 0;\n            let row = 4;\n            let column = 0;\n            const numRows = this.mappingBitMatrix.getHeight();\n            const numColumns = this.mappingBitMatrix.getWidth();\n            let corner1Read = false;\n            let corner2Read = false;\n            let corner3Read = false;\n            let corner4Read = false;\n            // Read all of the codewords\n            do {\n                // Check the four corner cases\n                if ((row === numRows) && (column === 0) && !corner1Read) {\n                    result[resultOffset++] = this.readCorner1(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner1Read = true;\n                }\n                else if ((row === numRows - 2) && (column === 0) && ((numColumns & 0x03) !== 0) && !corner2Read) {\n                    result[resultOffset++] = this.readCorner2(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner2Read = true;\n                }\n                else if ((row === numRows + 4) && (column === 2) && ((numColumns & 0x07) === 0) && !corner3Read) {\n                    result[resultOffset++] = this.readCorner3(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner3Read = true;\n                }\n                else if ((row === numRows - 2) && (column === 0) && ((numColumns & 0x07) === 4) && !corner4Read) {\n                    result[resultOffset++] = this.readCorner4(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner4Read = true;\n                }\n                else {\n                    // Sweep upward diagonally to the right\n                    do {\n                        if ((row < numRows) && (column >= 0) && !this.readMappingMatrix.get(column, row)) {\n                            result[resultOffset++] = this.readUtah(row, column, numRows, numColumns) & 0xff;\n                        }\n                        row -= 2;\n                        column += 2;\n                    } while ((row >= 0) && (column < numColumns));\n                    row += 1;\n                    column += 3;\n                    // Sweep downward diagonally to the left\n                    do {\n                        if ((row >= 0) && (column < numColumns) && !this.readMappingMatrix.get(column, row)) {\n                            result[resultOffset++] = this.readUtah(row, column, numRows, numColumns) & 0xff;\n                        }\n                        row += 2;\n                        column -= 2;\n                    } while ((row < numRows) && (column >= 0));\n                    row += 3;\n                    column += 1;\n                }\n            } while ((row < numRows) || (column < numColumns));\n            if (resultOffset !== this.version.getTotalCodewords()) {\n                throw new FormatException();\n            }\n            return result;\n        }\n        /**\n         * <p>Reads a bit of the mapping matrix accounting for boundary wrapping.</p>\n         *\n         * @param row Row to read in the mapping matrix\n         * @param column Column to read in the mapping matrix\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return value of the given bit in the mapping matrix\n         */\n        readModule(row, column, numRows, numColumns) {\n            // Adjust the row and column indices based on boundary wrapping\n            if (row < 0) {\n                row += numRows;\n                column += 4 - ((numRows + 4) & 0x07);\n            }\n            if (column < 0) {\n                column += numColumns;\n                row += 4 - ((numColumns + 4) & 0x07);\n            }\n            this.readMappingMatrix.set(column, row);\n            return this.mappingBitMatrix.get(column, row);\n        }\n        /**\n         * <p>Reads the 8 bits of the standard Utah-shaped pattern.</p>\n         *\n         * <p>See ISO 16022:2006, 5.8.1 Figure 6</p>\n         *\n         * @param row Current row in the mapping matrix, anchored at the 8th bit (LSB) of the pattern\n         * @param column Current column in the mapping matrix, anchored at the 8th bit (LSB) of the pattern\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the utah shape\n         */\n        readUtah(row, column, numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(row - 2, column - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 2, column - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 1, column - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 1, column - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 1, column, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row, column - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row, column - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row, column, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 1.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.3</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 1\n         */\n        readCorner1(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(2, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(3, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 2.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.4</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 2\n         */\n        readCorner2(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 3, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 2, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 4, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 3, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 3.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.5</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 3\n         */\n        readCorner3(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 3, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 3, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 4.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.6</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 4\n         */\n        readCorner4(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 3, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 2, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(2, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(3, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Extracts the data region from a {@link BitMatrix} that contains\n         * alignment patterns.</p>\n         *\n         * @param bitMatrix Original {@link BitMatrix} with alignment patterns\n         * @return BitMatrix that has the alignment patterns removed\n         */\n        extractDataRegion(bitMatrix) {\n            const symbolSizeRows = this.version.getSymbolSizeRows();\n            const symbolSizeColumns = this.version.getSymbolSizeColumns();\n            if (bitMatrix.getHeight() !== symbolSizeRows) {\n                throw new IllegalArgumentException('Dimension of bitMatrix must match the version size');\n            }\n            const dataRegionSizeRows = this.version.getDataRegionSizeRows();\n            const dataRegionSizeColumns = this.version.getDataRegionSizeColumns();\n            const numDataRegionsRow = symbolSizeRows / dataRegionSizeRows | 0;\n            const numDataRegionsColumn = symbolSizeColumns / dataRegionSizeColumns | 0;\n            const sizeDataRegionRow = numDataRegionsRow * dataRegionSizeRows;\n            const sizeDataRegionColumn = numDataRegionsColumn * dataRegionSizeColumns;\n            const bitMatrixWithoutAlignment = new BitMatrix(sizeDataRegionColumn, sizeDataRegionRow);\n            for (let dataRegionRow = 0; dataRegionRow < numDataRegionsRow; ++dataRegionRow) {\n                const dataRegionRowOffset = dataRegionRow * dataRegionSizeRows;\n                for (let dataRegionColumn = 0; dataRegionColumn < numDataRegionsColumn; ++dataRegionColumn) {\n                    const dataRegionColumnOffset = dataRegionColumn * dataRegionSizeColumns;\n                    for (let i = 0; i < dataRegionSizeRows; ++i) {\n                        const readRowOffset = dataRegionRow * (dataRegionSizeRows + 2) + 1 + i;\n                        const writeRowOffset = dataRegionRowOffset + i;\n                        for (let j = 0; j < dataRegionSizeColumns; ++j) {\n                            const readColumnOffset = dataRegionColumn * (dataRegionSizeColumns + 2) + 1 + j;\n                            if (bitMatrix.get(readColumnOffset, readRowOffset)) {\n                                const writeColumnOffset = dataRegionColumnOffset + j;\n                                bitMatrixWithoutAlignment.set(writeColumnOffset, writeRowOffset);\n                            }\n                        }\n                    }\n                }\n            }\n            return bitMatrixWithoutAlignment;\n        }\n    }\n\n    /**\n     * <p>Encapsulates a block of data within a Data Matrix Code. Data Matrix Codes may split their data into\n     * multiple blocks, each of which is a unit of data and error-correction codewords. Each\n     * is represented by an instance of this class.</p>\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class DataBlock {\n        constructor(numDataCodewords, codewords) {\n            this.numDataCodewords = numDataCodewords;\n            this.codewords = codewords;\n        }\n        /**\n         * <p>When Data Matrix Codes use multiple data blocks, they actually interleave the bytes of each of them.\n         * That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This\n         * method will separate the data into original blocks.</p>\n         *\n         * @param rawCodewords bytes as read directly from the Data Matrix Code\n         * @param version version of the Data Matrix Code\n         * @return DataBlocks containing original bytes, \"de-interleaved\" from representation in the\n         *         Data Matrix Code\n         */\n        static getDataBlocks(rawCodewords, version) {\n            // Figure out the number and size of data blocks used by this version\n            const ecBlocks = version.getECBlocks();\n            // First count the total number of data blocks\n            let totalBlocks = 0;\n            const ecBlockArray = ecBlocks.getECBlocks();\n            for (let ecBlock of ecBlockArray) {\n                totalBlocks += ecBlock.getCount();\n            }\n            // Now establish DataBlocks of the appropriate size and number of data codewords\n            const result = new Array(totalBlocks);\n            let numResultBlocks = 0;\n            for (let ecBlock of ecBlockArray) {\n                for (let i = 0; i < ecBlock.getCount(); i++) {\n                    const numDataCodewords = ecBlock.getDataCodewords();\n                    const numBlockCodewords = ecBlocks.getECCodewords() + numDataCodewords;\n                    result[numResultBlocks++] = new DataBlock(numDataCodewords, new Uint8Array(numBlockCodewords));\n                }\n            }\n            // All blocks have the same amount of data, except that the last n\n            // (where n may be 0) have 1 less byte. Figure out where these start.\n            // TODO(bbrown): There is only one case where there is a difference for Data Matrix for size 144\n            const longerBlocksTotalCodewords = result[0].codewords.length;\n            // int shorterBlocksTotalCodewords = longerBlocksTotalCodewords - 1;\n            const longerBlocksNumDataCodewords = longerBlocksTotalCodewords - ecBlocks.getECCodewords();\n            const shorterBlocksNumDataCodewords = longerBlocksNumDataCodewords - 1;\n            // The last elements of result may be 1 element shorter for 144 matrix\n            // first fill out as many elements as all of them have minus 1\n            let rawCodewordsOffset = 0;\n            for (let i = 0; i < shorterBlocksNumDataCodewords; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    result[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            // Fill out the last data block in the longer ones\n            const specialVersion = version.getVersionNumber() === 24;\n            const numLongerBlocks = specialVersion ? 8 : numResultBlocks;\n            for (let j = 0; j < numLongerBlocks; j++) {\n                result[j].codewords[longerBlocksNumDataCodewords - 1] = rawCodewords[rawCodewordsOffset++];\n            }\n            // Now add in error correction blocks\n            const max = result[0].codewords.length;\n            for (let i = longerBlocksNumDataCodewords; i < max; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    const jOffset = specialVersion ? (j + 8) % numResultBlocks : j;\n                    const iOffset = specialVersion && jOffset > 7 ? i - 1 : i;\n                    result[jOffset].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            if (rawCodewordsOffset !== rawCodewords.length) {\n                throw new IllegalArgumentException();\n            }\n            return result;\n        }\n        getNumDataCodewords() {\n            return this.numDataCodewords;\n        }\n        getCodewords() {\n            return this.codewords;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>This provides an easy abstraction to read bits at a time from a sequence of bytes, where the\n     * number of bits read is not often a multiple of 8.</p>\n     *\n     * <p>This class is thread-safe but not reentrant -- unless the caller modifies the bytes array\n     * it passed in, in which case all bets are off.</p>\n     *\n     * @author Sean Owen\n     */\n    class BitSource {\n        /**\n         * @param bytes bytes from which this will read bits. Bits will be read from the first byte first.\n         * Bits are read within a byte from most-significant to least-significant bit.\n         */\n        constructor(bytes) {\n            this.bytes = bytes;\n            this.byteOffset = 0;\n            this.bitOffset = 0;\n        }\n        /**\n         * @return index of next bit in current byte which would be read by the next call to {@link #readBits(int)}.\n         */\n        getBitOffset() {\n            return this.bitOffset;\n        }\n        /**\n         * @return index of next byte in input byte array which would be read by the next call to {@link #readBits(int)}.\n         */\n        getByteOffset() {\n            return this.byteOffset;\n        }\n        /**\n         * @param numBits number of bits to read\n         * @return int representing the bits read. The bits will appear as the least-significant\n         *         bits of the int\n         * @throws IllegalArgumentException if numBits isn't in [1,32] or more than is available\n         */\n        readBits(numBits /*int*/) {\n            if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n                throw new IllegalArgumentException('' + numBits);\n            }\n            let result = 0;\n            let bitOffset = this.bitOffset;\n            let byteOffset = this.byteOffset;\n            const bytes = this.bytes;\n            // First, read remainder from current byte\n            if (bitOffset > 0) {\n                const bitsLeft = 8 - bitOffset;\n                const toRead = numBits < bitsLeft ? numBits : bitsLeft;\n                const bitsToNotRead = bitsLeft - toRead;\n                const mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n                result = (bytes[byteOffset] & mask) >> bitsToNotRead;\n                numBits -= toRead;\n                bitOffset += toRead;\n                if (bitOffset === 8) {\n                    bitOffset = 0;\n                    byteOffset++;\n                }\n            }\n            // Next read whole bytes\n            if (numBits > 0) {\n                while (numBits >= 8) {\n                    result = (result << 8) | (bytes[byteOffset] & 0xFF);\n                    byteOffset++;\n                    numBits -= 8;\n                }\n                // Finally read a partial byte\n                if (numBits > 0) {\n                    const bitsToNotRead = 8 - numBits;\n                    const mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n                    result = (result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n                    bitOffset += numBits;\n                }\n            }\n            this.bitOffset = bitOffset;\n            this.byteOffset = byteOffset;\n            return result;\n        }\n        /**\n         * @return number of bits that can be read successfully\n         */\n        available() {\n            return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n        }\n    }\n\n    var Mode;\n    (function (Mode) {\n        Mode[Mode[\"PAD_ENCODE\"] = 0] = \"PAD_ENCODE\";\n        Mode[Mode[\"ASCII_ENCODE\"] = 1] = \"ASCII_ENCODE\";\n        Mode[Mode[\"C40_ENCODE\"] = 2] = \"C40_ENCODE\";\n        Mode[Mode[\"TEXT_ENCODE\"] = 3] = \"TEXT_ENCODE\";\n        Mode[Mode[\"ANSIX12_ENCODE\"] = 4] = \"ANSIX12_ENCODE\";\n        Mode[Mode[\"EDIFACT_ENCODE\"] = 5] = \"EDIFACT_ENCODE\";\n        Mode[Mode[\"BASE256_ENCODE\"] = 6] = \"BASE256_ENCODE\";\n    })(Mode || (Mode = {}));\n    /**\n     * <p>Data Matrix Codes can encode text as bits in one of several modes, and can use multiple modes\n     * in one Data Matrix Code. This class decodes the bits back into text.</p>\n     *\n     * <p>See ISO 16022:2006, 5.2.1 - 5.2.9.2</p>\n     *\n     * @author bbrown@google.com (Brian Brown)\n     * @author Sean Owen\n     */\n    class DecodedBitStreamParser {\n        static decode(bytes) {\n            const bits = new BitSource(bytes);\n            const result = new StringBuilder();\n            const resultTrailer = new StringBuilder();\n            const byteSegments = new Array();\n            let mode = Mode.ASCII_ENCODE;\n            do {\n                if (mode === Mode.ASCII_ENCODE) {\n                    mode = this.decodeAsciiSegment(bits, result, resultTrailer);\n                }\n                else {\n                    switch (mode) {\n                        case Mode.C40_ENCODE:\n                            this.decodeC40Segment(bits, result);\n                            break;\n                        case Mode.TEXT_ENCODE:\n                            this.decodeTextSegment(bits, result);\n                            break;\n                        case Mode.ANSIX12_ENCODE:\n                            this.decodeAnsiX12Segment(bits, result);\n                            break;\n                        case Mode.EDIFACT_ENCODE:\n                            this.decodeEdifactSegment(bits, result);\n                            break;\n                        case Mode.BASE256_ENCODE:\n                            this.decodeBase256Segment(bits, result, byteSegments);\n                            break;\n                        default:\n                            throw new FormatException();\n                    }\n                    mode = Mode.ASCII_ENCODE;\n                }\n            } while (mode !== Mode.PAD_ENCODE && bits.available() > 0);\n            if (resultTrailer.length() > 0) {\n                result.append(resultTrailer.toString());\n            }\n            return new DecoderResult(bytes, result.toString(), byteSegments.length === 0 ? null : byteSegments, null);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.3 and Annex C, Table C.2\n         */\n        static decodeAsciiSegment(bits, result, resultTrailer) {\n            let upperShift = false;\n            do {\n                let oneByte = bits.readBits(8);\n                if (oneByte === 0) {\n                    throw new FormatException();\n                }\n                else if (oneByte <= 128) { // ASCII data (ASCII value + 1)\n                    if (upperShift) {\n                        oneByte += 128;\n                        // upperShift = false;\n                    }\n                    result.append(String.fromCharCode(oneByte - 1));\n                    return Mode.ASCII_ENCODE;\n                }\n                else if (oneByte === 129) { // Pad\n                    return Mode.PAD_ENCODE;\n                }\n                else if (oneByte <= 229) { // 2-digit data 00-99 (Numeric Value + 130)\n                    const value = oneByte - 130;\n                    if (value < 10) { // pad with '0' for single digit values\n                        result.append('0');\n                    }\n                    result.append('' + value);\n                }\n                else {\n                    switch (oneByte) {\n                        case 230: // Latch to C40 encodation\n                            return Mode.C40_ENCODE;\n                        case 231: // Latch to Base 256 encodation\n                            return Mode.BASE256_ENCODE;\n                        case 232: // FNC1\n                            result.append(String.fromCharCode(29)); // translate as ASCII 29\n                            break;\n                        case 233: // Structured Append\n                        case 234: // Reader Programming\n                            // Ignore these symbols for now\n                            // throw ReaderException.getInstance();\n                            break;\n                        case 235: // Upper Shift (shift to Extended ASCII)\n                            upperShift = true;\n                            break;\n                        case 236: // 05 Macro\n                            result.append('[)>\\u001E05\\u001D');\n                            resultTrailer.insert(0, '\\u001E\\u0004');\n                            break;\n                        case 237: // 06 Macro\n                            result.append('[)>\\u001E06\\u001D');\n                            resultTrailer.insert(0, '\\u001E\\u0004');\n                            break;\n                        case 238: // Latch to ANSI X12 encodation\n                            return Mode.ANSIX12_ENCODE;\n                        case 239: // Latch to Text encodation\n                            return Mode.TEXT_ENCODE;\n                        case 240: // Latch to EDIFACT encodation\n                            return Mode.EDIFACT_ENCODE;\n                        case 241: // ECI Character\n                            // TODO(bbrown): I think we need to support ECI\n                            // throw ReaderException.getInstance();\n                            // Ignore this symbol for now\n                            break;\n                        default:\n                            // Not to be used in ASCII encodation\n                            // but work around encoders that end with 254, latch back to ASCII\n                            if (oneByte !== 254 || bits.available() !== 0) {\n                                throw new FormatException();\n                            }\n                            break;\n                    }\n                }\n            } while (bits.available() > 0);\n            return Mode.ASCII_ENCODE;\n        }\n        /**\n         * See ISO 16022:2006, 5.2.5 and Annex C, Table C.1\n         */\n        static decodeC40Segment(bits, result) {\n            // Three C40 values are encoded in a 16-bit value as\n            // (1600 * C1) + (40 * C2) + C3 + 1\n            // TODO(bbrown): The Upper Shift with C40 doesn't work in the 4 value scenario all the time\n            let upperShift = false;\n            const cValues = [];\n            let shift = 0;\n            do {\n                // If there is only one byte left then it will be encoded as ASCII\n                if (bits.available() === 8) {\n                    return;\n                }\n                const firstByte = bits.readBits(8);\n                if (firstByte === 254) { // Unlatch codeword\n                    return;\n                }\n                this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n                for (let i = 0; i < 3; i++) {\n                    const cValue = cValues[i];\n                    switch (shift) {\n                        case 0:\n                            if (cValue < 3) {\n                                shift = cValue + 1;\n                            }\n                            else if (cValue < this.C40_BASIC_SET_CHARS.length) {\n                                const c40char = this.C40_BASIC_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(c40char.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(c40char);\n                                }\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case 1:\n                            if (upperShift) {\n                                result.append(String.fromCharCode(cValue + 128));\n                                upperShift = false;\n                            }\n                            else {\n                                result.append(String.fromCharCode(cValue));\n                            }\n                            shift = 0;\n                            break;\n                        case 2:\n                            if (cValue < this.C40_SHIFT2_SET_CHARS.length) {\n                                const c40char = this.C40_SHIFT2_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(c40char.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(c40char);\n                                }\n                            }\n                            else {\n                                switch (cValue) {\n                                    case 27: // FNC1\n                                        result.append(String.fromCharCode(29)); // translate as ASCII 29\n                                        break;\n                                    case 30: // Upper Shift\n                                        upperShift = true;\n                                        break;\n                                    default:\n                                        throw new FormatException();\n                                }\n                            }\n                            shift = 0;\n                            break;\n                        case 3:\n                            if (upperShift) {\n                                result.append(String.fromCharCode(cValue + 224));\n                                upperShift = false;\n                            }\n                            else {\n                                result.append(String.fromCharCode(cValue + 96));\n                            }\n                            shift = 0;\n                            break;\n                        default:\n                            throw new FormatException();\n                    }\n                }\n            } while (bits.available() > 0);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.6 and Annex C, Table C.2\n         */\n        static decodeTextSegment(bits, result) {\n            // Three Text values are encoded in a 16-bit value as\n            // (1600 * C1) + (40 * C2) + C3 + 1\n            // TODO(bbrown): The Upper Shift with Text doesn't work in the 4 value scenario all the time\n            let upperShift = false;\n            let cValues = [];\n            let shift = 0;\n            do {\n                // If there is only one byte left then it will be encoded as ASCII\n                if (bits.available() === 8) {\n                    return;\n                }\n                const firstByte = bits.readBits(8);\n                if (firstByte === 254) { // Unlatch codeword\n                    return;\n                }\n                this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n                for (let i = 0; i < 3; i++) {\n                    const cValue = cValues[i];\n                    switch (shift) {\n                        case 0:\n                            if (cValue < 3) {\n                                shift = cValue + 1;\n                            }\n                            else if (cValue < this.TEXT_BASIC_SET_CHARS.length) {\n                                const textChar = this.TEXT_BASIC_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(textChar);\n                                }\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case 1:\n                            if (upperShift) {\n                                result.append(String.fromCharCode(cValue + 128));\n                                upperShift = false;\n                            }\n                            else {\n                                result.append(String.fromCharCode(cValue));\n                            }\n                            shift = 0;\n                            break;\n                        case 2:\n                            // Shift 2 for Text is the same encoding as C40\n                            if (cValue < this.TEXT_SHIFT2_SET_CHARS.length) {\n                                const textChar = this.TEXT_SHIFT2_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(textChar);\n                                }\n                            }\n                            else {\n                                switch (cValue) {\n                                    case 27: // FNC1\n                                        result.append(String.fromCharCode(29)); // translate as ASCII 29\n                                        break;\n                                    case 30: // Upper Shift\n                                        upperShift = true;\n                                        break;\n                                    default:\n                                        throw new FormatException();\n                                }\n                            }\n                            shift = 0;\n                            break;\n                        case 3:\n                            if (cValue < this.TEXT_SHIFT3_SET_CHARS.length) {\n                                const textChar = this.TEXT_SHIFT3_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(textChar);\n                                }\n                                shift = 0;\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        default:\n                            throw new FormatException();\n                    }\n                }\n            } while (bits.available() > 0);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.7\n         */\n        static decodeAnsiX12Segment(bits, result) {\n            // Three ANSI X12 values are encoded in a 16-bit value as\n            // (1600 * C1) + (40 * C2) + C3 + 1\n            const cValues = [];\n            do {\n                // If there is only one byte left then it will be encoded as ASCII\n                if (bits.available() === 8) {\n                    return;\n                }\n                const firstByte = bits.readBits(8);\n                if (firstByte === 254) { // Unlatch codeword\n                    return;\n                }\n                this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n                for (let i = 0; i < 3; i++) {\n                    const cValue = cValues[i];\n                    switch (cValue) {\n                        case 0: // X12 segment terminator <CR>\n                            result.append('\\r');\n                            break;\n                        case 1: // X12 segment separator *\n                            result.append('*');\n                            break;\n                        case 2: // X12 sub-element separator >\n                            result.append('>');\n                            break;\n                        case 3: // space\n                            result.append(' ');\n                            break;\n                        default:\n                            if (cValue < 14) { // 0 - 9\n                                result.append(String.fromCharCode(cValue + 44));\n                            }\n                            else if (cValue < 40) { // A - Z\n                                result.append(String.fromCharCode(cValue + 51));\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                    }\n                }\n            } while (bits.available() > 0);\n        }\n        static parseTwoBytes(firstByte, secondByte, result) {\n            let fullBitValue = (firstByte << 8) + secondByte - 1;\n            let temp = Math.floor(fullBitValue / 1600);\n            result[0] = temp;\n            fullBitValue -= temp * 1600;\n            temp = Math.floor(fullBitValue / 40);\n            result[1] = temp;\n            result[2] = fullBitValue - temp * 40;\n        }\n        /**\n         * See ISO 16022:2006, 5.2.8 and Annex C Table C.3\n         */\n        static decodeEdifactSegment(bits, result) {\n            do {\n                // If there is only two or less bytes left then it will be encoded as ASCII\n                if (bits.available() <= 16) {\n                    return;\n                }\n                for (let i = 0; i < 4; i++) {\n                    let edifactValue = bits.readBits(6);\n                    // Check for the unlatch character\n                    if (edifactValue === 0x1F) { // 011111\n                        // Read rest of byte, which should be 0, and stop\n                        const bitsLeft = 8 - bits.getBitOffset();\n                        if (bitsLeft !== 8) {\n                            bits.readBits(bitsLeft);\n                        }\n                        return;\n                    }\n                    if ((edifactValue & 0x20) === 0) { // no 1 in the leading (6th) bit\n                        edifactValue |= 0x40; // Add a leading 01 to the 6 bit binary value\n                    }\n                    result.append(String.fromCharCode(edifactValue));\n                }\n            } while (bits.available() > 0);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.9 and Annex B, B.2\n         */\n        static decodeBase256Segment(bits, result, byteSegments) {\n            // Figure out how long the Base 256 Segment is.\n            let codewordPosition = 1 + bits.getByteOffset(); // position is 1-indexed\n            const d1 = this.unrandomize255State(bits.readBits(8), codewordPosition++);\n            let count;\n            if (d1 === 0) { // Read the remainder of the symbol\n                count = bits.available() / 8 | 0;\n            }\n            else if (d1 < 250) {\n                count = d1;\n            }\n            else {\n                count = 250 * (d1 - 249) + this.unrandomize255State(bits.readBits(8), codewordPosition++);\n            }\n            // We're seeing NegativeArraySizeException errors from users.\n            if (count < 0) {\n                throw new FormatException();\n            }\n            const bytes = new Uint8Array(count);\n            for (let i = 0; i < count; i++) {\n                // Have seen this particular error in the wild, such as at\n                // http://www.bcgen.com/demo/IDAutomationStreamingDataMatrix.aspx?MODE=3&D=Fred&PFMT=3&PT=F&X=0.3&O=0&LM=0.2\n                if (bits.available() < 8) {\n                    throw new FormatException();\n                }\n                bytes[i] = this.unrandomize255State(bits.readBits(8), codewordPosition++);\n            }\n            byteSegments.push(bytes);\n            try {\n                result.append(StringEncoding.decode(bytes, StringUtils.ISO88591));\n            }\n            catch (uee) {\n                throw new IllegalStateException('Platform does not support required encoding: ' + uee.message);\n            }\n        }\n        /**\n         * See ISO 16022:2006, Annex B, B.2\n         */\n        static unrandomize255State(randomizedBase256Codeword, base256CodewordPosition) {\n            const pseudoRandomNumber = ((149 * base256CodewordPosition) % 255) + 1;\n            const tempVariable = randomizedBase256Codeword - pseudoRandomNumber;\n            return tempVariable >= 0 ? tempVariable : tempVariable + 256;\n        }\n    }\n    /**\n     * See ISO 16022:2006, Annex C Table C.1\n     * The C40 Basic Character Set (*'s used for placeholders for the shift values)\n     */\n    DecodedBitStreamParser.C40_BASIC_SET_CHARS = [\n        '*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\n        'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'\n    ];\n    DecodedBitStreamParser.C40_SHIFT2_SET_CHARS = [\n        '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.',\n        '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '_'\n    ];\n    /**\n     * See ISO 16022:2006, Annex C Table C.2\n     * The Text Basic Character Set (*'s used for placeholders for the shift values)\n     */\n    DecodedBitStreamParser.TEXT_BASIC_SET_CHARS = [\n        '*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\n        'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'\n    ];\n    // Shift 2 for Text is the same encoding as C40\n    DecodedBitStreamParser.TEXT_SHIFT2_SET_CHARS = DecodedBitStreamParser.C40_SHIFT2_SET_CHARS;\n    DecodedBitStreamParser.TEXT_SHIFT3_SET_CHARS = [\n        '`', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\n        'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '{', '|', '}', '~', String.fromCharCode(127)\n    ];\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>The main class which implements Data Matrix Code decoding -- as opposed to locating and extracting\n     * the Data Matrix Code from an image.</p>\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class Decoder$1 {\n        constructor() {\n            this.rsDecoder = new ReedSolomonDecoder(GenericGF.DATA_MATRIX_FIELD_256);\n        }\n        /**\n         * <p>Decodes a Data Matrix Code represented as a {@link BitMatrix}. A 1 or \"true\" is taken\n         * to mean a black module.</p>\n         *\n         * @param bits booleans representing white/black Data Matrix Code modules\n         * @return text and bytes encoded within the Data Matrix Code\n         * @throws FormatException if the Data Matrix Code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        decode(bits) {\n            // Construct a parser and read version, error-correction level\n            const parser = new BitMatrixParser(bits);\n            const version = parser.getVersion();\n            // Read codewords\n            const codewords = parser.readCodewords();\n            // Separate into data blocks\n            const dataBlocks = DataBlock.getDataBlocks(codewords, version);\n            // Count total number of data bytes\n            let totalBytes = 0;\n            for (let db of dataBlocks) {\n                totalBytes += db.getNumDataCodewords();\n            }\n            const resultBytes = new Uint8Array(totalBytes);\n            const dataBlocksCount = dataBlocks.length;\n            // Error-correct and copy data blocks together into a stream of bytes\n            for (let j = 0; j < dataBlocksCount; j++) {\n                const dataBlock = dataBlocks[j];\n                const codewordBytes = dataBlock.getCodewords();\n                const numDataCodewords = dataBlock.getNumDataCodewords();\n                this.correctErrors(codewordBytes, numDataCodewords);\n                for (let i = 0; i < numDataCodewords; i++) {\n                    // De-interlace data blocks.\n                    resultBytes[i * dataBlocksCount + j] = codewordBytes[i];\n                }\n            }\n            // Decode the contents of that stream of bytes\n            return DecodedBitStreamParser.decode(resultBytes);\n        }\n        /**\n         * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\n         * correct the errors in-place using Reed-Solomon error correction.</p>\n         *\n         * @param codewordBytes data and error correction codewords\n         * @param numDataCodewords number of codewords that are data bytes\n         * @throws ChecksumException if error correction fails\n         */\n        correctErrors(codewordBytes, numDataCodewords) {\n            // const numCodewords = codewordBytes.length;\n            // First read into an array of ints\n            const codewordsInts = new Int32Array(codewordBytes);\n            // for (let i = 0; i < numCodewords; i++) {\n            //   codewordsInts[i] = codewordBytes[i] & 0xFF;\n            // }\n            try {\n                this.rsDecoder.decode(codewordsInts, codewordBytes.length - numDataCodewords);\n            }\n            catch (ignored /* ReedSolomonException */) {\n                throw new ChecksumException();\n            }\n            // Copy back into array of bytes -- only need to worry about the bytes that were data\n            // We don't care about errors in the error-correction codewords\n            for (let i = 0; i < numDataCodewords; i++) {\n                codewordBytes[i] = codewordsInts[i];\n            }\n        }\n    }\n\n    /**\n     * <p>Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code\n     * is rotated or skewed, or partially obscured.</p>\n     *\n     * @author Sean Owen\n     */\n    class Detector$1 {\n        constructor(image) {\n            this.image = image;\n            this.rectangleDetector = new WhiteRectangleDetector(this.image);\n        }\n        /**\n         * <p>Detects a Data Matrix Code in an image.</p>\n         *\n         * @return {@link DetectorResult} encapsulating results of detecting a Data Matrix Code\n         * @throws NotFoundException if no Data Matrix Code can be found\n         */\n        detect() {\n            const cornerPoints = this.rectangleDetector.detect();\n            let points = this.detectSolid1(cornerPoints);\n            points = this.detectSolid2(points);\n            points[3] = this.correctTopRight(points);\n            if (!points[3]) {\n                throw new NotFoundException();\n            }\n            points = this.shiftToModuleCenter(points);\n            const topLeft = points[0];\n            const bottomLeft = points[1];\n            const bottomRight = points[2];\n            const topRight = points[3];\n            let dimensionTop = this.transitionsBetween(topLeft, topRight) + 1;\n            let dimensionRight = this.transitionsBetween(bottomRight, topRight) + 1;\n            if ((dimensionTop & 0x01) === 1) {\n                dimensionTop += 1;\n            }\n            if ((dimensionRight & 0x01) === 1) {\n                dimensionRight += 1;\n            }\n            if (4 * dimensionTop < 7 * dimensionRight && 4 * dimensionRight < 7 * dimensionTop) {\n                // The matrix is square\n                dimensionTop = dimensionRight = Math.max(dimensionTop, dimensionRight);\n            }\n            let bits = Detector$1.sampleGrid(this.image, topLeft, bottomLeft, bottomRight, topRight, dimensionTop, dimensionRight);\n            return new DetectorResult(bits, [topLeft, bottomLeft, bottomRight, topRight]);\n        }\n        static shiftPoint(point, to, div) {\n            let x = (to.getX() - point.getX()) / (div + 1);\n            let y = (to.getY() - point.getY()) / (div + 1);\n            return new ResultPoint(point.getX() + x, point.getY() + y);\n        }\n        static moveAway(point, fromX, fromY) {\n            let x = point.getX();\n            let y = point.getY();\n            if (x < fromX) {\n                x -= 1;\n            }\n            else {\n                x += 1;\n            }\n            if (y < fromY) {\n                y -= 1;\n            }\n            else {\n                y += 1;\n            }\n            return new ResultPoint(x, y);\n        }\n        /**\n         * Detect a solid side which has minimum transition.\n         */\n        detectSolid1(cornerPoints) {\n            // 0  2\n            // 1  3\n            let pointA = cornerPoints[0];\n            let pointB = cornerPoints[1];\n            let pointC = cornerPoints[3];\n            let pointD = cornerPoints[2];\n            let trAB = this.transitionsBetween(pointA, pointB);\n            let trBC = this.transitionsBetween(pointB, pointC);\n            let trCD = this.transitionsBetween(pointC, pointD);\n            let trDA = this.transitionsBetween(pointD, pointA);\n            // 0..3\n            // :  :\n            // 1--2\n            let min = trAB;\n            let points = [pointD, pointA, pointB, pointC];\n            if (min > trBC) {\n                min = trBC;\n                points[0] = pointA;\n                points[1] = pointB;\n                points[2] = pointC;\n                points[3] = pointD;\n            }\n            if (min > trCD) {\n                min = trCD;\n                points[0] = pointB;\n                points[1] = pointC;\n                points[2] = pointD;\n                points[3] = pointA;\n            }\n            if (min > trDA) {\n                points[0] = pointC;\n                points[1] = pointD;\n                points[2] = pointA;\n                points[3] = pointB;\n            }\n            return points;\n        }\n        /**\n         * Detect a second solid side next to first solid side.\n         */\n        detectSolid2(points) {\n            // A..D\n            // :  :\n            // B--C\n            let pointA = points[0];\n            let pointB = points[1];\n            let pointC = points[2];\n            let pointD = points[3];\n            // Transition detection on the edge is not stable.\n            // To safely detect, shift the points to the module center.\n            let tr = this.transitionsBetween(pointA, pointD);\n            let pointBs = Detector$1.shiftPoint(pointB, pointC, (tr + 1) * 4);\n            let pointCs = Detector$1.shiftPoint(pointC, pointB, (tr + 1) * 4);\n            let trBA = this.transitionsBetween(pointBs, pointA);\n            let trCD = this.transitionsBetween(pointCs, pointD);\n            // 0..3\n            // |  :\n            // 1--2\n            if (trBA < trCD) {\n                // solid sides: A-B-C\n                points[0] = pointA;\n                points[1] = pointB;\n                points[2] = pointC;\n                points[3] = pointD;\n            }\n            else {\n                // solid sides: B-C-D\n                points[0] = pointB;\n                points[1] = pointC;\n                points[2] = pointD;\n                points[3] = pointA;\n            }\n            return points;\n        }\n        /**\n         * Calculates the corner position of the white top right module.\n         */\n        correctTopRight(points) {\n            // A..D\n            // |  :\n            // B--C\n            let pointA = points[0];\n            let pointB = points[1];\n            let pointC = points[2];\n            let pointD = points[3];\n            // shift points for safe transition detection.\n            let trTop = this.transitionsBetween(pointA, pointD);\n            let trRight = this.transitionsBetween(pointB, pointD);\n            let pointAs = Detector$1.shiftPoint(pointA, pointB, (trRight + 1) * 4);\n            let pointCs = Detector$1.shiftPoint(pointC, pointB, (trTop + 1) * 4);\n            trTop = this.transitionsBetween(pointAs, pointD);\n            trRight = this.transitionsBetween(pointCs, pointD);\n            let candidate1 = new ResultPoint(pointD.getX() + (pointC.getX() - pointB.getX()) / (trTop + 1), pointD.getY() + (pointC.getY() - pointB.getY()) / (trTop + 1));\n            let candidate2 = new ResultPoint(pointD.getX() + (pointA.getX() - pointB.getX()) / (trRight + 1), pointD.getY() + (pointA.getY() - pointB.getY()) / (trRight + 1));\n            if (!this.isValid(candidate1)) {\n                if (this.isValid(candidate2)) {\n                    return candidate2;\n                }\n                return null;\n            }\n            if (!this.isValid(candidate2)) {\n                return candidate1;\n            }\n            let sumc1 = this.transitionsBetween(pointAs, candidate1) + this.transitionsBetween(pointCs, candidate1);\n            let sumc2 = this.transitionsBetween(pointAs, candidate2) + this.transitionsBetween(pointCs, candidate2);\n            if (sumc1 > sumc2) {\n                return candidate1;\n            }\n            else {\n                return candidate2;\n            }\n        }\n        /**\n         * Shift the edge points to the module center.\n         */\n        shiftToModuleCenter(points) {\n            // A..D\n            // |  :\n            // B--C\n            let pointA = points[0];\n            let pointB = points[1];\n            let pointC = points[2];\n            let pointD = points[3];\n            // calculate pseudo dimensions\n            let dimH = this.transitionsBetween(pointA, pointD) + 1;\n            let dimV = this.transitionsBetween(pointC, pointD) + 1;\n            // shift points for safe dimension detection\n            let pointAs = Detector$1.shiftPoint(pointA, pointB, dimV * 4);\n            let pointCs = Detector$1.shiftPoint(pointC, pointB, dimH * 4);\n            //  calculate more precise dimensions\n            dimH = this.transitionsBetween(pointAs, pointD) + 1;\n            dimV = this.transitionsBetween(pointCs, pointD) + 1;\n            if ((dimH & 0x01) === 1) {\n                dimH += 1;\n            }\n            if ((dimV & 0x01) === 1) {\n                dimV += 1;\n            }\n            // WhiteRectangleDetector returns points inside of the rectangle.\n            // I want points on the edges.\n            let centerX = (pointA.getX() + pointB.getX() + pointC.getX() + pointD.getX()) / 4;\n            let centerY = (pointA.getY() + pointB.getY() + pointC.getY() + pointD.getY()) / 4;\n            pointA = Detector$1.moveAway(pointA, centerX, centerY);\n            pointB = Detector$1.moveAway(pointB, centerX, centerY);\n            pointC = Detector$1.moveAway(pointC, centerX, centerY);\n            pointD = Detector$1.moveAway(pointD, centerX, centerY);\n            let pointBs;\n            let pointDs;\n            // shift points to the center of each modules\n            pointAs = Detector$1.shiftPoint(pointA, pointB, dimV * 4);\n            pointAs = Detector$1.shiftPoint(pointAs, pointD, dimH * 4);\n            pointBs = Detector$1.shiftPoint(pointB, pointA, dimV * 4);\n            pointBs = Detector$1.shiftPoint(pointBs, pointC, dimH * 4);\n            pointCs = Detector$1.shiftPoint(pointC, pointD, dimV * 4);\n            pointCs = Detector$1.shiftPoint(pointCs, pointB, dimH * 4);\n            pointDs = Detector$1.shiftPoint(pointD, pointC, dimV * 4);\n            pointDs = Detector$1.shiftPoint(pointDs, pointA, dimH * 4);\n            return [pointAs, pointBs, pointCs, pointDs];\n        }\n        isValid(p) {\n            return p.getX() >= 0 && p.getX() < this.image.getWidth() && p.getY() > 0 && p.getY() < this.image.getHeight();\n        }\n        static sampleGrid(image, topLeft, bottomLeft, bottomRight, topRight, dimensionX, dimensionY) {\n            const sampler = GridSamplerInstance.getInstance();\n            return sampler.sampleGrid(image, dimensionX, dimensionY, 0.5, 0.5, dimensionX - 0.5, 0.5, dimensionX - 0.5, dimensionY - 0.5, 0.5, dimensionY - 0.5, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n        }\n        /**\n         * Counts the number of black/white transitions between two points, using something like Bresenham's algorithm.\n         */\n        transitionsBetween(from, to) {\n            // See QR Code Detector, sizeOfBlackWhiteBlackRun()\n            let fromX = Math.trunc(from.getX());\n            let fromY = Math.trunc(from.getY());\n            let toX = Math.trunc(to.getX());\n            let toY = Math.trunc(to.getY());\n            let steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n            if (steep) {\n                let temp = fromX;\n                fromX = fromY;\n                fromY = temp;\n                temp = toX;\n                toX = toY;\n                toY = temp;\n            }\n            let dx = Math.abs(toX - fromX);\n            let dy = Math.abs(toY - fromY);\n            let error = -dx / 2;\n            let ystep = fromY < toY ? 1 : -1;\n            let xstep = fromX < toX ? 1 : -1;\n            let transitions = 0;\n            let inBlack = this.image.get(steep ? fromY : fromX, steep ? fromX : fromY);\n            for (let x = fromX, y = fromY; x !== toX; x += xstep) {\n                let isBlack = this.image.get(steep ? y : x, steep ? x : y);\n                if (isBlack !== inBlack) {\n                    transitions++;\n                    inBlack = isBlack;\n                }\n                error += dy;\n                if (error > 0) {\n                    if (y === toY) {\n                        break;\n                    }\n                    y += ystep;\n                    error -= dx;\n                }\n            }\n            return transitions;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This implementation can detect and decode Data Matrix codes in an image.\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class DataMatrixReader {\n        constructor() {\n            this.decoder = new Decoder$1();\n        }\n        /**\n         * Locates and decodes a Data Matrix code in an image.\n         *\n         * @return a String representing the content encoded by the Data Matrix code\n         * @throws NotFoundException if a Data Matrix code cannot be found\n         * @throws FormatException if a Data Matrix code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        // @Override\n        // public Result decode(BinaryBitmap image) throws NotFoundException, ChecksumException, FormatException {\n        //   return decode(image, null);\n        // }\n        // @Override\n        decode(image, hints = null) {\n            let decoderResult;\n            let points;\n            if (hints != null && hints.has(DecodeHintType$1.PURE_BARCODE)) {\n                const bits = DataMatrixReader.extractPureBits(image.getBlackMatrix());\n                decoderResult = this.decoder.decode(bits);\n                points = DataMatrixReader.NO_POINTS;\n            }\n            else {\n                const detectorResult = new Detector$1(image.getBlackMatrix()).detect();\n                decoderResult = this.decoder.decode(detectorResult.getBits());\n                points = detectorResult.getPoints();\n            }\n            const rawBytes = decoderResult.getRawBytes();\n            const result = new Result(decoderResult.getText(), rawBytes, 8 * rawBytes.length, points, BarcodeFormat$1.DATA_MATRIX, System.currentTimeMillis());\n            const byteSegments = decoderResult.getByteSegments();\n            if (byteSegments != null) {\n                result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS, byteSegments);\n            }\n            const ecLevel = decoderResult.getECLevel();\n            if (ecLevel != null) {\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, ecLevel);\n            }\n            return result;\n        }\n        // @Override\n        reset() {\n            // do nothing\n        }\n        /**\n         * This method detects a code in a \"pure\" image -- that is, pure monochrome image\n         * which contains only an unrotated, unskewed, image of a code, with some white border\n         * around it. This is a specialized method that works exceptionally fast in this special\n         * case.\n         *\n         * @see com.google.zxing.qrcode.QRCodeReader#extractPureBits(BitMatrix)\n         */\n        static extractPureBits(image) {\n            const leftTopBlack = image.getTopLeftOnBit();\n            const rightBottomBlack = image.getBottomRightOnBit();\n            if (leftTopBlack == null || rightBottomBlack == null) {\n                throw new NotFoundException();\n            }\n            const moduleSize = this.moduleSize(leftTopBlack, image);\n            let top = leftTopBlack[1];\n            const bottom = rightBottomBlack[1];\n            let left = leftTopBlack[0];\n            const right = rightBottomBlack[0];\n            const matrixWidth = (right - left + 1) / moduleSize;\n            const matrixHeight = (bottom - top + 1) / moduleSize;\n            if (matrixWidth <= 0 || matrixHeight <= 0) {\n                throw new NotFoundException();\n            }\n            // Push in the \"border\" by half the module width so that we start\n            // sampling in the middle of the module. Just in case the image is a\n            // little off, this will help recover.\n            const nudge = moduleSize / 2;\n            top += nudge;\n            left += nudge;\n            // Now just read off the bits\n            const bits = new BitMatrix(matrixWidth, matrixHeight);\n            for (let y = 0; y < matrixHeight; y++) {\n                const iOffset = top + y * moduleSize;\n                for (let x = 0; x < matrixWidth; x++) {\n                    if (image.get(left + x * moduleSize, iOffset)) {\n                        bits.set(x, y);\n                    }\n                }\n            }\n            return bits;\n        }\n        static moduleSize(leftTopBlack, image) {\n            const width = image.getWidth();\n            let x = leftTopBlack[0];\n            const y = leftTopBlack[1];\n            while (x < width && image.get(x, y)) {\n                x++;\n            }\n            if (x === width) {\n                throw new NotFoundException();\n            }\n            const moduleSize = x - leftTopBlack[0];\n            if (moduleSize === 0) {\n                throw new NotFoundException();\n            }\n            return moduleSize;\n        }\n    }\n    DataMatrixReader.NO_POINTS = [];\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * QR Code reader to use from browser.\n     */\n    class BrowserDatamatrixCodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserQRCodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new DataMatrixReader(), timeBetweenScansMillis);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var ErrorCorrectionLevelValues;\n    (function (ErrorCorrectionLevelValues) {\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"L\"] = 0] = \"L\";\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"M\"] = 1] = \"M\";\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"Q\"] = 2] = \"Q\";\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"H\"] = 3] = \"H\";\n    })(ErrorCorrectionLevelValues || (ErrorCorrectionLevelValues = {}));\n    /**\n     * <p>See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels\n     * defined by the QR code standard.</p>\n     *\n     * @author Sean Owen\n     */\n    class ErrorCorrectionLevel {\n        constructor(value, stringValue, bits /*int*/) {\n            this.value = value;\n            this.stringValue = stringValue;\n            this.bits = bits;\n            ErrorCorrectionLevel.FOR_BITS.set(bits, this);\n            ErrorCorrectionLevel.FOR_VALUE.set(value, this);\n        }\n        getValue() {\n            return this.value;\n        }\n        getBits() {\n            return this.bits;\n        }\n        static fromString(s) {\n            switch (s) {\n                case 'L': return ErrorCorrectionLevel.L;\n                case 'M': return ErrorCorrectionLevel.M;\n                case 'Q': return ErrorCorrectionLevel.Q;\n                case 'H': return ErrorCorrectionLevel.H;\n                default: throw new ArgumentException(s + 'not available');\n            }\n        }\n        toString() {\n            return this.stringValue;\n        }\n        equals(o) {\n            if (!(o instanceof ErrorCorrectionLevel)) {\n                return false;\n            }\n            const other = o;\n            return this.value === other.value;\n        }\n        /**\n         * @param bits int containing the two bits encoding a QR Code's error correction level\n         * @return ErrorCorrectionLevel representing the encoded error correction level\n         */\n        static forBits(bits /*int*/) {\n            if (bits < 0 || bits >= ErrorCorrectionLevel.FOR_BITS.size) {\n                throw new IllegalArgumentException();\n            }\n            return ErrorCorrectionLevel.FOR_BITS.get(bits);\n        }\n    }\n    ErrorCorrectionLevel.FOR_BITS = new Map();\n    ErrorCorrectionLevel.FOR_VALUE = new Map();\n    /** L = ~7% correction */\n    ErrorCorrectionLevel.L = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.L, 'L', 0x01);\n    /** M = ~15% correction */\n    ErrorCorrectionLevel.M = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.M, 'M', 0x00);\n    /** Q = ~25% correction */\n    ErrorCorrectionLevel.Q = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.Q, 'Q', 0x03);\n    /** H = ~30% correction */\n    ErrorCorrectionLevel.H = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.H, 'H', 0x02);\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a QR Code's format information, including the data mask used and\n     * error correction level.</p>\n     *\n     * @author Sean Owen\n     * @see DataMask\n     * @see ErrorCorrectionLevel\n     */\n    class FormatInformation {\n        constructor(formatInfo /*int*/) {\n            // Bits 3,4\n            this.errorCorrectionLevel = ErrorCorrectionLevel.forBits((formatInfo >> 3) & 0x03);\n            // Bottom 3 bits\n            this.dataMask = /*(byte) */ (formatInfo & 0x07);\n        }\n        static numBitsDiffering(a /*int*/, b /*int*/) {\n            return Integer.bitCount(a ^ b);\n        }\n        /**\n         * @param maskedFormatInfo1 format info indicator, with mask still applied\n         * @param maskedFormatInfo2 second copy of same info; both are checked at the same time\n         *  to establish best match\n         * @return information about the format it specifies, or {@code null}\n         *  if doesn't seem to match any known pattern\n         */\n        static decodeFormatInformation(maskedFormatInfo1 /*int*/, maskedFormatInfo2 /*int*/) {\n            const formatInfo = FormatInformation.doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2);\n            if (formatInfo !== null) {\n                return formatInfo;\n            }\n            // Should return null, but, some QR codes apparently\n            // do not mask this info. Try again by actually masking the pattern\n            // first\n            return FormatInformation.doDecodeFormatInformation(maskedFormatInfo1 ^ FormatInformation.FORMAT_INFO_MASK_QR, maskedFormatInfo2 ^ FormatInformation.FORMAT_INFO_MASK_QR);\n        }\n        static doDecodeFormatInformation(maskedFormatInfo1 /*int*/, maskedFormatInfo2 /*int*/) {\n            // Find the int in FORMAT_INFO_DECODE_LOOKUP with fewest bits differing\n            let bestDifference = Number.MAX_SAFE_INTEGER;\n            let bestFormatInfo = 0;\n            for (const decodeInfo of FormatInformation.FORMAT_INFO_DECODE_LOOKUP) {\n                const targetInfo = decodeInfo[0];\n                if (targetInfo === maskedFormatInfo1 || targetInfo === maskedFormatInfo2) {\n                    // Found an exact match\n                    return new FormatInformation(decodeInfo[1]);\n                }\n                let bitsDifference = FormatInformation.numBitsDiffering(maskedFormatInfo1, targetInfo);\n                if (bitsDifference < bestDifference) {\n                    bestFormatInfo = decodeInfo[1];\n                    bestDifference = bitsDifference;\n                }\n                if (maskedFormatInfo1 !== maskedFormatInfo2) {\n                    // also try the other option\n                    bitsDifference = FormatInformation.numBitsDiffering(maskedFormatInfo2, targetInfo);\n                    if (bitsDifference < bestDifference) {\n                        bestFormatInfo = decodeInfo[1];\n                        bestDifference = bitsDifference;\n                    }\n                }\n            }\n            // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits\n            // differing means we found a match\n            if (bestDifference <= 3) {\n                return new FormatInformation(bestFormatInfo);\n            }\n            return null;\n        }\n        getErrorCorrectionLevel() {\n            return this.errorCorrectionLevel;\n        }\n        getDataMask() {\n            return this.dataMask;\n        }\n        /*@Override*/\n        hashCode() {\n            return (this.errorCorrectionLevel.getBits() << 3) | this.dataMask;\n        }\n        /*@Override*/\n        equals(o) {\n            if (!(o instanceof FormatInformation)) {\n                return false;\n            }\n            const other = o;\n            return this.errorCorrectionLevel === other.errorCorrectionLevel &&\n                this.dataMask === other.dataMask;\n        }\n    }\n    FormatInformation.FORMAT_INFO_MASK_QR = 0x5412;\n    /**\n     * See ISO 18004:2006, Annex C, Table C.1\n     */\n    FormatInformation.FORMAT_INFO_DECODE_LOOKUP = [\n        Int32Array.from([0x5412, 0x00]),\n        Int32Array.from([0x5125, 0x01]),\n        Int32Array.from([0x5E7C, 0x02]),\n        Int32Array.from([0x5B4B, 0x03]),\n        Int32Array.from([0x45F9, 0x04]),\n        Int32Array.from([0x40CE, 0x05]),\n        Int32Array.from([0x4F97, 0x06]),\n        Int32Array.from([0x4AA0, 0x07]),\n        Int32Array.from([0x77C4, 0x08]),\n        Int32Array.from([0x72F3, 0x09]),\n        Int32Array.from([0x7DAA, 0x0A]),\n        Int32Array.from([0x789D, 0x0B]),\n        Int32Array.from([0x662F, 0x0C]),\n        Int32Array.from([0x6318, 0x0D]),\n        Int32Array.from([0x6C41, 0x0E]),\n        Int32Array.from([0x6976, 0x0F]),\n        Int32Array.from([0x1689, 0x10]),\n        Int32Array.from([0x13BE, 0x11]),\n        Int32Array.from([0x1CE7, 0x12]),\n        Int32Array.from([0x19D0, 0x13]),\n        Int32Array.from([0x0762, 0x14]),\n        Int32Array.from([0x0255, 0x15]),\n        Int32Array.from([0x0D0C, 0x16]),\n        Int32Array.from([0x083B, 0x17]),\n        Int32Array.from([0x355F, 0x18]),\n        Int32Array.from([0x3068, 0x19]),\n        Int32Array.from([0x3F31, 0x1A]),\n        Int32Array.from([0x3A06, 0x1B]),\n        Int32Array.from([0x24B4, 0x1C]),\n        Int32Array.from([0x2183, 0x1D]),\n        Int32Array.from([0x2EDA, 0x1E]),\n        Int32Array.from([0x2BED, 0x1F]),\n    ];\n\n    /**\n     * <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will\n     * use blocks of differing sizes within one version, so, this encapsulates the parameters for\n     * each set of blocks. It also holds the number of error-correction codewords per block since it\n     * will be the same across all blocks within one version.</p>\n     */\n    class ECBlocks$1 {\n        constructor(ecCodewordsPerBlock /*int*/, ...ecBlocks) {\n            this.ecCodewordsPerBlock = ecCodewordsPerBlock;\n            this.ecBlocks = ecBlocks;\n        }\n        getECCodewordsPerBlock() {\n            return this.ecCodewordsPerBlock;\n        }\n        getNumBlocks() {\n            let total = 0;\n            const ecBlocks = this.ecBlocks;\n            for (const ecBlock of ecBlocks) {\n                total += ecBlock.getCount();\n            }\n            return total;\n        }\n        getTotalECCodewords() {\n            return this.ecCodewordsPerBlock * this.getNumBlocks();\n        }\n        getECBlocks() {\n            return this.ecBlocks;\n        }\n    }\n\n    /**\n     * <p>Encapsulates the parameters for one error-correction block in one symbol version.\n     * This includes the number of data codewords, and the number of times a block with these\n     * parameters is used consecutively in the QR code version's format.</p>\n     */\n    class ECB$1 {\n        constructor(count /*int*/, dataCodewords /*int*/) {\n            this.count = count;\n            this.dataCodewords = dataCodewords;\n        }\n        getCount() {\n            return this.count;\n        }\n        getDataCodewords() {\n            return this.dataCodewords;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * See ISO 18004:2006 Annex D\n     *\n     * @author Sean Owen\n     */\n    class Version$1 {\n        constructor(versionNumber /*int*/, alignmentPatternCenters, ...ecBlocks) {\n            this.versionNumber = versionNumber;\n            this.alignmentPatternCenters = alignmentPatternCenters;\n            this.ecBlocks = ecBlocks;\n            let total = 0;\n            const ecCodewords = ecBlocks[0].getECCodewordsPerBlock();\n            const ecbArray = ecBlocks[0].getECBlocks();\n            for (const ecBlock of ecbArray) {\n                total += ecBlock.getCount() * (ecBlock.getDataCodewords() + ecCodewords);\n            }\n            this.totalCodewords = total;\n        }\n        getVersionNumber() {\n            return this.versionNumber;\n        }\n        getAlignmentPatternCenters() {\n            return this.alignmentPatternCenters;\n        }\n        getTotalCodewords() {\n            return this.totalCodewords;\n        }\n        getDimensionForVersion() {\n            return 17 + 4 * this.versionNumber;\n        }\n        getECBlocksForLevel(ecLevel) {\n            return this.ecBlocks[ecLevel.getValue()];\n            // TYPESCRIPTPORT: original was using ordinal, and using the order of levels as defined in ErrorCorrectionLevel enum (LMQH)\n            // I will use the direct value from ErrorCorrectionLevelValues enum which in typescript goes to a number\n        }\n        /**\n         * <p>Deduces version information purely from QR Code dimensions.</p>\n         *\n         * @param dimension dimension in modules\n         * @return Version for a QR Code of that dimension\n         * @throws FormatException if dimension is not 1 mod 4\n         */\n        static getProvisionalVersionForDimension(dimension /*int*/) {\n            if (dimension % 4 !== 1) {\n                throw new FormatException();\n            }\n            try {\n                return this.getVersionForNumber((dimension - 17) / 4);\n            }\n            catch (ignored /*: IllegalArgumentException*/) {\n                throw new FormatException();\n            }\n        }\n        static getVersionForNumber(versionNumber /*int*/) {\n            if (versionNumber < 1 || versionNumber > 40) {\n                throw new IllegalArgumentException();\n            }\n            return Version$1.VERSIONS[versionNumber - 1];\n        }\n        static decodeVersionInformation(versionBits /*int*/) {\n            let bestDifference = Number.MAX_SAFE_INTEGER;\n            let bestVersion = 0;\n            for (let i = 0; i < Version$1.VERSION_DECODE_INFO.length; i++) {\n                const targetVersion = Version$1.VERSION_DECODE_INFO[i];\n                // Do the version info bits match exactly? done.\n                if (targetVersion === versionBits) {\n                    return Version$1.getVersionForNumber(i + 7);\n                }\n                // Otherwise see if this is the closest to a real version info bit string\n                // we have seen so far\n                const bitsDifference = FormatInformation.numBitsDiffering(versionBits, targetVersion);\n                if (bitsDifference < bestDifference) {\n                    bestVersion = i + 7;\n                    bestDifference = bitsDifference;\n                }\n            }\n            // We can tolerate up to 3 bits of error since no two version info codewords will\n            // differ in less than 8 bits.\n            if (bestDifference <= 3) {\n                return Version$1.getVersionForNumber(bestVersion);\n            }\n            // If we didn't find a close enough match, fail\n            return null;\n        }\n        /**\n         * See ISO 18004:2006 Annex E\n         */\n        buildFunctionPattern() {\n            const dimension = this.getDimensionForVersion();\n            const bitMatrix = new BitMatrix(dimension);\n            // Top left finder pattern + separator + format\n            bitMatrix.setRegion(0, 0, 9, 9);\n            // Top right finder pattern + separator + format\n            bitMatrix.setRegion(dimension - 8, 0, 8, 9);\n            // Bottom left finder pattern + separator + format\n            bitMatrix.setRegion(0, dimension - 8, 9, 8);\n            // Alignment patterns\n            const max = this.alignmentPatternCenters.length;\n            for (let x = 0; x < max; x++) {\n                const i = this.alignmentPatternCenters[x] - 2;\n                for (let y = 0; y < max; y++) {\n                    if ((x === 0 && (y === 0 || y === max - 1)) || (x === max - 1 && y === 0)) {\n                        // No alignment patterns near the three finder patterns\n                        continue;\n                    }\n                    bitMatrix.setRegion(this.alignmentPatternCenters[y] - 2, i, 5, 5);\n                }\n            }\n            // Vertical timing pattern\n            bitMatrix.setRegion(6, 9, 1, dimension - 17);\n            // Horizontal timing pattern\n            bitMatrix.setRegion(9, 6, dimension - 17, 1);\n            if (this.versionNumber > 6) {\n                // Version info, top right\n                bitMatrix.setRegion(dimension - 11, 0, 3, 6);\n                // Version info, bottom left\n                bitMatrix.setRegion(0, dimension - 11, 6, 3);\n            }\n            return bitMatrix;\n        }\n        /*@Override*/\n        toString() {\n            return '' + this.versionNumber;\n        }\n    }\n    /**\n       * See ISO 18004:2006 Annex D.\n       * Element i represents the raw version bits that specify version i + 7\n       */\n    Version$1.VERSION_DECODE_INFO = Int32Array.from([\n        0x07C94, 0x085BC, 0x09A99, 0x0A4D3, 0x0BBF6,\n        0x0C762, 0x0D847, 0x0E60D, 0x0F928, 0x10B78,\n        0x1145D, 0x12A17, 0x13532, 0x149A6, 0x15683,\n        0x168C9, 0x177EC, 0x18EC4, 0x191E1, 0x1AFAB,\n        0x1B08E, 0x1CC1A, 0x1D33F, 0x1ED75, 0x1F250,\n        0x209D5, 0x216F0, 0x228BA, 0x2379F, 0x24B0B,\n        0x2542E, 0x26A64, 0x27541, 0x28C69\n    ]);\n    /**\n       * See ISO 18004:2006 6.5.1 Table 9\n       */\n    Version$1.VERSIONS = [\n        new Version$1(1, new Int32Array(0), new ECBlocks$1(7, new ECB$1(1, 19)), new ECBlocks$1(10, new ECB$1(1, 16)), new ECBlocks$1(13, new ECB$1(1, 13)), new ECBlocks$1(17, new ECB$1(1, 9))),\n        new Version$1(2, Int32Array.from([6, 18]), new ECBlocks$1(10, new ECB$1(1, 34)), new ECBlocks$1(16, new ECB$1(1, 28)), new ECBlocks$1(22, new ECB$1(1, 22)), new ECBlocks$1(28, new ECB$1(1, 16))),\n        new Version$1(3, Int32Array.from([6, 22]), new ECBlocks$1(15, new ECB$1(1, 55)), new ECBlocks$1(26, new ECB$1(1, 44)), new ECBlocks$1(18, new ECB$1(2, 17)), new ECBlocks$1(22, new ECB$1(2, 13))),\n        new Version$1(4, Int32Array.from([6, 26]), new ECBlocks$1(20, new ECB$1(1, 80)), new ECBlocks$1(18, new ECB$1(2, 32)), new ECBlocks$1(26, new ECB$1(2, 24)), new ECBlocks$1(16, new ECB$1(4, 9))),\n        new Version$1(5, Int32Array.from([6, 30]), new ECBlocks$1(26, new ECB$1(1, 108)), new ECBlocks$1(24, new ECB$1(2, 43)), new ECBlocks$1(18, new ECB$1(2, 15), new ECB$1(2, 16)), new ECBlocks$1(22, new ECB$1(2, 11), new ECB$1(2, 12))),\n        new Version$1(6, Int32Array.from([6, 34]), new ECBlocks$1(18, new ECB$1(2, 68)), new ECBlocks$1(16, new ECB$1(4, 27)), new ECBlocks$1(24, new ECB$1(4, 19)), new ECBlocks$1(28, new ECB$1(4, 15))),\n        new Version$1(7, Int32Array.from([6, 22, 38]), new ECBlocks$1(20, new ECB$1(2, 78)), new ECBlocks$1(18, new ECB$1(4, 31)), new ECBlocks$1(18, new ECB$1(2, 14), new ECB$1(4, 15)), new ECBlocks$1(26, new ECB$1(4, 13), new ECB$1(1, 14))),\n        new Version$1(8, Int32Array.from([6, 24, 42]), new ECBlocks$1(24, new ECB$1(2, 97)), new ECBlocks$1(22, new ECB$1(2, 38), new ECB$1(2, 39)), new ECBlocks$1(22, new ECB$1(4, 18), new ECB$1(2, 19)), new ECBlocks$1(26, new ECB$1(4, 14), new ECB$1(2, 15))),\n        new Version$1(9, Int32Array.from([6, 26, 46]), new ECBlocks$1(30, new ECB$1(2, 116)), new ECBlocks$1(22, new ECB$1(3, 36), new ECB$1(2, 37)), new ECBlocks$1(20, new ECB$1(4, 16), new ECB$1(4, 17)), new ECBlocks$1(24, new ECB$1(4, 12), new ECB$1(4, 13))),\n        new Version$1(10, Int32Array.from([6, 28, 50]), new ECBlocks$1(18, new ECB$1(2, 68), new ECB$1(2, 69)), new ECBlocks$1(26, new ECB$1(4, 43), new ECB$1(1, 44)), new ECBlocks$1(24, new ECB$1(6, 19), new ECB$1(2, 20)), new ECBlocks$1(28, new ECB$1(6, 15), new ECB$1(2, 16))),\n        new Version$1(11, Int32Array.from([6, 30, 54]), new ECBlocks$1(20, new ECB$1(4, 81)), new ECBlocks$1(30, new ECB$1(1, 50), new ECB$1(4, 51)), new ECBlocks$1(28, new ECB$1(4, 22), new ECB$1(4, 23)), new ECBlocks$1(24, new ECB$1(3, 12), new ECB$1(8, 13))),\n        new Version$1(12, Int32Array.from([6, 32, 58]), new ECBlocks$1(24, new ECB$1(2, 92), new ECB$1(2, 93)), new ECBlocks$1(22, new ECB$1(6, 36), new ECB$1(2, 37)), new ECBlocks$1(26, new ECB$1(4, 20), new ECB$1(6, 21)), new ECBlocks$1(28, new ECB$1(7, 14), new ECB$1(4, 15))),\n        new Version$1(13, Int32Array.from([6, 34, 62]), new ECBlocks$1(26, new ECB$1(4, 107)), new ECBlocks$1(22, new ECB$1(8, 37), new ECB$1(1, 38)), new ECBlocks$1(24, new ECB$1(8, 20), new ECB$1(4, 21)), new ECBlocks$1(22, new ECB$1(12, 11), new ECB$1(4, 12))),\n        new Version$1(14, Int32Array.from([6, 26, 46, 66]), new ECBlocks$1(30, new ECB$1(3, 115), new ECB$1(1, 116)), new ECBlocks$1(24, new ECB$1(4, 40), new ECB$1(5, 41)), new ECBlocks$1(20, new ECB$1(11, 16), new ECB$1(5, 17)), new ECBlocks$1(24, new ECB$1(11, 12), new ECB$1(5, 13))),\n        new Version$1(15, Int32Array.from([6, 26, 48, 70]), new ECBlocks$1(22, new ECB$1(5, 87), new ECB$1(1, 88)), new ECBlocks$1(24, new ECB$1(5, 41), new ECB$1(5, 42)), new ECBlocks$1(30, new ECB$1(5, 24), new ECB$1(7, 25)), new ECBlocks$1(24, new ECB$1(11, 12), new ECB$1(7, 13))),\n        new Version$1(16, Int32Array.from([6, 26, 50, 74]), new ECBlocks$1(24, new ECB$1(5, 98), new ECB$1(1, 99)), new ECBlocks$1(28, new ECB$1(7, 45), new ECB$1(3, 46)), new ECBlocks$1(24, new ECB$1(15, 19), new ECB$1(2, 20)), new ECBlocks$1(30, new ECB$1(3, 15), new ECB$1(13, 16))),\n        new Version$1(17, Int32Array.from([6, 30, 54, 78]), new ECBlocks$1(28, new ECB$1(1, 107), new ECB$1(5, 108)), new ECBlocks$1(28, new ECB$1(10, 46), new ECB$1(1, 47)), new ECBlocks$1(28, new ECB$1(1, 22), new ECB$1(15, 23)), new ECBlocks$1(28, new ECB$1(2, 14), new ECB$1(17, 15))),\n        new Version$1(18, Int32Array.from([6, 30, 56, 82]), new ECBlocks$1(30, new ECB$1(5, 120), new ECB$1(1, 121)), new ECBlocks$1(26, new ECB$1(9, 43), new ECB$1(4, 44)), new ECBlocks$1(28, new ECB$1(17, 22), new ECB$1(1, 23)), new ECBlocks$1(28, new ECB$1(2, 14), new ECB$1(19, 15))),\n        new Version$1(19, Int32Array.from([6, 30, 58, 86]), new ECBlocks$1(28, new ECB$1(3, 113), new ECB$1(4, 114)), new ECBlocks$1(26, new ECB$1(3, 44), new ECB$1(11, 45)), new ECBlocks$1(26, new ECB$1(17, 21), new ECB$1(4, 22)), new ECBlocks$1(26, new ECB$1(9, 13), new ECB$1(16, 14))),\n        new Version$1(20, Int32Array.from([6, 34, 62, 90]), new ECBlocks$1(28, new ECB$1(3, 107), new ECB$1(5, 108)), new ECBlocks$1(26, new ECB$1(3, 41), new ECB$1(13, 42)), new ECBlocks$1(30, new ECB$1(15, 24), new ECB$1(5, 25)), new ECBlocks$1(28, new ECB$1(15, 15), new ECB$1(10, 16))),\n        new Version$1(21, Int32Array.from([6, 28, 50, 72, 94]), new ECBlocks$1(28, new ECB$1(4, 116), new ECB$1(4, 117)), new ECBlocks$1(26, new ECB$1(17, 42)), new ECBlocks$1(28, new ECB$1(17, 22), new ECB$1(6, 23)), new ECBlocks$1(30, new ECB$1(19, 16), new ECB$1(6, 17))),\n        new Version$1(22, Int32Array.from([6, 26, 50, 74, 98]), new ECBlocks$1(28, new ECB$1(2, 111), new ECB$1(7, 112)), new ECBlocks$1(28, new ECB$1(17, 46)), new ECBlocks$1(30, new ECB$1(7, 24), new ECB$1(16, 25)), new ECBlocks$1(24, new ECB$1(34, 13))),\n        new Version$1(23, Int32Array.from([6, 30, 54, 78, 102]), new ECBlocks$1(30, new ECB$1(4, 121), new ECB$1(5, 122)), new ECBlocks$1(28, new ECB$1(4, 47), new ECB$1(14, 48)), new ECBlocks$1(30, new ECB$1(11, 24), new ECB$1(14, 25)), new ECBlocks$1(30, new ECB$1(16, 15), new ECB$1(14, 16))),\n        new Version$1(24, Int32Array.from([6, 28, 54, 80, 106]), new ECBlocks$1(30, new ECB$1(6, 117), new ECB$1(4, 118)), new ECBlocks$1(28, new ECB$1(6, 45), new ECB$1(14, 46)), new ECBlocks$1(30, new ECB$1(11, 24), new ECB$1(16, 25)), new ECBlocks$1(30, new ECB$1(30, 16), new ECB$1(2, 17))),\n        new Version$1(25, Int32Array.from([6, 32, 58, 84, 110]), new ECBlocks$1(26, new ECB$1(8, 106), new ECB$1(4, 107)), new ECBlocks$1(28, new ECB$1(8, 47), new ECB$1(13, 48)), new ECBlocks$1(30, new ECB$1(7, 24), new ECB$1(22, 25)), new ECBlocks$1(30, new ECB$1(22, 15), new ECB$1(13, 16))),\n        new Version$1(26, Int32Array.from([6, 30, 58, 86, 114]), new ECBlocks$1(28, new ECB$1(10, 114), new ECB$1(2, 115)), new ECBlocks$1(28, new ECB$1(19, 46), new ECB$1(4, 47)), new ECBlocks$1(28, new ECB$1(28, 22), new ECB$1(6, 23)), new ECBlocks$1(30, new ECB$1(33, 16), new ECB$1(4, 17))),\n        new Version$1(27, Int32Array.from([6, 34, 62, 90, 118]), new ECBlocks$1(30, new ECB$1(8, 122), new ECB$1(4, 123)), new ECBlocks$1(28, new ECB$1(22, 45), new ECB$1(3, 46)), new ECBlocks$1(30, new ECB$1(8, 23), new ECB$1(26, 24)), new ECBlocks$1(30, new ECB$1(12, 15), new ECB$1(28, 16))),\n        new Version$1(28, Int32Array.from([6, 26, 50, 74, 98, 122]), new ECBlocks$1(30, new ECB$1(3, 117), new ECB$1(10, 118)), new ECBlocks$1(28, new ECB$1(3, 45), new ECB$1(23, 46)), new ECBlocks$1(30, new ECB$1(4, 24), new ECB$1(31, 25)), new ECBlocks$1(30, new ECB$1(11, 15), new ECB$1(31, 16))),\n        new Version$1(29, Int32Array.from([6, 30, 54, 78, 102, 126]), new ECBlocks$1(30, new ECB$1(7, 116), new ECB$1(7, 117)), new ECBlocks$1(28, new ECB$1(21, 45), new ECB$1(7, 46)), new ECBlocks$1(30, new ECB$1(1, 23), new ECB$1(37, 24)), new ECBlocks$1(30, new ECB$1(19, 15), new ECB$1(26, 16))),\n        new Version$1(30, Int32Array.from([6, 26, 52, 78, 104, 130]), new ECBlocks$1(30, new ECB$1(5, 115), new ECB$1(10, 116)), new ECBlocks$1(28, new ECB$1(19, 47), new ECB$1(10, 48)), new ECBlocks$1(30, new ECB$1(15, 24), new ECB$1(25, 25)), new ECBlocks$1(30, new ECB$1(23, 15), new ECB$1(25, 16))),\n        new Version$1(31, Int32Array.from([6, 30, 56, 82, 108, 134]), new ECBlocks$1(30, new ECB$1(13, 115), new ECB$1(3, 116)), new ECBlocks$1(28, new ECB$1(2, 46), new ECB$1(29, 47)), new ECBlocks$1(30, new ECB$1(42, 24), new ECB$1(1, 25)), new ECBlocks$1(30, new ECB$1(23, 15), new ECB$1(28, 16))),\n        new Version$1(32, Int32Array.from([6, 34, 60, 86, 112, 138]), new ECBlocks$1(30, new ECB$1(17, 115)), new ECBlocks$1(28, new ECB$1(10, 46), new ECB$1(23, 47)), new ECBlocks$1(30, new ECB$1(10, 24), new ECB$1(35, 25)), new ECBlocks$1(30, new ECB$1(19, 15), new ECB$1(35, 16))),\n        new Version$1(33, Int32Array.from([6, 30, 58, 86, 114, 142]), new ECBlocks$1(30, new ECB$1(17, 115), new ECB$1(1, 116)), new ECBlocks$1(28, new ECB$1(14, 46), new ECB$1(21, 47)), new ECBlocks$1(30, new ECB$1(29, 24), new ECB$1(19, 25)), new ECBlocks$1(30, new ECB$1(11, 15), new ECB$1(46, 16))),\n        new Version$1(34, Int32Array.from([6, 34, 62, 90, 118, 146]), new ECBlocks$1(30, new ECB$1(13, 115), new ECB$1(6, 116)), new ECBlocks$1(28, new ECB$1(14, 46), new ECB$1(23, 47)), new ECBlocks$1(30, new ECB$1(44, 24), new ECB$1(7, 25)), new ECBlocks$1(30, new ECB$1(59, 16), new ECB$1(1, 17))),\n        new Version$1(35, Int32Array.from([6, 30, 54, 78, 102, 126, 150]), new ECBlocks$1(30, new ECB$1(12, 121), new ECB$1(7, 122)), new ECBlocks$1(28, new ECB$1(12, 47), new ECB$1(26, 48)), new ECBlocks$1(30, new ECB$1(39, 24), new ECB$1(14, 25)), new ECBlocks$1(30, new ECB$1(22, 15), new ECB$1(41, 16))),\n        new Version$1(36, Int32Array.from([6, 24, 50, 76, 102, 128, 154]), new ECBlocks$1(30, new ECB$1(6, 121), new ECB$1(14, 122)), new ECBlocks$1(28, new ECB$1(6, 47), new ECB$1(34, 48)), new ECBlocks$1(30, new ECB$1(46, 24), new ECB$1(10, 25)), new ECBlocks$1(30, new ECB$1(2, 15), new ECB$1(64, 16))),\n        new Version$1(37, Int32Array.from([6, 28, 54, 80, 106, 132, 158]), new ECBlocks$1(30, new ECB$1(17, 122), new ECB$1(4, 123)), new ECBlocks$1(28, new ECB$1(29, 46), new ECB$1(14, 47)), new ECBlocks$1(30, new ECB$1(49, 24), new ECB$1(10, 25)), new ECBlocks$1(30, new ECB$1(24, 15), new ECB$1(46, 16))),\n        new Version$1(38, Int32Array.from([6, 32, 58, 84, 110, 136, 162]), new ECBlocks$1(30, new ECB$1(4, 122), new ECB$1(18, 123)), new ECBlocks$1(28, new ECB$1(13, 46), new ECB$1(32, 47)), new ECBlocks$1(30, new ECB$1(48, 24), new ECB$1(14, 25)), new ECBlocks$1(30, new ECB$1(42, 15), new ECB$1(32, 16))),\n        new Version$1(39, Int32Array.from([6, 26, 54, 82, 110, 138, 166]), new ECBlocks$1(30, new ECB$1(20, 117), new ECB$1(4, 118)), new ECBlocks$1(28, new ECB$1(40, 47), new ECB$1(7, 48)), new ECBlocks$1(30, new ECB$1(43, 24), new ECB$1(22, 25)), new ECBlocks$1(30, new ECB$1(10, 15), new ECB$1(67, 16))),\n        new Version$1(40, Int32Array.from([6, 30, 58, 86, 114, 142, 170]), new ECBlocks$1(30, new ECB$1(19, 118), new ECB$1(6, 119)), new ECBlocks$1(28, new ECB$1(18, 47), new ECB$1(31, 48)), new ECBlocks$1(30, new ECB$1(34, 24), new ECB$1(34, 25)), new ECBlocks$1(30, new ECB$1(20, 15), new ECB$1(61, 16)))\n    ];\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var DataMaskValues;\n    (function (DataMaskValues) {\n        DataMaskValues[DataMaskValues[\"DATA_MASK_000\"] = 0] = \"DATA_MASK_000\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_001\"] = 1] = \"DATA_MASK_001\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_010\"] = 2] = \"DATA_MASK_010\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_011\"] = 3] = \"DATA_MASK_011\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_100\"] = 4] = \"DATA_MASK_100\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_101\"] = 5] = \"DATA_MASK_101\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_110\"] = 6] = \"DATA_MASK_110\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_111\"] = 7] = \"DATA_MASK_111\";\n    })(DataMaskValues || (DataMaskValues = {}));\n    /**\n     * <p>Encapsulates data masks for the data bits in a QR code, per ISO 18004:2006 6.8. Implementations\n     * of this class can un-mask a raw BitMatrix. For simplicity, they will unmask the entire BitMatrix,\n     * including areas used for finder patterns, timing patterns, etc. These areas should be unused\n     * after the point they are unmasked anyway.</p>\n     *\n     * <p>Note that the diagram in section 6.8.1 is misleading since it indicates that i is column position\n     * and j is row position. In fact, as the text says, i is row position and j is column position.</p>\n     *\n     * @author Sean Owen\n     */\n    class DataMask {\n        // See ISO 18004:2006 6.8.1\n        constructor(value, isMasked) {\n            this.value = value;\n            this.isMasked = isMasked;\n        }\n        // End of enum constants.\n        /**\n         * <p>Implementations of this method reverse the data masking process applied to a QR Code and\n         * make its bits ready to read.</p>\n         *\n         * @param bits representation of QR Code bits\n         * @param dimension dimension of QR Code, represented by bits, being unmasked\n         */\n        unmaskBitMatrix(bits, dimension /*int*/) {\n            for (let i = 0; i < dimension; i++) {\n                for (let j = 0; j < dimension; j++) {\n                    if (this.isMasked(i, j)) {\n                        bits.flip(j, i);\n                    }\n                }\n            }\n        }\n    }\n    DataMask.values = new Map([\n        /**\n         * 000: mask bits for which (x + y) mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_000, new DataMask(DataMaskValues.DATA_MASK_000, (i /*int*/, j /*int*/) => { return ((i + j) & 0x01) === 0; })],\n        /**\n         * 001: mask bits for which x mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_001, new DataMask(DataMaskValues.DATA_MASK_001, (i /*int*/, j /*int*/) => { return (i & 0x01) === 0; })],\n        /**\n         * 010: mask bits for which y mod 3 == 0\n         */\n        [DataMaskValues.DATA_MASK_010, new DataMask(DataMaskValues.DATA_MASK_010, (i /*int*/, j /*int*/) => { return j % 3 === 0; })],\n        /**\n         * 011: mask bits for which (x + y) mod 3 == 0\n         */\n        [DataMaskValues.DATA_MASK_011, new DataMask(DataMaskValues.DATA_MASK_011, (i /*int*/, j /*int*/) => { return (i + j) % 3 === 0; })],\n        /**\n         * 100: mask bits for which (x/2 + y/3) mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_100, new DataMask(DataMaskValues.DATA_MASK_100, (i /*int*/, j /*int*/) => { return ((Math.floor(i / 2) + Math.floor(j / 3)) & 0x01) === 0; })],\n        /**\n         * 101: mask bits for which xy mod 2 + xy mod 3 == 0\n         * equivalently, such that xy mod 6 == 0\n         */\n        [DataMaskValues.DATA_MASK_101, new DataMask(DataMaskValues.DATA_MASK_101, (i /*int*/, j /*int*/) => { return (i * j) % 6 === 0; })],\n        /**\n         * 110: mask bits for which (xy mod 2 + xy mod 3) mod 2 == 0\n         * equivalently, such that xy mod 6 < 3\n         */\n        [DataMaskValues.DATA_MASK_110, new DataMask(DataMaskValues.DATA_MASK_110, (i /*int*/, j /*int*/) => { return ((i * j) % 6) < 3; })],\n        /**\n         * 111: mask bits for which ((x+y)mod 2 + xy mod 3) mod 2 == 0\n         * equivalently, such that (x + y + xy mod 3) mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_111, new DataMask(DataMaskValues.DATA_MASK_111, (i /*int*/, j /*int*/) => { return ((i + j + ((i * j) % 3)) & 0x01) === 0; })],\n    ]);\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Sean Owen\n     */\n    class BitMatrixParser$1 {\n        /**\n         * @param bitMatrix {@link BitMatrix} to parse\n         * @throws FormatException if dimension is not >= 21 and 1 mod 4\n         */\n        constructor(bitMatrix) {\n            const dimension = bitMatrix.getHeight();\n            if (dimension < 21 || (dimension & 0x03) !== 1) {\n                throw new FormatException();\n            }\n            this.bitMatrix = bitMatrix;\n        }\n        /**\n         * <p>Reads format information from one of its two locations within the QR Code.</p>\n         *\n         * @return {@link FormatInformation} encapsulating the QR Code's format info\n         * @throws FormatException if both format information locations cannot be parsed as\n         * the valid encoding of format information\n         */\n        readFormatInformation() {\n            if (this.parsedFormatInfo !== null && this.parsedFormatInfo !== undefined) {\n                return this.parsedFormatInfo;\n            }\n            // Read top-left format info bits\n            let formatInfoBits1 = 0;\n            for (let i = 0; i < 6; i++) {\n                formatInfoBits1 = this.copyBit(i, 8, formatInfoBits1);\n            }\n            // .. and skip a bit in the timing pattern ...\n            formatInfoBits1 = this.copyBit(7, 8, formatInfoBits1);\n            formatInfoBits1 = this.copyBit(8, 8, formatInfoBits1);\n            formatInfoBits1 = this.copyBit(8, 7, formatInfoBits1);\n            // .. and skip a bit in the timing pattern ...\n            for (let j = 5; j >= 0; j--) {\n                formatInfoBits1 = this.copyBit(8, j, formatInfoBits1);\n            }\n            // Read the top-right/bottom-left pattern too\n            const dimension = this.bitMatrix.getHeight();\n            let formatInfoBits2 = 0;\n            const jMin = dimension - 7;\n            for (let j = dimension - 1; j >= jMin; j--) {\n                formatInfoBits2 = this.copyBit(8, j, formatInfoBits2);\n            }\n            for (let i = dimension - 8; i < dimension; i++) {\n                formatInfoBits2 = this.copyBit(i, 8, formatInfoBits2);\n            }\n            this.parsedFormatInfo = FormatInformation.decodeFormatInformation(formatInfoBits1, formatInfoBits2);\n            if (this.parsedFormatInfo !== null) {\n                return this.parsedFormatInfo;\n            }\n            throw new FormatException();\n        }\n        /**\n         * <p>Reads version information from one of its two locations within the QR Code.</p>\n         *\n         * @return {@link Version} encapsulating the QR Code's version\n         * @throws FormatException if both version information locations cannot be parsed as\n         * the valid encoding of version information\n         */\n        readVersion() {\n            if (this.parsedVersion !== null && this.parsedVersion !== undefined) {\n                return this.parsedVersion;\n            }\n            const dimension = this.bitMatrix.getHeight();\n            const provisionalVersion = Math.floor((dimension - 17) / 4);\n            if (provisionalVersion <= 6) {\n                return Version$1.getVersionForNumber(provisionalVersion);\n            }\n            // Read top-right version info: 3 wide by 6 tall\n            let versionBits = 0;\n            const ijMin = dimension - 11;\n            for (let j = 5; j >= 0; j--) {\n                for (let i = dimension - 9; i >= ijMin; i--) {\n                    versionBits = this.copyBit(i, j, versionBits);\n                }\n            }\n            let theParsedVersion = Version$1.decodeVersionInformation(versionBits);\n            if (theParsedVersion !== null && theParsedVersion.getDimensionForVersion() === dimension) {\n                this.parsedVersion = theParsedVersion;\n                return theParsedVersion;\n            }\n            // Hmm, failed. Try bottom left: 6 wide by 3 tall\n            versionBits = 0;\n            for (let i = 5; i >= 0; i--) {\n                for (let j = dimension - 9; j >= ijMin; j--) {\n                    versionBits = this.copyBit(i, j, versionBits);\n                }\n            }\n            theParsedVersion = Version$1.decodeVersionInformation(versionBits);\n            if (theParsedVersion !== null && theParsedVersion.getDimensionForVersion() === dimension) {\n                this.parsedVersion = theParsedVersion;\n                return theParsedVersion;\n            }\n            throw new FormatException();\n        }\n        copyBit(i /*int*/, j /*int*/, versionBits /*int*/) {\n            const bit = this.isMirror ? this.bitMatrix.get(j, i) : this.bitMatrix.get(i, j);\n            return bit ? (versionBits << 1) | 0x1 : versionBits << 1;\n        }\n        /**\n         * <p>Reads the bits in the {@link BitMatrix} representing the finder pattern in the\n         * correct order in order to reconstruct the codewords bytes contained within the\n         * QR Code.</p>\n         *\n         * @return bytes encoded within the QR Code\n         * @throws FormatException if the exact number of bytes expected is not read\n         */\n        readCodewords() {\n            const formatInfo = this.readFormatInformation();\n            const version = this.readVersion();\n            // Get the data mask for the format used in this QR Code. This will exclude\n            // some bits from reading as we wind through the bit matrix.\n            const dataMask = DataMask.values.get(formatInfo.getDataMask());\n            const dimension = this.bitMatrix.getHeight();\n            dataMask.unmaskBitMatrix(this.bitMatrix, dimension);\n            const functionPattern = version.buildFunctionPattern();\n            let readingUp = true;\n            const result = new Uint8Array(version.getTotalCodewords());\n            let resultOffset = 0;\n            let currentByte = 0;\n            let bitsRead = 0;\n            // Read columns in pairs, from right to left\n            for (let j = dimension - 1; j > 0; j -= 2) {\n                if (j === 6) {\n                    // Skip whole column with vertical alignment pattern\n                    // saves time and makes the other code proceed more cleanly\n                    j--;\n                }\n                // Read alternatingly from bottom to top then top to bottom\n                for (let count = 0; count < dimension; count++) {\n                    const i = readingUp ? dimension - 1 - count : count;\n                    for (let col = 0; col < 2; col++) {\n                        // Ignore bits covered by the function pattern\n                        if (!functionPattern.get(j - col, i)) {\n                            // Read a bit\n                            bitsRead++;\n                            currentByte <<= 1;\n                            if (this.bitMatrix.get(j - col, i)) {\n                                currentByte |= 1;\n                            }\n                            // If we've made a whole byte, save it off\n                            if (bitsRead === 8) {\n                                result[resultOffset++] = /*(byte) */ currentByte;\n                                bitsRead = 0;\n                                currentByte = 0;\n                            }\n                        }\n                    }\n                }\n                readingUp = !readingUp; // readingUp ^= true; // readingUp = !readingUp; // switch directions\n            }\n            if (resultOffset !== version.getTotalCodewords()) {\n                throw new FormatException();\n            }\n            return result;\n        }\n        /**\n         * Revert the mask removal done while reading the code words. The bit matrix should revert to its original state.\n         */\n        remask() {\n            if (this.parsedFormatInfo === null) {\n                return; // We have no format information, and have no data mask\n            }\n            const dataMask = DataMask.values[this.parsedFormatInfo.getDataMask()];\n            const dimension = this.bitMatrix.getHeight();\n            dataMask.unmaskBitMatrix(this.bitMatrix, dimension);\n        }\n        /**\n         * Prepare the parser for a mirrored operation.\n         * This flag has effect only on the {@link #readFormatInformation()} and the\n         * {@link #readVersion()}. Before proceeding with {@link #readCodewords()} the\n         * {@link #mirror()} method should be called.\n         *\n         * @param mirror Whether to read version and format information mirrored.\n         */\n        setMirror(isMirror) {\n            this.parsedVersion = null;\n            this.parsedFormatInfo = null;\n            this.isMirror = isMirror;\n        }\n        /** Mirror the bit matrix in order to attempt a second reading. */\n        mirror() {\n            const bitMatrix = this.bitMatrix;\n            for (let x = 0, width = bitMatrix.getWidth(); x < width; x++) {\n                for (let y = x + 1, height = bitMatrix.getHeight(); y < height; y++) {\n                    if (bitMatrix.get(x, y) !== bitMatrix.get(y, x)) {\n                        bitMatrix.flip(y, x);\n                        bitMatrix.flip(x, y);\n                    }\n                }\n            }\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a block of data within a QR Code. QR Codes may split their data into\n     * multiple blocks, each of which is a unit of data and error-correction codewords. Each\n     * is represented by an instance of this class.</p>\n     *\n     * @author Sean Owen\n     */\n    class DataBlock$1 {\n        constructor(numDataCodewords /*int*/, codewords) {\n            this.numDataCodewords = numDataCodewords;\n            this.codewords = codewords;\n        }\n        /**\n         * <p>When QR Codes use multiple data blocks, they are actually interleaved.\n         * That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This\n         * method will separate the data into original blocks.</p>\n         *\n         * @param rawCodewords bytes as read directly from the QR Code\n         * @param version version of the QR Code\n         * @param ecLevel error-correction level of the QR Code\n         * @return DataBlocks containing original bytes, \"de-interleaved\" from representation in the\n         *         QR Code\n         */\n        static getDataBlocks(rawCodewords, version, ecLevel) {\n            if (rawCodewords.length !== version.getTotalCodewords()) {\n                throw new IllegalArgumentException();\n            }\n            // Figure out the number and size of data blocks used by this version and\n            // error correction level\n            const ecBlocks = version.getECBlocksForLevel(ecLevel);\n            // First count the total number of data blocks\n            let totalBlocks = 0;\n            const ecBlockArray = ecBlocks.getECBlocks();\n            for (const ecBlock of ecBlockArray) {\n                totalBlocks += ecBlock.getCount();\n            }\n            // Now establish DataBlocks of the appropriate size and number of data codewords\n            const result = new Array(totalBlocks);\n            let numResultBlocks = 0;\n            for (const ecBlock of ecBlockArray) {\n                for (let i = 0; i < ecBlock.getCount(); i++) {\n                    const numDataCodewords = ecBlock.getDataCodewords();\n                    const numBlockCodewords = ecBlocks.getECCodewordsPerBlock() + numDataCodewords;\n                    result[numResultBlocks++] = new DataBlock$1(numDataCodewords, new Uint8Array(numBlockCodewords));\n                }\n            }\n            // All blocks have the same amount of data, except that the last n\n            // (where n may be 0) have 1 more byte. Figure out where these start.\n            const shorterBlocksTotalCodewords = result[0].codewords.length;\n            let longerBlocksStartAt = result.length - 1;\n            // TYPESCRIPTPORT: check length is correct here\n            while (longerBlocksStartAt >= 0) {\n                const numCodewords = result[longerBlocksStartAt].codewords.length;\n                if (numCodewords === shorterBlocksTotalCodewords) {\n                    break;\n                }\n                longerBlocksStartAt--;\n            }\n            longerBlocksStartAt++;\n            const shorterBlocksNumDataCodewords = shorterBlocksTotalCodewords - ecBlocks.getECCodewordsPerBlock();\n            // The last elements of result may be 1 element longer\n            // first fill out as many elements as all of them have\n            let rawCodewordsOffset = 0;\n            for (let i = 0; i < shorterBlocksNumDataCodewords; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    result[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            // Fill out the last data block in the longer ones\n            for (let j = longerBlocksStartAt; j < numResultBlocks; j++) {\n                result[j].codewords[shorterBlocksNumDataCodewords] = rawCodewords[rawCodewordsOffset++];\n            }\n            // Now add in error correction blocks\n            const max = result[0].codewords.length;\n            for (let i = shorterBlocksNumDataCodewords; i < max; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    const iOffset = j < longerBlocksStartAt ? i : i + 1;\n                    result[j].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            return result;\n        }\n        getNumDataCodewords() {\n            return this.numDataCodewords;\n        }\n        getCodewords() {\n            return this.codewords;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var ModeValues;\n    (function (ModeValues) {\n        ModeValues[ModeValues[\"TERMINATOR\"] = 0] = \"TERMINATOR\";\n        ModeValues[ModeValues[\"NUMERIC\"] = 1] = \"NUMERIC\";\n        ModeValues[ModeValues[\"ALPHANUMERIC\"] = 2] = \"ALPHANUMERIC\";\n        ModeValues[ModeValues[\"STRUCTURED_APPEND\"] = 3] = \"STRUCTURED_APPEND\";\n        ModeValues[ModeValues[\"BYTE\"] = 4] = \"BYTE\";\n        ModeValues[ModeValues[\"ECI\"] = 5] = \"ECI\";\n        ModeValues[ModeValues[\"KANJI\"] = 6] = \"KANJI\";\n        ModeValues[ModeValues[\"FNC1_FIRST_POSITION\"] = 7] = \"FNC1_FIRST_POSITION\";\n        ModeValues[ModeValues[\"FNC1_SECOND_POSITION\"] = 8] = \"FNC1_SECOND_POSITION\";\n        /** See GBT 18284-2000; \"Hanzi\" is a transliteration of this mode name. */\n        ModeValues[ModeValues[\"HANZI\"] = 9] = \"HANZI\";\n    })(ModeValues || (ModeValues = {}));\n    /**\n     * <p>See ISO 18004:2006, 6.4.1, Tables 2 and 3. This enum encapsulates the various modes in which\n     * data can be encoded to bits in the QR code standard.</p>\n     *\n     * @author Sean Owen\n     */\n    class Mode$1 {\n        constructor(value, stringValue, characterCountBitsForVersions, bits /*int*/) {\n            this.value = value;\n            this.stringValue = stringValue;\n            this.characterCountBitsForVersions = characterCountBitsForVersions;\n            this.bits = bits;\n            Mode$1.FOR_BITS.set(bits, this);\n            Mode$1.FOR_VALUE.set(value, this);\n        }\n        /**\n         * @param bits four bits encoding a QR Code data mode\n         * @return Mode encoded by these bits\n         * @throws IllegalArgumentException if bits do not correspond to a known mode\n         */\n        static forBits(bits /*int*/) {\n            const mode = Mode$1.FOR_BITS.get(bits);\n            if (undefined === mode) {\n                throw new IllegalArgumentException();\n            }\n            return mode;\n        }\n        /**\n         * @param version version in question\n         * @return number of bits used, in this QR Code symbol {@link Version}, to encode the\n         *         count of characters that will follow encoded in this Mode\n         */\n        getCharacterCountBits(version) {\n            const versionNumber = version.getVersionNumber();\n            let offset;\n            if (versionNumber <= 9) {\n                offset = 0;\n            }\n            else if (versionNumber <= 26) {\n                offset = 1;\n            }\n            else {\n                offset = 2;\n            }\n            return this.characterCountBitsForVersions[offset];\n        }\n        getValue() {\n            return this.value;\n        }\n        getBits() {\n            return this.bits;\n        }\n        equals(o) {\n            if (!(o instanceof Mode$1)) {\n                return false;\n            }\n            const other = o;\n            return this.value === other.value;\n        }\n        toString() {\n            return this.stringValue;\n        }\n    }\n    Mode$1.FOR_BITS = new Map();\n    Mode$1.FOR_VALUE = new Map();\n    Mode$1.TERMINATOR = new Mode$1(ModeValues.TERMINATOR, 'TERMINATOR', Int32Array.from([0, 0, 0]), 0x00); // Not really a mode...\n    Mode$1.NUMERIC = new Mode$1(ModeValues.NUMERIC, 'NUMERIC', Int32Array.from([10, 12, 14]), 0x01);\n    Mode$1.ALPHANUMERIC = new Mode$1(ModeValues.ALPHANUMERIC, 'ALPHANUMERIC', Int32Array.from([9, 11, 13]), 0x02);\n    Mode$1.STRUCTURED_APPEND = new Mode$1(ModeValues.STRUCTURED_APPEND, 'STRUCTURED_APPEND', Int32Array.from([0, 0, 0]), 0x03); // Not supported\n    Mode$1.BYTE = new Mode$1(ModeValues.BYTE, 'BYTE', Int32Array.from([8, 16, 16]), 0x04);\n    Mode$1.ECI = new Mode$1(ModeValues.ECI, 'ECI', Int32Array.from([0, 0, 0]), 0x07); // character counts don't apply\n    Mode$1.KANJI = new Mode$1(ModeValues.KANJI, 'KANJI', Int32Array.from([8, 10, 12]), 0x08);\n    Mode$1.FNC1_FIRST_POSITION = new Mode$1(ModeValues.FNC1_FIRST_POSITION, 'FNC1_FIRST_POSITION', Int32Array.from([0, 0, 0]), 0x05);\n    Mode$1.FNC1_SECOND_POSITION = new Mode$1(ModeValues.FNC1_SECOND_POSITION, 'FNC1_SECOND_POSITION', Int32Array.from([0, 0, 0]), 0x09);\n    /** See GBT 18284-2000; \"Hanzi\" is a transliteration of this mode name. */\n    Mode$1.HANZI = new Mode$1(ModeValues.HANZI, 'HANZI', Int32Array.from([8, 10, 12]), 0x0D);\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.io.UnsupportedEncodingException;*/\n    /*import java.util.ArrayList;*/\n    /*import java.util.Collection;*/\n    /*import java.util.List;*/\n    /*import java.util.Map;*/\n    /**\n     * <p>QR Codes can encode text as bits in one of several modes, and can use multiple modes\n     * in one QR Code. This class decodes the bits back into text.</p>\n     *\n     * <p>See ISO 18004:2006, 6.4.3 - 6.4.7</p>\n     *\n     * @author Sean Owen\n     */\n    class DecodedBitStreamParser$1 {\n        static decode(bytes, version, ecLevel, hints) {\n            const bits = new BitSource(bytes);\n            let result = new StringBuilder();\n            const byteSegments = new Array(); // 1\n            // TYPESCRIPTPORT: I do not use constructor with size 1 as in original Java means capacity and the array length is checked below\n            let symbolSequence = -1;\n            let parityData = -1;\n            try {\n                let currentCharacterSetECI = null;\n                let fc1InEffect = false;\n                let mode;\n                do {\n                    // While still another segment to read...\n                    if (bits.available() < 4) {\n                        // OK, assume we're done. Really, a TERMINATOR mode should have been recorded here\n                        mode = Mode$1.TERMINATOR;\n                    }\n                    else {\n                        const modeBits = bits.readBits(4);\n                        mode = Mode$1.forBits(modeBits); // mode is encoded by 4 bits\n                    }\n                    switch (mode) {\n                        case Mode$1.TERMINATOR:\n                            break;\n                        case Mode$1.FNC1_FIRST_POSITION:\n                        case Mode$1.FNC1_SECOND_POSITION:\n                            // We do little with FNC1 except alter the parsed result a bit according to the spec\n                            fc1InEffect = true;\n                            break;\n                        case Mode$1.STRUCTURED_APPEND:\n                            if (bits.available() < 16) {\n                                throw new FormatException();\n                            }\n                            // sequence number and parity is added later to the result metadata\n                            // Read next 8 bits (symbol sequence #) and 8 bits (data: parity), then continue\n                            symbolSequence = bits.readBits(8);\n                            parityData = bits.readBits(8);\n                            break;\n                        case Mode$1.ECI:\n                            // Count doesn't apply to ECI\n                            const value = DecodedBitStreamParser$1.parseECIValue(bits);\n                            currentCharacterSetECI = CharacterSetECI.getCharacterSetECIByValue(value);\n                            if (currentCharacterSetECI === null) {\n                                throw new FormatException();\n                            }\n                            break;\n                        case Mode$1.HANZI:\n                            // First handle Hanzi mode which does not start with character count\n                            // Chinese mode contains a sub set indicator right after mode indicator\n                            const subset = bits.readBits(4);\n                            const countHanzi = bits.readBits(mode.getCharacterCountBits(version));\n                            if (subset === DecodedBitStreamParser$1.GB2312_SUBSET) {\n                                DecodedBitStreamParser$1.decodeHanziSegment(bits, result, countHanzi);\n                            }\n                            break;\n                        default:\n                            // \"Normal\" QR code modes:\n                            // How many characters will follow, encoded in this mode?\n                            const count = bits.readBits(mode.getCharacterCountBits(version));\n                            switch (mode) {\n                                case Mode$1.NUMERIC:\n                                    DecodedBitStreamParser$1.decodeNumericSegment(bits, result, count);\n                                    break;\n                                case Mode$1.ALPHANUMERIC:\n                                    DecodedBitStreamParser$1.decodeAlphanumericSegment(bits, result, count, fc1InEffect);\n                                    break;\n                                case Mode$1.BYTE:\n                                    DecodedBitStreamParser$1.decodeByteSegment(bits, result, count, currentCharacterSetECI, byteSegments, hints);\n                                    break;\n                                case Mode$1.KANJI:\n                                    DecodedBitStreamParser$1.decodeKanjiSegment(bits, result, count);\n                                    break;\n                                default:\n                                    throw new FormatException();\n                            }\n                            break;\n                    }\n                } while (mode !== Mode$1.TERMINATOR);\n            }\n            catch (iae /*: IllegalArgumentException*/) {\n                // from readBits() calls\n                throw new FormatException();\n            }\n            return new DecoderResult(bytes, result.toString(), byteSegments.length === 0 ? null : byteSegments, ecLevel === null ? null : ecLevel.toString(), symbolSequence, parityData);\n        }\n        /**\n         * See specification GBT 18284-2000\n         */\n        static decodeHanziSegment(bits, result, count /*int*/) {\n            // Don't crash trying to read more bits than we have available.\n            if (count * 13 > bits.available()) {\n                throw new FormatException();\n            }\n            // Each character will require 2 bytes. Read the characters as 2-byte pairs\n            // and decode as GB2312 afterwards\n            const buffer = new Uint8Array(2 * count);\n            let offset = 0;\n            while (count > 0) {\n                // Each 13 bits encodes a 2-byte character\n                const twoBytes = bits.readBits(13);\n                let assembledTwoBytes = (((twoBytes / 0x060) << 8) & 0xFFFFFFFF) | (twoBytes % 0x060);\n                if (assembledTwoBytes < 0x003BF) {\n                    // In the 0xA1A1 to 0xAAFE range\n                    assembledTwoBytes += 0x0A1A1;\n                }\n                else {\n                    // In the 0xB0A1 to 0xFAFE range\n                    assembledTwoBytes += 0x0A6A1;\n                }\n                buffer[offset] = /*(byte) */ ((assembledTwoBytes >> 8) & 0xFF);\n                buffer[offset + 1] = /*(byte) */ (assembledTwoBytes & 0xFF);\n                offset += 2;\n                count--;\n            }\n            try {\n                result.append(StringEncoding.decode(buffer, StringUtils.GB2312));\n                // TYPESCRIPTPORT: TODO: implement GB2312 decode. StringView from MDN could be a starting point\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                throw new FormatException(ignored);\n            }\n        }\n        static decodeKanjiSegment(bits, result, count /*int*/) {\n            // Don't crash trying to read more bits than we have available.\n            if (count * 13 > bits.available()) {\n                throw new FormatException();\n            }\n            // Each character will require 2 bytes. Read the characters as 2-byte pairs\n            // and decode as Shift_JIS afterwards\n            const buffer = new Uint8Array(2 * count);\n            let offset = 0;\n            while (count > 0) {\n                // Each 13 bits encodes a 2-byte character\n                const twoBytes = bits.readBits(13);\n                let assembledTwoBytes = (((twoBytes / 0x0C0) << 8) & 0xFFFFFFFF) | (twoBytes % 0x0C0);\n                if (assembledTwoBytes < 0x01F00) {\n                    // In the 0x8140 to 0x9FFC range\n                    assembledTwoBytes += 0x08140;\n                }\n                else {\n                    // In the 0xE040 to 0xEBBF range\n                    assembledTwoBytes += 0x0C140;\n                }\n                buffer[offset] = /*(byte) */ (assembledTwoBytes >> 8);\n                buffer[offset + 1] = /*(byte) */ assembledTwoBytes;\n                offset += 2;\n                count--;\n            }\n            // Shift_JIS may not be supported in some environments:\n            try {\n                result.append(StringEncoding.decode(buffer, StringUtils.SHIFT_JIS));\n                // TYPESCRIPTPORT: TODO: implement SHIFT_JIS decode. StringView from MDN could be a starting point\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                throw new FormatException(ignored);\n            }\n        }\n        static decodeByteSegment(bits, result, count /*int*/, currentCharacterSetECI, byteSegments, hints) {\n            // Don't crash trying to read more bits than we have available.\n            if (8 * count > bits.available()) {\n                throw new FormatException();\n            }\n            const readBytes = new Uint8Array(count);\n            for (let i = 0; i < count; i++) {\n                readBytes[i] = /*(byte) */ bits.readBits(8);\n            }\n            let encoding;\n            if (currentCharacterSetECI === null) {\n                // The spec isn't clear on this mode; see\n                // section 6.4.5: t does not say which encoding to assuming\n                // upon decoding. I have seen ISO-8859-1 used as well as\n                // Shift_JIS -- without anything like an ECI designator to\n                // give a hint.\n                encoding = StringUtils.guessEncoding(readBytes, hints);\n            }\n            else {\n                encoding = currentCharacterSetECI.getName();\n            }\n            try {\n                result.append(StringEncoding.decode(readBytes, encoding));\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                throw new FormatException(ignored);\n            }\n            byteSegments.push(readBytes);\n        }\n        static toAlphaNumericChar(value /*int*/) {\n            if (value >= DecodedBitStreamParser$1.ALPHANUMERIC_CHARS.length) {\n                throw new FormatException();\n            }\n            return DecodedBitStreamParser$1.ALPHANUMERIC_CHARS[value];\n        }\n        static decodeAlphanumericSegment(bits, result, count /*int*/, fc1InEffect) {\n            // Read two characters at a time\n            const start = result.length();\n            while (count > 1) {\n                if (bits.available() < 11) {\n                    throw new FormatException();\n                }\n                const nextTwoCharsBits = bits.readBits(11);\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(nextTwoCharsBits / 45)));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(nextTwoCharsBits % 45));\n                count -= 2;\n            }\n            if (count === 1) {\n                // special case: one character left\n                if (bits.available() < 6) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(bits.readBits(6)));\n            }\n            // See section 6.4.8.1, 6.4.8.2\n            if (fc1InEffect) {\n                // We need to massage the result a bit if in an FNC1 mode:\n                for (let i = start; i < result.length(); i++) {\n                    if (result.charAt(i) === '%') {\n                        if (i < result.length() - 1 && result.charAt(i + 1) === '%') {\n                            // %% is rendered as %\n                            result.deleteCharAt(i + 1);\n                        }\n                        else {\n                            // In alpha mode, % should be converted to FNC1 separator 0x1D\n                            result.setCharAt(i, String.fromCharCode(0x1D));\n                        }\n                    }\n                }\n            }\n        }\n        static decodeNumericSegment(bits, result, count /*int*/) {\n            // Read three digits at a time\n            while (count >= 3) {\n                // Each 10 bits encodes three digits\n                if (bits.available() < 10) {\n                    throw new FormatException();\n                }\n                const threeDigitsBits = bits.readBits(10);\n                if (threeDigitsBits >= 1000) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(threeDigitsBits / 100)));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(threeDigitsBits / 10) % 10));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(threeDigitsBits % 10));\n                count -= 3;\n            }\n            if (count === 2) {\n                // Two digits left over to read, encoded in 7 bits\n                if (bits.available() < 7) {\n                    throw new FormatException();\n                }\n                const twoDigitsBits = bits.readBits(7);\n                if (twoDigitsBits >= 100) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(twoDigitsBits / 10)));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(twoDigitsBits % 10));\n            }\n            else if (count === 1) {\n                // One digit left over to read\n                if (bits.available() < 4) {\n                    throw new FormatException();\n                }\n                const digitBits = bits.readBits(4);\n                if (digitBits >= 10) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(digitBits));\n            }\n        }\n        static parseECIValue(bits) {\n            const firstByte = bits.readBits(8);\n            if ((firstByte & 0x80) === 0) {\n                // just one byte\n                return firstByte & 0x7F;\n            }\n            if ((firstByte & 0xC0) === 0x80) {\n                // two bytes\n                const secondByte = bits.readBits(8);\n                return (((firstByte & 0x3F) << 8) & 0xFFFFFFFF) | secondByte;\n            }\n            if ((firstByte & 0xE0) === 0xC0) {\n                // three bytes\n                const secondThirdBytes = bits.readBits(16);\n                return (((firstByte & 0x1F) << 16) & 0xFFFFFFFF) | secondThirdBytes;\n            }\n            throw new FormatException();\n        }\n    }\n    /**\n     * See ISO 18004:2006, 6.4.4 Table 5\n     */\n    DecodedBitStreamParser$1.ALPHANUMERIC_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';\n    DecodedBitStreamParser$1.GB2312_SUBSET = 1;\n    // function Uint8ArrayToString(a: Uint8Array): string {\n    //     const CHUNK_SZ = 0x8000;\n    //     const c = new StringBuilder();\n    //     for (let i = 0, length = a.length; i < length; i += CHUNK_SZ) {\n    //         c.append(String.fromCharCode.apply(null, a.subarray(i, i + CHUNK_SZ)));\n    //     }\n    //     return c.toString();\n    // }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Meta-data container for QR Code decoding. Instances of this class may be used to convey information back to the\n     * decoding caller. Callers are expected to process this.\n     *\n     * @see com.google.zxing.common.DecoderResult#getOther()\n     */\n    class QRCodeDecoderMetaData {\n        constructor(mirrored) {\n            this.mirrored = mirrored;\n        }\n        /**\n         * @return true if the QR Code was mirrored.\n         */\n        isMirrored() {\n            return this.mirrored;\n        }\n        /**\n         * Apply the result points' order correction due to mirroring.\n         *\n         * @param points Array of points to apply mirror correction to.\n         */\n        applyMirroredCorrection(points) {\n            if (!this.mirrored || points === null || points.length < 3) {\n                return;\n            }\n            const bottomLeft = points[0];\n            points[0] = points[2];\n            points[2] = bottomLeft;\n            // No need to 'fix' top-left and alignment pattern.\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.Map;*/\n    /**\n     * <p>The main class which implements QR Code decoding -- as opposed to locating and extracting\n     * the QR Code from an image.</p>\n     *\n     * @author Sean Owen\n     */\n    class Decoder$2 {\n        constructor() {\n            this.rsDecoder = new ReedSolomonDecoder(GenericGF.QR_CODE_FIELD_256);\n        }\n        // public decode(image: boolean[][]): DecoderResult /*throws ChecksumException, FormatException*/ {\n        //   return decode(image, null)\n        // }\n        /**\n         * <p>Convenience method that can decode a QR Code represented as a 2D array of booleans.\n         * \"true\" is taken to mean a black module.</p>\n         *\n         * @param image booleans representing white/black QR Code modules\n         * @param hints decoding hints that should be used to influence decoding\n         * @return text and bytes encoded within the QR Code\n         * @throws FormatException if the QR Code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        decodeBooleanArray(image, hints) {\n            return this.decodeBitMatrix(BitMatrix.parseFromBooleanArray(image), hints);\n        }\n        // public decodeBitMatrix(bits: BitMatrix): DecoderResult /*throws ChecksumException, FormatException*/ {\n        //   return decode(bits, null)\n        // }\n        /**\n         * <p>Decodes a QR Code represented as a {@link BitMatrix}. A 1 or \"true\" is taken to mean a black module.</p>\n         *\n         * @param bits booleans representing white/black QR Code modules\n         * @param hints decoding hints that should be used to influence decoding\n         * @return text and bytes encoded within the QR Code\n         * @throws FormatException if the QR Code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        decodeBitMatrix(bits, hints) {\n            // Construct a parser and read version, error-correction level\n            const parser = new BitMatrixParser$1(bits);\n            let ex = null;\n            try {\n                return this.decodeBitMatrixParser(parser, hints);\n            }\n            catch (e /*: FormatException, ChecksumException*/) {\n                ex = e;\n            }\n            try {\n                // Revert the bit matrix\n                parser.remask();\n                // Will be attempting a mirrored reading of the version and format info.\n                parser.setMirror(true);\n                // Preemptively read the version.\n                parser.readVersion();\n                // Preemptively read the format information.\n                parser.readFormatInformation();\n                /*\n                 * Since we're here, this means we have successfully detected some kind\n                 * of version and format information when mirrored. This is a good sign,\n                 * that the QR code may be mirrored, and we should try once more with a\n                 * mirrored content.\n                 */\n                // Prepare for a mirrored reading.\n                parser.mirror();\n                const result = this.decodeBitMatrixParser(parser, hints);\n                // Success! Notify the caller that the code was mirrored.\n                result.setOther(new QRCodeDecoderMetaData(true));\n                return result;\n            }\n            catch (e /*FormatException | ChecksumException*/) {\n                // Throw the exception from the original reading\n                if (ex !== null) {\n                    throw ex;\n                }\n                throw e;\n            }\n        }\n        decodeBitMatrixParser(parser, hints) {\n            const version = parser.readVersion();\n            const ecLevel = parser.readFormatInformation().getErrorCorrectionLevel();\n            // Read codewords\n            const codewords = parser.readCodewords();\n            // Separate into data blocks\n            const dataBlocks = DataBlock$1.getDataBlocks(codewords, version, ecLevel);\n            // Count total number of data bytes\n            let totalBytes = 0;\n            for (const dataBlock of dataBlocks) {\n                totalBytes += dataBlock.getNumDataCodewords();\n            }\n            const resultBytes = new Uint8Array(totalBytes);\n            let resultOffset = 0;\n            // Error-correct and copy data blocks together into a stream of bytes\n            for (const dataBlock of dataBlocks) {\n                const codewordBytes = dataBlock.getCodewords();\n                const numDataCodewords = dataBlock.getNumDataCodewords();\n                this.correctErrors(codewordBytes, numDataCodewords);\n                for (let i = 0; i < numDataCodewords; i++) {\n                    resultBytes[resultOffset++] = codewordBytes[i];\n                }\n            }\n            // Decode the contents of that stream of bytes\n            return DecodedBitStreamParser$1.decode(resultBytes, version, ecLevel, hints);\n        }\n        /**\n         * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\n         * correct the errors in-place using Reed-Solomon error correction.</p>\n         *\n         * @param codewordBytes data and error correction codewords\n         * @param numDataCodewords number of codewords that are data bytes\n         * @throws ChecksumException if error correction fails\n         */\n        correctErrors(codewordBytes, numDataCodewords /*int*/) {\n            // const numCodewords = codewordBytes.length;\n            // First read into an array of ints\n            const codewordsInts = new Int32Array(codewordBytes);\n            // TYPESCRIPTPORT: not realy necessary to transform to ints? could redesign everything to work with unsigned bytes?\n            // const codewordsInts = new Int32Array(numCodewords)\n            // for (let i = 0; i < numCodewords; i++) {\n            //   codewordsInts[i] = codewordBytes[i] & 0xFF\n            // }\n            try {\n                this.rsDecoder.decode(codewordsInts, codewordBytes.length - numDataCodewords);\n            }\n            catch (ignored /*: ReedSolomonException*/) {\n                throw new ChecksumException();\n            }\n            // Copy back into array of bytes -- only need to worry about the bytes that were data\n            // We don't care about errors in the error-correction codewords\n            for (let i = 0; i < numDataCodewords; i++) {\n                codewordBytes[i] = /*(byte) */ codewordsInts[i];\n            }\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates an alignment pattern, which are the smaller square patterns found in\n     * all but the simplest QR Codes.</p>\n     *\n     * @author Sean Owen\n     */\n    class AlignmentPattern extends ResultPoint {\n        constructor(posX /*float*/, posY /*float*/, estimatedModuleSize /*float*/) {\n            super(posX, posY);\n            this.estimatedModuleSize = estimatedModuleSize;\n        }\n        /**\n         * <p>Determines if this alignment pattern \"about equals\" an alignment pattern at the stated\n         * position and size -- meaning, it is at nearly the same center with nearly the same size.</p>\n         */\n        aboutEquals(moduleSize /*float*/, i /*float*/, j /*float*/) {\n            if (Math.abs(i - this.getY()) <= moduleSize && Math.abs(j - this.getX()) <= moduleSize) {\n                const moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n                return moduleSizeDiff <= 1.0 || moduleSizeDiff <= this.estimatedModuleSize;\n            }\n            return false;\n        }\n        /**\n         * Combines this object's current estimate of a finder pattern position and module size\n         * with a new estimate. It returns a new {@code FinderPattern} containing an average of the two.\n         */\n        combineEstimate(i /*float*/, j /*float*/, newModuleSize /*float*/) {\n            const combinedX = (this.getX() + j) / 2.0;\n            const combinedY = (this.getY() + i) / 2.0;\n            const combinedModuleSize = (this.estimatedModuleSize + newModuleSize) / 2.0;\n            return new AlignmentPattern(combinedX, combinedY, combinedModuleSize);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.ArrayList;*/\n    /*import java.util.List;*/\n    /**\n     * <p>This class attempts to find alignment patterns in a QR Code. Alignment patterns look like finder\n     * patterns but are smaller and appear at regular intervals throughout the image.</p>\n     *\n     * <p>At the moment this only looks for the bottom-right alignment pattern.</p>\n     *\n     * <p>This is mostly a simplified copy of {@link FinderPatternFinder}. It is copied,\n     * pasted and stripped down here for maximum performance but does unfortunately duplicate\n     * some code.</p>\n     *\n     * <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.</p>\n     *\n     * @author Sean Owen\n     */\n    class AlignmentPatternFinder {\n        /**\n         * <p>Creates a finder that will look in a portion of the whole image.</p>\n         *\n         * @param image image to search\n         * @param startX left column from which to start searching\n         * @param startY top row from which to start searching\n         * @param width width of region to search\n         * @param height height of region to search\n         * @param moduleSize estimated module size so far\n         */\n        constructor(image, startX /*int*/, startY /*int*/, width /*int*/, height /*int*/, moduleSize /*float*/, resultPointCallback) {\n            this.image = image;\n            this.startX = startX;\n            this.startY = startY;\n            this.width = width;\n            this.height = height;\n            this.moduleSize = moduleSize;\n            this.resultPointCallback = resultPointCallback;\n            this.possibleCenters = []; // new Array<any>(5))\n            // TYPESCRIPTPORT: array initialization without size as the length is checked below\n            this.crossCheckStateCount = new Int32Array(3);\n        }\n        /**\n         * <p>This method attempts to find the bottom-right alignment pattern in the image. It is a bit messy since\n         * it's pretty performance-critical and so is written to be fast foremost.</p>\n         *\n         * @return {@link AlignmentPattern} if found\n         * @throws NotFoundException if not found\n         */\n        find() {\n            const startX = this.startX;\n            const height = this.height;\n            const width = this.width;\n            const maxJ = startX + width;\n            const middleI = this.startY + (height / 2);\n            // We are looking for black/white/black modules in 1:1:1 ratio\n            // this tracks the number of black/white/black modules seen so far\n            const stateCount = new Int32Array(3);\n            const image = this.image;\n            for (let iGen = 0; iGen < height; iGen++) {\n                // Search from middle outwards\n                const i = middleI + ((iGen & 0x01) === 0 ? Math.floor((iGen + 1) / 2) : -Math.floor((iGen + 1) / 2));\n                stateCount[0] = 0;\n                stateCount[1] = 0;\n                stateCount[2] = 0;\n                let j = startX;\n                // Burn off leading white pixels before anything else; if we start in the middle of\n                // a white run, it doesn't make sense to count its length, since we don't know if the\n                // white run continued to the left of the start point\n                while (j < maxJ && !image.get(j, i)) {\n                    j++;\n                }\n                let currentState = 0;\n                while (j < maxJ) {\n                    if (image.get(j, i)) {\n                        // Black pixel\n                        if (currentState === 1) { // Counting black pixels\n                            stateCount[1]++;\n                        }\n                        else { // Counting white pixels\n                            if (currentState === 2) { // A winner?\n                                if (this.foundPatternCross(stateCount)) { // Yes\n                                    const confirmed = this.handlePossibleCenter(stateCount, i, j);\n                                    if (confirmed !== null) {\n                                        return confirmed;\n                                    }\n                                }\n                                stateCount[0] = stateCount[2];\n                                stateCount[1] = 1;\n                                stateCount[2] = 0;\n                                currentState = 1;\n                            }\n                            else {\n                                stateCount[++currentState]++;\n                            }\n                        }\n                    }\n                    else { // White pixel\n                        if (currentState === 1) { // Counting black pixels\n                            currentState++;\n                        }\n                        stateCount[currentState]++;\n                    }\n                    j++;\n                }\n                if (this.foundPatternCross(stateCount)) {\n                    const confirmed = this.handlePossibleCenter(stateCount, i, maxJ);\n                    if (confirmed !== null) {\n                        return confirmed;\n                    }\n                }\n            }\n            // Hmm, nothing we saw was observed and confirmed twice. If we had\n            // any guess at all, return it.\n            if (this.possibleCenters.length !== 0) {\n                return this.possibleCenters[0];\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * Given a count of black/white/black pixels just seen and an end position,\n         * figures the location of the center of this black/white/black run.\n         */\n        static centerFromEnd(stateCount, end /*int*/) {\n            return (end - stateCount[2]) - stateCount[1] / 2.0;\n        }\n        /**\n         * @param stateCount count of black/white/black pixels just read\n         * @return true iff the proportions of the counts is close enough to the 1/1/1 ratios\n         *         used by alignment patterns to be considered a match\n         */\n        foundPatternCross(stateCount) {\n            const moduleSize = this.moduleSize;\n            const maxVariance = moduleSize / 2.0;\n            for (let i = 0; i < 3; i++) {\n                if (Math.abs(moduleSize - stateCount[i]) >= maxVariance) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        /**\n         * <p>After a horizontal scan finds a potential alignment pattern, this method\n         * \"cross-checks\" by scanning down vertically through the center of the possible\n         * alignment pattern to see if the same proportion is detected.</p>\n         *\n         * @param startI row where an alignment pattern was detected\n         * @param centerJ center of the section that appears to cross an alignment pattern\n         * @param maxCount maximum reasonable number of modules that should be\n         * observed in any reading state, based on the results of the horizontal scan\n         * @return vertical center of alignment pattern, or {@link Float#NaN} if not found\n         */\n        crossCheckVertical(startI /*int*/, centerJ /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const image = this.image;\n            const maxI = image.getHeight();\n            const stateCount = this.crossCheckStateCount;\n            stateCount[0] = 0;\n            stateCount[1] = 0;\n            stateCount[2] = 0;\n            // Start counting up from center\n            let i = startI;\n            while (i >= 0 && image.get(centerJ, i) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i--;\n            }\n            // If already too many modules in this state or ran off the edge:\n            if (i < 0 || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (i >= 0 && !image.get(centerJ, i) && stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                i--;\n            }\n            if (stateCount[0] > maxCount) {\n                return NaN;\n            }\n            // Now also count down from center\n            i = startI + 1;\n            while (i < maxI && image.get(centerJ, i) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i++;\n            }\n            if (i === maxI || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (i < maxI && !image.get(centerJ, i) && stateCount[2] <= maxCount) {\n                stateCount[2]++;\n                i++;\n            }\n            if (stateCount[2] > maxCount) {\n                return NaN;\n            }\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n            if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n                return NaN;\n            }\n            return this.foundPatternCross(stateCount) ? AlignmentPatternFinder.centerFromEnd(stateCount, i) : NaN;\n        }\n        /**\n         * <p>This is called when a horizontal scan finds a possible alignment pattern. It will\n         * cross check with a vertical scan, and if successful, will see if this pattern had been\n         * found on a previous horizontal scan. If so, we consider it confirmed and conclude we have\n         * found the alignment pattern.</p>\n         *\n         * @param stateCount reading state module counts from horizontal scan\n         * @param i row where alignment pattern may be found\n         * @param j end of possible alignment pattern in row\n         * @return {@link AlignmentPattern} if we have found the same pattern twice, or null if not\n         */\n        handlePossibleCenter(stateCount, i /*int*/, j /*int*/) {\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n            const centerJ = AlignmentPatternFinder.centerFromEnd(stateCount, j);\n            const centerI = this.crossCheckVertical(i, /*(int) */ centerJ, 2 * stateCount[1], stateCountTotal);\n            if (!isNaN(centerI)) {\n                const estimatedModuleSize = (stateCount[0] + stateCount[1] + stateCount[2]) / 3.0;\n                for (const center of this.possibleCenters) {\n                    // Look for about the same center and module size:\n                    if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n                        return center.combineEstimate(centerI, centerJ, estimatedModuleSize);\n                    }\n                }\n                // Hadn't found this before; save it\n                const point = new AlignmentPattern(centerJ, centerI, estimatedModuleSize);\n                this.possibleCenters.push(point);\n                if (this.resultPointCallback !== null && this.resultPointCallback !== undefined) {\n                    this.resultPointCallback.foundPossibleResultPoint(point);\n                }\n            }\n            return null;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a finder pattern, which are the three square patterns found in\n     * the corners of QR Codes. It also encapsulates a count of similar finder patterns,\n     * as a convenience to the finder's bookkeeping.</p>\n     *\n     * @author Sean Owen\n     */\n    class FinderPattern$1 extends ResultPoint {\n        // FinderPattern(posX: number/*float*/, posY: number/*float*/, estimatedModuleSize: number/*float*/) {\n        //   this(posX, posY, estimatedModuleSize, 1)\n        // }\n        constructor(posX /*float*/, posY /*float*/, estimatedModuleSize /*float*/, count /*int*/) {\n            super(posX, posY);\n            this.estimatedModuleSize = estimatedModuleSize;\n            this.count = count;\n            if (undefined === count) {\n                this.count = 1;\n            }\n        }\n        getEstimatedModuleSize() {\n            return this.estimatedModuleSize;\n        }\n        getCount() {\n            return this.count;\n        }\n        /*\n        void incrementCount() {\n          this.count++\n        }\n         */\n        /**\n         * <p>Determines if this finder pattern \"about equals\" a finder pattern at the stated\n         * position and size -- meaning, it is at nearly the same center with nearly the same size.</p>\n         */\n        aboutEquals(moduleSize /*float*/, i /*float*/, j /*float*/) {\n            if (Math.abs(i - this.getY()) <= moduleSize && Math.abs(j - this.getX()) <= moduleSize) {\n                const moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n                return moduleSizeDiff <= 1.0 || moduleSizeDiff <= this.estimatedModuleSize;\n            }\n            return false;\n        }\n        /**\n         * Combines this object's current estimate of a finder pattern position and module size\n         * with a new estimate. It returns a new {@code FinderPattern} containing a weighted average\n         * based on count.\n         */\n        combineEstimate(i /*float*/, j /*float*/, newModuleSize /*float*/) {\n            const combinedCount = this.count + 1;\n            const combinedX = (this.count * this.getX() + j) / combinedCount;\n            const combinedY = (this.count * this.getY() + i) / combinedCount;\n            const combinedModuleSize = (this.count * this.estimatedModuleSize + newModuleSize) / combinedCount;\n            return new FinderPattern$1(combinedX, combinedY, combinedModuleSize, combinedCount);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates information about finder patterns in an image, including the location of\n     * the three finder patterns, and their estimated module size.</p>\n     *\n     * @author Sean Owen\n     */\n    class FinderPatternInfo {\n        constructor(patternCenters) {\n            this.bottomLeft = patternCenters[0];\n            this.topLeft = patternCenters[1];\n            this.topRight = patternCenters[2];\n        }\n        getBottomLeft() {\n            return this.bottomLeft;\n        }\n        getTopLeft() {\n            return this.topLeft;\n        }\n        getTopRight() {\n            return this.topRight;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.io.Serializable;*/\n    /*import java.util.ArrayList;*/\n    /*import java.util.Collections;*/\n    /*import java.util.Comparator;*/\n    /*import java.util.List;*/\n    /*import java.util.Map;*/\n    /**\n     * <p>This class attempts to find finder patterns in a QR Code. Finder patterns are the square\n     * markers at three corners of a QR Code.</p>\n     *\n     * <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.\n     *\n     * @author Sean Owen\n     */\n    class FinderPatternFinder {\n        /**\n         * <p>Creates a finder that will search the image for three finder patterns.</p>\n         *\n         * @param image image to search\n         */\n        // public constructor(image: BitMatrix) {\n        //   this(image, null)\n        // }\n        constructor(image, resultPointCallback) {\n            this.image = image;\n            this.resultPointCallback = resultPointCallback;\n            this.possibleCenters = [];\n            this.crossCheckStateCount = new Int32Array(5);\n            this.resultPointCallback = resultPointCallback;\n        }\n        getImage() {\n            return this.image;\n        }\n        getPossibleCenters() {\n            return this.possibleCenters;\n        }\n        find(hints) {\n            const tryHarder = (hints !== null && hints !== undefined) && undefined !== hints.get(DecodeHintType$1.TRY_HARDER);\n            const pureBarcode = (hints !== null && hints !== undefined) && undefined !== hints.get(DecodeHintType$1.PURE_BARCODE);\n            const image = this.image;\n            const maxI = image.getHeight();\n            const maxJ = image.getWidth();\n            // We are looking for black/white/black/white/black modules in\n            // 1:1:3:1:1 ratio; this tracks the number of such modules seen so far\n            // Let's assume that the maximum version QR Code we support takes up 1/4 the height of the\n            // image, and then account for the center being 3 modules in size. This gives the smallest\n            // number of pixels the center could be, so skip this often. When trying harder, look for all\n            // QR versions regardless of how dense they are.\n            let iSkip = Math.floor((3 * maxI) / (4 * FinderPatternFinder.MAX_MODULES));\n            if (iSkip < FinderPatternFinder.MIN_SKIP || tryHarder) {\n                iSkip = FinderPatternFinder.MIN_SKIP;\n            }\n            let done = false;\n            const stateCount = new Int32Array(5);\n            for (let i = iSkip - 1; i < maxI && !done; i += iSkip) {\n                // Get a row of black/white values\n                stateCount[0] = 0;\n                stateCount[1] = 0;\n                stateCount[2] = 0;\n                stateCount[3] = 0;\n                stateCount[4] = 0;\n                let currentState = 0;\n                for (let j = 0; j < maxJ; j++) {\n                    if (image.get(j, i)) {\n                        // Black pixel\n                        if ((currentState & 1) === 1) { // Counting white pixels\n                            currentState++;\n                        }\n                        stateCount[currentState]++;\n                    }\n                    else { // White pixel\n                        if ((currentState & 1) === 0) { // Counting black pixels\n                            if (currentState === 4) { // A winner?\n                                if (FinderPatternFinder.foundPatternCross(stateCount)) { // Yes\n                                    const confirmed = this.handlePossibleCenter(stateCount, i, j, pureBarcode);\n                                    if (confirmed === true) {\n                                        // Start examining every other line. Checking each line turned out to be too\n                                        // expensive and didn't improve performance.\n                                        iSkip = 2;\n                                        if (this.hasSkipped === true) {\n                                            done = this.haveMultiplyConfirmedCenters();\n                                        }\n                                        else {\n                                            const rowSkip = this.findRowSkip();\n                                            if (rowSkip > stateCount[2]) {\n                                                // Skip rows between row of lower confirmed center\n                                                // and top of presumed third confirmed center\n                                                // but back up a bit to get a full chance of detecting\n                                                // it, entire width of center of finder pattern\n                                                // Skip by rowSkip, but back off by stateCount[2] (size of last center\n                                                // of pattern we saw) to be conservative, and also back off by iSkip which\n                                                // is about to be re-added\n                                                i += rowSkip - stateCount[2] - iSkip;\n                                                j = maxJ - 1;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        stateCount[0] = stateCount[2];\n                                        stateCount[1] = stateCount[3];\n                                        stateCount[2] = stateCount[4];\n                                        stateCount[3] = 1;\n                                        stateCount[4] = 0;\n                                        currentState = 3;\n                                        continue;\n                                    }\n                                    // Clear state to start looking again\n                                    currentState = 0;\n                                    stateCount[0] = 0;\n                                    stateCount[1] = 0;\n                                    stateCount[2] = 0;\n                                    stateCount[3] = 0;\n                                    stateCount[4] = 0;\n                                }\n                                else { // No, shift counts back by two\n                                    stateCount[0] = stateCount[2];\n                                    stateCount[1] = stateCount[3];\n                                    stateCount[2] = stateCount[4];\n                                    stateCount[3] = 1;\n                                    stateCount[4] = 0;\n                                    currentState = 3;\n                                }\n                            }\n                            else {\n                                stateCount[++currentState]++;\n                            }\n                        }\n                        else { // Counting white pixels\n                            stateCount[currentState]++;\n                        }\n                    }\n                }\n                if (FinderPatternFinder.foundPatternCross(stateCount)) {\n                    const confirmed = this.handlePossibleCenter(stateCount, i, maxJ, pureBarcode);\n                    if (confirmed === true) {\n                        iSkip = stateCount[0];\n                        if (this.hasSkipped) {\n                            // Found a third one\n                            done = this.haveMultiplyConfirmedCenters();\n                        }\n                    }\n                }\n            }\n            const patternInfo = this.selectBestPatterns();\n            ResultPoint.orderBestPatterns(patternInfo);\n            return new FinderPatternInfo(patternInfo);\n        }\n        /**\n         * Given a count of black/white/black/white/black pixels just seen and an end position,\n         * figures the location of the center of this run.\n         */\n        static centerFromEnd(stateCount, end /*int*/) {\n            return (end - stateCount[4] - stateCount[3]) - stateCount[2] / 2.0;\n        }\n        /**\n         * @param stateCount count of black/white/black/white/black pixels just read\n         * @return true iff the proportions of the counts is close enough to the 1/1/3/1/1 ratios\n         *         used by finder patterns to be considered a match\n         */\n        static foundPatternCross(stateCount) {\n            let totalModuleSize = 0;\n            for (let i = 0; i < 5; i++) {\n                const count = stateCount[i];\n                if (count === 0) {\n                    return false;\n                }\n                totalModuleSize += count;\n            }\n            if (totalModuleSize < 7) {\n                return false;\n            }\n            const moduleSize = totalModuleSize / 7.0;\n            const maxVariance = moduleSize / 2.0;\n            // Allow less than 50% variance from 1-1-3-1-1 proportions\n            return Math.abs(moduleSize - stateCount[0]) < maxVariance &&\n                Math.abs(moduleSize - stateCount[1]) < maxVariance &&\n                Math.abs(3.0 * moduleSize - stateCount[2]) < 3 * maxVariance &&\n                Math.abs(moduleSize - stateCount[3]) < maxVariance &&\n                Math.abs(moduleSize - stateCount[4]) < maxVariance;\n        }\n        getCrossCheckStateCount() {\n            const crossCheckStateCount = this.crossCheckStateCount;\n            crossCheckStateCount[0] = 0;\n            crossCheckStateCount[1] = 0;\n            crossCheckStateCount[2] = 0;\n            crossCheckStateCount[3] = 0;\n            crossCheckStateCount[4] = 0;\n            return crossCheckStateCount;\n        }\n        /**\n         * After a vertical and horizontal scan finds a potential finder pattern, this method\n         * \"cross-cross-cross-checks\" by scanning down diagonally through the center of the possible\n         * finder pattern to see if the same proportion is detected.\n         *\n         * @param startI row where a finder pattern was detected\n         * @param centerJ center of the section that appears to cross a finder pattern\n         * @param maxCount maximum reasonable number of modules that should be\n         *  observed in any reading state, based on the results of the horizontal scan\n         * @param originalStateCountTotal The original state count total.\n         * @return true if proportions are withing expected limits\n         */\n        crossCheckDiagonal(startI /*int*/, centerJ /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const stateCount = this.getCrossCheckStateCount();\n            // Start counting up, left from center finding black center mass\n            let i = 0;\n            const image = this.image;\n            while (startI >= i && centerJ >= i && image.get(centerJ - i, startI - i)) {\n                stateCount[2]++;\n                i++;\n            }\n            if (startI < i || centerJ < i) {\n                return false;\n            }\n            // Continue up, left finding white space\n            while (startI >= i && centerJ >= i && !image.get(centerJ - i, startI - i) &&\n                stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i++;\n            }\n            // If already too many modules in this state or ran off the edge:\n            if (startI < i || centerJ < i || stateCount[1] > maxCount) {\n                return false;\n            }\n            // Continue up, left finding black border\n            while (startI >= i && centerJ >= i && image.get(centerJ - i, startI - i) &&\n                stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                i++;\n            }\n            if (stateCount[0] > maxCount) {\n                return false;\n            }\n            const maxI = image.getHeight();\n            const maxJ = image.getWidth();\n            // Now also count down, right from center\n            i = 1;\n            while (startI + i < maxI && centerJ + i < maxJ && image.get(centerJ + i, startI + i)) {\n                stateCount[2]++;\n                i++;\n            }\n            // Ran off the edge?\n            if (startI + i >= maxI || centerJ + i >= maxJ) {\n                return false;\n            }\n            while (startI + i < maxI && centerJ + i < maxJ && !image.get(centerJ + i, startI + i) &&\n                stateCount[3] < maxCount) {\n                stateCount[3]++;\n                i++;\n            }\n            if (startI + i >= maxI || centerJ + i >= maxJ || stateCount[3] >= maxCount) {\n                return false;\n            }\n            while (startI + i < maxI && centerJ + i < maxJ && image.get(centerJ + i, startI + i) &&\n                stateCount[4] < maxCount) {\n                stateCount[4]++;\n                i++;\n            }\n            if (stateCount[4] >= maxCount) {\n                return false;\n            }\n            // If we found a finder-pattern-like section, but its size is more than 100% different than\n            // the original, assume it's a false positive\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n            return Math.abs(stateCountTotal - originalStateCountTotal) < 2 * originalStateCountTotal &&\n                FinderPatternFinder.foundPatternCross(stateCount);\n        }\n        /**\n         * <p>After a horizontal scan finds a potential finder pattern, this method\n         * \"cross-checks\" by scanning down vertically through the center of the possible\n         * finder pattern to see if the same proportion is detected.</p>\n         *\n         * @param startI row where a finder pattern was detected\n         * @param centerJ center of the section that appears to cross a finder pattern\n         * @param maxCount maximum reasonable number of modules that should be\n         * observed in any reading state, based on the results of the horizontal scan\n         * @return vertical center of finder pattern, or {@link Float#NaN} if not found\n         */\n        crossCheckVertical(startI /*int*/, centerJ /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const image = this.image;\n            const maxI = image.getHeight();\n            const stateCount = this.getCrossCheckStateCount();\n            // Start counting up from center\n            let i = startI;\n            while (i >= 0 && image.get(centerJ, i)) {\n                stateCount[2]++;\n                i--;\n            }\n            if (i < 0) {\n                return NaN;\n            }\n            while (i >= 0 && !image.get(centerJ, i) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i--;\n            }\n            // If already too many modules in this state or ran off the edge:\n            if (i < 0 || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (i >= 0 && image.get(centerJ, i) && stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                i--;\n            }\n            if (stateCount[0] > maxCount) {\n                return NaN;\n            }\n            // Now also count down from center\n            i = startI + 1;\n            while (i < maxI && image.get(centerJ, i)) {\n                stateCount[2]++;\n                i++;\n            }\n            if (i === maxI) {\n                return NaN;\n            }\n            while (i < maxI && !image.get(centerJ, i) && stateCount[3] < maxCount) {\n                stateCount[3]++;\n                i++;\n            }\n            if (i === maxI || stateCount[3] >= maxCount) {\n                return NaN;\n            }\n            while (i < maxI && image.get(centerJ, i) && stateCount[4] < maxCount) {\n                stateCount[4]++;\n                i++;\n            }\n            if (stateCount[4] >= maxCount) {\n                return NaN;\n            }\n            // If we found a finder-pattern-like section, but its size is more than 40% different than\n            // the original, assume it's a false positive\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] +\n                stateCount[4];\n            if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n                return NaN;\n            }\n            return FinderPatternFinder.foundPatternCross(stateCount) ? FinderPatternFinder.centerFromEnd(stateCount, i) : NaN;\n        }\n        /**\n         * <p>Like {@link #crossCheckVertical(int, int, int, int)}, and in fact is basically identical,\n         * except it reads horizontally instead of vertically. This is used to cross-cross\n         * check a vertical cross check and locate the real center of the alignment pattern.</p>\n         */\n        crossCheckHorizontal(startJ /*int*/, centerI /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const image = this.image;\n            const maxJ = image.getWidth();\n            const stateCount = this.getCrossCheckStateCount();\n            let j = startJ;\n            while (j >= 0 && image.get(j, centerI)) {\n                stateCount[2]++;\n                j--;\n            }\n            if (j < 0) {\n                return NaN;\n            }\n            while (j >= 0 && !image.get(j, centerI) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                j--;\n            }\n            if (j < 0 || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (j >= 0 && image.get(j, centerI) && stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                j--;\n            }\n            if (stateCount[0] > maxCount) {\n                return NaN;\n            }\n            j = startJ + 1;\n            while (j < maxJ && image.get(j, centerI)) {\n                stateCount[2]++;\n                j++;\n            }\n            if (j === maxJ) {\n                return NaN;\n            }\n            while (j < maxJ && !image.get(j, centerI) && stateCount[3] < maxCount) {\n                stateCount[3]++;\n                j++;\n            }\n            if (j === maxJ || stateCount[3] >= maxCount) {\n                return NaN;\n            }\n            while (j < maxJ && image.get(j, centerI) && stateCount[4] < maxCount) {\n                stateCount[4]++;\n                j++;\n            }\n            if (stateCount[4] >= maxCount) {\n                return NaN;\n            }\n            // If we found a finder-pattern-like section, but its size is significantly different than\n            // the original, assume it's a false positive\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] +\n                stateCount[4];\n            if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= originalStateCountTotal) {\n                return NaN;\n            }\n            return FinderPatternFinder.foundPatternCross(stateCount) ? FinderPatternFinder.centerFromEnd(stateCount, j) : NaN;\n        }\n        /**\n         * <p>This is called when a horizontal scan finds a possible alignment pattern. It will\n         * cross check with a vertical scan, and if successful, will, ah, cross-cross-check\n         * with another horizontal scan. This is needed primarily to locate the real horizontal\n         * center of the pattern in cases of extreme skew.\n         * And then we cross-cross-cross check with another diagonal scan.</p>\n         *\n         * <p>If that succeeds the finder pattern location is added to a list that tracks\n         * the number of times each location has been nearly-matched as a finder pattern.\n         * Each additional find is more evidence that the location is in fact a finder\n         * pattern center\n         *\n         * @param stateCount reading state module counts from horizontal scan\n         * @param i row where finder pattern may be found\n         * @param j end of possible finder pattern in row\n         * @param pureBarcode true if in \"pure barcode\" mode\n         * @return true if a finder pattern candidate was found this time\n         */\n        handlePossibleCenter(stateCount, i /*int*/, j /*int*/, pureBarcode) {\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] +\n                stateCount[4];\n            let centerJ = FinderPatternFinder.centerFromEnd(stateCount, j);\n            let centerI = this.crossCheckVertical(i, /*(int) */ Math.floor(centerJ), stateCount[2], stateCountTotal);\n            if (!isNaN(centerI)) {\n                // Re-cross check\n                centerJ = this.crossCheckHorizontal(/*(int) */ Math.floor(centerJ), /*(int) */ Math.floor(centerI), stateCount[2], stateCountTotal);\n                if (!isNaN(centerJ) &&\n                    (!pureBarcode || this.crossCheckDiagonal(/*(int) */ Math.floor(centerI), /*(int) */ Math.floor(centerJ), stateCount[2], stateCountTotal))) {\n                    const estimatedModuleSize = stateCountTotal / 7.0;\n                    let found = false;\n                    const possibleCenters = this.possibleCenters;\n                    for (let index = 0, length = possibleCenters.length; index < length; index++) {\n                        const center = possibleCenters[index];\n                        // Look for about the same center and module size:\n                        if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n                            possibleCenters[index] = center.combineEstimate(centerI, centerJ, estimatedModuleSize);\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        const point = new FinderPattern$1(centerJ, centerI, estimatedModuleSize);\n                        possibleCenters.push(point);\n                        if (this.resultPointCallback !== null && this.resultPointCallback !== undefined) {\n                            this.resultPointCallback.foundPossibleResultPoint(point);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n        /**\n         * @return number of rows we could safely skip during scanning, based on the first\n         *         two finder patterns that have been located. In some cases their position will\n         *         allow us to infer that the third pattern must lie below a certain point farther\n         *         down in the image.\n         */\n        findRowSkip() {\n            const max = this.possibleCenters.length;\n            if (max <= 1) {\n                return 0;\n            }\n            let firstConfirmedCenter = null;\n            for (const center of this.possibleCenters) {\n                if (center.getCount() >= FinderPatternFinder.CENTER_QUORUM) {\n                    if (firstConfirmedCenter == null) {\n                        firstConfirmedCenter = center;\n                    }\n                    else {\n                        // We have two confirmed centers\n                        // How far down can we skip before resuming looking for the next\n                        // pattern? In the worst case, only the difference between the\n                        // difference in the x / y coordinates of the two centers.\n                        // This is the case where you find top left last.\n                        this.hasSkipped = true;\n                        return /*(int) */ Math.floor((Math.abs(firstConfirmedCenter.getX() - center.getX()) -\n                            Math.abs(firstConfirmedCenter.getY() - center.getY())) / 2);\n                    }\n                }\n            }\n            return 0;\n        }\n        /**\n         * @return true iff we have found at least 3 finder patterns that have been detected\n         *         at least {@link #CENTER_QUORUM} times each, and, the estimated module size of the\n         *         candidates is \"pretty similar\"\n         */\n        haveMultiplyConfirmedCenters() {\n            let confirmedCount = 0;\n            let totalModuleSize = 0.0;\n            const max = this.possibleCenters.length;\n            for (const pattern of this.possibleCenters) {\n                if (pattern.getCount() >= FinderPatternFinder.CENTER_QUORUM) {\n                    confirmedCount++;\n                    totalModuleSize += pattern.getEstimatedModuleSize();\n                }\n            }\n            if (confirmedCount < 3) {\n                return false;\n            }\n            // OK, we have at least 3 confirmed centers, but, it's possible that one is a \"false positive\"\n            // and that we need to keep looking. We detect this by asking if the estimated module sizes\n            // vary too much. We arbitrarily say that when the total deviation from average exceeds\n            // 5% of the total module size estimates, it's too much.\n            const average = totalModuleSize / max;\n            let totalDeviation = 0.0;\n            for (const pattern of this.possibleCenters) {\n                totalDeviation += Math.abs(pattern.getEstimatedModuleSize() - average);\n            }\n            return totalDeviation <= 0.05 * totalModuleSize;\n        }\n        /**\n         * @return the 3 best {@link FinderPattern}s from our list of candidates. The \"best\" are\n         *         those that have been detected at least {@link #CENTER_QUORUM} times, and whose module\n         *         size differs from the average among those patterns the least\n         * @throws NotFoundException if 3 such finder patterns do not exist\n         */\n        selectBestPatterns() {\n            const startSize = this.possibleCenters.length;\n            if (startSize < 3) {\n                // Couldn't find enough finder patterns\n                throw new NotFoundException();\n            }\n            const possibleCenters = this.possibleCenters;\n            let average;\n            // Filter outlier possibilities whose module size is too different\n            if (startSize > 3) {\n                // But we can only afford to do so if we have at least 4 possibilities to choose from\n                let totalModuleSize = 0.0;\n                let square = 0.0;\n                for (const center of this.possibleCenters) {\n                    const size = center.getEstimatedModuleSize();\n                    totalModuleSize += size;\n                    square += size * size;\n                }\n                average = totalModuleSize / startSize;\n                let stdDev = Math.sqrt(square / startSize - average * average);\n                possibleCenters.sort(\n                /**\n                 * <p>Orders by furthest from average</p>\n                 */\n                // FurthestFromAverageComparator implements Comparator<FinderPattern>\n                (center1, center2) => {\n                    const dA = Math.abs(center2.getEstimatedModuleSize() - average);\n                    const dB = Math.abs(center1.getEstimatedModuleSize() - average);\n                    return dA < dB ? -1 : dA > dB ? 1 : 0;\n                });\n                const limit = Math.max(0.2 * average, stdDev);\n                for (let i = 0; i < possibleCenters.length && possibleCenters.length > 3; i++) {\n                    const pattern = possibleCenters[i];\n                    if (Math.abs(pattern.getEstimatedModuleSize() - average) > limit) {\n                        possibleCenters.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n            if (possibleCenters.length > 3) {\n                // Throw away all but those first size candidate points we found.\n                let totalModuleSize = 0.0;\n                for (const possibleCenter of possibleCenters) {\n                    totalModuleSize += possibleCenter.getEstimatedModuleSize();\n                }\n                average = totalModuleSize / possibleCenters.length;\n                possibleCenters.sort(\n                /**\n                 * <p>Orders by {@link FinderPattern#getCount()}, descending.</p>\n                 */\n                // CenterComparator implements Comparator<FinderPattern>\n                (center1, center2) => {\n                    if (center2.getCount() === center1.getCount()) {\n                        const dA = Math.abs(center2.getEstimatedModuleSize() - average);\n                        const dB = Math.abs(center1.getEstimatedModuleSize() - average);\n                        return dA < dB ? 1 : dA > dB ? -1 : 0;\n                    }\n                    else {\n                        return center2.getCount() - center1.getCount();\n                    }\n                });\n                possibleCenters.splice(3); // this is not realy necessary as we only return first 3 anyway\n            }\n            return [\n                possibleCenters[0],\n                possibleCenters[1],\n                possibleCenters[2]\n            ];\n        }\n    }\n    FinderPatternFinder.CENTER_QUORUM = 2;\n    FinderPatternFinder.MIN_SKIP = 3; // 1 pixel/module times 3 modules/center\n    FinderPatternFinder.MAX_MODULES = 57; // support up to version 10 for mobile clients\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.Map;*/\n    /**\n     * <p>Encapsulates logic that can detect a QR Code in an image, even if the QR Code\n     * is rotated or skewed, or partially obscured.</p>\n     *\n     * @author Sean Owen\n     */\n    class Detector$2 {\n        constructor(image) {\n            this.image = image;\n        }\n        getImage() {\n            return this.image;\n        }\n        getResultPointCallback() {\n            return this.resultPointCallback;\n        }\n        /**\n         * <p>Detects a QR Code in an image.</p>\n         *\n         * @return {@link DetectorResult} encapsulating results of detecting a QR Code\n         * @throws NotFoundException if QR Code cannot be found\n         * @throws FormatException if a QR Code cannot be decoded\n         */\n        // public detect(): DetectorResult /*throws NotFoundException, FormatException*/ {\n        //   return detect(null)\n        // }\n        /**\n         * <p>Detects a QR Code in an image.</p>\n         *\n         * @param hints optional hints to detector\n         * @return {@link DetectorResult} encapsulating results of detecting a QR Code\n         * @throws NotFoundException if QR Code cannot be found\n         * @throws FormatException if a QR Code cannot be decoded\n         */\n        detect(hints) {\n            this.resultPointCallback = (hints === null || hints === undefined) ? null :\n                /*(ResultPointCallback) */ hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n            const finder = new FinderPatternFinder(this.image, this.resultPointCallback);\n            const info = finder.find(hints);\n            return this.processFinderPatternInfo(info);\n        }\n        processFinderPatternInfo(info) {\n            const topLeft = info.getTopLeft();\n            const topRight = info.getTopRight();\n            const bottomLeft = info.getBottomLeft();\n            const moduleSize = this.calculateModuleSize(topLeft, topRight, bottomLeft);\n            if (moduleSize < 1.0) {\n                throw new NotFoundException('No pattern found in proccess finder.');\n            }\n            const dimension = Detector$2.computeDimension(topLeft, topRight, bottomLeft, moduleSize);\n            const provisionalVersion = Version$1.getProvisionalVersionForDimension(dimension);\n            const modulesBetweenFPCenters = provisionalVersion.getDimensionForVersion() - 7;\n            let alignmentPattern = null;\n            // Anything above version 1 has an alignment pattern\n            if (provisionalVersion.getAlignmentPatternCenters().length > 0) {\n                // Guess where a \"bottom right\" finder pattern would have been\n                const bottomRightX = topRight.getX() - topLeft.getX() + bottomLeft.getX();\n                const bottomRightY = topRight.getY() - topLeft.getY() + bottomLeft.getY();\n                // Estimate that alignment pattern is closer by 3 modules\n                // from \"bottom right\" to known top left location\n                const correctionToTopLeft = 1.0 - 3.0 / modulesBetweenFPCenters;\n                const estAlignmentX = /*(int) */ Math.floor(topLeft.getX() + correctionToTopLeft * (bottomRightX - topLeft.getX()));\n                const estAlignmentY = /*(int) */ Math.floor(topLeft.getY() + correctionToTopLeft * (bottomRightY - topLeft.getY()));\n                // Kind of arbitrary -- expand search radius before giving up\n                for (let i = 4; i <= 16; i <<= 1) {\n                    try {\n                        alignmentPattern = this.findAlignmentInRegion(moduleSize, estAlignmentX, estAlignmentY, i);\n                        break;\n                    }\n                    catch (re /*NotFoundException*/) {\n                        if (!(re instanceof NotFoundException)) {\n                            throw re;\n                        }\n                        // try next round\n                    }\n                }\n                // If we didn't find alignment pattern... well try anyway without it\n            }\n            const transform = Detector$2.createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension);\n            const bits = Detector$2.sampleGrid(this.image, transform, dimension);\n            let points;\n            if (alignmentPattern === null) {\n                points = [bottomLeft, topLeft, topRight];\n            }\n            else {\n                points = [bottomLeft, topLeft, topRight, alignmentPattern];\n            }\n            return new DetectorResult(bits, points);\n        }\n        static createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension /*int*/) {\n            const dimMinusThree = dimension - 3.5;\n            let bottomRightX; /*float*/\n            let bottomRightY; /*float*/\n            let sourceBottomRightX; /*float*/\n            let sourceBottomRightY; /*float*/\n            if (alignmentPattern !== null) {\n                bottomRightX = alignmentPattern.getX();\n                bottomRightY = alignmentPattern.getY();\n                sourceBottomRightX = dimMinusThree - 3.0;\n                sourceBottomRightY = sourceBottomRightX;\n            }\n            else {\n                // Don't have an alignment pattern, just make up the bottom-right point\n                bottomRightX = (topRight.getX() - topLeft.getX()) + bottomLeft.getX();\n                bottomRightY = (topRight.getY() - topLeft.getY()) + bottomLeft.getY();\n                sourceBottomRightX = dimMinusThree;\n                sourceBottomRightY = dimMinusThree;\n            }\n            return PerspectiveTransform.quadrilateralToQuadrilateral(3.5, 3.5, dimMinusThree, 3.5, sourceBottomRightX, sourceBottomRightY, 3.5, dimMinusThree, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRightX, bottomRightY, bottomLeft.getX(), bottomLeft.getY());\n        }\n        static sampleGrid(image, transform, dimension /*int*/) {\n            const sampler = GridSamplerInstance.getInstance();\n            return sampler.sampleGridWithTransform(image, dimension, dimension, transform);\n        }\n        /**\n         * <p>Computes the dimension (number of modules on a size) of the QR Code based on the position\n         * of the finder patterns and estimated module size.</p>\n         */\n        static computeDimension(topLeft, topRight, bottomLeft, moduleSize /*float*/) {\n            const tltrCentersDimension = MathUtils.round(ResultPoint.distance(topLeft, topRight) / moduleSize);\n            const tlblCentersDimension = MathUtils.round(ResultPoint.distance(topLeft, bottomLeft) / moduleSize);\n            let dimension = Math.floor((tltrCentersDimension + tlblCentersDimension) / 2) + 7;\n            switch (dimension & 0x03) { // mod 4\n                case 0:\n                    dimension++;\n                    break;\n                // 1? do nothing\n                case 2:\n                    dimension--;\n                    break;\n                case 3:\n                    throw new NotFoundException('Dimensions could be not found.');\n            }\n            return dimension;\n        }\n        /**\n         * <p>Computes an average estimated module size based on estimated derived from the positions\n         * of the three finder patterns.</p>\n         *\n         * @param topLeft detected top-left finder pattern center\n         * @param topRight detected top-right finder pattern center\n         * @param bottomLeft detected bottom-left finder pattern center\n         * @return estimated module size\n         */\n        calculateModuleSize(topLeft, topRight, bottomLeft) {\n            // Take the average\n            return (this.calculateModuleSizeOneWay(topLeft, topRight) +\n                this.calculateModuleSizeOneWay(topLeft, bottomLeft)) / 2.0;\n        }\n        /**\n         * <p>Estimates module size based on two finder patterns -- it uses\n         * {@link #sizeOfBlackWhiteBlackRunBothWays(int, int, int, int)} to figure the\n         * width of each, measuring along the axis between their centers.</p>\n         */\n        calculateModuleSizeOneWay(pattern, otherPattern) {\n            const moduleSizeEst1 = this.sizeOfBlackWhiteBlackRunBothWays(/*(int) */ Math.floor(pattern.getX()), \n            /*(int) */ Math.floor(pattern.getY()), \n            /*(int) */ Math.floor(otherPattern.getX()), \n            /*(int) */ Math.floor(otherPattern.getY()));\n            const moduleSizeEst2 = this.sizeOfBlackWhiteBlackRunBothWays(/*(int) */ Math.floor(otherPattern.getX()), \n            /*(int) */ Math.floor(otherPattern.getY()), \n            /*(int) */ Math.floor(pattern.getX()), \n            /*(int) */ Math.floor(pattern.getY()));\n            if (isNaN(moduleSizeEst1)) {\n                return moduleSizeEst2 / 7.0;\n            }\n            if (isNaN(moduleSizeEst2)) {\n                return moduleSizeEst1 / 7.0;\n            }\n            // Average them, and divide by 7 since we've counted the width of 3 black modules,\n            // and 1 white and 1 black module on either side. Ergo, divide sum by 14.\n            return (moduleSizeEst1 + moduleSizeEst2) / 14.0;\n        }\n        /**\n         * See {@link #sizeOfBlackWhiteBlackRun(int, int, int, int)}; computes the total width of\n         * a finder pattern by looking for a black-white-black run from the center in the direction\n         * of another point (another finder pattern center), and in the opposite direction too.\n         */\n        sizeOfBlackWhiteBlackRunBothWays(fromX /*int*/, fromY /*int*/, toX /*int*/, toY /*int*/) {\n            let result = this.sizeOfBlackWhiteBlackRun(fromX, fromY, toX, toY);\n            // Now count other way -- don't run off image though of course\n            let scale = 1.0;\n            let otherToX = fromX - (toX - fromX);\n            if (otherToX < 0) {\n                scale = fromX / /*(float) */ (fromX - otherToX);\n                otherToX = 0;\n            }\n            else if (otherToX >= this.image.getWidth()) {\n                scale = (this.image.getWidth() - 1 - fromX) / /*(float) */ (otherToX - fromX);\n                otherToX = this.image.getWidth() - 1;\n            }\n            let otherToY = /*(int) */ Math.floor(fromY - (toY - fromY) * scale);\n            scale = 1.0;\n            if (otherToY < 0) {\n                scale = fromY / /*(float) */ (fromY - otherToY);\n                otherToY = 0;\n            }\n            else if (otherToY >= this.image.getHeight()) {\n                scale = (this.image.getHeight() - 1 - fromY) / /*(float) */ (otherToY - fromY);\n                otherToY = this.image.getHeight() - 1;\n            }\n            otherToX = /*(int) */ Math.floor(fromX + (otherToX - fromX) * scale);\n            result += this.sizeOfBlackWhiteBlackRun(fromX, fromY, otherToX, otherToY);\n            // Middle pixel is double-counted this way; subtract 1\n            return result - 1.0;\n        }\n        /**\n         * <p>This method traces a line from a point in the image, in the direction towards another point.\n         * It begins in a black region, and keeps going until it finds white, then black, then white again.\n         * It reports the distance from the start to this point.</p>\n         *\n         * <p>This is used when figuring out how wide a finder pattern is, when the finder pattern\n         * may be skewed or rotated.</p>\n         */\n        sizeOfBlackWhiteBlackRun(fromX /*int*/, fromY /*int*/, toX /*int*/, toY /*int*/) {\n            // Mild variant of Bresenham's algorithm\n            // see http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\n            const steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n            if (steep) {\n                let temp = fromX;\n                fromX = fromY;\n                fromY = temp;\n                temp = toX;\n                toX = toY;\n                toY = temp;\n            }\n            const dx = Math.abs(toX - fromX);\n            const dy = Math.abs(toY - fromY);\n            let error = -dx / 2;\n            const xstep = fromX < toX ? 1 : -1;\n            const ystep = fromY < toY ? 1 : -1;\n            // In black pixels, looking for white, first or second time.\n            let state = 0;\n            // Loop up until x == toX, but not beyond\n            const xLimit = toX + xstep;\n            for (let x = fromX, y = fromY; x !== xLimit; x += xstep) {\n                const realX = steep ? y : x;\n                const realY = steep ? x : y;\n                // Does current pixel mean we have moved white to black or vice versa?\n                // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n                // color, advance to next state or end if we are in state 2 already\n                if ((state === 1) === this.image.get(realX, realY)) {\n                    if (state === 2) {\n                        return MathUtils.distance(x, y, fromX, fromY);\n                    }\n                    state++;\n                }\n                error += dy;\n                if (error > 0) {\n                    if (y === toY) {\n                        break;\n                    }\n                    y += ystep;\n                    error -= dx;\n                }\n            }\n            // Found black-white-black; give the benefit of the doubt that the next pixel outside the image\n            // is \"white\" so this last point at (toX+xStep,toY) is the right ending. This is really a\n            // small approximation; (toX+xStep,toY+yStep) might be really correct. Ignore this.\n            if (state === 2) {\n                return MathUtils.distance(toX + xstep, toY, fromX, fromY);\n            }\n            // else we didn't find even black-white-black; no estimate is really possible\n            return NaN;\n        }\n        /**\n         * <p>Attempts to locate an alignment pattern in a limited region of the image, which is\n         * guessed to contain it. This method uses {@link AlignmentPattern}.</p>\n         *\n         * @param overallEstModuleSize estimated module size so far\n         * @param estAlignmentX x coordinate of center of area probably containing alignment pattern\n         * @param estAlignmentY y coordinate of above\n         * @param allowanceFactor number of pixels in all directions to search from the center\n         * @return {@link AlignmentPattern} if found, or null otherwise\n         * @throws NotFoundException if an unexpected error occurs during detection\n         */\n        findAlignmentInRegion(overallEstModuleSize /*float*/, estAlignmentX /*int*/, estAlignmentY /*int*/, allowanceFactor /*float*/) {\n            // Look for an alignment pattern (3 modules in size) around where it\n            // should be\n            const allowance = /*(int) */ Math.floor(allowanceFactor * overallEstModuleSize);\n            const alignmentAreaLeftX = Math.max(0, estAlignmentX - allowance);\n            const alignmentAreaRightX = Math.min(this.image.getWidth() - 1, estAlignmentX + allowance);\n            if (alignmentAreaRightX - alignmentAreaLeftX < overallEstModuleSize * 3) {\n                throw new NotFoundException('Alignment top exceeds estimated module size.');\n            }\n            const alignmentAreaTopY = Math.max(0, estAlignmentY - allowance);\n            const alignmentAreaBottomY = Math.min(this.image.getHeight() - 1, estAlignmentY + allowance);\n            if (alignmentAreaBottomY - alignmentAreaTopY < overallEstModuleSize * 3) {\n                throw new NotFoundException('Alignment bottom exceeds estimated module size.');\n            }\n            const alignmentFinder = new AlignmentPatternFinder(this.image, alignmentAreaLeftX, alignmentAreaTopY, alignmentAreaRightX - alignmentAreaLeftX, alignmentAreaBottomY - alignmentAreaTopY, overallEstModuleSize, this.resultPointCallback);\n            return alignmentFinder.find();\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.List;*/\n    /*import java.util.Map;*/\n    /**\n     * This implementation can detect and decode QR Codes in an image.\n     *\n     * @author Sean Owen\n     */\n    class QRCodeReader {\n        constructor() {\n            this.decoder = new Decoder$2();\n        }\n        getDecoder() {\n            return this.decoder;\n        }\n        /**\n         * Locates and decodes a QR code in an image.\n         *\n         * @return a representing: string the content encoded by the QR code\n         * @throws NotFoundException if a QR code cannot be found\n         * @throws FormatException if a QR code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        /*@Override*/\n        // public decode(image: BinaryBitmap): Result /*throws NotFoundException, ChecksumException, FormatException */ {\n        //   return this.decode(image, null)\n        // }\n        /*@Override*/\n        decode(image, hints) {\n            let decoderResult;\n            let points;\n            if (hints !== undefined && hints !== null && undefined !== hints.get(DecodeHintType$1.PURE_BARCODE)) {\n                const bits = QRCodeReader.extractPureBits(image.getBlackMatrix());\n                decoderResult = this.decoder.decodeBitMatrix(bits, hints);\n                points = QRCodeReader.NO_POINTS;\n            }\n            else {\n                const detectorResult = new Detector$2(image.getBlackMatrix()).detect(hints);\n                decoderResult = this.decoder.decodeBitMatrix(detectorResult.getBits(), hints);\n                points = detectorResult.getPoints();\n            }\n            // If the code was mirrored: swap the bottom-left and the top-right points.\n            if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n                decoderResult.getOther().applyMirroredCorrection(points);\n            }\n            const result = new Result(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat$1.QR_CODE, undefined);\n            const byteSegments = decoderResult.getByteSegments();\n            if (byteSegments !== null) {\n                result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS, byteSegments);\n            }\n            const ecLevel = decoderResult.getECLevel();\n            if (ecLevel !== null) {\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, ecLevel);\n            }\n            if (decoderResult.hasStructuredAppend()) {\n                result.putMetadata(ResultMetadataType$1.STRUCTURED_APPEND_SEQUENCE, decoderResult.getStructuredAppendSequenceNumber());\n                result.putMetadata(ResultMetadataType$1.STRUCTURED_APPEND_PARITY, decoderResult.getStructuredAppendParity());\n            }\n            return result;\n        }\n        /*@Override*/\n        reset() {\n            // do nothing\n        }\n        /**\n         * This method detects a code in a \"pure\" image -- that is, pure monochrome image\n         * which contains only an unrotated, unskewed, image of a code, with some white border\n         * around it. This is a specialized method that works exceptionally fast in this special\n         * case.\n         *\n         * @see com.google.zxing.datamatrix.DataMatrixReader#extractPureBits(BitMatrix)\n         */\n        static extractPureBits(image) {\n            const leftTopBlack = image.getTopLeftOnBit();\n            const rightBottomBlack = image.getBottomRightOnBit();\n            if (leftTopBlack === null || rightBottomBlack === null) {\n                throw new NotFoundException();\n            }\n            const moduleSize = this.moduleSize(leftTopBlack, image);\n            let top = leftTopBlack[1];\n            let bottom = rightBottomBlack[1];\n            let left = leftTopBlack[0];\n            let right = rightBottomBlack[0];\n            // Sanity check!\n            if (left >= right || top >= bottom) {\n                throw new NotFoundException();\n            }\n            if (bottom - top !== right - left) {\n                // Special case, where bottom-right module wasn't black so we found something else in the last row\n                // Assume it's a square, so use height as the width\n                right = left + (bottom - top);\n                if (right >= image.getWidth()) {\n                    // Abort if that would not make sense -- off image\n                    throw new NotFoundException();\n                }\n            }\n            const matrixWidth = Math.round((right - left + 1) / moduleSize);\n            const matrixHeight = Math.round((bottom - top + 1) / moduleSize);\n            if (matrixWidth <= 0 || matrixHeight <= 0) {\n                throw new NotFoundException();\n            }\n            if (matrixHeight !== matrixWidth) {\n                // Only possibly decode square regions\n                throw new NotFoundException();\n            }\n            // Push in the \"border\" by half the module width so that we start\n            // sampling in the middle of the module. Just in case the image is a\n            // little off, this will help recover.\n            const nudge = /*(int) */ Math.floor(moduleSize / 2.0);\n            top += nudge;\n            left += nudge;\n            // But careful that this does not sample off the edge\n            // \"right\" is the farthest-right valid pixel location -- right+1 is not necessarily\n            // This is positive by how much the inner x loop below would be too large\n            const nudgedTooFarRight = left + /*(int) */ Math.floor((matrixWidth - 1) * moduleSize) - right;\n            if (nudgedTooFarRight > 0) {\n                if (nudgedTooFarRight > nudge) {\n                    // Neither way fits; abort\n                    throw new NotFoundException();\n                }\n                left -= nudgedTooFarRight;\n            }\n            // See logic above\n            const nudgedTooFarDown = top + /*(int) */ Math.floor((matrixHeight - 1) * moduleSize) - bottom;\n            if (nudgedTooFarDown > 0) {\n                if (nudgedTooFarDown > nudge) {\n                    // Neither way fits; abort\n                    throw new NotFoundException();\n                }\n                top -= nudgedTooFarDown;\n            }\n            // Now just read off the bits\n            const bits = new BitMatrix(matrixWidth, matrixHeight);\n            for (let y = 0; y < matrixHeight; y++) {\n                const iOffset = top + /*(int) */ Math.floor(y * moduleSize);\n                for (let x = 0; x < matrixWidth; x++) {\n                    if (image.get(left + /*(int) */ Math.floor(x * moduleSize), iOffset)) {\n                        bits.set(x, y);\n                    }\n                }\n            }\n            return bits;\n        }\n        static moduleSize(leftTopBlack, image) {\n            const height = image.getHeight();\n            const width = image.getWidth();\n            let x = leftTopBlack[0];\n            let y = leftTopBlack[1];\n            let inBlack = true;\n            let transitions = 0;\n            while (x < width && y < height) {\n                if (inBlack !== image.get(x, y)) {\n                    if (++transitions === 5) {\n                        break;\n                    }\n                    inBlack = !inBlack;\n                }\n                x++;\n                y++;\n            }\n            if (x === width || y === height) {\n                throw new NotFoundException();\n            }\n            return (x - leftTopBlack[0]) / 7.0;\n        }\n    }\n    QRCodeReader.NO_POINTS = new Array();\n\n    /*\n    * Copyright 2009 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author SITA Lab (kevin.osullivan@sita.aero)\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417Common {\n        PDF417Common() {\n        }\n        /**\n         * @param moduleBitCount values to sum\n         * @return sum of values\n         * @deprecated call {@link MathUtils#sum(int[])}\n         */\n        // @Deprecated\n        static getBitCountSum(moduleBitCount) {\n            return MathUtils.sum(moduleBitCount);\n        }\n        static toIntArray(list) {\n            if (list == null || !list.length) {\n                return PDF417Common.EMPTY_INT_ARRAY;\n            }\n            const result = new Int32Array(list.length);\n            let i = 0;\n            for (const integer of list) {\n                result[i++] = integer;\n            }\n            return result;\n        }\n        /**\n         * @param symbol encoded symbol to translate to a codeword\n         * @return the codeword corresponding to the symbol.\n         */\n        static getCodeword(symbol /*int*/) {\n            const i = Arrays.binarySearch(PDF417Common.SYMBOL_TABLE, symbol & 0x3FFFF);\n            if (i < 0) {\n                return -1;\n            }\n            return (PDF417Common.CODEWORD_TABLE[i] - 1) % PDF417Common.NUMBER_OF_CODEWORDS;\n        }\n    }\n    PDF417Common.NUMBER_OF_CODEWORDS = 929;\n    // Maximum Codewords (Data + Error).\n    PDF417Common.MAX_CODEWORDS_IN_BARCODE = PDF417Common.NUMBER_OF_CODEWORDS - 1;\n    PDF417Common.MIN_ROWS_IN_BARCODE = 3;\n    PDF417Common.MAX_ROWS_IN_BARCODE = 90;\n    // One left row indication column + max 30 data columns + one right row indicator column\n    // public static /*final*/ MAX_CODEWORDS_IN_ROW: /*int*/ number = 32;\n    PDF417Common.MODULES_IN_CODEWORD = 17;\n    PDF417Common.MODULES_IN_STOP_PATTERN = 18;\n    PDF417Common.BARS_IN_MODULE = 8;\n    PDF417Common.EMPTY_INT_ARRAY = new Int32Array([]);\n    /**\n     * The sorted table of all possible symbols. Extracted from the PDF417\n     * specification. The index of a symbol in this table corresponds to the\n     * index into the codeword table.\n     */\n    PDF417Common.SYMBOL_TABLE = Int32Array.from([\n        0x1025e, 0x1027a, 0x1029e, 0x102bc, 0x102f2, 0x102f4, 0x1032e, 0x1034e, 0x1035c, 0x10396, 0x103a6, 0x103ac,\n        0x10422, 0x10428, 0x10436, 0x10442, 0x10444, 0x10448, 0x10450, 0x1045e, 0x10466, 0x1046c, 0x1047a, 0x10482,\n        0x1049e, 0x104a0, 0x104bc, 0x104c6, 0x104d8, 0x104ee, 0x104f2, 0x104f4, 0x10504, 0x10508, 0x10510, 0x1051e,\n        0x10520, 0x1053c, 0x10540, 0x10578, 0x10586, 0x1058c, 0x10598, 0x105b0, 0x105be, 0x105ce, 0x105dc, 0x105e2,\n        0x105e4, 0x105e8, 0x105f6, 0x1062e, 0x1064e, 0x1065c, 0x1068e, 0x1069c, 0x106b8, 0x106de, 0x106fa, 0x10716,\n        0x10726, 0x1072c, 0x10746, 0x1074c, 0x10758, 0x1076e, 0x10792, 0x10794, 0x107a2, 0x107a4, 0x107a8, 0x107b6,\n        0x10822, 0x10828, 0x10842, 0x10848, 0x10850, 0x1085e, 0x10866, 0x1086c, 0x1087a, 0x10882, 0x10884, 0x10890,\n        0x1089e, 0x108a0, 0x108bc, 0x108c6, 0x108cc, 0x108d8, 0x108ee, 0x108f2, 0x108f4, 0x10902, 0x10908, 0x1091e,\n        0x10920, 0x1093c, 0x10940, 0x10978, 0x10986, 0x10998, 0x109b0, 0x109be, 0x109ce, 0x109dc, 0x109e2, 0x109e4,\n        0x109e8, 0x109f6, 0x10a08, 0x10a10, 0x10a1e, 0x10a20, 0x10a3c, 0x10a40, 0x10a78, 0x10af0, 0x10b06, 0x10b0c,\n        0x10b18, 0x10b30, 0x10b3e, 0x10b60, 0x10b7c, 0x10b8e, 0x10b9c, 0x10bb8, 0x10bc2, 0x10bc4, 0x10bc8, 0x10bd0,\n        0x10bde, 0x10be6, 0x10bec, 0x10c2e, 0x10c4e, 0x10c5c, 0x10c62, 0x10c64, 0x10c68, 0x10c76, 0x10c8e, 0x10c9c,\n        0x10cb8, 0x10cc2, 0x10cc4, 0x10cc8, 0x10cd0, 0x10cde, 0x10ce6, 0x10cec, 0x10cfa, 0x10d0e, 0x10d1c, 0x10d38,\n        0x10d70, 0x10d7e, 0x10d82, 0x10d84, 0x10d88, 0x10d90, 0x10d9e, 0x10da0, 0x10dbc, 0x10dc6, 0x10dcc, 0x10dd8,\n        0x10dee, 0x10df2, 0x10df4, 0x10e16, 0x10e26, 0x10e2c, 0x10e46, 0x10e58, 0x10e6e, 0x10e86, 0x10e8c, 0x10e98,\n        0x10eb0, 0x10ebe, 0x10ece, 0x10edc, 0x10f0a, 0x10f12, 0x10f14, 0x10f22, 0x10f28, 0x10f36, 0x10f42, 0x10f44,\n        0x10f48, 0x10f50, 0x10f5e, 0x10f66, 0x10f6c, 0x10fb2, 0x10fb4, 0x11022, 0x11028, 0x11042, 0x11048, 0x11050,\n        0x1105e, 0x1107a, 0x11082, 0x11084, 0x11090, 0x1109e, 0x110a0, 0x110bc, 0x110c6, 0x110cc, 0x110d8, 0x110ee,\n        0x110f2, 0x110f4, 0x11102, 0x1111e, 0x11120, 0x1113c, 0x11140, 0x11178, 0x11186, 0x11198, 0x111b0, 0x111be,\n        0x111ce, 0x111dc, 0x111e2, 0x111e4, 0x111e8, 0x111f6, 0x11208, 0x1121e, 0x11220, 0x11278, 0x112f0, 0x1130c,\n        0x11330, 0x1133e, 0x11360, 0x1137c, 0x1138e, 0x1139c, 0x113b8, 0x113c2, 0x113c8, 0x113d0, 0x113de, 0x113e6,\n        0x113ec, 0x11408, 0x11410, 0x1141e, 0x11420, 0x1143c, 0x11440, 0x11478, 0x114f0, 0x115e0, 0x1160c, 0x11618,\n        0x11630, 0x1163e, 0x11660, 0x1167c, 0x116c0, 0x116f8, 0x1171c, 0x11738, 0x11770, 0x1177e, 0x11782, 0x11784,\n        0x11788, 0x11790, 0x1179e, 0x117a0, 0x117bc, 0x117c6, 0x117cc, 0x117d8, 0x117ee, 0x1182e, 0x11834, 0x1184e,\n        0x1185c, 0x11862, 0x11864, 0x11868, 0x11876, 0x1188e, 0x1189c, 0x118b8, 0x118c2, 0x118c8, 0x118d0, 0x118de,\n        0x118e6, 0x118ec, 0x118fa, 0x1190e, 0x1191c, 0x11938, 0x11970, 0x1197e, 0x11982, 0x11984, 0x11990, 0x1199e,\n        0x119a0, 0x119bc, 0x119c6, 0x119cc, 0x119d8, 0x119ee, 0x119f2, 0x119f4, 0x11a0e, 0x11a1c, 0x11a38, 0x11a70,\n        0x11a7e, 0x11ae0, 0x11afc, 0x11b08, 0x11b10, 0x11b1e, 0x11b20, 0x11b3c, 0x11b40, 0x11b78, 0x11b8c, 0x11b98,\n        0x11bb0, 0x11bbe, 0x11bce, 0x11bdc, 0x11be2, 0x11be4, 0x11be8, 0x11bf6, 0x11c16, 0x11c26, 0x11c2c, 0x11c46,\n        0x11c4c, 0x11c58, 0x11c6e, 0x11c86, 0x11c98, 0x11cb0, 0x11cbe, 0x11cce, 0x11cdc, 0x11ce2, 0x11ce4, 0x11ce8,\n        0x11cf6, 0x11d06, 0x11d0c, 0x11d18, 0x11d30, 0x11d3e, 0x11d60, 0x11d7c, 0x11d8e, 0x11d9c, 0x11db8, 0x11dc4,\n        0x11dc8, 0x11dd0, 0x11dde, 0x11de6, 0x11dec, 0x11dfa, 0x11e0a, 0x11e12, 0x11e14, 0x11e22, 0x11e24, 0x11e28,\n        0x11e36, 0x11e42, 0x11e44, 0x11e50, 0x11e5e, 0x11e66, 0x11e6c, 0x11e82, 0x11e84, 0x11e88, 0x11e90, 0x11e9e,\n        0x11ea0, 0x11ebc, 0x11ec6, 0x11ecc, 0x11ed8, 0x11eee, 0x11f1a, 0x11f2e, 0x11f32, 0x11f34, 0x11f4e, 0x11f5c,\n        0x11f62, 0x11f64, 0x11f68, 0x11f76, 0x12048, 0x1205e, 0x12082, 0x12084, 0x12090, 0x1209e, 0x120a0, 0x120bc,\n        0x120d8, 0x120f2, 0x120f4, 0x12108, 0x1211e, 0x12120, 0x1213c, 0x12140, 0x12178, 0x12186, 0x12198, 0x121b0,\n        0x121be, 0x121e2, 0x121e4, 0x121e8, 0x121f6, 0x12204, 0x12210, 0x1221e, 0x12220, 0x12278, 0x122f0, 0x12306,\n        0x1230c, 0x12330, 0x1233e, 0x12360, 0x1237c, 0x1238e, 0x1239c, 0x123b8, 0x123c2, 0x123c8, 0x123d0, 0x123e6,\n        0x123ec, 0x1241e, 0x12420, 0x1243c, 0x124f0, 0x125e0, 0x12618, 0x1263e, 0x12660, 0x1267c, 0x126c0, 0x126f8,\n        0x12738, 0x12770, 0x1277e, 0x12782, 0x12784, 0x12790, 0x1279e, 0x127a0, 0x127bc, 0x127c6, 0x127cc, 0x127d8,\n        0x127ee, 0x12820, 0x1283c, 0x12840, 0x12878, 0x128f0, 0x129e0, 0x12bc0, 0x12c18, 0x12c30, 0x12c3e, 0x12c60,\n        0x12c7c, 0x12cc0, 0x12cf8, 0x12df0, 0x12e1c, 0x12e38, 0x12e70, 0x12e7e, 0x12ee0, 0x12efc, 0x12f04, 0x12f08,\n        0x12f10, 0x12f20, 0x12f3c, 0x12f40, 0x12f78, 0x12f86, 0x12f8c, 0x12f98, 0x12fb0, 0x12fbe, 0x12fce, 0x12fdc,\n        0x1302e, 0x1304e, 0x1305c, 0x13062, 0x13068, 0x1308e, 0x1309c, 0x130b8, 0x130c2, 0x130c8, 0x130d0, 0x130de,\n        0x130ec, 0x130fa, 0x1310e, 0x13138, 0x13170, 0x1317e, 0x13182, 0x13184, 0x13190, 0x1319e, 0x131a0, 0x131bc,\n        0x131c6, 0x131cc, 0x131d8, 0x131f2, 0x131f4, 0x1320e, 0x1321c, 0x13270, 0x1327e, 0x132e0, 0x132fc, 0x13308,\n        0x1331e, 0x13320, 0x1333c, 0x13340, 0x13378, 0x13386, 0x13398, 0x133b0, 0x133be, 0x133ce, 0x133dc, 0x133e2,\n        0x133e4, 0x133e8, 0x133f6, 0x1340e, 0x1341c, 0x13438, 0x13470, 0x1347e, 0x134e0, 0x134fc, 0x135c0, 0x135f8,\n        0x13608, 0x13610, 0x1361e, 0x13620, 0x1363c, 0x13640, 0x13678, 0x136f0, 0x1370c, 0x13718, 0x13730, 0x1373e,\n        0x13760, 0x1377c, 0x1379c, 0x137b8, 0x137c2, 0x137c4, 0x137c8, 0x137d0, 0x137de, 0x137e6, 0x137ec, 0x13816,\n        0x13826, 0x1382c, 0x13846, 0x1384c, 0x13858, 0x1386e, 0x13874, 0x13886, 0x13898, 0x138b0, 0x138be, 0x138ce,\n        0x138dc, 0x138e2, 0x138e4, 0x138e8, 0x13906, 0x1390c, 0x13930, 0x1393e, 0x13960, 0x1397c, 0x1398e, 0x1399c,\n        0x139b8, 0x139c8, 0x139d0, 0x139de, 0x139e6, 0x139ec, 0x139fa, 0x13a06, 0x13a0c, 0x13a18, 0x13a30, 0x13a3e,\n        0x13a60, 0x13a7c, 0x13ac0, 0x13af8, 0x13b0e, 0x13b1c, 0x13b38, 0x13b70, 0x13b7e, 0x13b88, 0x13b90, 0x13b9e,\n        0x13ba0, 0x13bbc, 0x13bcc, 0x13bd8, 0x13bee, 0x13bf2, 0x13bf4, 0x13c12, 0x13c14, 0x13c22, 0x13c24, 0x13c28,\n        0x13c36, 0x13c42, 0x13c48, 0x13c50, 0x13c5e, 0x13c66, 0x13c6c, 0x13c82, 0x13c84, 0x13c90, 0x13c9e, 0x13ca0,\n        0x13cbc, 0x13cc6, 0x13ccc, 0x13cd8, 0x13cee, 0x13d02, 0x13d04, 0x13d08, 0x13d10, 0x13d1e, 0x13d20, 0x13d3c,\n        0x13d40, 0x13d78, 0x13d86, 0x13d8c, 0x13d98, 0x13db0, 0x13dbe, 0x13dce, 0x13ddc, 0x13de4, 0x13de8, 0x13df6,\n        0x13e1a, 0x13e2e, 0x13e32, 0x13e34, 0x13e4e, 0x13e5c, 0x13e62, 0x13e64, 0x13e68, 0x13e76, 0x13e8e, 0x13e9c,\n        0x13eb8, 0x13ec2, 0x13ec4, 0x13ec8, 0x13ed0, 0x13ede, 0x13ee6, 0x13eec, 0x13f26, 0x13f2c, 0x13f3a, 0x13f46,\n        0x13f4c, 0x13f58, 0x13f6e, 0x13f72, 0x13f74, 0x14082, 0x1409e, 0x140a0, 0x140bc, 0x14104, 0x14108, 0x14110,\n        0x1411e, 0x14120, 0x1413c, 0x14140, 0x14178, 0x1418c, 0x14198, 0x141b0, 0x141be, 0x141e2, 0x141e4, 0x141e8,\n        0x14208, 0x14210, 0x1421e, 0x14220, 0x1423c, 0x14240, 0x14278, 0x142f0, 0x14306, 0x1430c, 0x14318, 0x14330,\n        0x1433e, 0x14360, 0x1437c, 0x1438e, 0x143c2, 0x143c4, 0x143c8, 0x143d0, 0x143e6, 0x143ec, 0x14408, 0x14410,\n        0x1441e, 0x14420, 0x1443c, 0x14440, 0x14478, 0x144f0, 0x145e0, 0x1460c, 0x14618, 0x14630, 0x1463e, 0x14660,\n        0x1467c, 0x146c0, 0x146f8, 0x1471c, 0x14738, 0x14770, 0x1477e, 0x14782, 0x14784, 0x14788, 0x14790, 0x147a0,\n        0x147bc, 0x147c6, 0x147cc, 0x147d8, 0x147ee, 0x14810, 0x14820, 0x1483c, 0x14840, 0x14878, 0x148f0, 0x149e0,\n        0x14bc0, 0x14c30, 0x14c3e, 0x14c60, 0x14c7c, 0x14cc0, 0x14cf8, 0x14df0, 0x14e38, 0x14e70, 0x14e7e, 0x14ee0,\n        0x14efc, 0x14f04, 0x14f08, 0x14f10, 0x14f1e, 0x14f20, 0x14f3c, 0x14f40, 0x14f78, 0x14f86, 0x14f8c, 0x14f98,\n        0x14fb0, 0x14fce, 0x14fdc, 0x15020, 0x15040, 0x15078, 0x150f0, 0x151e0, 0x153c0, 0x15860, 0x1587c, 0x158c0,\n        0x158f8, 0x159f0, 0x15be0, 0x15c70, 0x15c7e, 0x15ce0, 0x15cfc, 0x15dc0, 0x15df8, 0x15e08, 0x15e10, 0x15e20,\n        0x15e40, 0x15e78, 0x15ef0, 0x15f0c, 0x15f18, 0x15f30, 0x15f60, 0x15f7c, 0x15f8e, 0x15f9c, 0x15fb8, 0x1604e,\n        0x1605c, 0x1608e, 0x1609c, 0x160b8, 0x160c2, 0x160c4, 0x160c8, 0x160de, 0x1610e, 0x1611c, 0x16138, 0x16170,\n        0x1617e, 0x16184, 0x16188, 0x16190, 0x1619e, 0x161a0, 0x161bc, 0x161c6, 0x161cc, 0x161d8, 0x161f2, 0x161f4,\n        0x1620e, 0x1621c, 0x16238, 0x16270, 0x1627e, 0x162e0, 0x162fc, 0x16304, 0x16308, 0x16310, 0x1631e, 0x16320,\n        0x1633c, 0x16340, 0x16378, 0x16386, 0x1638c, 0x16398, 0x163b0, 0x163be, 0x163ce, 0x163dc, 0x163e2, 0x163e4,\n        0x163e8, 0x163f6, 0x1640e, 0x1641c, 0x16438, 0x16470, 0x1647e, 0x164e0, 0x164fc, 0x165c0, 0x165f8, 0x16610,\n        0x1661e, 0x16620, 0x1663c, 0x16640, 0x16678, 0x166f0, 0x16718, 0x16730, 0x1673e, 0x16760, 0x1677c, 0x1678e,\n        0x1679c, 0x167b8, 0x167c2, 0x167c4, 0x167c8, 0x167d0, 0x167de, 0x167e6, 0x167ec, 0x1681c, 0x16838, 0x16870,\n        0x168e0, 0x168fc, 0x169c0, 0x169f8, 0x16bf0, 0x16c10, 0x16c1e, 0x16c20, 0x16c3c, 0x16c40, 0x16c78, 0x16cf0,\n        0x16de0, 0x16e18, 0x16e30, 0x16e3e, 0x16e60, 0x16e7c, 0x16ec0, 0x16ef8, 0x16f1c, 0x16f38, 0x16f70, 0x16f7e,\n        0x16f84, 0x16f88, 0x16f90, 0x16f9e, 0x16fa0, 0x16fbc, 0x16fc6, 0x16fcc, 0x16fd8, 0x17026, 0x1702c, 0x17046,\n        0x1704c, 0x17058, 0x1706e, 0x17086, 0x1708c, 0x17098, 0x170b0, 0x170be, 0x170ce, 0x170dc, 0x170e8, 0x17106,\n        0x1710c, 0x17118, 0x17130, 0x1713e, 0x17160, 0x1717c, 0x1718e, 0x1719c, 0x171b8, 0x171c2, 0x171c4, 0x171c8,\n        0x171d0, 0x171de, 0x171e6, 0x171ec, 0x171fa, 0x17206, 0x1720c, 0x17218, 0x17230, 0x1723e, 0x17260, 0x1727c,\n        0x172c0, 0x172f8, 0x1730e, 0x1731c, 0x17338, 0x17370, 0x1737e, 0x17388, 0x17390, 0x1739e, 0x173a0, 0x173bc,\n        0x173cc, 0x173d8, 0x173ee, 0x173f2, 0x173f4, 0x1740c, 0x17418, 0x17430, 0x1743e, 0x17460, 0x1747c, 0x174c0,\n        0x174f8, 0x175f0, 0x1760e, 0x1761c, 0x17638, 0x17670, 0x1767e, 0x176e0, 0x176fc, 0x17708, 0x17710, 0x1771e,\n        0x17720, 0x1773c, 0x17740, 0x17778, 0x17798, 0x177b0, 0x177be, 0x177dc, 0x177e2, 0x177e4, 0x177e8, 0x17822,\n        0x17824, 0x17828, 0x17836, 0x17842, 0x17844, 0x17848, 0x17850, 0x1785e, 0x17866, 0x1786c, 0x17882, 0x17884,\n        0x17888, 0x17890, 0x1789e, 0x178a0, 0x178bc, 0x178c6, 0x178cc, 0x178d8, 0x178ee, 0x178f2, 0x178f4, 0x17902,\n        0x17904, 0x17908, 0x17910, 0x1791e, 0x17920, 0x1793c, 0x17940, 0x17978, 0x17986, 0x1798c, 0x17998, 0x179b0,\n        0x179be, 0x179ce, 0x179dc, 0x179e2, 0x179e4, 0x179e8, 0x179f6, 0x17a04, 0x17a08, 0x17a10, 0x17a1e, 0x17a20,\n        0x17a3c, 0x17a40, 0x17a78, 0x17af0, 0x17b06, 0x17b0c, 0x17b18, 0x17b30, 0x17b3e, 0x17b60, 0x17b7c, 0x17b8e,\n        0x17b9c, 0x17bb8, 0x17bc4, 0x17bc8, 0x17bd0, 0x17bde, 0x17be6, 0x17bec, 0x17c2e, 0x17c32, 0x17c34, 0x17c4e,\n        0x17c5c, 0x17c62, 0x17c64, 0x17c68, 0x17c76, 0x17c8e, 0x17c9c, 0x17cb8, 0x17cc2, 0x17cc4, 0x17cc8, 0x17cd0,\n        0x17cde, 0x17ce6, 0x17cec, 0x17d0e, 0x17d1c, 0x17d38, 0x17d70, 0x17d82, 0x17d84, 0x17d88, 0x17d90, 0x17d9e,\n        0x17da0, 0x17dbc, 0x17dc6, 0x17dcc, 0x17dd8, 0x17dee, 0x17e26, 0x17e2c, 0x17e3a, 0x17e46, 0x17e4c, 0x17e58,\n        0x17e6e, 0x17e72, 0x17e74, 0x17e86, 0x17e8c, 0x17e98, 0x17eb0, 0x17ece, 0x17edc, 0x17ee2, 0x17ee4, 0x17ee8,\n        0x17ef6, 0x1813a, 0x18172, 0x18174, 0x18216, 0x18226, 0x1823a, 0x1824c, 0x18258, 0x1826e, 0x18272, 0x18274,\n        0x18298, 0x182be, 0x182e2, 0x182e4, 0x182e8, 0x182f6, 0x1835e, 0x1837a, 0x183ae, 0x183d6, 0x18416, 0x18426,\n        0x1842c, 0x1843a, 0x18446, 0x18458, 0x1846e, 0x18472, 0x18474, 0x18486, 0x184b0, 0x184be, 0x184ce, 0x184dc,\n        0x184e2, 0x184e4, 0x184e8, 0x184f6, 0x18506, 0x1850c, 0x18518, 0x18530, 0x1853e, 0x18560, 0x1857c, 0x1858e,\n        0x1859c, 0x185b8, 0x185c2, 0x185c4, 0x185c8, 0x185d0, 0x185de, 0x185e6, 0x185ec, 0x185fa, 0x18612, 0x18614,\n        0x18622, 0x18628, 0x18636, 0x18642, 0x18650, 0x1865e, 0x1867a, 0x18682, 0x18684, 0x18688, 0x18690, 0x1869e,\n        0x186a0, 0x186bc, 0x186c6, 0x186cc, 0x186d8, 0x186ee, 0x186f2, 0x186f4, 0x1872e, 0x1874e, 0x1875c, 0x18796,\n        0x187a6, 0x187ac, 0x187d2, 0x187d4, 0x18826, 0x1882c, 0x1883a, 0x18846, 0x1884c, 0x18858, 0x1886e, 0x18872,\n        0x18874, 0x18886, 0x18898, 0x188b0, 0x188be, 0x188ce, 0x188dc, 0x188e2, 0x188e4, 0x188e8, 0x188f6, 0x1890c,\n        0x18930, 0x1893e, 0x18960, 0x1897c, 0x1898e, 0x189b8, 0x189c2, 0x189c8, 0x189d0, 0x189de, 0x189e6, 0x189ec,\n        0x189fa, 0x18a18, 0x18a30, 0x18a3e, 0x18a60, 0x18a7c, 0x18ac0, 0x18af8, 0x18b1c, 0x18b38, 0x18b70, 0x18b7e,\n        0x18b82, 0x18b84, 0x18b88, 0x18b90, 0x18b9e, 0x18ba0, 0x18bbc, 0x18bc6, 0x18bcc, 0x18bd8, 0x18bee, 0x18bf2,\n        0x18bf4, 0x18c22, 0x18c24, 0x18c28, 0x18c36, 0x18c42, 0x18c48, 0x18c50, 0x18c5e, 0x18c66, 0x18c7a, 0x18c82,\n        0x18c84, 0x18c90, 0x18c9e, 0x18ca0, 0x18cbc, 0x18ccc, 0x18cf2, 0x18cf4, 0x18d04, 0x18d08, 0x18d10, 0x18d1e,\n        0x18d20, 0x18d3c, 0x18d40, 0x18d78, 0x18d86, 0x18d98, 0x18dce, 0x18de2, 0x18de4, 0x18de8, 0x18e2e, 0x18e32,\n        0x18e34, 0x18e4e, 0x18e5c, 0x18e62, 0x18e64, 0x18e68, 0x18e8e, 0x18e9c, 0x18eb8, 0x18ec2, 0x18ec4, 0x18ec8,\n        0x18ed0, 0x18efa, 0x18f16, 0x18f26, 0x18f2c, 0x18f46, 0x18f4c, 0x18f58, 0x18f6e, 0x18f8a, 0x18f92, 0x18f94,\n        0x18fa2, 0x18fa4, 0x18fa8, 0x18fb6, 0x1902c, 0x1903a, 0x19046, 0x1904c, 0x19058, 0x19072, 0x19074, 0x19086,\n        0x19098, 0x190b0, 0x190be, 0x190ce, 0x190dc, 0x190e2, 0x190e8, 0x190f6, 0x19106, 0x1910c, 0x19130, 0x1913e,\n        0x19160, 0x1917c, 0x1918e, 0x1919c, 0x191b8, 0x191c2, 0x191c8, 0x191d0, 0x191de, 0x191e6, 0x191ec, 0x191fa,\n        0x19218, 0x1923e, 0x19260, 0x1927c, 0x192c0, 0x192f8, 0x19338, 0x19370, 0x1937e, 0x19382, 0x19384, 0x19390,\n        0x1939e, 0x193a0, 0x193bc, 0x193c6, 0x193cc, 0x193d8, 0x193ee, 0x193f2, 0x193f4, 0x19430, 0x1943e, 0x19460,\n        0x1947c, 0x194c0, 0x194f8, 0x195f0, 0x19638, 0x19670, 0x1967e, 0x196e0, 0x196fc, 0x19702, 0x19704, 0x19708,\n        0x19710, 0x19720, 0x1973c, 0x19740, 0x19778, 0x19786, 0x1978c, 0x19798, 0x197b0, 0x197be, 0x197ce, 0x197dc,\n        0x197e2, 0x197e4, 0x197e8, 0x19822, 0x19824, 0x19842, 0x19848, 0x19850, 0x1985e, 0x19866, 0x1987a, 0x19882,\n        0x19884, 0x19890, 0x1989e, 0x198a0, 0x198bc, 0x198cc, 0x198f2, 0x198f4, 0x19902, 0x19908, 0x1991e, 0x19920,\n        0x1993c, 0x19940, 0x19978, 0x19986, 0x19998, 0x199ce, 0x199e2, 0x199e4, 0x199e8, 0x19a08, 0x19a10, 0x19a1e,\n        0x19a20, 0x19a3c, 0x19a40, 0x19a78, 0x19af0, 0x19b18, 0x19b3e, 0x19b60, 0x19b9c, 0x19bc2, 0x19bc4, 0x19bc8,\n        0x19bd0, 0x19be6, 0x19c2e, 0x19c34, 0x19c4e, 0x19c5c, 0x19c62, 0x19c64, 0x19c68, 0x19c8e, 0x19c9c, 0x19cb8,\n        0x19cc2, 0x19cc8, 0x19cd0, 0x19ce6, 0x19cfa, 0x19d0e, 0x19d1c, 0x19d38, 0x19d70, 0x19d7e, 0x19d82, 0x19d84,\n        0x19d88, 0x19d90, 0x19da0, 0x19dcc, 0x19df2, 0x19df4, 0x19e16, 0x19e26, 0x19e2c, 0x19e46, 0x19e4c, 0x19e58,\n        0x19e74, 0x19e86, 0x19e8c, 0x19e98, 0x19eb0, 0x19ebe, 0x19ece, 0x19ee2, 0x19ee4, 0x19ee8, 0x19f0a, 0x19f12,\n        0x19f14, 0x19f22, 0x19f24, 0x19f28, 0x19f42, 0x19f44, 0x19f48, 0x19f50, 0x19f5e, 0x19f6c, 0x19f9a, 0x19fae,\n        0x19fb2, 0x19fb4, 0x1a046, 0x1a04c, 0x1a072, 0x1a074, 0x1a086, 0x1a08c, 0x1a098, 0x1a0b0, 0x1a0be, 0x1a0e2,\n        0x1a0e4, 0x1a0e8, 0x1a0f6, 0x1a106, 0x1a10c, 0x1a118, 0x1a130, 0x1a13e, 0x1a160, 0x1a17c, 0x1a18e, 0x1a19c,\n        0x1a1b8, 0x1a1c2, 0x1a1c4, 0x1a1c8, 0x1a1d0, 0x1a1de, 0x1a1e6, 0x1a1ec, 0x1a218, 0x1a230, 0x1a23e, 0x1a260,\n        0x1a27c, 0x1a2c0, 0x1a2f8, 0x1a31c, 0x1a338, 0x1a370, 0x1a37e, 0x1a382, 0x1a384, 0x1a388, 0x1a390, 0x1a39e,\n        0x1a3a0, 0x1a3bc, 0x1a3c6, 0x1a3cc, 0x1a3d8, 0x1a3ee, 0x1a3f2, 0x1a3f4, 0x1a418, 0x1a430, 0x1a43e, 0x1a460,\n        0x1a47c, 0x1a4c0, 0x1a4f8, 0x1a5f0, 0x1a61c, 0x1a638, 0x1a670, 0x1a67e, 0x1a6e0, 0x1a6fc, 0x1a702, 0x1a704,\n        0x1a708, 0x1a710, 0x1a71e, 0x1a720, 0x1a73c, 0x1a740, 0x1a778, 0x1a786, 0x1a78c, 0x1a798, 0x1a7b0, 0x1a7be,\n        0x1a7ce, 0x1a7dc, 0x1a7e2, 0x1a7e4, 0x1a7e8, 0x1a830, 0x1a860, 0x1a87c, 0x1a8c0, 0x1a8f8, 0x1a9f0, 0x1abe0,\n        0x1ac70, 0x1ac7e, 0x1ace0, 0x1acfc, 0x1adc0, 0x1adf8, 0x1ae04, 0x1ae08, 0x1ae10, 0x1ae20, 0x1ae3c, 0x1ae40,\n        0x1ae78, 0x1aef0, 0x1af06, 0x1af0c, 0x1af18, 0x1af30, 0x1af3e, 0x1af60, 0x1af7c, 0x1af8e, 0x1af9c, 0x1afb8,\n        0x1afc4, 0x1afc8, 0x1afd0, 0x1afde, 0x1b042, 0x1b05e, 0x1b07a, 0x1b082, 0x1b084, 0x1b088, 0x1b090, 0x1b09e,\n        0x1b0a0, 0x1b0bc, 0x1b0cc, 0x1b0f2, 0x1b0f4, 0x1b102, 0x1b104, 0x1b108, 0x1b110, 0x1b11e, 0x1b120, 0x1b13c,\n        0x1b140, 0x1b178, 0x1b186, 0x1b198, 0x1b1ce, 0x1b1e2, 0x1b1e4, 0x1b1e8, 0x1b204, 0x1b208, 0x1b210, 0x1b21e,\n        0x1b220, 0x1b23c, 0x1b240, 0x1b278, 0x1b2f0, 0x1b30c, 0x1b33e, 0x1b360, 0x1b39c, 0x1b3c2, 0x1b3c4, 0x1b3c8,\n        0x1b3d0, 0x1b3e6, 0x1b410, 0x1b41e, 0x1b420, 0x1b43c, 0x1b440, 0x1b478, 0x1b4f0, 0x1b5e0, 0x1b618, 0x1b660,\n        0x1b67c, 0x1b6c0, 0x1b738, 0x1b782, 0x1b784, 0x1b788, 0x1b790, 0x1b79e, 0x1b7a0, 0x1b7cc, 0x1b82e, 0x1b84e,\n        0x1b85c, 0x1b88e, 0x1b89c, 0x1b8b8, 0x1b8c2, 0x1b8c4, 0x1b8c8, 0x1b8d0, 0x1b8e6, 0x1b8fa, 0x1b90e, 0x1b91c,\n        0x1b938, 0x1b970, 0x1b97e, 0x1b982, 0x1b984, 0x1b988, 0x1b990, 0x1b99e, 0x1b9a0, 0x1b9cc, 0x1b9f2, 0x1b9f4,\n        0x1ba0e, 0x1ba1c, 0x1ba38, 0x1ba70, 0x1ba7e, 0x1bae0, 0x1bafc, 0x1bb08, 0x1bb10, 0x1bb20, 0x1bb3c, 0x1bb40,\n        0x1bb98, 0x1bbce, 0x1bbe2, 0x1bbe4, 0x1bbe8, 0x1bc16, 0x1bc26, 0x1bc2c, 0x1bc46, 0x1bc4c, 0x1bc58, 0x1bc72,\n        0x1bc74, 0x1bc86, 0x1bc8c, 0x1bc98, 0x1bcb0, 0x1bcbe, 0x1bcce, 0x1bce2, 0x1bce4, 0x1bce8, 0x1bd06, 0x1bd0c,\n        0x1bd18, 0x1bd30, 0x1bd3e, 0x1bd60, 0x1bd7c, 0x1bd9c, 0x1bdc2, 0x1bdc4, 0x1bdc8, 0x1bdd0, 0x1bde6, 0x1bdfa,\n        0x1be12, 0x1be14, 0x1be22, 0x1be24, 0x1be28, 0x1be42, 0x1be44, 0x1be48, 0x1be50, 0x1be5e, 0x1be66, 0x1be82,\n        0x1be84, 0x1be88, 0x1be90, 0x1be9e, 0x1bea0, 0x1bebc, 0x1becc, 0x1bef4, 0x1bf1a, 0x1bf2e, 0x1bf32, 0x1bf34,\n        0x1bf4e, 0x1bf5c, 0x1bf62, 0x1bf64, 0x1bf68, 0x1c09a, 0x1c0b2, 0x1c0b4, 0x1c11a, 0x1c132, 0x1c134, 0x1c162,\n        0x1c164, 0x1c168, 0x1c176, 0x1c1ba, 0x1c21a, 0x1c232, 0x1c234, 0x1c24e, 0x1c25c, 0x1c262, 0x1c264, 0x1c268,\n        0x1c276, 0x1c28e, 0x1c2c2, 0x1c2c4, 0x1c2c8, 0x1c2d0, 0x1c2de, 0x1c2e6, 0x1c2ec, 0x1c2fa, 0x1c316, 0x1c326,\n        0x1c33a, 0x1c346, 0x1c34c, 0x1c372, 0x1c374, 0x1c41a, 0x1c42e, 0x1c432, 0x1c434, 0x1c44e, 0x1c45c, 0x1c462,\n        0x1c464, 0x1c468, 0x1c476, 0x1c48e, 0x1c49c, 0x1c4b8, 0x1c4c2, 0x1c4c8, 0x1c4d0, 0x1c4de, 0x1c4e6, 0x1c4ec,\n        0x1c4fa, 0x1c51c, 0x1c538, 0x1c570, 0x1c57e, 0x1c582, 0x1c584, 0x1c588, 0x1c590, 0x1c59e, 0x1c5a0, 0x1c5bc,\n        0x1c5c6, 0x1c5cc, 0x1c5d8, 0x1c5ee, 0x1c5f2, 0x1c5f4, 0x1c616, 0x1c626, 0x1c62c, 0x1c63a, 0x1c646, 0x1c64c,\n        0x1c658, 0x1c66e, 0x1c672, 0x1c674, 0x1c686, 0x1c68c, 0x1c698, 0x1c6b0, 0x1c6be, 0x1c6ce, 0x1c6dc, 0x1c6e2,\n        0x1c6e4, 0x1c6e8, 0x1c712, 0x1c714, 0x1c722, 0x1c728, 0x1c736, 0x1c742, 0x1c744, 0x1c748, 0x1c750, 0x1c75e,\n        0x1c766, 0x1c76c, 0x1c77a, 0x1c7ae, 0x1c7d6, 0x1c7ea, 0x1c81a, 0x1c82e, 0x1c832, 0x1c834, 0x1c84e, 0x1c85c,\n        0x1c862, 0x1c864, 0x1c868, 0x1c876, 0x1c88e, 0x1c89c, 0x1c8b8, 0x1c8c2, 0x1c8c8, 0x1c8d0, 0x1c8de, 0x1c8e6,\n        0x1c8ec, 0x1c8fa, 0x1c90e, 0x1c938, 0x1c970, 0x1c97e, 0x1c982, 0x1c984, 0x1c990, 0x1c99e, 0x1c9a0, 0x1c9bc,\n        0x1c9c6, 0x1c9cc, 0x1c9d8, 0x1c9ee, 0x1c9f2, 0x1c9f4, 0x1ca38, 0x1ca70, 0x1ca7e, 0x1cae0, 0x1cafc, 0x1cb02,\n        0x1cb04, 0x1cb08, 0x1cb10, 0x1cb20, 0x1cb3c, 0x1cb40, 0x1cb78, 0x1cb86, 0x1cb8c, 0x1cb98, 0x1cbb0, 0x1cbbe,\n        0x1cbce, 0x1cbdc, 0x1cbe2, 0x1cbe4, 0x1cbe8, 0x1cbf6, 0x1cc16, 0x1cc26, 0x1cc2c, 0x1cc3a, 0x1cc46, 0x1cc58,\n        0x1cc72, 0x1cc74, 0x1cc86, 0x1ccb0, 0x1ccbe, 0x1ccce, 0x1cce2, 0x1cce4, 0x1cce8, 0x1cd06, 0x1cd0c, 0x1cd18,\n        0x1cd30, 0x1cd3e, 0x1cd60, 0x1cd7c, 0x1cd9c, 0x1cdc2, 0x1cdc4, 0x1cdc8, 0x1cdd0, 0x1cdde, 0x1cde6, 0x1cdfa,\n        0x1ce22, 0x1ce28, 0x1ce42, 0x1ce50, 0x1ce5e, 0x1ce66, 0x1ce7a, 0x1ce82, 0x1ce84, 0x1ce88, 0x1ce90, 0x1ce9e,\n        0x1cea0, 0x1cebc, 0x1cecc, 0x1cef2, 0x1cef4, 0x1cf2e, 0x1cf32, 0x1cf34, 0x1cf4e, 0x1cf5c, 0x1cf62, 0x1cf64,\n        0x1cf68, 0x1cf96, 0x1cfa6, 0x1cfac, 0x1cfca, 0x1cfd2, 0x1cfd4, 0x1d02e, 0x1d032, 0x1d034, 0x1d04e, 0x1d05c,\n        0x1d062, 0x1d064, 0x1d068, 0x1d076, 0x1d08e, 0x1d09c, 0x1d0b8, 0x1d0c2, 0x1d0c4, 0x1d0c8, 0x1d0d0, 0x1d0de,\n        0x1d0e6, 0x1d0ec, 0x1d0fa, 0x1d11c, 0x1d138, 0x1d170, 0x1d17e, 0x1d182, 0x1d184, 0x1d188, 0x1d190, 0x1d19e,\n        0x1d1a0, 0x1d1bc, 0x1d1c6, 0x1d1cc, 0x1d1d8, 0x1d1ee, 0x1d1f2, 0x1d1f4, 0x1d21c, 0x1d238, 0x1d270, 0x1d27e,\n        0x1d2e0, 0x1d2fc, 0x1d302, 0x1d304, 0x1d308, 0x1d310, 0x1d31e, 0x1d320, 0x1d33c, 0x1d340, 0x1d378, 0x1d386,\n        0x1d38c, 0x1d398, 0x1d3b0, 0x1d3be, 0x1d3ce, 0x1d3dc, 0x1d3e2, 0x1d3e4, 0x1d3e8, 0x1d3f6, 0x1d470, 0x1d47e,\n        0x1d4e0, 0x1d4fc, 0x1d5c0, 0x1d5f8, 0x1d604, 0x1d608, 0x1d610, 0x1d620, 0x1d640, 0x1d678, 0x1d6f0, 0x1d706,\n        0x1d70c, 0x1d718, 0x1d730, 0x1d73e, 0x1d760, 0x1d77c, 0x1d78e, 0x1d79c, 0x1d7b8, 0x1d7c2, 0x1d7c4, 0x1d7c8,\n        0x1d7d0, 0x1d7de, 0x1d7e6, 0x1d7ec, 0x1d826, 0x1d82c, 0x1d83a, 0x1d846, 0x1d84c, 0x1d858, 0x1d872, 0x1d874,\n        0x1d886, 0x1d88c, 0x1d898, 0x1d8b0, 0x1d8be, 0x1d8ce, 0x1d8e2, 0x1d8e4, 0x1d8e8, 0x1d8f6, 0x1d90c, 0x1d918,\n        0x1d930, 0x1d93e, 0x1d960, 0x1d97c, 0x1d99c, 0x1d9c2, 0x1d9c4, 0x1d9c8, 0x1d9d0, 0x1d9e6, 0x1d9fa, 0x1da0c,\n        0x1da18, 0x1da30, 0x1da3e, 0x1da60, 0x1da7c, 0x1dac0, 0x1daf8, 0x1db38, 0x1db82, 0x1db84, 0x1db88, 0x1db90,\n        0x1db9e, 0x1dba0, 0x1dbcc, 0x1dbf2, 0x1dbf4, 0x1dc22, 0x1dc42, 0x1dc44, 0x1dc48, 0x1dc50, 0x1dc5e, 0x1dc66,\n        0x1dc7a, 0x1dc82, 0x1dc84, 0x1dc88, 0x1dc90, 0x1dc9e, 0x1dca0, 0x1dcbc, 0x1dccc, 0x1dcf2, 0x1dcf4, 0x1dd04,\n        0x1dd08, 0x1dd10, 0x1dd1e, 0x1dd20, 0x1dd3c, 0x1dd40, 0x1dd78, 0x1dd86, 0x1dd98, 0x1ddce, 0x1dde2, 0x1dde4,\n        0x1dde8, 0x1de2e, 0x1de32, 0x1de34, 0x1de4e, 0x1de5c, 0x1de62, 0x1de64, 0x1de68, 0x1de8e, 0x1de9c, 0x1deb8,\n        0x1dec2, 0x1dec4, 0x1dec8, 0x1ded0, 0x1dee6, 0x1defa, 0x1df16, 0x1df26, 0x1df2c, 0x1df46, 0x1df4c, 0x1df58,\n        0x1df72, 0x1df74, 0x1df8a, 0x1df92, 0x1df94, 0x1dfa2, 0x1dfa4, 0x1dfa8, 0x1e08a, 0x1e092, 0x1e094, 0x1e0a2,\n        0x1e0a4, 0x1e0a8, 0x1e0b6, 0x1e0da, 0x1e10a, 0x1e112, 0x1e114, 0x1e122, 0x1e124, 0x1e128, 0x1e136, 0x1e142,\n        0x1e144, 0x1e148, 0x1e150, 0x1e166, 0x1e16c, 0x1e17a, 0x1e19a, 0x1e1b2, 0x1e1b4, 0x1e20a, 0x1e212, 0x1e214,\n        0x1e222, 0x1e224, 0x1e228, 0x1e236, 0x1e242, 0x1e248, 0x1e250, 0x1e25e, 0x1e266, 0x1e26c, 0x1e27a, 0x1e282,\n        0x1e284, 0x1e288, 0x1e290, 0x1e2a0, 0x1e2bc, 0x1e2c6, 0x1e2cc, 0x1e2d8, 0x1e2ee, 0x1e2f2, 0x1e2f4, 0x1e31a,\n        0x1e332, 0x1e334, 0x1e35c, 0x1e362, 0x1e364, 0x1e368, 0x1e3ba, 0x1e40a, 0x1e412, 0x1e414, 0x1e422, 0x1e428,\n        0x1e436, 0x1e442, 0x1e448, 0x1e450, 0x1e45e, 0x1e466, 0x1e46c, 0x1e47a, 0x1e482, 0x1e484, 0x1e490, 0x1e49e,\n        0x1e4a0, 0x1e4bc, 0x1e4c6, 0x1e4cc, 0x1e4d8, 0x1e4ee, 0x1e4f2, 0x1e4f4, 0x1e502, 0x1e504, 0x1e508, 0x1e510,\n        0x1e51e, 0x1e520, 0x1e53c, 0x1e540, 0x1e578, 0x1e586, 0x1e58c, 0x1e598, 0x1e5b0, 0x1e5be, 0x1e5ce, 0x1e5dc,\n        0x1e5e2, 0x1e5e4, 0x1e5e8, 0x1e5f6, 0x1e61a, 0x1e62e, 0x1e632, 0x1e634, 0x1e64e, 0x1e65c, 0x1e662, 0x1e668,\n        0x1e68e, 0x1e69c, 0x1e6b8, 0x1e6c2, 0x1e6c4, 0x1e6c8, 0x1e6d0, 0x1e6e6, 0x1e6fa, 0x1e716, 0x1e726, 0x1e72c,\n        0x1e73a, 0x1e746, 0x1e74c, 0x1e758, 0x1e772, 0x1e774, 0x1e792, 0x1e794, 0x1e7a2, 0x1e7a4, 0x1e7a8, 0x1e7b6,\n        0x1e812, 0x1e814, 0x1e822, 0x1e824, 0x1e828, 0x1e836, 0x1e842, 0x1e844, 0x1e848, 0x1e850, 0x1e85e, 0x1e866,\n        0x1e86c, 0x1e87a, 0x1e882, 0x1e884, 0x1e888, 0x1e890, 0x1e89e, 0x1e8a0, 0x1e8bc, 0x1e8c6, 0x1e8cc, 0x1e8d8,\n        0x1e8ee, 0x1e8f2, 0x1e8f4, 0x1e902, 0x1e904, 0x1e908, 0x1e910, 0x1e920, 0x1e93c, 0x1e940, 0x1e978, 0x1e986,\n        0x1e98c, 0x1e998, 0x1e9b0, 0x1e9be, 0x1e9ce, 0x1e9dc, 0x1e9e2, 0x1e9e4, 0x1e9e8, 0x1e9f6, 0x1ea04, 0x1ea08,\n        0x1ea10, 0x1ea20, 0x1ea40, 0x1ea78, 0x1eaf0, 0x1eb06, 0x1eb0c, 0x1eb18, 0x1eb30, 0x1eb3e, 0x1eb60, 0x1eb7c,\n        0x1eb8e, 0x1eb9c, 0x1ebb8, 0x1ebc2, 0x1ebc4, 0x1ebc8, 0x1ebd0, 0x1ebde, 0x1ebe6, 0x1ebec, 0x1ec1a, 0x1ec2e,\n        0x1ec32, 0x1ec34, 0x1ec4e, 0x1ec5c, 0x1ec62, 0x1ec64, 0x1ec68, 0x1ec8e, 0x1ec9c, 0x1ecb8, 0x1ecc2, 0x1ecc4,\n        0x1ecc8, 0x1ecd0, 0x1ece6, 0x1ecfa, 0x1ed0e, 0x1ed1c, 0x1ed38, 0x1ed70, 0x1ed7e, 0x1ed82, 0x1ed84, 0x1ed88,\n        0x1ed90, 0x1ed9e, 0x1eda0, 0x1edcc, 0x1edf2, 0x1edf4, 0x1ee16, 0x1ee26, 0x1ee2c, 0x1ee3a, 0x1ee46, 0x1ee4c,\n        0x1ee58, 0x1ee6e, 0x1ee72, 0x1ee74, 0x1ee86, 0x1ee8c, 0x1ee98, 0x1eeb0, 0x1eebe, 0x1eece, 0x1eedc, 0x1eee2,\n        0x1eee4, 0x1eee8, 0x1ef12, 0x1ef22, 0x1ef24, 0x1ef28, 0x1ef36, 0x1ef42, 0x1ef44, 0x1ef48, 0x1ef50, 0x1ef5e,\n        0x1ef66, 0x1ef6c, 0x1ef7a, 0x1efae, 0x1efb2, 0x1efb4, 0x1efd6, 0x1f096, 0x1f0a6, 0x1f0ac, 0x1f0ba, 0x1f0ca,\n        0x1f0d2, 0x1f0d4, 0x1f116, 0x1f126, 0x1f12c, 0x1f13a, 0x1f146, 0x1f14c, 0x1f158, 0x1f16e, 0x1f172, 0x1f174,\n        0x1f18a, 0x1f192, 0x1f194, 0x1f1a2, 0x1f1a4, 0x1f1a8, 0x1f1da, 0x1f216, 0x1f226, 0x1f22c, 0x1f23a, 0x1f246,\n        0x1f258, 0x1f26e, 0x1f272, 0x1f274, 0x1f286, 0x1f28c, 0x1f298, 0x1f2b0, 0x1f2be, 0x1f2ce, 0x1f2dc, 0x1f2e2,\n        0x1f2e4, 0x1f2e8, 0x1f2f6, 0x1f30a, 0x1f312, 0x1f314, 0x1f322, 0x1f328, 0x1f342, 0x1f344, 0x1f348, 0x1f350,\n        0x1f35e, 0x1f366, 0x1f37a, 0x1f39a, 0x1f3ae, 0x1f3b2, 0x1f3b4, 0x1f416, 0x1f426, 0x1f42c, 0x1f43a, 0x1f446,\n        0x1f44c, 0x1f458, 0x1f46e, 0x1f472, 0x1f474, 0x1f486, 0x1f48c, 0x1f498, 0x1f4b0, 0x1f4be, 0x1f4ce, 0x1f4dc,\n        0x1f4e2, 0x1f4e4, 0x1f4e8, 0x1f4f6, 0x1f506, 0x1f50c, 0x1f518, 0x1f530, 0x1f53e, 0x1f560, 0x1f57c, 0x1f58e,\n        0x1f59c, 0x1f5b8, 0x1f5c2, 0x1f5c4, 0x1f5c8, 0x1f5d0, 0x1f5de, 0x1f5e6, 0x1f5ec, 0x1f5fa, 0x1f60a, 0x1f612,\n        0x1f614, 0x1f622, 0x1f624, 0x1f628, 0x1f636, 0x1f642, 0x1f644, 0x1f648, 0x1f650, 0x1f65e, 0x1f666, 0x1f67a,\n        0x1f682, 0x1f684, 0x1f688, 0x1f690, 0x1f69e, 0x1f6a0, 0x1f6bc, 0x1f6cc, 0x1f6f2, 0x1f6f4, 0x1f71a, 0x1f72e,\n        0x1f732, 0x1f734, 0x1f74e, 0x1f75c, 0x1f762, 0x1f764, 0x1f768, 0x1f776, 0x1f796, 0x1f7a6, 0x1f7ac, 0x1f7ba,\n        0x1f7d2, 0x1f7d4, 0x1f89a, 0x1f8ae, 0x1f8b2, 0x1f8b4, 0x1f8d6, 0x1f8ea, 0x1f91a, 0x1f92e, 0x1f932, 0x1f934,\n        0x1f94e, 0x1f95c, 0x1f962, 0x1f964, 0x1f968, 0x1f976, 0x1f996, 0x1f9a6, 0x1f9ac, 0x1f9ba, 0x1f9ca, 0x1f9d2,\n        0x1f9d4, 0x1fa1a, 0x1fa2e, 0x1fa32, 0x1fa34, 0x1fa4e, 0x1fa5c, 0x1fa62, 0x1fa64, 0x1fa68, 0x1fa76, 0x1fa8e,\n        0x1fa9c, 0x1fab8, 0x1fac2, 0x1fac4, 0x1fac8, 0x1fad0, 0x1fade, 0x1fae6, 0x1faec, 0x1fb16, 0x1fb26, 0x1fb2c,\n        0x1fb3a, 0x1fb46, 0x1fb4c, 0x1fb58, 0x1fb6e, 0x1fb72, 0x1fb74, 0x1fb8a, 0x1fb92, 0x1fb94, 0x1fba2, 0x1fba4,\n        0x1fba8, 0x1fbb6, 0x1fbda\n    ]);\n    /**\n     * This table contains to codewords for all symbols.\n     */\n    PDF417Common.CODEWORD_TABLE = Int32Array.from([\n        2627, 1819, 2622, 2621, 1813, 1812, 2729, 2724, 2723, 2779, 2774, 2773, 902, 896, 908, 868, 865, 861, 859, 2511,\n        873, 871, 1780, 835, 2493, 825, 2491, 842, 837, 844, 1764, 1762, 811, 810, 809, 2483, 807, 2482, 806, 2480, 815,\n        814, 813, 812, 2484, 817, 816, 1745, 1744, 1742, 1746, 2655, 2637, 2635, 2626, 2625, 2623, 2628, 1820, 2752,\n        2739, 2737, 2728, 2727, 2725, 2730, 2785, 2783, 2778, 2777, 2775, 2780, 787, 781, 747, 739, 736, 2413, 754, 752,\n        1719, 692, 689, 681, 2371, 678, 2369, 700, 697, 694, 703, 1688, 1686, 642, 638, 2343, 631, 2341, 627, 2338, 651,\n        646, 643, 2345, 654, 652, 1652, 1650, 1647, 1654, 601, 599, 2322, 596, 2321, 594, 2319, 2317, 611, 610, 608, 606,\n        2324, 603, 2323, 615, 614, 612, 1617, 1616, 1614, 1612, 616, 1619, 1618, 2575, 2538, 2536, 905, 901, 898, 909,\n        2509, 2507, 2504, 870, 867, 864, 860, 2512, 875, 872, 1781, 2490, 2489, 2487, 2485, 1748, 836, 834, 832, 830,\n        2494, 827, 2492, 843, 841, 839, 845, 1765, 1763, 2701, 2676, 2674, 2653, 2648, 2656, 2634, 2633, 2631, 2629,\n        1821, 2638, 2636, 2770, 2763, 2761, 2750, 2745, 2753, 2736, 2735, 2733, 2731, 1848, 2740, 2738, 2786, 2784, 591,\n        588, 576, 569, 566, 2296, 1590, 537, 534, 526, 2276, 522, 2274, 545, 542, 539, 548, 1572, 1570, 481, 2245, 466,\n        2242, 462, 2239, 492, 485, 482, 2249, 496, 494, 1534, 1531, 1528, 1538, 413, 2196, 406, 2191, 2188, 425, 419,\n        2202, 415, 2199, 432, 430, 427, 1472, 1467, 1464, 433, 1476, 1474, 368, 367, 2160, 365, 2159, 362, 2157, 2155,\n        2152, 378, 377, 375, 2166, 372, 2165, 369, 2162, 383, 381, 379, 2168, 1419, 1418, 1416, 1414, 385, 1411, 384,\n        1423, 1422, 1420, 1424, 2461, 802, 2441, 2439, 790, 786, 783, 794, 2409, 2406, 2403, 750, 742, 738, 2414, 756,\n        753, 1720, 2367, 2365, 2362, 2359, 1663, 693, 691, 684, 2373, 680, 2370, 702, 699, 696, 704, 1690, 1687, 2337,\n        2336, 2334, 2332, 1624, 2329, 1622, 640, 637, 2344, 634, 2342, 630, 2340, 650, 648, 645, 2346, 655, 653, 1653,\n        1651, 1649, 1655, 2612, 2597, 2595, 2571, 2568, 2565, 2576, 2534, 2529, 2526, 1787, 2540, 2537, 907, 904, 900,\n        910, 2503, 2502, 2500, 2498, 1768, 2495, 1767, 2510, 2508, 2506, 869, 866, 863, 2513, 876, 874, 1782, 2720, 2713,\n        2711, 2697, 2694, 2691, 2702, 2672, 2670, 2664, 1828, 2678, 2675, 2647, 2646, 2644, 2642, 1823, 2639, 1822, 2654,\n        2652, 2650, 2657, 2771, 1855, 2765, 2762, 1850, 1849, 2751, 2749, 2747, 2754, 353, 2148, 344, 342, 336, 2142,\n        332, 2140, 345, 1375, 1373, 306, 2130, 299, 2128, 295, 2125, 319, 314, 311, 2132, 1354, 1352, 1349, 1356, 262,\n        257, 2101, 253, 2096, 2093, 274, 273, 267, 2107, 263, 2104, 280, 278, 275, 1316, 1311, 1308, 1320, 1318, 2052,\n        202, 2050, 2044, 2040, 219, 2063, 212, 2060, 208, 2055, 224, 221, 2066, 1260, 1258, 1252, 231, 1248, 229, 1266,\n        1264, 1261, 1268, 155, 1998, 153, 1996, 1994, 1991, 1988, 165, 164, 2007, 162, 2006, 159, 2003, 2000, 172, 171,\n        169, 2012, 166, 2010, 1186, 1184, 1182, 1179, 175, 1176, 173, 1192, 1191, 1189, 1187, 176, 1194, 1193, 2313,\n        2307, 2305, 592, 589, 2294, 2292, 2289, 578, 572, 568, 2297, 580, 1591, 2272, 2267, 2264, 1547, 538, 536, 529,\n        2278, 525, 2275, 547, 544, 541, 1574, 1571, 2237, 2235, 2229, 1493, 2225, 1489, 478, 2247, 470, 2244, 465, 2241,\n        493, 488, 484, 2250, 498, 495, 1536, 1533, 1530, 1539, 2187, 2186, 2184, 2182, 1432, 2179, 1430, 2176, 1427, 414,\n        412, 2197, 409, 2195, 405, 2193, 2190, 426, 424, 421, 2203, 418, 2201, 431, 429, 1473, 1471, 1469, 1466, 434,\n        1477, 1475, 2478, 2472, 2470, 2459, 2457, 2454, 2462, 803, 2437, 2432, 2429, 1726, 2443, 2440, 792, 789, 785,\n        2401, 2399, 2393, 1702, 2389, 1699, 2411, 2408, 2405, 745, 741, 2415, 758, 755, 1721, 2358, 2357, 2355, 2353,\n        1661, 2350, 1660, 2347, 1657, 2368, 2366, 2364, 2361, 1666, 690, 687, 2374, 683, 2372, 701, 698, 705, 1691, 1689,\n        2619, 2617, 2610, 2608, 2605, 2613, 2593, 2588, 2585, 1803, 2599, 2596, 2563, 2561, 2555, 1797, 2551, 1795, 2573,\n        2570, 2567, 2577, 2525, 2524, 2522, 2520, 1786, 2517, 1785, 2514, 1783, 2535, 2533, 2531, 2528, 1788, 2541, 2539,\n        906, 903, 911, 2721, 1844, 2715, 2712, 1838, 1836, 2699, 2696, 2693, 2703, 1827, 1826, 1824, 2673, 2671, 2669,\n        2666, 1829, 2679, 2677, 1858, 1857, 2772, 1854, 1853, 1851, 1856, 2766, 2764, 143, 1987, 139, 1986, 135, 133,\n        131, 1984, 128, 1983, 125, 1981, 138, 137, 136, 1985, 1133, 1132, 1130, 112, 110, 1974, 107, 1973, 104, 1971,\n        1969, 122, 121, 119, 117, 1977, 114, 1976, 124, 1115, 1114, 1112, 1110, 1117, 1116, 84, 83, 1953, 81, 1952, 78,\n        1950, 1948, 1945, 94, 93, 91, 1959, 88, 1958, 85, 1955, 99, 97, 95, 1961, 1086, 1085, 1083, 1081, 1078, 100,\n        1090, 1089, 1087, 1091, 49, 47, 1917, 44, 1915, 1913, 1910, 1907, 59, 1926, 56, 1925, 53, 1922, 1919, 66, 64,\n        1931, 61, 1929, 1042, 1040, 1038, 71, 1035, 70, 1032, 68, 1048, 1047, 1045, 1043, 1050, 1049, 12, 10, 1869, 1867,\n        1864, 1861, 21, 1880, 19, 1877, 1874, 1871, 28, 1888, 25, 1886, 22, 1883, 982, 980, 977, 974, 32, 30, 991, 989,\n        987, 984, 34, 995, 994, 992, 2151, 2150, 2147, 2146, 2144, 356, 355, 354, 2149, 2139, 2138, 2136, 2134, 1359,\n        343, 341, 338, 2143, 335, 2141, 348, 347, 346, 1376, 1374, 2124, 2123, 2121, 2119, 1326, 2116, 1324, 310, 308,\n        305, 2131, 302, 2129, 298, 2127, 320, 318, 316, 313, 2133, 322, 321, 1355, 1353, 1351, 1357, 2092, 2091, 2089,\n        2087, 1276, 2084, 1274, 2081, 1271, 259, 2102, 256, 2100, 252, 2098, 2095, 272, 269, 2108, 266, 2106, 281, 279,\n        277, 1317, 1315, 1313, 1310, 282, 1321, 1319, 2039, 2037, 2035, 2032, 1203, 2029, 1200, 1197, 207, 2053, 205,\n        2051, 201, 2049, 2046, 2043, 220, 218, 2064, 215, 2062, 211, 2059, 228, 226, 223, 2069, 1259, 1257, 1254, 232,\n        1251, 230, 1267, 1265, 1263, 2316, 2315, 2312, 2311, 2309, 2314, 2304, 2303, 2301, 2299, 1593, 2308, 2306, 590,\n        2288, 2287, 2285, 2283, 1578, 2280, 1577, 2295, 2293, 2291, 579, 577, 574, 571, 2298, 582, 581, 1592, 2263, 2262,\n        2260, 2258, 1545, 2255, 1544, 2252, 1541, 2273, 2271, 2269, 2266, 1550, 535, 532, 2279, 528, 2277, 546, 543, 549,\n        1575, 1573, 2224, 2222, 2220, 1486, 2217, 1485, 2214, 1482, 1479, 2238, 2236, 2234, 2231, 1496, 2228, 1492, 480,\n        477, 2248, 473, 2246, 469, 2243, 490, 487, 2251, 497, 1537, 1535, 1532, 2477, 2476, 2474, 2479, 2469, 2468, 2466,\n        2464, 1730, 2473, 2471, 2453, 2452, 2450, 2448, 1729, 2445, 1728, 2460, 2458, 2456, 2463, 805, 804, 2428, 2427,\n        2425, 2423, 1725, 2420, 1724, 2417, 1722, 2438, 2436, 2434, 2431, 1727, 2444, 2442, 793, 791, 788, 795, 2388,\n        2386, 2384, 1697, 2381, 1696, 2378, 1694, 1692, 2402, 2400, 2398, 2395, 1703, 2392, 1701, 2412, 2410, 2407, 751,\n        748, 744, 2416, 759, 757, 1807, 2620, 2618, 1806, 1805, 2611, 2609, 2607, 2614, 1802, 1801, 1799, 2594, 2592,\n        2590, 2587, 1804, 2600, 2598, 1794, 1793, 1791, 1789, 2564, 2562, 2560, 2557, 1798, 2554, 1796, 2574, 2572, 2569,\n        2578, 1847, 1846, 2722, 1843, 1842, 1840, 1845, 2716, 2714, 1835, 1834, 1832, 1830, 1839, 1837, 2700, 2698, 2695,\n        2704, 1817, 1811, 1810, 897, 862, 1777, 829, 826, 838, 1760, 1758, 808, 2481, 1741, 1740, 1738, 1743, 2624, 1818,\n        2726, 2776, 782, 740, 737, 1715, 686, 679, 695, 1682, 1680, 639, 628, 2339, 647, 644, 1645, 1643, 1640, 1648,\n        602, 600, 597, 595, 2320, 593, 2318, 609, 607, 604, 1611, 1610, 1608, 1606, 613, 1615, 1613, 2328, 926, 924, 892,\n        886, 899, 857, 850, 2505, 1778, 824, 823, 821, 819, 2488, 818, 2486, 833, 831, 828, 840, 1761, 1759, 2649, 2632,\n        2630, 2746, 2734, 2732, 2782, 2781, 570, 567, 1587, 531, 527, 523, 540, 1566, 1564, 476, 467, 463, 2240, 486,\n        483, 1524, 1521, 1518, 1529, 411, 403, 2192, 399, 2189, 423, 416, 1462, 1457, 1454, 428, 1468, 1465, 2210, 366,\n        363, 2158, 360, 2156, 357, 2153, 376, 373, 370, 2163, 1410, 1409, 1407, 1405, 382, 1402, 380, 1417, 1415, 1412,\n        1421, 2175, 2174, 777, 774, 771, 784, 732, 725, 722, 2404, 743, 1716, 676, 674, 668, 2363, 665, 2360, 685, 1684,\n        1681, 626, 624, 622, 2335, 620, 2333, 617, 2330, 641, 635, 649, 1646, 1644, 1642, 2566, 928, 925, 2530, 2527,\n        894, 891, 888, 2501, 2499, 2496, 858, 856, 854, 851, 1779, 2692, 2668, 2665, 2645, 2643, 2640, 2651, 2768, 2759,\n        2757, 2744, 2743, 2741, 2748, 352, 1382, 340, 337, 333, 1371, 1369, 307, 300, 296, 2126, 315, 312, 1347, 1342,\n        1350, 261, 258, 250, 2097, 246, 2094, 271, 268, 264, 1306, 1301, 1298, 276, 1312, 1309, 2115, 203, 2048, 195,\n        2045, 191, 2041, 213, 209, 2056, 1246, 1244, 1238, 225, 1234, 222, 1256, 1253, 1249, 1262, 2080, 2079, 154, 1997,\n        150, 1995, 147, 1992, 1989, 163, 160, 2004, 156, 2001, 1175, 1174, 1172, 1170, 1167, 170, 1164, 167, 1185, 1183,\n        1180, 1177, 174, 1190, 1188, 2025, 2024, 2022, 587, 586, 564, 559, 556, 2290, 573, 1588, 520, 518, 512, 2268,\n        508, 2265, 530, 1568, 1565, 461, 457, 2233, 450, 2230, 446, 2226, 479, 471, 489, 1526, 1523, 1520, 397, 395,\n        2185, 392, 2183, 389, 2180, 2177, 410, 2194, 402, 422, 1463, 1461, 1459, 1456, 1470, 2455, 799, 2433, 2430, 779,\n        776, 773, 2397, 2394, 2390, 734, 728, 724, 746, 1717, 2356, 2354, 2351, 2348, 1658, 677, 675, 673, 670, 667, 688,\n        1685, 1683, 2606, 2589, 2586, 2559, 2556, 2552, 927, 2523, 2521, 2518, 2515, 1784, 2532, 895, 893, 890, 2718,\n        2709, 2707, 2689, 2687, 2684, 2663, 2662, 2660, 2658, 1825, 2667, 2769, 1852, 2760, 2758, 142, 141, 1139, 1138,\n        134, 132, 129, 126, 1982, 1129, 1128, 1126, 1131, 113, 111, 108, 105, 1972, 101, 1970, 120, 118, 115, 1109, 1108,\n        1106, 1104, 123, 1113, 1111, 82, 79, 1951, 75, 1949, 72, 1946, 92, 89, 86, 1956, 1077, 1076, 1074, 1072, 98,\n        1069, 96, 1084, 1082, 1079, 1088, 1968, 1967, 48, 45, 1916, 42, 1914, 39, 1911, 1908, 60, 57, 54, 1923, 50, 1920,\n        1031, 1030, 1028, 1026, 67, 1023, 65, 1020, 62, 1041, 1039, 1036, 1033, 69, 1046, 1044, 1944, 1943, 1941, 11, 9,\n        1868, 7, 1865, 1862, 1859, 20, 1878, 16, 1875, 13, 1872, 970, 968, 966, 963, 29, 960, 26, 23, 983, 981, 978, 975,\n        33, 971, 31, 990, 988, 985, 1906, 1904, 1902, 993, 351, 2145, 1383, 331, 330, 328, 326, 2137, 323, 2135, 339,\n        1372, 1370, 294, 293, 291, 289, 2122, 286, 2120, 283, 2117, 309, 303, 317, 1348, 1346, 1344, 245, 244, 242, 2090,\n        239, 2088, 236, 2085, 2082, 260, 2099, 249, 270, 1307, 1305, 1303, 1300, 1314, 189, 2038, 186, 2036, 183, 2033,\n        2030, 2026, 206, 198, 2047, 194, 216, 1247, 1245, 1243, 1240, 227, 1237, 1255, 2310, 2302, 2300, 2286, 2284,\n        2281, 565, 563, 561, 558, 575, 1589, 2261, 2259, 2256, 2253, 1542, 521, 519, 517, 514, 2270, 511, 533, 1569,\n        1567, 2223, 2221, 2218, 2215, 1483, 2211, 1480, 459, 456, 453, 2232, 449, 474, 491, 1527, 1525, 1522, 2475, 2467,\n        2465, 2451, 2449, 2446, 801, 800, 2426, 2424, 2421, 2418, 1723, 2435, 780, 778, 775, 2387, 2385, 2382, 2379,\n        1695, 2375, 1693, 2396, 735, 733, 730, 727, 749, 1718, 2616, 2615, 2604, 2603, 2601, 2584, 2583, 2581, 2579,\n        1800, 2591, 2550, 2549, 2547, 2545, 1792, 2542, 1790, 2558, 929, 2719, 1841, 2710, 2708, 1833, 1831, 2690, 2688,\n        2686, 1815, 1809, 1808, 1774, 1756, 1754, 1737, 1736, 1734, 1739, 1816, 1711, 1676, 1674, 633, 629, 1638, 1636,\n        1633, 1641, 598, 1605, 1604, 1602, 1600, 605, 1609, 1607, 2327, 887, 853, 1775, 822, 820, 1757, 1755, 1584, 524,\n        1560, 1558, 468, 464, 1514, 1511, 1508, 1519, 408, 404, 400, 1452, 1447, 1444, 417, 1458, 1455, 2208, 364, 361,\n        358, 2154, 1401, 1400, 1398, 1396, 374, 1393, 371, 1408, 1406, 1403, 1413, 2173, 2172, 772, 726, 723, 1712, 672,\n        669, 666, 682, 1678, 1675, 625, 623, 621, 618, 2331, 636, 632, 1639, 1637, 1635, 920, 918, 884, 880, 889, 849,\n        848, 847, 846, 2497, 855, 852, 1776, 2641, 2742, 2787, 1380, 334, 1367, 1365, 301, 297, 1340, 1338, 1335, 1343,\n        255, 251, 247, 1296, 1291, 1288, 265, 1302, 1299, 2113, 204, 196, 192, 2042, 1232, 1230, 1224, 214, 1220, 210,\n        1242, 1239, 1235, 1250, 2077, 2075, 151, 148, 1993, 144, 1990, 1163, 1162, 1160, 1158, 1155, 161, 1152, 157,\n        1173, 1171, 1168, 1165, 168, 1181, 1178, 2021, 2020, 2018, 2023, 585, 560, 557, 1585, 516, 509, 1562, 1559, 458,\n        447, 2227, 472, 1516, 1513, 1510, 398, 396, 393, 390, 2181, 386, 2178, 407, 1453, 1451, 1449, 1446, 420, 1460,\n        2209, 769, 764, 720, 712, 2391, 729, 1713, 664, 663, 661, 659, 2352, 656, 2349, 671, 1679, 1677, 2553, 922, 919,\n        2519, 2516, 885, 883, 881, 2685, 2661, 2659, 2767, 2756, 2755, 140, 1137, 1136, 130, 127, 1125, 1124, 1122, 1127,\n        109, 106, 102, 1103, 1102, 1100, 1098, 116, 1107, 1105, 1980, 80, 76, 73, 1947, 1068, 1067, 1065, 1063, 90, 1060,\n        87, 1075, 1073, 1070, 1080, 1966, 1965, 46, 43, 40, 1912, 36, 1909, 1019, 1018, 1016, 1014, 58, 1011, 55, 1008,\n        51, 1029, 1027, 1024, 1021, 63, 1037, 1034, 1940, 1939, 1937, 1942, 8, 1866, 4, 1863, 1, 1860, 956, 954, 952,\n        949, 946, 17, 14, 969, 967, 964, 961, 27, 957, 24, 979, 976, 972, 1901, 1900, 1898, 1896, 986, 1905, 1903, 350,\n        349, 1381, 329, 327, 324, 1368, 1366, 292, 290, 287, 284, 2118, 304, 1341, 1339, 1337, 1345, 243, 240, 237, 2086,\n        233, 2083, 254, 1297, 1295, 1293, 1290, 1304, 2114, 190, 187, 184, 2034, 180, 2031, 177, 2027, 199, 1233, 1231,\n        1229, 1226, 217, 1223, 1241, 2078, 2076, 584, 555, 554, 552, 550, 2282, 562, 1586, 507, 506, 504, 502, 2257, 499,\n        2254, 515, 1563, 1561, 445, 443, 441, 2219, 438, 2216, 435, 2212, 460, 454, 475, 1517, 1515, 1512, 2447, 798,\n        797, 2422, 2419, 770, 768, 766, 2383, 2380, 2376, 721, 719, 717, 714, 731, 1714, 2602, 2582, 2580, 2548, 2546,\n        2543, 923, 921, 2717, 2706, 2705, 2683, 2682, 2680, 1771, 1752, 1750, 1733, 1732, 1731, 1735, 1814, 1707, 1670,\n        1668, 1631, 1629, 1626, 1634, 1599, 1598, 1596, 1594, 1603, 1601, 2326, 1772, 1753, 1751, 1581, 1554, 1552, 1504,\n        1501, 1498, 1509, 1442, 1437, 1434, 401, 1448, 1445, 2206, 1392, 1391, 1389, 1387, 1384, 359, 1399, 1397, 1394,\n        1404, 2171, 2170, 1708, 1672, 1669, 619, 1632, 1630, 1628, 1773, 1378, 1363, 1361, 1333, 1328, 1336, 1286, 1281,\n        1278, 248, 1292, 1289, 2111, 1218, 1216, 1210, 197, 1206, 193, 1228, 1225, 1221, 1236, 2073, 2071, 1151, 1150,\n        1148, 1146, 152, 1143, 149, 1140, 145, 1161, 1159, 1156, 1153, 158, 1169, 1166, 2017, 2016, 2014, 2019, 1582,\n        510, 1556, 1553, 452, 448, 1506, 1500, 394, 391, 387, 1443, 1441, 1439, 1436, 1450, 2207, 765, 716, 713, 1709,\n        662, 660, 657, 1673, 1671, 916, 914, 879, 878, 877, 882, 1135, 1134, 1121, 1120, 1118, 1123, 1097, 1096, 1094,\n        1092, 103, 1101, 1099, 1979, 1059, 1058, 1056, 1054, 77, 1051, 74, 1066, 1064, 1061, 1071, 1964, 1963, 1007,\n        1006, 1004, 1002, 999, 41, 996, 37, 1017, 1015, 1012, 1009, 52, 1025, 1022, 1936, 1935, 1933, 1938, 942, 940,\n        938, 935, 932, 5, 2, 955, 953, 950, 947, 18, 943, 15, 965, 962, 958, 1895, 1894, 1892, 1890, 973, 1899, 1897,\n        1379, 325, 1364, 1362, 288, 285, 1334, 1332, 1330, 241, 238, 234, 1287, 1285, 1283, 1280, 1294, 2112, 188, 185,\n        181, 178, 2028, 1219, 1217, 1215, 1212, 200, 1209, 1227, 2074, 2072, 583, 553, 551, 1583, 505, 503, 500, 513,\n        1557, 1555, 444, 442, 439, 436, 2213, 455, 451, 1507, 1505, 1502, 796, 763, 762, 760, 767, 711, 710, 708, 706,\n        2377, 718, 715, 1710, 2544, 917, 915, 2681, 1627, 1597, 1595, 2325, 1769, 1749, 1747, 1499, 1438, 1435, 2204,\n        1390, 1388, 1385, 1395, 2169, 2167, 1704, 1665, 1662, 1625, 1623, 1620, 1770, 1329, 1282, 1279, 2109, 1214, 1207,\n        1222, 2068, 2065, 1149, 1147, 1144, 1141, 146, 1157, 1154, 2013, 2011, 2008, 2015, 1579, 1549, 1546, 1495, 1487,\n        1433, 1431, 1428, 1425, 388, 1440, 2205, 1705, 658, 1667, 1664, 1119, 1095, 1093, 1978, 1057, 1055, 1052, 1062,\n        1962, 1960, 1005, 1003, 1000, 997, 38, 1013, 1010, 1932, 1930, 1927, 1934, 941, 939, 936, 933, 6, 930, 3, 951,\n        948, 944, 1889, 1887, 1884, 1881, 959, 1893, 1891, 35, 1377, 1360, 1358, 1327, 1325, 1322, 1331, 1277, 1275,\n        1272, 1269, 235, 1284, 2110, 1205, 1204, 1201, 1198, 182, 1195, 179, 1213, 2070, 2067, 1580, 501, 1551, 1548,\n        440, 437, 1497, 1494, 1490, 1503, 761, 709, 707, 1706, 913, 912, 2198, 1386, 2164, 2161, 1621, 1766, 2103, 1208,\n        2058, 2054, 1145, 1142, 2005, 2002, 1999, 2009, 1488, 1429, 1426, 2200, 1698, 1659, 1656, 1975, 1053, 1957, 1954,\n        1001, 998, 1924, 1921, 1918, 1928, 937, 934, 931, 1879, 1876, 1873, 1870, 945, 1885, 1882, 1323, 1273, 1270,\n        2105, 1202, 1199, 1196, 1211, 2061, 2057, 1576, 1543, 1540, 1484, 1481, 1478, 1491, 1700\n    ]);\n\n    /*\n    * Copyright 2007 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // import java.util.List;\n    /**\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417DetectorResult {\n        constructor(bits, points) {\n            this.bits = bits;\n            this.points = points;\n        }\n        getBits() {\n            return this.bits;\n        }\n        getPoints() {\n            return this.points;\n        }\n    }\n\n    /*\n    * Copyright 2009 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // import java.util.ArrayList;\n    // import java.util.Arrays;\n    // import java.util.List;\n    // import java.util.Map;\n    /**\n     * <p>Encapsulates logic that can detect a PDF417 Code in an image, even if the\n     * PDF417 Code is rotated or skewed, or partially obscured.</p>\n     *\n     * @author SITA Lab (kevin.osullivan@sita.aero)\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Guenther Grau\n     */\n    /*public*/ /*final*/ class Detector$3 {\n        /**\n         * <p>Detects a PDF417 Code in an image. Only checks 0 and 180 degree rotations.</p>\n         *\n         * @param image barcode image to decode\n         * @param hints optional hints to detector\n         * @param multiple if true, then the image is searched for multiple codes. If false, then at most one code will\n         * be found and returned\n         * @return {@link PDF417DetectorResult} encapsulating results of detecting a PDF417 code\n         * @throws NotFoundException if no PDF417 Code can be found\n         */\n        static detectMultiple(image, hints, multiple) {\n            // TODO detection improvement, tryHarder could try several different luminance thresholds/blackpoints or even\n            // different binarizers\n            // boolean tryHarder = hints != null && hints.containsKey(DecodeHintType.TRY_HARDER);\n            let bitMatrix = image.getBlackMatrix();\n            let barcodeCoordinates = Detector$3.detect(multiple, bitMatrix);\n            if (!barcodeCoordinates.length) {\n                bitMatrix = bitMatrix.clone();\n                bitMatrix.rotate180();\n                barcodeCoordinates = Detector$3.detect(multiple, bitMatrix);\n            }\n            return new PDF417DetectorResult(bitMatrix, barcodeCoordinates);\n        }\n        /**\n         * Detects PDF417 codes in an image. Only checks 0 degree rotation\n         * @param multiple if true, then the image is searched for multiple codes. If false, then at most one code will\n         * be found and returned\n         * @param bitMatrix bit matrix to detect barcodes in\n         * @return List of ResultPoint arrays containing the coordinates of found barcodes\n         */\n        static detect(multiple, bitMatrix) {\n            const barcodeCoordinates = new Array();\n            let row = 0;\n            let column = 0;\n            let foundBarcodeInRow = false;\n            while (row < bitMatrix.getHeight()) {\n                const vertices = Detector$3.findVertices(bitMatrix, row, column);\n                if (vertices[0] == null && vertices[3] == null) {\n                    if (!foundBarcodeInRow) {\n                        // we didn't find any barcode so that's the end of searching\n                        break;\n                    }\n                    // we didn't find a barcode starting at the given column and row. Try again from the first column and slightly\n                    // below the lowest barcode we found so far.\n                    foundBarcodeInRow = false;\n                    column = 0;\n                    for (const barcodeCoordinate of barcodeCoordinates) {\n                        if (barcodeCoordinate[1] != null) {\n                            row = Math.trunc(Math.max(row, barcodeCoordinate[1].getY()));\n                        }\n                        if (barcodeCoordinate[3] != null) {\n                            row = Math.max(row, Math.trunc(barcodeCoordinate[3].getY()));\n                        }\n                    }\n                    row += Detector$3.ROW_STEP;\n                    continue;\n                }\n                foundBarcodeInRow = true;\n                barcodeCoordinates.push(vertices);\n                if (!multiple) {\n                    break;\n                }\n                // if we didn't find a right row indicator column, then continue the search for the next barcode after the\n                // start pattern of the barcode just found.\n                if (vertices[2] != null) {\n                    column = Math.trunc(vertices[2].getX());\n                    row = Math.trunc(vertices[2].getY());\n                }\n                else {\n                    column = Math.trunc(vertices[4].getX());\n                    row = Math.trunc(vertices[4].getY());\n                }\n            }\n            return barcodeCoordinates;\n        }\n        /**\n         * Locate the vertices and the codewords area of a black blob using the Start\n         * and Stop patterns as locators.\n         *\n         * @param matrix the scanned barcode image.\n         * @return an array containing the vertices:\n         *           vertices[0] x, y top left barcode\n         *           vertices[1] x, y bottom left barcode\n         *           vertices[2] x, y top right barcode\n         *           vertices[3] x, y bottom right barcode\n         *           vertices[4] x, y top left codeword area\n         *           vertices[5] x, y bottom left codeword area\n         *           vertices[6] x, y top right codeword area\n         *           vertices[7] x, y bottom right codeword area\n         */\n        static findVertices(matrix, startRow, startColumn) {\n            const height = matrix.getHeight();\n            const width = matrix.getWidth();\n            // const result = new ResultPoint[8];\n            const result = new Array(8);\n            Detector$3.copyToResult(result, Detector$3.findRowsWithPattern(matrix, height, width, startRow, startColumn, Detector$3.START_PATTERN), Detector$3.INDEXES_START_PATTERN);\n            if (result[4] != null) {\n                startColumn = Math.trunc(result[4].getX());\n                startRow = Math.trunc(result[4].getY());\n            }\n            Detector$3.copyToResult(result, Detector$3.findRowsWithPattern(matrix, height, width, startRow, startColumn, Detector$3.STOP_PATTERN), Detector$3.INDEXES_STOP_PATTERN);\n            return result;\n        }\n        static copyToResult(result, tmpResult, destinationIndexes) {\n            for (let i = 0; i < destinationIndexes.length; i++) {\n                result[destinationIndexes[i]] = tmpResult[i];\n            }\n        }\n        static findRowsWithPattern(matrix, height, width, startRow, startColumn, pattern) {\n            // const result = new ResultPoint[4];\n            const result = new Array(4);\n            let found = false;\n            const counters = new Int32Array(pattern.length);\n            for (; startRow < height; startRow += Detector$3.ROW_STEP) {\n                let loc = Detector$3.findGuardPattern(matrix, startColumn, startRow, width, false, pattern, counters);\n                if (loc != null) {\n                    while (startRow > 0) {\n                        const previousRowLoc = Detector$3.findGuardPattern(matrix, startColumn, --startRow, width, false, pattern, counters);\n                        if (previousRowLoc != null) {\n                            loc = previousRowLoc;\n                        }\n                        else {\n                            startRow++;\n                            break;\n                        }\n                    }\n                    result[0] = new ResultPoint(loc[0], startRow);\n                    result[1] = new ResultPoint(loc[1], startRow);\n                    found = true;\n                    break;\n                }\n            }\n            let stopRow = startRow + 1;\n            // Last row of the current symbol that contains pattern\n            if (found) {\n                let skippedRowCount = 0;\n                let previousRowLoc = Int32Array.from([Math.trunc(result[0].getX()), Math.trunc(result[1].getX())]);\n                for (; stopRow < height; stopRow++) {\n                    const loc = Detector$3.findGuardPattern(matrix, previousRowLoc[0], stopRow, width, false, pattern, counters);\n                    // a found pattern is only considered to belong to the same barcode if the start and end positions\n                    // don't differ too much. Pattern drift should be not bigger than two for consecutive rows. With\n                    // a higher number of skipped rows drift could be larger. To keep it simple for now, we allow a slightly\n                    // larger drift and don't check for skipped rows.\n                    if (loc != null &&\n                        Math.abs(previousRowLoc[0] - loc[0]) < Detector$3.MAX_PATTERN_DRIFT &&\n                        Math.abs(previousRowLoc[1] - loc[1]) < Detector$3.MAX_PATTERN_DRIFT) {\n                        previousRowLoc = loc;\n                        skippedRowCount = 0;\n                    }\n                    else {\n                        if (skippedRowCount > Detector$3.SKIPPED_ROW_COUNT_MAX) {\n                            break;\n                        }\n                        else {\n                            skippedRowCount++;\n                        }\n                    }\n                }\n                stopRow -= skippedRowCount + 1;\n                result[2] = new ResultPoint(previousRowLoc[0], stopRow);\n                result[3] = new ResultPoint(previousRowLoc[1], stopRow);\n            }\n            if (stopRow - startRow < Detector$3.BARCODE_MIN_HEIGHT) {\n                Arrays.fill(result, null);\n            }\n            return result;\n        }\n        /**\n         * @param matrix row of black/white values to search\n         * @param column x position to start search\n         * @param row y position to start search\n         * @param width the number of pixels to search on this row\n         * @param pattern pattern of counts of number of black and white pixels that are\n         *                 being searched for as a pattern\n         * @param counters array of counters, as long as pattern, to re-use\n         * @return start/end horizontal offset of guard pattern, as an array of two ints.\n         */\n        static findGuardPattern(matrix, column, row, width, whiteFirst, pattern, counters) {\n            Arrays.fillWithin(counters, 0, counters.length, 0);\n            let patternStart = column;\n            let pixelDrift = 0;\n            // if there are black pixels left of the current pixel shift to the left, but only for MAX_PIXEL_DRIFT pixels\n            while (matrix.get(patternStart, row) && patternStart > 0 && pixelDrift++ < Detector$3.MAX_PIXEL_DRIFT) {\n                patternStart--;\n            }\n            let x = patternStart;\n            let counterPosition = 0;\n            let patternLength = pattern.length;\n            for (let isWhite = whiteFirst; x < width; x++) {\n                let pixel = matrix.get(x, row);\n                if (pixel !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        if (Detector$3.patternMatchVariance(counters, pattern, Detector$3.MAX_INDIVIDUAL_VARIANCE) < Detector$3.MAX_AVG_VARIANCE) {\n                            return new Int32Array([patternStart, x]);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        System.arraycopy(counters, 2, counters, 0, counterPosition - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            if (counterPosition === patternLength - 1 &&\n                Detector$3.patternMatchVariance(counters, pattern, Detector$3.MAX_INDIVIDUAL_VARIANCE) < Detector$3.MAX_AVG_VARIANCE) {\n                return new Int32Array([patternStart, x - 1]);\n            }\n            return null;\n        }\n        /**\n         * Determines how closely a set of observed counts of runs of black/white\n         * values matches a given target pattern. This is reported as the ratio of\n         * the total variance from the expected pattern proportions across all\n         * pattern elements, to the length of the pattern.\n         *\n         * @param counters observed counters\n         * @param pattern expected pattern\n         * @param maxIndividualVariance The most any counter can differ before we give up\n         * @return ratio of total variance between counters and pattern compared to total pattern size\n         */\n        static patternMatchVariance(counters, pattern, maxIndividualVariance) {\n            let numCounters = counters.length;\n            let total = 0;\n            let patternLength = 0;\n            for (let i = 0; i < numCounters; i++) {\n                total += counters[i];\n                patternLength += pattern[i];\n            }\n            if (total < patternLength) {\n                // If we don't even have one pixel per unit of bar width, assume this\n                // is too small to reliably match, so fail:\n                return /*Float.POSITIVE_INFINITY*/ Infinity;\n            }\n            // We're going to fake floating-point math in integers. We just need to use more bits.\n            // Scale up patternLength so that intermediate values below like scaledCounter will have\n            // more \"significant digits\".\n            let unitBarWidth = total / patternLength;\n            maxIndividualVariance *= unitBarWidth;\n            let totalVariance = 0.0;\n            for (let x = 0; x < numCounters; x++) {\n                let counter = counters[x];\n                let scaledPattern = pattern[x] * unitBarWidth;\n                let variance = counter > scaledPattern ? counter - scaledPattern : scaledPattern - counter;\n                if (variance > maxIndividualVariance) {\n                    return /*Float.POSITIVE_INFINITY*/ Infinity;\n                }\n                totalVariance += variance;\n            }\n            return totalVariance / total;\n        }\n    }\n    Detector$3.INDEXES_START_PATTERN = Int32Array.from([0, 4, 1, 5]);\n    Detector$3.INDEXES_STOP_PATTERN = Int32Array.from([6, 2, 7, 3]);\n    Detector$3.MAX_AVG_VARIANCE = 0.42;\n    Detector$3.MAX_INDIVIDUAL_VARIANCE = 0.8;\n    // B S B S B S B S Bar/Space pattern\n    // 11111111 0 1 0 1 0 1 000\n    Detector$3.START_PATTERN = Int32Array.from([8, 1, 1, 1, 1, 1, 1, 3]);\n    // 1111111 0 1 000 1 0 1 00 1\n    Detector$3.STOP_PATTERN = Int32Array.from([7, 1, 1, 3, 1, 1, 1, 2, 1]);\n    Detector$3.MAX_PIXEL_DRIFT = 3;\n    Detector$3.MAX_PATTERN_DRIFT = 5;\n    // if we set the value too low, then we don't detect the correct height of the bar if the start patterns are damaged.\n    // if we set the value too high, then we might detect the start pattern from a neighbor barcode.\n    Detector$3.SKIPPED_ROW_COUNT_MAX = 25;\n    // A PDF471 barcode should have at least 3 rows, with each row being >= 3 times the module width. Therefore it should be at least\n    // 9 pixels tall. To be conservative, we use about half the size to ensure we don't miss it.\n    Detector$3.ROW_STEP = 5;\n    Detector$3.BARCODE_MIN_HEIGHT = 10;\n\n    /*\n    * Copyright 2012 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author Sean Owen\n     * @see com.google.zxing.common.reedsolomon.GenericGFPoly\n     */\n    /*final*/ class ModulusPoly {\n        constructor(field, coefficients) {\n            if (coefficients.length === 0) {\n                throw new IllegalArgumentException();\n            }\n            this.field = field;\n            let coefficientsLength = /*int*/ coefficients.length;\n            if (coefficientsLength > 1 && coefficients[0] === 0) {\n                // Leading term must be non-zero for anything except the constant polynomial \"0\"\n                let firstNonZero = /*int*/ 1;\n                while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                    firstNonZero++;\n                }\n                if (firstNonZero === coefficientsLength) {\n                    this.coefficients = new Int32Array([0]);\n                }\n                else {\n                    this.coefficients = new Int32Array(coefficientsLength - firstNonZero);\n                    System.arraycopy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\n                }\n            }\n            else {\n                this.coefficients = coefficients;\n            }\n        }\n        getCoefficients() {\n            return this.coefficients;\n        }\n        /**\n         * @return degree of this polynomial\n         */\n        getDegree() {\n            return this.coefficients.length - 1;\n        }\n        /**\n         * @return true iff this polynomial is the monomial \"0\"\n         */\n        isZero() {\n            return this.coefficients[0] === 0;\n        }\n        /**\n         * @return coefficient of x^degree term in this polynomial\n         */\n        getCoefficient(degree) {\n            return this.coefficients[this.coefficients.length - 1 - degree];\n        }\n        /**\n         * @return evaluation of this polynomial at a given point\n         */\n        evaluateAt(a) {\n            if (a === 0) {\n                // Just return the x^0 coefficient\n                return this.getCoefficient(0);\n            }\n            if (a === 1) {\n                // Just the sum of the coefficients\n                let sum = /*int*/ 0;\n                for (let coefficient /*int*/ of this.coefficients) {\n                    sum = this.field.add(sum, coefficient);\n                }\n                return sum;\n            }\n            let result = /*int*/ this.coefficients[0];\n            let size = /*int*/ this.coefficients.length;\n            for (let i /*int*/ = 1; i < size; i++) {\n                result = this.field.add(this.field.multiply(a, result), this.coefficients[i]);\n            }\n            return result;\n        }\n        add(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');\n            }\n            if (this.isZero()) {\n                return other;\n            }\n            if (other.isZero()) {\n                return this;\n            }\n            let smallerCoefficients = this.coefficients;\n            let largerCoefficients = other.coefficients;\n            if (smallerCoefficients.length > largerCoefficients.length) {\n                let temp = smallerCoefficients;\n                smallerCoefficients = largerCoefficients;\n                largerCoefficients = temp;\n            }\n            let sumDiff = new Int32Array(largerCoefficients.length);\n            let lengthDiff = /*int*/ largerCoefficients.length - smallerCoefficients.length;\n            // Copy high-order terms only found in higher-degree polynomial's coefficients\n            System.arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n            for (let i /*int*/ = lengthDiff; i < largerCoefficients.length; i++) {\n                sumDiff[i] = this.field.add(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n            }\n            return new ModulusPoly(this.field, sumDiff);\n        }\n        subtract(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');\n            }\n            if (other.isZero()) {\n                return this;\n            }\n            return this.add(other.negative());\n        }\n        multiply(other) {\n            if (other instanceof ModulusPoly) {\n                return this.multiplyOther(other);\n            }\n            return this.multiplyScalar(other);\n        }\n        multiplyOther(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');\n            }\n            if (this.isZero() || other.isZero()) {\n                // return this.field.getZero();\n                return new ModulusPoly(this.field, new Int32Array([0]));\n            }\n            let aCoefficients = this.coefficients;\n            let aLength = /*int*/ aCoefficients.length;\n            let bCoefficients = other.coefficients;\n            let bLength = /*int*/ bCoefficients.length;\n            let product = new Int32Array(aLength + bLength - 1);\n            for (let i /*int*/ = 0; i < aLength; i++) {\n                let aCoeff = /*int*/ aCoefficients[i];\n                for (let j /*int*/ = 0; j < bLength; j++) {\n                    product[i + j] = this.field.add(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n                }\n            }\n            return new ModulusPoly(this.field, product);\n        }\n        negative() {\n            let size = /*int*/ this.coefficients.length;\n            let negativeCoefficients = new Int32Array(size);\n            for (let i /*int*/ = 0; i < size; i++) {\n                negativeCoefficients[i] = this.field.subtract(0, this.coefficients[i]);\n            }\n            return new ModulusPoly(this.field, negativeCoefficients);\n        }\n        multiplyScalar(scalar) {\n            if (scalar === 0) {\n                return new ModulusPoly(this.field, new Int32Array([0]));\n            }\n            if (scalar === 1) {\n                return this;\n            }\n            let size = /*int*/ this.coefficients.length;\n            let product = new Int32Array(size);\n            for (let i /*int*/ = 0; i < size; i++) {\n                product[i] = this.field.multiply(this.coefficients[i], scalar);\n            }\n            return new ModulusPoly(this.field, product);\n        }\n        multiplyByMonomial(degree, coefficient) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return new ModulusPoly(this.field, new Int32Array([0]));\n            }\n            let size = /*int*/ this.coefficients.length;\n            let product = new Int32Array(size + degree);\n            for (let i /*int*/ = 0; i < size; i++) {\n                product[i] = this.field.multiply(this.coefficients[i], coefficient);\n            }\n            return new ModulusPoly(this.field, product);\n        }\n        /*\n        ModulusPoly[] divide(other: ModulusPoly) {\n          if (!field.equals(other.field)) {\n            throw new IllegalArgumentException(\"ModulusPolys do not have same ModulusGF field\");\n          }\n          if (other.isZero()) {\n            throw new IllegalArgumentException(\"Divide by 0\");\n          }\n      \n          let quotient: ModulusPoly = field.getZero();\n          let remainder: ModulusPoly = this;\n      \n          let denominatorLeadingTerm: /*int/ number = other.getCoefficient(other.getDegree());\n          let inverseDenominatorLeadingTerm: /*int/ number = field.inverse(denominatorLeadingTerm);\n      \n          while (remainder.getDegree() >= other.getDegree() && !remainder.isZero()) {\n            let degreeDifference: /*int/ number = remainder.getDegree() - other.getDegree();\n            let scale: /*int/ number = field.multiply(remainder.getCoefficient(remainder.getDegree()), inverseDenominatorLeadingTerm);\n            let term: ModulusPoly = other.multiplyByMonomial(degreeDifference, scale);\n            let iterationQuotient: ModulusPoly = field.buildMonomial(degreeDifference, scale);\n            quotient = quotient.add(iterationQuotient);\n            remainder = remainder.subtract(term);\n          }\n      \n          return new ModulusPoly[] { quotient, remainder };\n        }\n        */\n        // @Override\n        toString() {\n            let result = new StringBuilder( /*8 * this.getDegree()*/); // dynamic string size in JS\n            for (let degree /*int*/ = this.getDegree(); degree >= 0; degree--) {\n                let coefficient = /*int*/ this.getCoefficient(degree);\n                if (coefficient !== 0) {\n                    if (coefficient < 0) {\n                        result.append(' - ');\n                        coefficient = -coefficient;\n                    }\n                    else {\n                        if (result.length() > 0) {\n                            result.append(' + ');\n                        }\n                    }\n                    if (degree === 0 || coefficient !== 1) {\n                        result.append(coefficient);\n                    }\n                    if (degree !== 0) {\n                        if (degree === 1) {\n                            result.append('x');\n                        }\n                        else {\n                            result.append('x^');\n                            result.append(degree);\n                        }\n                    }\n                }\n            }\n            return result.toString();\n        }\n    }\n\n    class ModulusBase {\n        add(a, b) {\n            return (a + b) % this.modulus;\n        }\n        subtract(a, b) {\n            return (this.modulus + a - b) % this.modulus;\n        }\n        exp(a) {\n            return this.expTable[a];\n        }\n        log(a) {\n            if (a === 0) {\n                throw new IllegalArgumentException();\n            }\n            return this.logTable[a];\n        }\n        inverse(a) {\n            if (a === 0) {\n                throw new ArithmeticException();\n            }\n            return this.expTable[this.modulus - this.logTable[a] - 1];\n        }\n        multiply(a, b) {\n            if (a === 0 || b === 0) {\n                return 0;\n            }\n            return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.modulus - 1)];\n        }\n        getSize() {\n            return this.modulus;\n        }\n        equals(o) {\n            return o === this;\n        }\n    }\n\n    /*\n     * Copyright 2012 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>A field based on powers of a generator integer, modulo some modulus.</p>\n     *\n     * @author Sean Owen\n     * @see com.google.zxing.common.reedsolomon.GenericGF\n     */\n    /*public final*/ class ModulusGF extends ModulusBase {\n        // private /*final*/ modulus: /*int*/ number;\n        constructor(modulus, generator) {\n            super();\n            this.modulus = modulus;\n            this.expTable = new Int32Array(modulus);\n            this.logTable = new Int32Array(modulus);\n            let x = /*int*/ 1;\n            for (let i /*int*/ = 0; i < modulus; i++) {\n                this.expTable[i] = x;\n                x = (x * generator) % modulus;\n            }\n            for (let i /*int*/ = 0; i < modulus - 1; i++) {\n                this.logTable[this.expTable[i]] = i;\n            }\n            // logTable[0] == 0 but this should never be used\n            this.zero = new ModulusPoly(this, new Int32Array([0]));\n            this.one = new ModulusPoly(this, new Int32Array([1]));\n        }\n        getZero() {\n            return this.zero;\n        }\n        getOne() {\n            return this.one;\n        }\n        buildMonomial(degree, coefficient) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return this.zero;\n            }\n            let coefficients = new Int32Array(degree + 1);\n            coefficients[0] = coefficient;\n            return new ModulusPoly(this, coefficients);\n        }\n    }\n    ModulusGF.PDF417_GF = new ModulusGF(PDF417Common.NUMBER_OF_CODEWORDS, 3);\n\n    /*\n    * Copyright 2012 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * <p>PDF417 error correction implementation.</p>\n     *\n     * <p>This <a href=\"http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction#Example\">example</a>\n     * is quite useful in understanding the algorithm.</p>\n     *\n     * @author Sean Owen\n     * @see com.google.zxing.common.reedsolomon.ReedSolomonDecoder\n     */\n    /*public final*/ class ErrorCorrection {\n        constructor() {\n            this.field = ModulusGF.PDF417_GF;\n        }\n        /**\n         * @param received received codewords\n         * @param numECCodewords number of those codewords used for EC\n         * @param erasures location of erasures\n         * @return number of errors\n         * @throws ChecksumException if errors cannot be corrected, maybe because of too many errors\n         */\n        decode(received, numECCodewords, erasures) {\n            let poly = new ModulusPoly(this.field, received);\n            let S = new Int32Array(numECCodewords);\n            let error = false;\n            for (let i /*int*/ = numECCodewords; i > 0; i--) {\n                let evaluation = poly.evaluateAt(this.field.exp(i));\n                S[numECCodewords - i] = evaluation;\n                if (evaluation !== 0) {\n                    error = true;\n                }\n            }\n            if (!error) {\n                return 0;\n            }\n            let knownErrors = this.field.getOne();\n            if (erasures != null) {\n                for (const erasure of erasures) {\n                    let b = this.field.exp(received.length - 1 - erasure);\n                    // Add (1 - bx) term:\n                    let term = new ModulusPoly(this.field, new Int32Array([this.field.subtract(0, b), 1]));\n                    knownErrors = knownErrors.multiply(term);\n                }\n            }\n            let syndrome = new ModulusPoly(this.field, S);\n            // syndrome = syndrome.multiply(knownErrors);\n            let sigmaOmega = this.runEuclideanAlgorithm(this.field.buildMonomial(numECCodewords, 1), syndrome, numECCodewords);\n            let sigma = sigmaOmega[0];\n            let omega = sigmaOmega[1];\n            // sigma = sigma.multiply(knownErrors);\n            let errorLocations = this.findErrorLocations(sigma);\n            let errorMagnitudes = this.findErrorMagnitudes(omega, sigma, errorLocations);\n            for (let i /*int*/ = 0; i < errorLocations.length; i++) {\n                let position = received.length - 1 - this.field.log(errorLocations[i]);\n                if (position < 0) {\n                    throw ChecksumException.getChecksumInstance();\n                }\n                received[position] = this.field.subtract(received[position], errorMagnitudes[i]);\n            }\n            return errorLocations.length;\n        }\n        /**\n         *\n         * @param ModulusPoly\n         * @param a\n         * @param ModulusPoly\n         * @param b\n         * @param int\n         * @param R\n         * @throws ChecksumException\n         */\n        runEuclideanAlgorithm(a, b, R) {\n            // Assume a's degree is >= b's\n            if (a.getDegree() < b.getDegree()) {\n                let temp = a;\n                a = b;\n                b = temp;\n            }\n            let rLast = a;\n            let r = b;\n            let tLast = this.field.getZero();\n            let t = this.field.getOne();\n            // Run Euclidean algorithm until r's degree is less than R/2\n            while (r.getDegree() >= Math.round(R / 2)) {\n                let rLastLast = rLast;\n                let tLastLast = tLast;\n                rLast = r;\n                tLast = t;\n                // Divide rLastLast by rLast, with quotient in q and remainder in r\n                if (rLast.isZero()) {\n                    // Oops, Euclidean algorithm already terminated?\n                    throw ChecksumException.getChecksumInstance();\n                }\n                r = rLastLast;\n                let q = this.field.getZero();\n                let denominatorLeadingTerm = rLast.getCoefficient(rLast.getDegree());\n                let dltInverse = this.field.inverse(denominatorLeadingTerm);\n                while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n                    let degreeDiff = r.getDegree() - rLast.getDegree();\n                    let scale = this.field.multiply(r.getCoefficient(r.getDegree()), dltInverse);\n                    q = q.add(this.field.buildMonomial(degreeDiff, scale));\n                    r = r.subtract(rLast.multiplyByMonomial(degreeDiff, scale));\n                }\n                t = q.multiply(tLast).subtract(tLastLast).negative();\n            }\n            let sigmaTildeAtZero = t.getCoefficient(0);\n            if (sigmaTildeAtZero === 0) {\n                throw ChecksumException.getChecksumInstance();\n            }\n            let inverse = this.field.inverse(sigmaTildeAtZero);\n            let sigma = t.multiply(inverse);\n            let omega = r.multiply(inverse);\n            return [sigma, omega];\n        }\n        /**\n         *\n         * @param errorLocator\n         * @throws ChecksumException\n         */\n        findErrorLocations(errorLocator) {\n            // This is a direct application of Chien's search\n            let numErrors = errorLocator.getDegree();\n            let result = new Int32Array(numErrors);\n            let e = 0;\n            for (let i /*int*/ = 1; i < this.field.getSize() && e < numErrors; i++) {\n                if (errorLocator.evaluateAt(i) === 0) {\n                    result[e] = this.field.inverse(i);\n                    e++;\n                }\n            }\n            if (e !== numErrors) {\n                throw ChecksumException.getChecksumInstance();\n            }\n            return result;\n        }\n        findErrorMagnitudes(errorEvaluator, errorLocator, errorLocations) {\n            let errorLocatorDegree = errorLocator.getDegree();\n            let formalDerivativeCoefficients = new Int32Array(errorLocatorDegree);\n            for (let i /*int*/ = 1; i <= errorLocatorDegree; i++) {\n                formalDerivativeCoefficients[errorLocatorDegree - i] =\n                    this.field.multiply(i, errorLocator.getCoefficient(i));\n            }\n            let formalDerivative = new ModulusPoly(this.field, formalDerivativeCoefficients);\n            // This is directly applying Forney's Formula\n            let s = errorLocations.length;\n            let result = new Int32Array(s);\n            for (let i /*int*/ = 0; i < s; i++) {\n                let xiInverse = this.field.inverse(errorLocations[i]);\n                let numerator = this.field.subtract(0, errorEvaluator.evaluateAt(xiInverse));\n                let denominator = this.field.inverse(formalDerivative.evaluateAt(xiInverse));\n                result[i] = this.field.multiply(numerator, denominator);\n            }\n            return result;\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class BoundingBox {\n        constructor(image, topLeft, bottomLeft, topRight, bottomRight) {\n            if (image instanceof BoundingBox) {\n                this.constructor_2(image);\n            }\n            else {\n                this.constructor_1(image, topLeft, bottomLeft, topRight, bottomRight);\n            }\n        }\n        /**\n         *\n         * @param image\n         * @param topLeft\n         * @param bottomLeft\n         * @param topRight\n         * @param bottomRight\n         *\n         * @throws NotFoundException\n         */\n        constructor_1(image, topLeft, bottomLeft, topRight, bottomRight) {\n            const leftUnspecified = topLeft == null || bottomLeft == null;\n            const rightUnspecified = topRight == null || bottomRight == null;\n            if (leftUnspecified && rightUnspecified) {\n                throw new NotFoundException();\n            }\n            if (leftUnspecified) {\n                topLeft = new ResultPoint(0, topRight.getY());\n                bottomLeft = new ResultPoint(0, bottomRight.getY());\n            }\n            else if (rightUnspecified) {\n                topRight = new ResultPoint(image.getWidth() - 1, topLeft.getY());\n                bottomRight = new ResultPoint(image.getWidth() - 1, bottomLeft.getY());\n            }\n            this.image = image;\n            this.topLeft = topLeft;\n            this.bottomLeft = bottomLeft;\n            this.topRight = topRight;\n            this.bottomRight = bottomRight;\n            this.minX = Math.trunc(Math.min(topLeft.getX(), bottomLeft.getX()));\n            this.maxX = Math.trunc(Math.max(topRight.getX(), bottomRight.getX()));\n            this.minY = Math.trunc(Math.min(topLeft.getY(), topRight.getY()));\n            this.maxY = Math.trunc(Math.max(bottomLeft.getY(), bottomRight.getY()));\n        }\n        constructor_2(boundingBox) {\n            this.image = boundingBox.image;\n            this.topLeft = boundingBox.getTopLeft();\n            this.bottomLeft = boundingBox.getBottomLeft();\n            this.topRight = boundingBox.getTopRight();\n            this.bottomRight = boundingBox.getBottomRight();\n            this.minX = boundingBox.getMinX();\n            this.maxX = boundingBox.getMaxX();\n            this.minY = boundingBox.getMinY();\n            this.maxY = boundingBox.getMaxY();\n        }\n        /**\n         * @throws NotFoundException\n         */\n        static merge(leftBox, rightBox) {\n            if (leftBox == null) {\n                return rightBox;\n            }\n            if (rightBox == null) {\n                return leftBox;\n            }\n            return new BoundingBox(leftBox.image, leftBox.topLeft, leftBox.bottomLeft, rightBox.topRight, rightBox.bottomRight);\n        }\n        /**\n         * @throws NotFoundException\n         */\n        addMissingRows(missingStartRows, missingEndRows, isLeft) {\n            let newTopLeft = this.topLeft;\n            let newBottomLeft = this.bottomLeft;\n            let newTopRight = this.topRight;\n            let newBottomRight = this.bottomRight;\n            if (missingStartRows > 0) {\n                let top = isLeft ? this.topLeft : this.topRight;\n                let newMinY = Math.trunc(top.getY() - missingStartRows);\n                if (newMinY < 0) {\n                    newMinY = 0;\n                }\n                let newTop = new ResultPoint(top.getX(), newMinY);\n                if (isLeft) {\n                    newTopLeft = newTop;\n                }\n                else {\n                    newTopRight = newTop;\n                }\n            }\n            if (missingEndRows > 0) {\n                let bottom = isLeft ? this.bottomLeft : this.bottomRight;\n                let newMaxY = Math.trunc(bottom.getY() + missingEndRows);\n                if (newMaxY >= this.image.getHeight()) {\n                    newMaxY = this.image.getHeight() - 1;\n                }\n                let newBottom = new ResultPoint(bottom.getX(), newMaxY);\n                if (isLeft) {\n                    newBottomLeft = newBottom;\n                }\n                else {\n                    newBottomRight = newBottom;\n                }\n            }\n            return new BoundingBox(this.image, newTopLeft, newBottomLeft, newTopRight, newBottomRight);\n        }\n        getMinX() {\n            return this.minX;\n        }\n        getMaxX() {\n            return this.maxX;\n        }\n        getMinY() {\n            return this.minY;\n        }\n        getMaxY() {\n            return this.maxY;\n        }\n        getTopLeft() {\n            return this.topLeft;\n        }\n        getTopRight() {\n            return this.topRight;\n        }\n        getBottomLeft() {\n            return this.bottomLeft;\n        }\n        getBottomRight() {\n            return this.bottomRight;\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.pdf417.decoder;\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class BarcodeMetadata {\n        constructor(columnCount, rowCountUpperPart, rowCountLowerPart, errorCorrectionLevel) {\n            this.columnCount = columnCount;\n            this.errorCorrectionLevel = errorCorrectionLevel;\n            this.rowCountUpperPart = rowCountUpperPart;\n            this.rowCountLowerPart = rowCountLowerPart;\n            this.rowCount = rowCountUpperPart + rowCountLowerPart;\n        }\n        getColumnCount() {\n            return this.columnCount;\n        }\n        getErrorCorrectionLevel() {\n            return this.errorCorrectionLevel;\n        }\n        getRowCount() {\n            return this.rowCount;\n        }\n        getRowCountUpperPart() {\n            return this.rowCountUpperPart;\n        }\n        getRowCountLowerPart() {\n            return this.rowCountLowerPart;\n        }\n    }\n\n    /**\n     * Java Formatter class polyfill that works in the JS way.\n     */\n    class Formatter {\n        constructor() {\n            this.buffer = '';\n        }\n        /**\n         *\n         * @see https://stackoverflow.com/a/13439711/4367683\n         *\n         * @param str\n         * @param arr\n         */\n        static form(str, arr) {\n            let i = -1;\n            function callback(exp, p0, p1, p2, p3, p4) {\n                if (exp === '%%')\n                    return '%';\n                if (arr[++i] === undefined)\n                    return undefined;\n                exp = p2 ? parseInt(p2.substr(1)) : undefined;\n                let base = p3 ? parseInt(p3.substr(1)) : undefined;\n                let val;\n                switch (p4) {\n                    case 's':\n                        val = arr[i];\n                        break;\n                    case 'c':\n                        val = arr[i][0];\n                        break;\n                    case 'f':\n                        val = parseFloat(arr[i]).toFixed(exp);\n                        break;\n                    case 'p':\n                        val = parseFloat(arr[i]).toPrecision(exp);\n                        break;\n                    case 'e':\n                        val = parseFloat(arr[i]).toExponential(exp);\n                        break;\n                    case 'x':\n                        val = parseInt(arr[i]).toString(base ? base : 16);\n                        break;\n                    case 'd':\n                        val = parseFloat(parseInt(arr[i], base ? base : 10).toPrecision(exp)).toFixed(0);\n                        break;\n                }\n                val = typeof val === 'object' ? JSON.stringify(val) : (+val).toString(base);\n                let size = parseInt(p1); /* padding size */\n                let ch = p1 && (p1[0] + '') === '0' ? '0' : ' '; /* isnull? */\n                while (val.length < size)\n                    val = p0 !== undefined ? val + ch : ch + val; /* isminus? */\n                return val;\n            }\n            let regex = /%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;\n            return str.replace(regex, callback);\n        }\n        /**\n         *\n         * @param append The new string to append.\n         * @param args Argumets values to be formated.\n         */\n        format(append, ...args) {\n            this.buffer += Formatter.form(append, args);\n        }\n        /**\n         * Returns the Formatter string value.\n         */\n        toString() {\n            return this.buffer;\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Guenther Grau\n     */\n    class DetectionResultColumn {\n        constructor(boundingBox) {\n            this.boundingBox = new BoundingBox(boundingBox);\n            // this.codewords = new Codeword[boundingBox.getMaxY() - boundingBox.getMinY() + 1];\n            this.codewords = new Array(boundingBox.getMaxY() - boundingBox.getMinY() + 1);\n        }\n        /*final*/ getCodewordNearby(imageRow) {\n            let codeword = this.getCodeword(imageRow);\n            if (codeword != null) {\n                return codeword;\n            }\n            for (let i = 1; i < DetectionResultColumn.MAX_NEARBY_DISTANCE; i++) {\n                let nearImageRow = this.imageRowToCodewordIndex(imageRow) - i;\n                if (nearImageRow >= 0) {\n                    codeword = this.codewords[nearImageRow];\n                    if (codeword != null) {\n                        return codeword;\n                    }\n                }\n                nearImageRow = this.imageRowToCodewordIndex(imageRow) + i;\n                if (nearImageRow < this.codewords.length) {\n                    codeword = this.codewords[nearImageRow];\n                    if (codeword != null) {\n                        return codeword;\n                    }\n                }\n            }\n            return null;\n        }\n        /*final int*/ imageRowToCodewordIndex(imageRow) {\n            return imageRow - this.boundingBox.getMinY();\n        }\n        /*final void*/ setCodeword(imageRow, codeword) {\n            this.codewords[this.imageRowToCodewordIndex(imageRow)] = codeword;\n        }\n        /*final*/ getCodeword(imageRow) {\n            return this.codewords[this.imageRowToCodewordIndex(imageRow)];\n        }\n        /*final*/ getBoundingBox() {\n            return this.boundingBox;\n        }\n        /*final*/ getCodewords() {\n            return this.codewords;\n        }\n        // @Override\n        toString() {\n            const formatter = new Formatter();\n            let row = 0;\n            for (const codeword of this.codewords) {\n                if (codeword == null) {\n                    formatter.format('%3d:    |   %n', row++);\n                    continue;\n                }\n                formatter.format('%3d: %3d|%3d%n', row++, codeword.getRowNumber(), codeword.getValue());\n            }\n            return formatter.toString();\n        }\n    }\n    DetectionResultColumn.MAX_NEARBY_DISTANCE = 5;\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.ArrayList;\n    // import java.util.Collection;\n    // import java.util.HashMap;\n    // import java.util.Map;\n    // import java.util.Map.Entry;\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class BarcodeValue {\n        constructor() {\n            this.values = new Map();\n        }\n        /**\n         * Add an occurrence of a value\n         */\n        setValue(value) {\n            value = Math.trunc(value);\n            let confidence = this.values.get(value);\n            if (confidence == null) {\n                confidence = 0;\n            }\n            confidence++;\n            this.values.set(value, confidence);\n        }\n        /**\n         * Determines the maximum occurrence of a set value and returns all values which were set with this occurrence.\n         * @return an array of int, containing the values with the highest occurrence, or null, if no value was set\n         */\n        getValue() {\n            let maxConfidence = -1;\n            let result = new Array();\n            for (const [key, value] of this.values.entries()) {\n                const entry = {\n                    getKey: () => key,\n                    getValue: () => value,\n                };\n                if (entry.getValue() > maxConfidence) {\n                    maxConfidence = entry.getValue();\n                    result = [];\n                    result.push(entry.getKey());\n                }\n                else if (entry.getValue() === maxConfidence) {\n                    result.push(entry.getKey());\n                }\n            }\n            return PDF417Common.toIntArray(result);\n        }\n        getConfidence(value) {\n            return this.values.get(value);\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class DetectionResultRowIndicatorColumn extends DetectionResultColumn {\n        constructor(boundingBox, isLeft) {\n            super(boundingBox);\n            this._isLeft = isLeft;\n        }\n        setRowNumbers() {\n            for (let codeword /*Codeword*/ of this.getCodewords()) {\n                if (codeword != null) {\n                    codeword.setRowNumberAsRowIndicatorColumn();\n                }\n            }\n        }\n        // TODO implement properly\n        // TODO maybe we should add missing codewords to store the correct row number to make\n        // finding row numbers for other columns easier\n        // use row height count to make detection of invalid row numbers more reliable\n        adjustCompleteIndicatorColumnRowNumbers(barcodeMetadata) {\n            let codewords = this.getCodewords();\n            this.setRowNumbers();\n            this.removeIncorrectCodewords(codewords, barcodeMetadata);\n            let boundingBox = this.getBoundingBox();\n            let top = this._isLeft ? boundingBox.getTopLeft() : boundingBox.getTopRight();\n            let bottom = this._isLeft ? boundingBox.getBottomLeft() : boundingBox.getBottomRight();\n            let firstRow = this.imageRowToCodewordIndex(Math.trunc(top.getY()));\n            let lastRow = this.imageRowToCodewordIndex(Math.trunc(bottom.getY()));\n            // We need to be careful using the average row height. Barcode could be skewed so that we have smaller and\n            // taller rows\n            // float averageRowHeight = (lastRow - firstRow) / /*(float)*/ barcodeMetadata.getRowCount();\n            let barcodeRow = -1;\n            let maxRowHeight = 1;\n            let currentRowHeight = 0;\n            for (let codewordsRow /*int*/ = firstRow; codewordsRow < lastRow; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let codeword = codewords[codewordsRow];\n                //      float expectedRowNumber = (codewordsRow - firstRow) / averageRowHeight;\n                //      if (Math.abs(codeword.getRowNumber() - expectedRowNumber) > 2) {\n                //        SimpleLog.log(LEVEL.WARNING,\n                //            \"Removing codeword, rowNumberSkew too high, codeword[\" + codewordsRow + \"]: Expected Row: \" +\n                //                expectedRowNumber + \", RealRow: \" + codeword.getRowNumber() + \", value: \" + codeword.getValue());\n                //        codewords[codewordsRow] = null;\n                //      }\n                let rowDifference = codeword.getRowNumber() - barcodeRow;\n                // TODO improve handling with case where first row indicator doesn't start with 0\n                if (rowDifference === 0) {\n                    currentRowHeight++;\n                }\n                else if (rowDifference === 1) {\n                    maxRowHeight = Math.max(maxRowHeight, currentRowHeight);\n                    currentRowHeight = 1;\n                    barcodeRow = codeword.getRowNumber();\n                }\n                else if (rowDifference < 0 ||\n                    codeword.getRowNumber() >= barcodeMetadata.getRowCount() ||\n                    rowDifference > codewordsRow) {\n                    codewords[codewordsRow] = null;\n                }\n                else {\n                    let checkedRows;\n                    if (maxRowHeight > 2) {\n                        checkedRows = (maxRowHeight - 2) * rowDifference;\n                    }\n                    else {\n                        checkedRows = rowDifference;\n                    }\n                    let closePreviousCodewordFound = checkedRows >= codewordsRow;\n                    for (let i /*int*/ = 1; i <= checkedRows && !closePreviousCodewordFound; i++) {\n                        // there must be (height * rowDifference) number of codewords missing. For now we assume height = 1.\n                        // This should hopefully get rid of most problems already.\n                        closePreviousCodewordFound = codewords[codewordsRow - i] != null;\n                    }\n                    if (closePreviousCodewordFound) {\n                        codewords[codewordsRow] = null;\n                    }\n                    else {\n                        barcodeRow = codeword.getRowNumber();\n                        currentRowHeight = 1;\n                    }\n                }\n            }\n            // return (int) (averageRowHeight + 0.5);\n        }\n        getRowHeights() {\n            let barcodeMetadata = this.getBarcodeMetadata();\n            if (barcodeMetadata == null) {\n                return null;\n            }\n            this.adjustIncompleteIndicatorColumnRowNumbers(barcodeMetadata);\n            let result = new Int32Array(barcodeMetadata.getRowCount());\n            for (let codeword /*Codeword*/ of this.getCodewords()) {\n                if (codeword != null) {\n                    let rowNumber = codeword.getRowNumber();\n                    if (rowNumber >= result.length) {\n                        // We have more rows than the barcode metadata allows for, ignore them.\n                        continue;\n                    }\n                    result[rowNumber]++;\n                } // else throw exception?\n            }\n            return result;\n        }\n        // TODO maybe we should add missing codewords to store the correct row number to make\n        // finding row numbers for other columns easier\n        // use row height count to make detection of invalid row numbers more reliable\n        adjustIncompleteIndicatorColumnRowNumbers(barcodeMetadata) {\n            let boundingBox = this.getBoundingBox();\n            let top = this._isLeft ? boundingBox.getTopLeft() : boundingBox.getTopRight();\n            let bottom = this._isLeft ? boundingBox.getBottomLeft() : boundingBox.getBottomRight();\n            let firstRow = this.imageRowToCodewordIndex(Math.trunc(top.getY()));\n            let lastRow = this.imageRowToCodewordIndex(Math.trunc(bottom.getY()));\n            // float averageRowHeight = (lastRow - firstRow) / /*(float)*/ barcodeMetadata.getRowCount();\n            let codewords = this.getCodewords();\n            let barcodeRow = -1;\n            for (let codewordsRow /*int*/ = firstRow; codewordsRow < lastRow; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let codeword = codewords[codewordsRow];\n                codeword.setRowNumberAsRowIndicatorColumn();\n                let rowDifference = codeword.getRowNumber() - barcodeRow;\n                // TODO improve handling with case where first row indicator doesn't start with 0\n                if (rowDifference === 0) ;\n                else if (rowDifference === 1) {\n                    barcodeRow = codeword.getRowNumber();\n                }\n                else if (codeword.getRowNumber() >= barcodeMetadata.getRowCount()) {\n                    codewords[codewordsRow] = null;\n                }\n                else {\n                    barcodeRow = codeword.getRowNumber();\n                }\n            }\n            // return (int) (averageRowHeight + 0.5);\n        }\n        getBarcodeMetadata() {\n            let codewords = this.getCodewords();\n            let barcodeColumnCount = new BarcodeValue();\n            let barcodeRowCountUpperPart = new BarcodeValue();\n            let barcodeRowCountLowerPart = new BarcodeValue();\n            let barcodeECLevel = new BarcodeValue();\n            for (let codeword /*Codeword*/ of codewords) {\n                if (codeword == null) {\n                    continue;\n                }\n                codeword.setRowNumberAsRowIndicatorColumn();\n                let rowIndicatorValue = codeword.getValue() % 30;\n                let codewordRowNumber = codeword.getRowNumber();\n                if (!this._isLeft) {\n                    codewordRowNumber += 2;\n                }\n                switch (codewordRowNumber % 3) {\n                    case 0:\n                        barcodeRowCountUpperPart.setValue(rowIndicatorValue * 3 + 1);\n                        break;\n                    case 1:\n                        barcodeECLevel.setValue(rowIndicatorValue / 3);\n                        barcodeRowCountLowerPart.setValue(rowIndicatorValue % 3);\n                        break;\n                    case 2:\n                        barcodeColumnCount.setValue(rowIndicatorValue + 1);\n                        break;\n                }\n            }\n            // Maybe we should check if we have ambiguous values?\n            if ((barcodeColumnCount.getValue().length === 0) ||\n                (barcodeRowCountUpperPart.getValue().length === 0) ||\n                (barcodeRowCountLowerPart.getValue().length === 0) ||\n                (barcodeECLevel.getValue().length === 0) ||\n                barcodeColumnCount.getValue()[0] < 1 ||\n                barcodeRowCountUpperPart.getValue()[0] + barcodeRowCountLowerPart.getValue()[0] < PDF417Common.MIN_ROWS_IN_BARCODE ||\n                barcodeRowCountUpperPart.getValue()[0] + barcodeRowCountLowerPart.getValue()[0] > PDF417Common.MAX_ROWS_IN_BARCODE) {\n                return null;\n            }\n            let barcodeMetadata = new BarcodeMetadata(barcodeColumnCount.getValue()[0], barcodeRowCountUpperPart.getValue()[0], barcodeRowCountLowerPart.getValue()[0], barcodeECLevel.getValue()[0]);\n            this.removeIncorrectCodewords(codewords, barcodeMetadata);\n            return barcodeMetadata;\n        }\n        removeIncorrectCodewords(codewords, barcodeMetadata) {\n            // Remove codewords which do not match the metadata\n            // TODO Maybe we should keep the incorrect codewords for the start and end positions?\n            for (let codewordRow /*int*/ = 0; codewordRow < codewords.length; codewordRow++) {\n                let codeword = codewords[codewordRow];\n                if (codewords[codewordRow] == null) {\n                    continue;\n                }\n                let rowIndicatorValue = codeword.getValue() % 30;\n                let codewordRowNumber = codeword.getRowNumber();\n                if (codewordRowNumber > barcodeMetadata.getRowCount()) {\n                    codewords[codewordRow] = null;\n                    continue;\n                }\n                if (!this._isLeft) {\n                    codewordRowNumber += 2;\n                }\n                switch (codewordRowNumber % 3) {\n                    case 0:\n                        if (rowIndicatorValue * 3 + 1 !== barcodeMetadata.getRowCountUpperPart()) {\n                            codewords[codewordRow] = null;\n                        }\n                        break;\n                    case 1:\n                        if (Math.trunc(rowIndicatorValue / 3) !== barcodeMetadata.getErrorCorrectionLevel() ||\n                            rowIndicatorValue % 3 !== barcodeMetadata.getRowCountLowerPart()) {\n                            codewords[codewordRow] = null;\n                        }\n                        break;\n                    case 2:\n                        if (rowIndicatorValue + 1 !== barcodeMetadata.getColumnCount()) {\n                            codewords[codewordRow] = null;\n                        }\n                        break;\n                }\n            }\n        }\n        isLeft() {\n            return this._isLeft;\n        }\n        // @Override\n        toString() {\n            return 'IsLeft: ' + this._isLeft + '\\n' + super.toString();\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class DetectionResult {\n        constructor(barcodeMetadata, boundingBox) {\n            /*final*/ this.ADJUST_ROW_NUMBER_SKIP = 2;\n            this.barcodeMetadata = barcodeMetadata;\n            this.barcodeColumnCount = barcodeMetadata.getColumnCount();\n            this.boundingBox = boundingBox;\n            // this.detectionResultColumns = new DetectionResultColumn[this.barcodeColumnCount + 2];\n            this.detectionResultColumns = new Array(this.barcodeColumnCount + 2);\n        }\n        getDetectionResultColumns() {\n            this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[0]);\n            this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[this.barcodeColumnCount + 1]);\n            let unadjustedCodewordCount = PDF417Common.MAX_CODEWORDS_IN_BARCODE;\n            let previousUnadjustedCount;\n            do {\n                previousUnadjustedCount = unadjustedCodewordCount;\n                unadjustedCodewordCount = this.adjustRowNumbersAndGetCount();\n            } while (unadjustedCodewordCount > 0 && unadjustedCodewordCount < previousUnadjustedCount);\n            return this.detectionResultColumns;\n        }\n        adjustIndicatorColumnRowNumbers(detectionResultColumn) {\n            if (detectionResultColumn != null) {\n                detectionResultColumn\n                    .adjustCompleteIndicatorColumnRowNumbers(this.barcodeMetadata);\n            }\n        }\n        // TODO ensure that no detected codewords with unknown row number are left\n        // we should be able to estimate the row height and use it as a hint for the row number\n        // we should also fill the rows top to bottom and bottom to top\n        /**\n         * @return number of codewords which don't have a valid row number. Note that the count is not accurate as codewords\n         * will be counted several times. It just serves as an indicator to see when we can stop adjusting row numbers\n         */\n        adjustRowNumbersAndGetCount() {\n            let unadjustedCount = this.adjustRowNumbersByRow();\n            if (unadjustedCount === 0) {\n                return 0;\n            }\n            for (let barcodeColumn /*int*/ = 1; barcodeColumn < this.barcodeColumnCount + 1; barcodeColumn++) {\n                let codewords = this.detectionResultColumns[barcodeColumn].getCodewords();\n                for (let codewordsRow /*int*/ = 0; codewordsRow < codewords.length; codewordsRow++) {\n                    if (codewords[codewordsRow] == null) {\n                        continue;\n                    }\n                    if (!codewords[codewordsRow].hasValidRowNumber()) {\n                        this.adjustRowNumbers(barcodeColumn, codewordsRow, codewords);\n                    }\n                }\n            }\n            return unadjustedCount;\n        }\n        adjustRowNumbersByRow() {\n            this.adjustRowNumbersFromBothRI();\n            // TODO we should only do full row adjustments if row numbers of left and right row indicator column match.\n            // Maybe it's even better to calculated the height (rows: d) and divide it by the number of barcode\n            // rows. This, together with the LRI and RRI row numbers should allow us to get a good estimate where a row\n            // number starts and ends.\n            let unadjustedCount = this.adjustRowNumbersFromLRI();\n            return unadjustedCount + this.adjustRowNumbersFromRRI();\n        }\n        adjustRowNumbersFromBothRI() {\n            if (this.detectionResultColumns[0] == null || this.detectionResultColumns[this.barcodeColumnCount + 1] == null) {\n                return;\n            }\n            let LRIcodewords = this.detectionResultColumns[0].getCodewords();\n            let RRIcodewords = this.detectionResultColumns[this.barcodeColumnCount + 1].getCodewords();\n            for (let codewordsRow /*int*/ = 0; codewordsRow < LRIcodewords.length; codewordsRow++) {\n                if (LRIcodewords[codewordsRow] != null &&\n                    RRIcodewords[codewordsRow] != null &&\n                    LRIcodewords[codewordsRow].getRowNumber() === RRIcodewords[codewordsRow].getRowNumber()) {\n                    for (let barcodeColumn /*int*/ = 1; barcodeColumn <= this.barcodeColumnCount; barcodeColumn++) {\n                        let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                        if (codeword == null) {\n                            continue;\n                        }\n                        codeword.setRowNumber(LRIcodewords[codewordsRow].getRowNumber());\n                        if (!codeword.hasValidRowNumber()) {\n                            this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow] = null;\n                        }\n                    }\n                }\n            }\n        }\n        adjustRowNumbersFromRRI() {\n            if (this.detectionResultColumns[this.barcodeColumnCount + 1] == null) {\n                return 0;\n            }\n            let unadjustedCount = 0;\n            let codewords = this.detectionResultColumns[this.barcodeColumnCount + 1].getCodewords();\n            for (let codewordsRow /*int*/ = 0; codewordsRow < codewords.length; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let rowIndicatorRowNumber = codewords[codewordsRow].getRowNumber();\n                let invalidRowCounts = 0;\n                for (let barcodeColumn /*int*/ = this.barcodeColumnCount + 1; barcodeColumn > 0 && invalidRowCounts < this.ADJUST_ROW_NUMBER_SKIP; barcodeColumn--) {\n                    let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                    if (codeword != null) {\n                        invalidRowCounts = DetectionResult.adjustRowNumberIfValid(rowIndicatorRowNumber, invalidRowCounts, codeword);\n                        if (!codeword.hasValidRowNumber()) {\n                            unadjustedCount++;\n                        }\n                    }\n                }\n            }\n            return unadjustedCount;\n        }\n        adjustRowNumbersFromLRI() {\n            if (this.detectionResultColumns[0] == null) {\n                return 0;\n            }\n            let unadjustedCount = 0;\n            let codewords = this.detectionResultColumns[0].getCodewords();\n            for (let codewordsRow /*int*/ = 0; codewordsRow < codewords.length; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let rowIndicatorRowNumber = codewords[codewordsRow].getRowNumber();\n                let invalidRowCounts = 0;\n                for (let barcodeColumn /*int*/ = 1; barcodeColumn < this.barcodeColumnCount + 1 && invalidRowCounts < this.ADJUST_ROW_NUMBER_SKIP; barcodeColumn++) {\n                    let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                    if (codeword != null) {\n                        invalidRowCounts = DetectionResult.adjustRowNumberIfValid(rowIndicatorRowNumber, invalidRowCounts, codeword);\n                        if (!codeword.hasValidRowNumber()) {\n                            unadjustedCount++;\n                        }\n                    }\n                }\n            }\n            return unadjustedCount;\n        }\n        static adjustRowNumberIfValid(rowIndicatorRowNumber, invalidRowCounts, codeword) {\n            if (codeword == null) {\n                return invalidRowCounts;\n            }\n            if (!codeword.hasValidRowNumber()) {\n                if (codeword.isValidRowNumber(rowIndicatorRowNumber)) {\n                    codeword.setRowNumber(rowIndicatorRowNumber);\n                    invalidRowCounts = 0;\n                }\n                else {\n                    ++invalidRowCounts;\n                }\n            }\n            return invalidRowCounts;\n        }\n        adjustRowNumbers(barcodeColumn, codewordsRow, codewords) {\n            if (!this.detectionResultColumns[barcodeColumn - 1]) {\n                return;\n            }\n            let codeword = codewords[codewordsRow];\n            let previousColumnCodewords = this.detectionResultColumns[barcodeColumn - 1].getCodewords();\n            let nextColumnCodewords = previousColumnCodewords;\n            if (this.detectionResultColumns[barcodeColumn + 1] != null) {\n                nextColumnCodewords = this.detectionResultColumns[barcodeColumn + 1].getCodewords();\n            }\n            // let otherCodewords: Codeword[] = new Codeword[14];\n            let otherCodewords = new Array(14);\n            otherCodewords[2] = previousColumnCodewords[codewordsRow];\n            otherCodewords[3] = nextColumnCodewords[codewordsRow];\n            if (codewordsRow > 0) {\n                otherCodewords[0] = codewords[codewordsRow - 1];\n                otherCodewords[4] = previousColumnCodewords[codewordsRow - 1];\n                otherCodewords[5] = nextColumnCodewords[codewordsRow - 1];\n            }\n            if (codewordsRow > 1) {\n                otherCodewords[8] = codewords[codewordsRow - 2];\n                otherCodewords[10] = previousColumnCodewords[codewordsRow - 2];\n                otherCodewords[11] = nextColumnCodewords[codewordsRow - 2];\n            }\n            if (codewordsRow < codewords.length - 1) {\n                otherCodewords[1] = codewords[codewordsRow + 1];\n                otherCodewords[6] = previousColumnCodewords[codewordsRow + 1];\n                otherCodewords[7] = nextColumnCodewords[codewordsRow + 1];\n            }\n            if (codewordsRow < codewords.length - 2) {\n                otherCodewords[9] = codewords[codewordsRow + 2];\n                otherCodewords[12] = previousColumnCodewords[codewordsRow + 2];\n                otherCodewords[13] = nextColumnCodewords[codewordsRow + 2];\n            }\n            for (let otherCodeword of otherCodewords) {\n                if (DetectionResult.adjustRowNumber(codeword, otherCodeword)) {\n                    return;\n                }\n            }\n        }\n        /**\n         * @return true, if row number was adjusted, false otherwise\n         */\n        static adjustRowNumber(codeword, otherCodeword) {\n            if (otherCodeword == null) {\n                return false;\n            }\n            if (otherCodeword.hasValidRowNumber() && otherCodeword.getBucket() === codeword.getBucket()) {\n                codeword.setRowNumber(otherCodeword.getRowNumber());\n                return true;\n            }\n            return false;\n        }\n        getBarcodeColumnCount() {\n            return this.barcodeColumnCount;\n        }\n        getBarcodeRowCount() {\n            return this.barcodeMetadata.getRowCount();\n        }\n        getBarcodeECLevel() {\n            return this.barcodeMetadata.getErrorCorrectionLevel();\n        }\n        setBoundingBox(boundingBox) {\n            this.boundingBox = boundingBox;\n        }\n        getBoundingBox() {\n            return this.boundingBox;\n        }\n        setDetectionResultColumn(barcodeColumn, detectionResultColumn) {\n            this.detectionResultColumns[barcodeColumn] = detectionResultColumn;\n        }\n        getDetectionResultColumn(barcodeColumn) {\n            return this.detectionResultColumns[barcodeColumn];\n        }\n        // @Override\n        toString() {\n            let rowIndicatorColumn = this.detectionResultColumns[0];\n            if (rowIndicatorColumn == null) {\n                rowIndicatorColumn = this.detectionResultColumns[this.barcodeColumnCount + 1];\n            }\n            // try (\n            let formatter = new Formatter();\n            // ) {\n            for (let codewordsRow /*int*/ = 0; codewordsRow < rowIndicatorColumn.getCodewords().length; codewordsRow++) {\n                formatter.format('CW %3d:', codewordsRow);\n                for (let barcodeColumn /*int*/ = 0; barcodeColumn < this.barcodeColumnCount + 2; barcodeColumn++) {\n                    if (this.detectionResultColumns[barcodeColumn] == null) {\n                        formatter.format('    |   ');\n                        continue;\n                    }\n                    let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                    if (codeword == null) {\n                        formatter.format('    |   ');\n                        continue;\n                    }\n                    formatter.format(' %3d|%3d', codeword.getRowNumber(), codeword.getValue());\n                }\n                formatter.format('%n');\n            }\n            return formatter.toString();\n            // }\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.pdf417.decoder;\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class Codeword {\n        constructor(startX, endX, bucket, value) {\n            this.rowNumber = Codeword.BARCODE_ROW_UNKNOWN;\n            this.startX = Math.trunc(startX);\n            this.endX = Math.trunc(endX);\n            this.bucket = Math.trunc(bucket);\n            this.value = Math.trunc(value);\n        }\n        hasValidRowNumber() {\n            return this.isValidRowNumber(this.rowNumber);\n        }\n        isValidRowNumber(rowNumber) {\n            return rowNumber !== Codeword.BARCODE_ROW_UNKNOWN && this.bucket === (rowNumber % 3) * 3;\n        }\n        setRowNumberAsRowIndicatorColumn() {\n            this.rowNumber = Math.trunc((Math.trunc(this.value / 30)) * 3 + Math.trunc(this.bucket / 3));\n        }\n        getWidth() {\n            return this.endX - this.startX;\n        }\n        getStartX() {\n            return this.startX;\n        }\n        getEndX() {\n            return this.endX;\n        }\n        getBucket() {\n            return this.bucket;\n        }\n        getValue() {\n            return this.value;\n        }\n        getRowNumber() {\n            return this.rowNumber;\n        }\n        setRowNumber(rowNumber) {\n            this.rowNumber = rowNumber;\n        }\n        //   @Override\n        toString() {\n            return this.rowNumber + '|' + this.value;\n        }\n    }\n    Codeword.BARCODE_ROW_UNKNOWN = -1;\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author Guenther Grau\n     * @author creatale GmbH (christoph.schulz@creatale.de)\n     */\n    /*final*/ class PDF417CodewordDecoder {\n        /* @note\n         * this action have to be performed before first use of class\n         * - static constructor\n         * working with 32bit float (based from Java logic)\n        */\n        static initialize() {\n            // Pre-computes the symbol ratio table.\n            for ( /*int*/let i = 0; i < PDF417Common.SYMBOL_TABLE.length; i++) {\n                let currentSymbol = PDF417Common.SYMBOL_TABLE[i];\n                let currentBit = currentSymbol & 0x1;\n                for ( /*int*/let j = 0; j < PDF417Common.BARS_IN_MODULE; j++) {\n                    let size = 0.0;\n                    while ((currentSymbol & 0x1) === currentBit) {\n                        size += 1.0;\n                        currentSymbol >>= 1;\n                    }\n                    currentBit = currentSymbol & 0x1;\n                    if (!PDF417CodewordDecoder.RATIOS_TABLE[i]) {\n                        PDF417CodewordDecoder.RATIOS_TABLE[i] = new Array(PDF417Common.BARS_IN_MODULE);\n                    }\n                    PDF417CodewordDecoder.RATIOS_TABLE[i][PDF417Common.BARS_IN_MODULE - j - 1] = Math.fround(size / PDF417Common.MODULES_IN_CODEWORD);\n                }\n            }\n            this.bSymbolTableReady = true;\n        }\n        static getDecodedValue(moduleBitCount) {\n            let decodedValue = PDF417CodewordDecoder.getDecodedCodewordValue(PDF417CodewordDecoder.sampleBitCounts(moduleBitCount));\n            if (decodedValue !== -1) {\n                return decodedValue;\n            }\n            return PDF417CodewordDecoder.getClosestDecodedValue(moduleBitCount);\n        }\n        static sampleBitCounts(moduleBitCount) {\n            let bitCountSum = MathUtils.sum(moduleBitCount);\n            let result = new Int32Array(PDF417Common.BARS_IN_MODULE);\n            let bitCountIndex = 0;\n            let sumPreviousBits = 0;\n            for ( /*int*/let i = 0; i < PDF417Common.MODULES_IN_CODEWORD; i++) {\n                let sampleIndex = bitCountSum / (2 * PDF417Common.MODULES_IN_CODEWORD) +\n                    (i * bitCountSum) / PDF417Common.MODULES_IN_CODEWORD;\n                if (sumPreviousBits + moduleBitCount[bitCountIndex] <= sampleIndex) {\n                    sumPreviousBits += moduleBitCount[bitCountIndex];\n                    bitCountIndex++;\n                }\n                result[bitCountIndex]++;\n            }\n            return result;\n        }\n        static getDecodedCodewordValue(moduleBitCount) {\n            let decodedValue = PDF417CodewordDecoder.getBitValue(moduleBitCount);\n            return PDF417Common.getCodeword(decodedValue) === -1 ? -1 : decodedValue;\n        }\n        static getBitValue(moduleBitCount) {\n            let result = /*long*/ 0;\n            for (let /*int*/ i = 0; i < moduleBitCount.length; i++) {\n                for ( /*int*/let bit = 0; bit < moduleBitCount[i]; bit++) {\n                    result = (result << 1) | (i % 2 === 0 ? 1 : 0);\n                }\n            }\n            return Math.trunc(result);\n        }\n        // working with 32bit float (as in Java)\n        static getClosestDecodedValue(moduleBitCount) {\n            let bitCountSum = MathUtils.sum(moduleBitCount);\n            let bitCountRatios = new Array(PDF417Common.BARS_IN_MODULE);\n            if (bitCountSum > 1) {\n                for (let /*int*/ i = 0; i < bitCountRatios.length; i++) {\n                    bitCountRatios[i] = Math.fround(moduleBitCount[i] / bitCountSum);\n                }\n            }\n            let bestMatchError = Float.MAX_VALUE;\n            let bestMatch = -1;\n            if (!this.bSymbolTableReady) {\n                PDF417CodewordDecoder.initialize();\n            }\n            for ( /*int*/let j = 0; j < PDF417CodewordDecoder.RATIOS_TABLE.length; j++) {\n                let error = 0.0;\n                let ratioTableRow = PDF417CodewordDecoder.RATIOS_TABLE[j];\n                for ( /*int*/let k = 0; k < PDF417Common.BARS_IN_MODULE; k++) {\n                    let diff = Math.fround(ratioTableRow[k] - bitCountRatios[k]);\n                    error += Math.fround(diff * diff);\n                    if (error >= bestMatchError) {\n                        break;\n                    }\n                }\n                if (error < bestMatchError) {\n                    bestMatchError = error;\n                    bestMatch = PDF417Common.SYMBOL_TABLE[j];\n                }\n            }\n            return bestMatch;\n        }\n    }\n    // flag that the table is ready for use\n    PDF417CodewordDecoder.bSymbolTableReady = false;\n    PDF417CodewordDecoder.RATIOS_TABLE = new Array(PDF417Common.SYMBOL_TABLE.length).map(x => x = new Array(PDF417Common.BARS_IN_MODULE));\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.pdf417;\n    /**\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417ResultMetadata {\n        constructor() {\n            this.segmentCount = -1;\n            this.fileSize = -1;\n            this.timestamp = -1;\n            this.checksum = -1;\n        }\n        /**\n         * The Segment ID represents the segment of the whole file distributed over different symbols.\n         *\n         * @return File segment index\n         */\n        getSegmentIndex() {\n            return this.segmentIndex;\n        }\n        setSegmentIndex(segmentIndex) {\n            this.segmentIndex = segmentIndex;\n        }\n        /**\n         * Is the same for each related PDF417 symbol\n         *\n         * @return File ID\n         */\n        getFileId() {\n            return this.fileId;\n        }\n        setFileId(fileId) {\n            this.fileId = fileId;\n        }\n        /**\n         * @return always null\n         * @deprecated use dedicated already parsed fields\n         */\n        //   @Deprecated\n        getOptionalData() {\n            return this.optionalData;\n        }\n        /**\n         * @param optionalData old optional data format as int array\n         * @deprecated parse and use new fields\n         */\n        //   @Deprecated\n        setOptionalData(optionalData) {\n            this.optionalData = optionalData;\n        }\n        /**\n         * @return true if it is the last segment\n         */\n        isLastSegment() {\n            return this.lastSegment;\n        }\n        setLastSegment(lastSegment) {\n            this.lastSegment = lastSegment;\n        }\n        /**\n         * @return count of segments, -1 if not set\n         */\n        getSegmentCount() {\n            return this.segmentCount;\n        }\n        setSegmentCount(segmentCount /*int*/) {\n            this.segmentCount = segmentCount;\n        }\n        getSender() {\n            return this.sender || null;\n        }\n        setSender(sender) {\n            this.sender = sender;\n        }\n        getAddressee() {\n            return this.addressee || null;\n        }\n        setAddressee(addressee) {\n            this.addressee = addressee;\n        }\n        /**\n         * Filename of the encoded file\n         *\n         * @return filename\n         */\n        getFileName() {\n            return this.fileName;\n        }\n        setFileName(fileName) {\n            this.fileName = fileName;\n        }\n        /**\n         * filesize in bytes of the encoded file\n         *\n         * @return filesize in bytes, -1 if not set\n         */\n        getFileSize() {\n            return this.fileSize;\n        }\n        setFileSize(fileSize /*long*/) {\n            this.fileSize = fileSize;\n        }\n        /**\n         * 16-bit CRC checksum using CCITT-16\n         *\n         * @return crc checksum, -1 if not set\n         */\n        getChecksum() {\n            return this.checksum;\n        }\n        setChecksum(checksum /*int*/) {\n            this.checksum = checksum;\n        }\n        /**\n         * unix epock timestamp, elapsed seconds since 1970-01-01\n         *\n         * @return elapsed seconds, -1 if not set\n         */\n        getTimestamp() {\n            return this.timestamp;\n        }\n        setTimestamp(timestamp /*long*/) {\n            this.timestamp = timestamp;\n        }\n    }\n\n    /**\n     * Ponyfill for Java's Long class.\n     */\n    class Long {\n        /**\n         * Parses a string to a number, since JS has no really Int64.\n         *\n         * @param num Numeric string.\n         * @param radix Destination radix.\n         */\n        static parseLong(num, radix = undefined) {\n            return parseInt(num, radix);\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class NullPointerException extends Exception {\n    }\n    NullPointerException.kind = 'NullPointerException';\n\n    /*\n     * Copyright (c) 1994, 2004, Oracle and/or its affiliates. All rights reserved.\n     * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n     *\n     * This code is free software; you can redistribute it and/or modify it\n     * under the terms of the GNU General Public License version 2 only, as\n     * published by the Free Software Foundation.  Oracle designates this\n     * particular file as subject to the \"Classpath\" exception as provided\n     * by Oracle in the LICENSE file that accompanied this code.\n     *\n     * This code is distributed in the hope that it will be useful, but WITHOUT\n     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n     * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n     * version 2 for more details (a copy is included in the LICENSE file that\n     * accompanied this code).\n     *\n     * You should have received a copy of the GNU General Public License version\n     * 2 along with this work; if not, write to the Free Software Foundation,\n     * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n     *\n     * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n     * or visit www.oracle.com if you need additional information or have any\n     * questions.\n     */\n    // package java.io;\n    /**\n     * This abstract class is the superclass of all classes representing\n     * an output stream of bytes. An output stream accepts output bytes\n     * and sends them to some sink.\n     * <p>\n     * Applications that need to define a subclass of\n     * <code>OutputStream</code> must always provide at least a method\n     * that writes one byte of output.\n     *\n     * @author  Arthur van Hoff\n     * @see     java.io.BufferedOutputStream\n     * @see     java.io.ByteArrayOutputStream\n     * @see     java.io.DataOutputStream\n     * @see     java.io.FilterOutputStream\n     * @see     java.io.InputStream\n     * @see     java.io.OutputStream#write(int)\n     * @since   JDK1.0\n     */\n    /*public*/ class OutputStream /*implements Closeable, Flushable*/ {\n        /**\n         * Writes <code>b.length</code> bytes from the specified byte array\n         * to this output stream. The general contract for <code>write(b)</code>\n         * is that it should have exactly the same effect as the call\n         * <code>write(b, 0, b.length)</code>.\n         *\n         * @param      b   the data.\n         * @exception  IOException  if an I/O error occurs.\n         * @see        java.io.OutputStream#write(byte[], int, int)\n         */\n        writeBytes(b) {\n            this.writeBytesOffset(b, 0, b.length);\n        }\n        /**\n         * Writes <code>len</code> bytes from the specified byte array\n         * starting at offset <code>off</code> to this output stream.\n         * The general contract for <code>write(b, off, len)</code> is that\n         * some of the bytes in the array <code>b</code> are written to the\n         * output stream in order; element <code>b[off]</code> is the first\n         * byte written and <code>b[off+len-1]</code> is the last byte written\n         * by this operation.\n         * <p>\n         * The <code>write</code> method of <code>OutputStream</code> calls\n         * the write method of one argument on each of the bytes to be\n         * written out. Subclasses are encouraged to override this method and\n         * provide a more efficient implementation.\n         * <p>\n         * If <code>b</code> is <code>null</code>, a\n         * <code>NullPointerException</code> is thrown.\n         * <p>\n         * If <code>off</code> is negative, or <code>len</code> is negative, or\n         * <code>off+len</code> is greater than the length of the array\n         * <code>b</code>, then an <tt>IndexOutOfBoundsException</tt> is thrown.\n         *\n         * @param      b     the data.\n         * @param      off   the start offset in the data.\n         * @param      len   the number of bytes to write.\n         * @exception  IOException  if an I/O error occurs. In particular,\n         *             an <code>IOException</code> is thrown if the output\n         *             stream is closed.\n         */\n        writeBytesOffset(b, off, len) {\n            if (b == null) {\n                throw new NullPointerException();\n            }\n            else if ((off < 0) || (off > b.length) || (len < 0) ||\n                ((off + len) > b.length) || ((off + len) < 0)) {\n                throw new IndexOutOfBoundsException();\n            }\n            else if (len === 0) {\n                return;\n            }\n            for (let i = 0; i < len; i++) {\n                this.write(b[off + i]);\n            }\n        }\n        /**\n         * Flushes this output stream and forces any buffered output bytes\n         * to be written out. The general contract of <code>flush</code> is\n         * that calling it is an indication that, if any bytes previously\n         * written have been buffered by the implementation of the output\n         * stream, such bytes should immediately be written to their\n         * intended destination.\n         * <p>\n         * If the intended destination of this stream is an abstraction provided by\n         * the underlying operating system, for example a file, then flushing the\n         * stream guarantees only that bytes previously written to the stream are\n         * passed to the operating system for writing; it does not guarantee that\n         * they are actually written to a physical device such as a disk drive.\n         * <p>\n         * The <code>flush</code> method of <code>OutputStream</code> does nothing.\n         *\n         * @exception  IOException  if an I/O error occurs.\n         */\n        flush() {\n        }\n        /**\n         * Closes this output stream and releases any system resources\n         * associated with this stream. The general contract of <code>close</code>\n         * is that it closes the output stream. A closed stream cannot perform\n         * output operations and cannot be reopened.\n         * <p>\n         * The <code>close</code> method of <code>OutputStream</code> does nothing.\n         *\n         * @exception  IOException  if an I/O error occurs.\n         */\n        close() {\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class OutOfMemoryError extends Exception {\n    }\n\n    /*\n     * Copyright (c) 1994, 2010, Oracle and/or its affiliates. All rights reserved.\n     * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n     *\n     * This code is free software; you can redistribute it and/or modify it\n     * under the terms of the GNU General Public License version 2 only, as\n     * published by the Free Software Foundation.  Oracle designates this\n     * particular file as subject to the \"Classpath\" exception as provided\n     * by Oracle in the LICENSE file that accompanied this code.\n     *\n     * This code is distributed in the hope that it will be useful, but WITHOUT\n     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n     * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n     * version 2 for more details (a copy is included in the LICENSE file that\n     * accompanied this code).\n     *\n     * You should have received a copy of the GNU General Public License version\n     * 2 along with this work; if not, write to the Free Software Foundation,\n     * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n     *\n     * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n     * or visit www.oracle.com if you need additional information or have any\n     * questions.\n     */\n    /**\n     * This class implements an output stream in which the data is\n     * written into a byte array. The buffer automatically grows as data\n     * is written to it.\n     * The data can be retrieved using <code>toByteArray()</code> and\n     * <code>toString()</code>.\n     * <p>\n     * Closing a <tt>ByteArrayOutputStream</tt> has no effect. The methods in\n     * this class can be called after the stream has been closed without\n     * generating an <tt>IOException</tt>.\n     *\n     * @author  Arthur van Hoff\n     * @since   JDK1.0\n     */\n    /*public*/ class ByteArrayOutputStream extends OutputStream {\n        /**\n         * Creates a new byte array output stream. The buffer capacity is\n         * initially 32 bytes, though its size increases if necessary.\n         */\n        // public constructor() {\n        //     this(32);\n        // }\n        /**\n         * Creates a new byte array output stream, with a buffer capacity of\n         * the specified size, in bytes.\n         *\n         * @param   size   the initial size.\n         * @exception  IllegalArgumentException if size is negative.\n         */\n        constructor(size = 32) {\n            super();\n            /**\n             * The number of valid bytes in the buffer.\n             */\n            this.count = 0;\n            if (size < 0) {\n                throw new IllegalArgumentException('Negative initial size: '\n                    + size);\n            }\n            this.buf = new Uint8Array(size);\n        }\n        /**\n         * Increases the capacity if necessary to ensure that it can hold\n         * at least the number of elements specified by the minimum\n         * capacity argument.\n         *\n         * @param minCapacity the desired minimum capacity\n         * @throws OutOfMemoryError if {@code minCapacity < 0}.  This is\n         * interpreted as a request for the unsatisfiably large capacity\n         * {@code (long) Integer.MAX_VALUE + (minCapacity - Integer.MAX_VALUE)}.\n         */\n        ensureCapacity(minCapacity) {\n            // overflow-conscious code\n            if (minCapacity - this.buf.length > 0)\n                this.grow(minCapacity);\n        }\n        /**\n         * Increases the capacity to ensure that it can hold at least the\n         * number of elements specified by the minimum capacity argument.\n         *\n         * @param minCapacity the desired minimum capacity\n         */\n        grow(minCapacity) {\n            // overflow-conscious code\n            let oldCapacity = this.buf.length;\n            let newCapacity = oldCapacity << 1;\n            if (newCapacity - minCapacity < 0)\n                newCapacity = minCapacity;\n            if (newCapacity < 0) {\n                if (minCapacity < 0) // overflow\n                    throw new OutOfMemoryError();\n                newCapacity = Integer.MAX_VALUE;\n            }\n            this.buf = Arrays.copyOfUint8Array(this.buf, newCapacity);\n        }\n        /**\n         * Writes the specified byte to this byte array output stream.\n         *\n         * @param   b   the byte to be written.\n         */\n        write(b) {\n            this.ensureCapacity(this.count + 1);\n            this.buf[this.count] = /*(byte)*/ b;\n            this.count += 1;\n        }\n        /**\n         * Writes <code>len</code> bytes from the specified byte array\n         * starting at offset <code>off</code> to this byte array output stream.\n         *\n         * @param   b     the data.\n         * @param   off   the start offset in the data.\n         * @param   len   the number of bytes to write.\n         */\n        writeBytesOffset(b, off, len) {\n            if ((off < 0) || (off > b.length) || (len < 0) ||\n                ((off + len) - b.length > 0)) {\n                throw new IndexOutOfBoundsException();\n            }\n            this.ensureCapacity(this.count + len);\n            System.arraycopy(b, off, this.buf, this.count, len);\n            this.count += len;\n        }\n        /**\n         * Writes the complete contents of this byte array output stream to\n         * the specified output stream argument, as if by calling the output\n         * stream's write method using <code>out.write(buf, 0, count)</code>.\n         *\n         * @param      out   the output stream to which to write the data.\n         * @exception  IOException  if an I/O error occurs.\n         */\n        writeTo(out) {\n            out.writeBytesOffset(this.buf, 0, this.count);\n        }\n        /**\n         * Resets the <code>count</code> field of this byte array output\n         * stream to zero, so that all currently accumulated output in the\n         * output stream is discarded. The output stream can be used again,\n         * reusing the already allocated buffer space.\n         *\n         * @see     java.io.ByteArrayInputStream#count\n         */\n        reset() {\n            this.count = 0;\n        }\n        /**\n         * Creates a newly allocated byte array. Its size is the current\n         * size of this output stream and the valid contents of the buffer\n         * have been copied into it.\n         *\n         * @return  the current contents of this output stream, as a byte array.\n         * @see     java.io.ByteArrayOutputStream#size()\n         */\n        toByteArray() {\n            return Arrays.copyOfUint8Array(this.buf, this.count);\n        }\n        /**\n         * Returns the current size of the buffer.\n         *\n         * @return  the value of the <code>count</code> field, which is the number\n         *          of valid bytes in this output stream.\n         * @see     java.io.ByteArrayOutputStream#count\n         */\n        size() {\n            return this.count;\n        }\n        toString(param) {\n            if (!param) {\n                return this.toString_void();\n            }\n            if (typeof param === 'string') {\n                return this.toString_string(param);\n            }\n            return this.toString_number(param);\n        }\n        /**\n         * Converts the buffer's contents into a string decoding bytes using the\n         * platform's default character set. The length of the new <tt>String</tt>\n         * is a function of the character set, and hence may not be equal to the\n         * size of the buffer.\n         *\n         * <p> This method always replaces malformed-input and unmappable-character\n         * sequences with the default replacement string for the platform's\n         * default character set. The {@linkplain java.nio.charset.CharsetDecoder}\n         * class should be used when more control over the decoding process is\n         * required.\n         *\n         * @return String decoded from the buffer's contents.\n         * @since  JDK1.1\n         */\n        toString_void() {\n            return new String(this.buf /*, 0, this.count*/).toString();\n        }\n        /**\n         * Converts the buffer's contents into a string by decoding the bytes using\n         * the specified {@link java.nio.charset.Charset charsetName}. The length of\n         * the new <tt>String</tt> is a function of the charset, and hence may not be\n         * equal to the length of the byte array.\n         *\n         * <p> This method always replaces malformed-input and unmappable-character\n         * sequences with this charset's default replacement string. The {@link\n         * java.nio.charset.CharsetDecoder} class should be used when more control\n         * over the decoding process is required.\n         *\n         * @param  charsetName  the name of a supported\n         *              {@linkplain java.nio.charset.Charset </code>charset<code>}\n         * @return String decoded from the buffer's contents.\n         * @exception  UnsupportedEncodingException\n         *             If the named charset is not supported\n         * @since   JDK1.1\n         */\n        toString_string(charsetName) {\n            return new String(this.buf /*, 0, this.count, charsetName*/).toString();\n        }\n        /**\n         * Creates a newly allocated string. Its size is the current size of\n         * the output stream and the valid contents of the buffer have been\n         * copied into it. Each character <i>c</i> in the resulting string is\n         * constructed from the corresponding element <i>b</i> in the byte\n         * array such that:\n         * <blockquote><pre>\n         *     c == (char)(((hibyte &amp; 0xff) &lt;&lt; 8) | (b &amp; 0xff))\n         * </pre></blockquote>\n         *\n         * @deprecated This method does not properly convert bytes into characters.\n         * As of JDK&nbsp;1.1, the preferred way to do this is via the\n         * <code>toString(String enc)</code> method, which takes an encoding-name\n         * argument, or the <code>toString()</code> method, which uses the\n         * platform's default character encoding.\n         *\n         * @param      hibyte    the high byte of each resulting Unicode character.\n         * @return     the current contents of the output stream, as a string.\n         * @see        java.io.ByteArrayOutputStream#size()\n         * @see        java.io.ByteArrayOutputStream#toString(String)\n         * @see        java.io.ByteArrayOutputStream#toString()\n         */\n        // @Deprecated\n        toString_number(hibyte) {\n            return new String(this.buf /*, hibyte, 0, this.count*/).toString();\n        }\n        /**\n         * Closing a <tt>ByteArrayOutputStream</tt> has no effect. The methods in\n         * this class can be called after the stream has been closed without\n         * generating an <tt>IOException</tt>.\n         * <p>\n         *\n         * @throws IOException\n         */\n        close() {\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*private*/ var Mode$2;\n    (function (Mode) {\n        Mode[Mode[\"ALPHA\"] = 0] = \"ALPHA\";\n        Mode[Mode[\"LOWER\"] = 1] = \"LOWER\";\n        Mode[Mode[\"MIXED\"] = 2] = \"MIXED\";\n        Mode[Mode[\"PUNCT\"] = 3] = \"PUNCT\";\n        Mode[Mode[\"ALPHA_SHIFT\"] = 4] = \"ALPHA_SHIFT\";\n        Mode[Mode[\"PUNCT_SHIFT\"] = 5] = \"PUNCT_SHIFT\";\n    })(Mode$2 || (Mode$2 = {}));\n    /**\n     * Indirectly access the global BigInt constructor, it\n     * allows browsers that doesn't support BigInt to run\n     * the library without breaking due to \"undefined BigInt\"\n     * errors.\n     */\n    function getBigIntConstructor() {\n        if (typeof window !== 'undefined') {\n            return window['BigInt'] || null;\n        }\n        if (typeof global !== 'undefined') {\n            return global['BigInt'] || null;\n        }\n        if (typeof self !== 'undefined') {\n            return self['BigInt'] || null;\n        }\n        throw new Error('Can\\'t search globals for BigInt!');\n    }\n    /**\n     * Used to store the BigInt constructor.\n     */\n    let BigInteger;\n    /**\n     * This function creates a bigint value. It allows browsers\n     * that doesn't support BigInt to run the rest of the library\n     * by not directly accessing the BigInt constructor.\n     */\n    function createBigInt(num) {\n        if (typeof BigInteger === 'undefined') {\n            BigInteger = getBigIntConstructor();\n        }\n        if (BigInteger === null) {\n            throw new Error('BigInt is not supported!');\n        }\n        return BigInteger(num);\n    }\n    function getEXP900() {\n        // in Java - array with length = 16\n        let EXP900 = [];\n        EXP900[0] = createBigInt(1);\n        let nineHundred = createBigInt(900);\n        EXP900[1] = nineHundred;\n        // in Java - array with length = 16\n        for (let i /*int*/ = 2; i < 16; i++) {\n            EXP900[i] = EXP900[i - 1] * nineHundred;\n        }\n        return EXP900;\n    }\n    /**\n     * <p>This class contains the methods for decoding the PDF417 codewords.</p>\n     *\n     * @author SITA Lab (kevin.osullivan@sita.aero)\n     * @author Guenther Grau\n     */\n    /*final*/ class DecodedBitStreamParser$2 {\n        //   private DecodedBitStreamParser() {\n        // }\n        /**\n         *\n         * @param codewords\n         * @param ecLevel\n         *\n         * @throws FormatException\n         */\n        static decode(codewords, ecLevel) {\n            // pass encoding to result (will be used for decode symbols in byte mode)\n            let result = new StringBuilder('');\n            // let encoding: Charset = StandardCharsets.ISO_8859_1;\n            let encoding = CharacterSetECI.ISO8859_1;\n            /**\n             * @note the next command is specific from this TypeScript library\n             * because TS can't properly cast some values to char and\n             * convert it to string later correctly due to encoding\n             * differences from Java version. As reported here:\n             * https://github.com/zxing-js/library/pull/264/files#r382831593\n             */\n            result.enableDecoding(encoding);\n            // Get compaction mode\n            let codeIndex = 1;\n            let code = codewords[codeIndex++];\n            let resultMetadata = new PDF417ResultMetadata();\n            while (codeIndex < codewords[0]) {\n                switch (code) {\n                    case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                        codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex, result);\n                        break;\n                    case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                    case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                        codeIndex = DecodedBitStreamParser$2.byteCompaction(code, codewords, encoding, codeIndex, result);\n                        break;\n                    case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                        result.append(/*(char)*/ codewords[codeIndex++]);\n                        break;\n                    case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                        codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex, result);\n                        break;\n                    case DecodedBitStreamParser$2.ECI_CHARSET:\n                        let charsetECI = CharacterSetECI.getCharacterSetECIByValue(codewords[codeIndex++]);\n                        // encoding = Charset.forName(charsetECI.getName());\n                        break;\n                    case DecodedBitStreamParser$2.ECI_GENERAL_PURPOSE:\n                        // Can't do anything with generic ECI; skip its 2 characters\n                        codeIndex += 2;\n                        break;\n                    case DecodedBitStreamParser$2.ECI_USER_DEFINED:\n                        // Can't do anything with user ECI; skip its 1 character\n                        codeIndex++;\n                        break;\n                    case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                        codeIndex = DecodedBitStreamParser$2.decodeMacroBlock(codewords, codeIndex, resultMetadata);\n                        break;\n                    case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                    case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                        // Should not see these outside a macro block\n                        throw new FormatException();\n                    default:\n                        // Default to text compaction. During testing numerous barcodes\n                        // appeared to be missing the starting mode. In these cases defaulting\n                        // to text compaction seems to work.\n                        codeIndex--;\n                        codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex, result);\n                        break;\n                }\n                if (codeIndex < codewords.length) {\n                    code = codewords[codeIndex++];\n                }\n                else {\n                    throw FormatException.getFormatInstance();\n                }\n            }\n            if (result.length() === 0) {\n                throw FormatException.getFormatInstance();\n            }\n            let decoderResult = new DecoderResult(null, result.toString(), null, ecLevel);\n            decoderResult.setOther(resultMetadata);\n            return decoderResult;\n        }\n        /**\n         *\n         * @param int\n         * @param param1\n         * @param codewords\n         * @param int\n         * @param codeIndex\n         * @param PDF417ResultMetadata\n         * @param resultMetadata\n         *\n         * @throws FormatException\n         */\n        // @SuppressWarnings(\"deprecation\")\n        static decodeMacroBlock(codewords, codeIndex, resultMetadata) {\n            if (codeIndex + DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS > codewords[0]) {\n                // we must have at least two bytes left for the segment index\n                throw FormatException.getFormatInstance();\n            }\n            let segmentIndexArray = new Int32Array(DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS);\n            for (let i /*int*/ = 0; i < DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS; i++, codeIndex++) {\n                segmentIndexArray[i] = codewords[codeIndex];\n            }\n            resultMetadata.setSegmentIndex(Integer.parseInt(DecodedBitStreamParser$2.decodeBase900toBase10(segmentIndexArray, DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS)));\n            let fileId = new StringBuilder();\n            codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex, fileId);\n            resultMetadata.setFileId(fileId.toString());\n            let optionalFieldsStart = -1;\n            if (codewords[codeIndex] === DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD) {\n                optionalFieldsStart = codeIndex + 1;\n            }\n            while (codeIndex < codewords[0]) {\n                switch (codewords[codeIndex]) {\n                    case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                        codeIndex++;\n                        switch (codewords[codeIndex]) {\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME:\n                                let fileName = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex + 1, fileName);\n                                resultMetadata.setFileName(fileName.toString());\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SENDER:\n                                let sender = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex + 1, sender);\n                                resultMetadata.setSender(sender.toString());\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE:\n                                let addressee = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex + 1, addressee);\n                                resultMetadata.setAddressee(addressee.toString());\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT:\n                                let segmentCount = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, segmentCount);\n                                resultMetadata.setSegmentCount(Integer.parseInt(segmentCount.toString()));\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP:\n                                let timestamp = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, timestamp);\n                                resultMetadata.setTimestamp(Long.parseLong(timestamp.toString()));\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM:\n                                let checksum = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, checksum);\n                                resultMetadata.setChecksum(Integer.parseInt(checksum.toString()));\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE:\n                                let fileSize = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, fileSize);\n                                resultMetadata.setFileSize(Long.parseLong(fileSize.toString()));\n                                break;\n                            default:\n                                throw FormatException.getFormatInstance();\n                        }\n                        break;\n                    case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                        codeIndex++;\n                        resultMetadata.setLastSegment(true);\n                        break;\n                    default:\n                        throw FormatException.getFormatInstance();\n                }\n            }\n            // copy optional fields to additional options\n            if (optionalFieldsStart !== -1) {\n                let optionalFieldsLength = codeIndex - optionalFieldsStart;\n                if (resultMetadata.isLastSegment()) {\n                    // do not include terminator\n                    optionalFieldsLength--;\n                }\n                resultMetadata.setOptionalData(Arrays.copyOfRange(codewords, optionalFieldsStart, optionalFieldsStart + optionalFieldsLength));\n            }\n            return codeIndex;\n        }\n        /**\n         * Text Compaction mode (see 5.4.1.5) permits all printable ASCII characters to be\n         * encoded, i.e. values 32 - 126 inclusive in accordance with ISO/IEC 646 (IRV), as\n         * well as selected control characters.\n         *\n         * @param codewords The array of codewords (data + error)\n         * @param codeIndex The current index into the codeword array.\n         * @param result    The decoded data is appended to the result.\n         * @return The next index into the codeword array.\n         */\n        static textCompaction(codewords, codeIndex, result) {\n            // 2 character per codeword\n            let textCompactionData = new Int32Array((codewords[0] - codeIndex) * 2);\n            // Used to hold the byte compaction value if there is a mode shift\n            let byteCompactionData = new Int32Array((codewords[0] - codeIndex) * 2);\n            let index = 0;\n            let end = false;\n            while ((codeIndex < codewords[0]) && !end) {\n                let code = codewords[codeIndex++];\n                if (code < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                    textCompactionData[index] = code / 30;\n                    textCompactionData[index + 1] = code % 30;\n                    index += 2;\n                }\n                else {\n                    switch (code) {\n                        case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                            // reinitialize text compaction mode to alpha sub mode\n                            textCompactionData[index++] = DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH;\n                            break;\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                        case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                        case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                            codeIndex--;\n                            end = true;\n                            break;\n                        case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                            // The Mode Shift codeword 913 shall cause a temporary\n                            // switch from Text Compaction mode to Byte Compaction mode.\n                            // This switch shall be in effect for only the next codeword,\n                            // after which the mode shall revert to the prevailing sub-mode\n                            // of the Text Compaction mode. Codeword 913 is only available\n                            // in Text Compaction mode; its use is described in 5.4.2.4.\n                            textCompactionData[index] = DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE;\n                            code = codewords[codeIndex++];\n                            byteCompactionData[index] = code;\n                            index++;\n                            break;\n                    }\n                }\n            }\n            DecodedBitStreamParser$2.decodeTextCompaction(textCompactionData, byteCompactionData, index, result);\n            return codeIndex;\n        }\n        /**\n         * The Text Compaction mode includes all the printable ASCII characters\n         * (i.e. values from 32 to 126) and three ASCII control characters: HT or tab\n         * (9: e), LF or line feed (10: e), and CR or carriage\n         * return (13: e). The Text Compaction mode also includes various latch\n         * and shift characters which are used exclusively within the mode. The Text\n         * Compaction mode encodes up to 2 characters per codeword. The compaction rules\n         * for converting data into PDF417 codewords are defined in 5.4.2.2. The sub-mode\n         * switches are defined in 5.4.2.3.\n         *\n         * @param textCompactionData The text compaction data.\n         * @param byteCompactionData The byte compaction data if there\n         *                           was a mode shift.\n         * @param length             The size of the text compaction and byte compaction data.\n         * @param result             The decoded data is appended to the result.\n         */\n        static decodeTextCompaction(textCompactionData, byteCompactionData, length, result) {\n            // Beginning from an initial state of the Alpha sub-mode\n            // The default compaction mode for PDF417 in effect at the start of each symbol shall always be Text\n            // Compaction mode Alpha sub-mode (alphabetic: uppercase). A latch codeword from another mode to the Text\n            // Compaction mode shall always switch to the Text Compaction Alpha sub-mode.\n            let subMode = Mode$2.ALPHA;\n            let priorToShiftMode = Mode$2.ALPHA;\n            let i = 0;\n            while (i < length) {\n                let subModeCh = textCompactionData[i];\n                let ch = /*char*/ '';\n                switch (subMode) {\n                    case Mode$2.ALPHA:\n                        // Alpha (alphabetic: uppercase)\n                        if (subModeCh < 26) {\n                            // Upper case Alpha Character\n                            // Note: 65 = 'A' ASCII -> there is byte code of symbol\n                            ch = /*(char)('A' + subModeCh) */ String.fromCharCode(65 + subModeCh);\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.LL:\n                                    subMode = Mode$2.LOWER;\n                                    break;\n                                case DecodedBitStreamParser$2.ML:\n                                    subMode = Mode$2.MIXED;\n                                    break;\n                                case DecodedBitStreamParser$2.PS:\n                                    // Shift to punctuation\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.PUNCT_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.LOWER:\n                        // Lower (alphabetic: lowercase)\n                        if (subModeCh < 26) {\n                            ch = /*(char)('a' + subModeCh)*/ String.fromCharCode(97 + subModeCh);\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.AS:\n                                    // Shift to alpha\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.ALPHA_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.ML:\n                                    subMode = Mode$2.MIXED;\n                                    break;\n                                case DecodedBitStreamParser$2.PS:\n                                    // Shift to punctuation\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.PUNCT_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    // TODO Does this need to use the current character encoding? See other occurrences below\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.MIXED:\n                        // Mixed (punctuation: e)\n                        if (subModeCh < DecodedBitStreamParser$2.PL) {\n                            ch = DecodedBitStreamParser$2.MIXED_CHARS[subModeCh];\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case DecodedBitStreamParser$2.PL:\n                                    subMode = Mode$2.PUNCT;\n                                    break;\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.LL:\n                                    subMode = Mode$2.LOWER;\n                                    break;\n                                case DecodedBitStreamParser$2.AL:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                                case DecodedBitStreamParser$2.PS:\n                                    // Shift to punctuation\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.PUNCT_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.PUNCT:\n                        // Punctuation\n                        if (subModeCh < DecodedBitStreamParser$2.PAL) {\n                            ch = DecodedBitStreamParser$2.PUNCT_CHARS[subModeCh];\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case DecodedBitStreamParser$2.PAL:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.ALPHA_SHIFT:\n                        // Restore sub-mode\n                        subMode = priorToShiftMode;\n                        if (subModeCh < 26) {\n                            ch = /*(char)('A' + subModeCh)*/ String.fromCharCode(65 + subModeCh);\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.PUNCT_SHIFT:\n                        // Restore sub-mode\n                        subMode = priorToShiftMode;\n                        if (subModeCh < DecodedBitStreamParser$2.PAL) {\n                            ch = DecodedBitStreamParser$2.PUNCT_CHARS[subModeCh];\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case DecodedBitStreamParser$2.PAL:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    // PS before Shift-to-Byte is used as a padding character,\n                                    // see 5.4.2.4 of the specification\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                }\n                // if (ch !== 0) {\n                if (ch !== '') {\n                    // Append decoded character to result\n                    result.append(ch);\n                }\n                i++;\n            }\n        }\n        /**\n         * Byte Compaction mode (see 5.4.3) permits all 256 possible 8-bit byte values to be encoded.\n         * This includes all ASCII characters value 0 to 127 inclusive and provides for international\n         * character set support.\n         *\n         * @param mode      The byte compaction mode i.e. 901 or 924\n         * @param codewords The array of codewords (data + error)\n         * @param encoding  Currently active character encoding\n         * @param codeIndex The current index into the codeword array.\n         * @param result    The decoded data is appended to the result.\n         * @return The next index into the codeword array.\n         */\n        static /*int*/ byteCompaction(mode, codewords, encoding, codeIndex, result) {\n            let decodedBytes = new ByteArrayOutputStream();\n            let count = 0;\n            let value = /*long*/ 0;\n            let end = false;\n            switch (mode) {\n                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                    // Total number of Byte Compaction characters to be encoded\n                    // is not a multiple of 6\n                    let byteCompactedCodewords = new Int32Array(6);\n                    let nextCode = codewords[codeIndex++];\n                    while ((codeIndex < codewords[0]) && !end) {\n                        byteCompactedCodewords[count++] = nextCode;\n                        // Base 900\n                        value = 900 * value + nextCode;\n                        nextCode = codewords[codeIndex++];\n                        // perhaps it should be ok to check only nextCode >= TEXT_COMPACTION_MODE_LATCH\n                        switch (nextCode) {\n                            case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                            case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                            case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                            case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                            case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                            case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                            case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                                codeIndex--;\n                                end = true;\n                                break;\n                            default:\n                                if ((count % 5 === 0) && (count > 0)) {\n                                    // Decode every 5 codewords\n                                    // Convert to Base 256\n                                    for (let j /*int*/ = 0; j < 6; ++j) {\n                                        /* @note\n                                         * JavaScript stores numbers as 64 bits floating point numbers, but all bitwise operations are performed on 32 bits binary numbers.\n                                         * So the next bitwise operation could not be done with simple numbers\n                                         */\n                                        decodedBytes.write(/*(byte)*/ Number(createBigInt(value) >> createBigInt(8 * (5 - j))));\n                                    }\n                                    value = 0;\n                                    count = 0;\n                                }\n                                break;\n                        }\n                    }\n                    // if the end of all codewords is reached the last codeword needs to be added\n                    if (codeIndex === codewords[0] && nextCode < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                        byteCompactedCodewords[count++] = nextCode;\n                    }\n                    // If Byte Compaction mode is invoked with codeword 901,\n                    // the last group of codewords is interpreted directly\n                    // as one byte per codeword, without compaction.\n                    for (let i /*int*/ = 0; i < count; i++) {\n                        decodedBytes.write(/*(byte)*/ byteCompactedCodewords[i]);\n                    }\n                    break;\n                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                    // Total number of Byte Compaction characters to be encoded\n                    // is an integer multiple of 6\n                    while (codeIndex < codewords[0] && !end) {\n                        let code = codewords[codeIndex++];\n                        if (code < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                            count++;\n                            // Base 900\n                            value = 900 * value + code;\n                        }\n                        else {\n                            switch (code) {\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                                case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                                case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                                case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                                case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                                    codeIndex--;\n                                    end = true;\n                                    break;\n                            }\n                        }\n                        if ((count % 5 === 0) && (count > 0)) {\n                            // Decode every 5 codewords\n                            // Convert to Base 256\n                            /* @note\n                             * JavaScript stores numbers as 64 bits floating point numbers, but all bitwise operations are performed on 32 bits binary numbers.\n                             * So the next bitwise operation could not be done with simple numbers\n                            */\n                            for (let j /*int*/ = 0; j < 6; ++j) {\n                                decodedBytes.write(/*(byte)*/ Number(createBigInt(value) >> createBigInt(8 * (5 - j))));\n                            }\n                            value = 0;\n                            count = 0;\n                        }\n                    }\n                    break;\n            }\n            result.append(StringEncoding.decode(decodedBytes.toByteArray(), encoding));\n            return codeIndex;\n        }\n        /**\n         * Numeric Compaction mode (see 5.4.4) permits efficient encoding of numeric data strings.\n         *\n         * @param codewords The array of codewords (data + error)\n         * @param codeIndex The current index into the codeword array.\n         * @param result    The decoded data is appended to the result.\n         * @return The next index into the codeword array.\n         *\n         * @throws FormatException\n         */\n        static numericCompaction(codewords, codeIndex /*int*/, result) {\n            let count = 0;\n            let end = false;\n            let numericCodewords = new Int32Array(DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS);\n            while (codeIndex < codewords[0] && !end) {\n                let code = codewords[codeIndex++];\n                if (codeIndex === codewords[0]) {\n                    end = true;\n                }\n                if (code < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                    numericCodewords[count] = code;\n                    count++;\n                }\n                else {\n                    switch (code) {\n                        case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                        case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                            codeIndex--;\n                            end = true;\n                            break;\n                    }\n                }\n                if ((count % DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS === 0 || code === DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH || end) && count > 0) {\n                    // Re-invoking Numeric Compaction mode (by using codeword 902\n                    // while in Numeric Compaction mode) serves  to terminate the\n                    // current Numeric Compaction mode grouping as described in 5.4.4.2,\n                    // and then to start a new one grouping.\n                    result.append(DecodedBitStreamParser$2.decodeBase900toBase10(numericCodewords, count));\n                    count = 0;\n                }\n            }\n            return codeIndex;\n        }\n        /**\n         * Convert a list of Numeric Compacted codewords from Base 900 to Base 10.\n         *\n         * @param codewords The array of codewords\n         * @param count     The number of codewords\n         * @return The decoded string representing the Numeric data.\n         *\n         * EXAMPLE\n         * Encode the fifteen digit numeric string 000213298174000\n         * Prefix the numeric string with a 1 and set the initial value of\n         * t = 1 000 213 298 174 000\n         * Calculate codeword 0\n         * d0 = 1 000 213 298 174 000 mod 900 = 200\n         *\n         * t = 1 000 213 298 174 000 div 900 = 1 111 348 109 082\n         * Calculate codeword 1\n         * d1 = 1 111 348 109 082 mod 900 = 282\n         *\n         * t = 1 111 348 109 082 div 900 = 1 234 831 232\n         * Calculate codeword 2\n         * d2 = 1 234 831 232 mod 900 = 632\n         *\n         * t = 1 234 831 232 div 900 = 1 372 034\n         * Calculate codeword 3\n         * d3 = 1 372 034 mod 900 = 434\n         *\n         * t = 1 372 034 div 900 = 1 524\n         * Calculate codeword 4\n         * d4 = 1 524 mod 900 = 624\n         *\n         * t = 1 524 div 900 = 1\n         * Calculate codeword 5\n         * d5 = 1 mod 900 = 1\n         * t = 1 div 900 = 0\n         * Codeword sequence is: 1, 624, 434, 632, 282, 200\n         *\n         * Decode the above codewords involves\n         *   1 x 900 power of 5 + 624 x 900 power of 4 + 434 x 900 power of 3 +\n         * 632 x 900 power of 2 + 282 x 900 power of 1 + 200 x 900 power of 0 = 1000213298174000\n         *\n         * Remove leading 1 =>  Result is 000213298174000\n         *\n         * @throws FormatException\n         */\n        static decodeBase900toBase10(codewords, count) {\n            let result = createBigInt(0);\n            for (let i /*int*/ = 0; i < count; i++) {\n                result += DecodedBitStreamParser$2.EXP900[count - i - 1] * createBigInt(codewords[i]);\n            }\n            let resultString = result.toString();\n            if (resultString.charAt(0) !== '1') {\n                throw new FormatException();\n            }\n            return resultString.substring(1);\n        }\n    }\n    DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH = 900;\n    DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH = 901;\n    DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH = 902;\n    DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6 = 924;\n    DecodedBitStreamParser$2.ECI_USER_DEFINED = 925;\n    DecodedBitStreamParser$2.ECI_GENERAL_PURPOSE = 926;\n    DecodedBitStreamParser$2.ECI_CHARSET = 927;\n    DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK = 928;\n    DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD = 923;\n    DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR = 922;\n    DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE = 913;\n    DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS = 15;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME = 0;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT = 1;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP = 2;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SENDER = 3;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE = 4;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE = 5;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM = 6;\n    DecodedBitStreamParser$2.PL = 25;\n    DecodedBitStreamParser$2.LL = 27;\n    DecodedBitStreamParser$2.AS = 27;\n    DecodedBitStreamParser$2.ML = 28;\n    DecodedBitStreamParser$2.AL = 28;\n    DecodedBitStreamParser$2.PS = 29;\n    DecodedBitStreamParser$2.PAL = 29;\n    DecodedBitStreamParser$2.PUNCT_CHARS = ';<>@[\\\\]_`~!\\r\\t,:\\n-.$/\"|*()?{}\\'';\n    DecodedBitStreamParser$2.MIXED_CHARS = '0123456789&\\r\\t,:#-.$/+%*=^';\n    /**\n     * Table containing values for the exponent of 900.\n     * This is used in the numeric compaction decode algorithm.\n     */\n    DecodedBitStreamParser$2.EXP900 = getBigIntConstructor() ? getEXP900() : [];\n    DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS = 2;\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // import java.util.ArrayList;\n    // import java.util.Collection;\n    // import java.util.Formatter;\n    // import java.util.List;\n    /**\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417ScanningDecoder {\n        constructor() { }\n        /**\n         * @TODO don't pass in minCodewordWidth and maxCodewordWidth, pass in barcode columns for start and stop pattern\n         *\n         * columns. That way width can be deducted from the pattern column.\n         * This approach also allows to detect more details about the barcode, e.g. if a bar type (white or black) is wider\n         * than it should be. This can happen if the scanner used a bad blackpoint.\n         *\n         * @param BitMatrix\n         * @param image\n         * @param ResultPoint\n         * @param imageTopLeft\n         * @param ResultPoint\n         * @param imageBottomLeft\n         * @param ResultPoint\n         * @param imageTopRight\n         * @param ResultPoint\n         * @param imageBottomRight\n         * @param int\n         * @param minCodewordWidth\n         * @param int\n         * @param maxCodewordWidth\n         *\n         * @throws NotFoundException\n         * @throws FormatException\n         * @throws ChecksumException\n         */\n        static decode(image, imageTopLeft, imageBottomLeft, imageTopRight, imageBottomRight, minCodewordWidth, maxCodewordWidth) {\n            let boundingBox = new BoundingBox(image, imageTopLeft, imageBottomLeft, imageTopRight, imageBottomRight);\n            let leftRowIndicatorColumn = null;\n            let rightRowIndicatorColumn = null;\n            let detectionResult;\n            for (let firstPass /*boolean*/ = true;; firstPass = false) {\n                if (imageTopLeft != null) {\n                    leftRowIndicatorColumn = PDF417ScanningDecoder.getRowIndicatorColumn(image, boundingBox, imageTopLeft, true, minCodewordWidth, maxCodewordWidth);\n                }\n                if (imageTopRight != null) {\n                    rightRowIndicatorColumn = PDF417ScanningDecoder.getRowIndicatorColumn(image, boundingBox, imageTopRight, false, minCodewordWidth, maxCodewordWidth);\n                }\n                detectionResult = PDF417ScanningDecoder.merge(leftRowIndicatorColumn, rightRowIndicatorColumn);\n                if (detectionResult == null) {\n                    throw NotFoundException.getNotFoundInstance();\n                }\n                let resultBox = detectionResult.getBoundingBox();\n                if (firstPass && resultBox != null &&\n                    (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {\n                    boundingBox = resultBox;\n                }\n                else {\n                    break;\n                }\n            }\n            detectionResult.setBoundingBox(boundingBox);\n            let maxBarcodeColumn = detectionResult.getBarcodeColumnCount() + 1;\n            detectionResult.setDetectionResultColumn(0, leftRowIndicatorColumn);\n            detectionResult.setDetectionResultColumn(maxBarcodeColumn, rightRowIndicatorColumn);\n            let leftToRight = leftRowIndicatorColumn != null;\n            for (let barcodeColumnCount /*int*/ = 1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n                let barcodeColumn = leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n                if (detectionResult.getDetectionResultColumn(barcodeColumn) !== /* null */ undefined) {\n                    // This will be the case for the opposite row indicator column, which doesn't need to be decoded again.\n                    continue;\n                }\n                let detectionResultColumn;\n                if (barcodeColumn === 0 || barcodeColumn === maxBarcodeColumn) {\n                    detectionResultColumn = new DetectionResultRowIndicatorColumn(boundingBox, barcodeColumn === 0);\n                }\n                else {\n                    detectionResultColumn = new DetectionResultColumn(boundingBox);\n                }\n                detectionResult.setDetectionResultColumn(barcodeColumn, detectionResultColumn);\n                let startColumn = -1;\n                let previousStartColumn = startColumn;\n                // TODO start at a row for which we know the start position, then detect upwards and downwards from there.\n                for (let imageRow /*int*/ = boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n                    startColumn = PDF417ScanningDecoder.getStartColumn(detectionResult, barcodeColumn, imageRow, leftToRight);\n                    if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n                        if (previousStartColumn === -1) {\n                            continue;\n                        }\n                        startColumn = previousStartColumn;\n                    }\n                    let codeword = PDF417ScanningDecoder.detectCodeword(image, boundingBox.getMinX(), boundingBox.getMaxX(), leftToRight, startColumn, imageRow, minCodewordWidth, maxCodewordWidth);\n                    if (codeword != null) {\n                        detectionResultColumn.setCodeword(imageRow, codeword);\n                        previousStartColumn = startColumn;\n                        minCodewordWidth = Math.min(minCodewordWidth, codeword.getWidth());\n                        maxCodewordWidth = Math.max(maxCodewordWidth, codeword.getWidth());\n                    }\n                }\n            }\n            return PDF417ScanningDecoder.createDecoderResult(detectionResult);\n        }\n        /**\n         *\n         * @param leftRowIndicatorColumn\n         * @param rightRowIndicatorColumn\n         *\n         * @throws NotFoundException\n         */\n        static merge(leftRowIndicatorColumn, rightRowIndicatorColumn) {\n            if (leftRowIndicatorColumn == null && rightRowIndicatorColumn == null) {\n                return null;\n            }\n            let barcodeMetadata = PDF417ScanningDecoder.getBarcodeMetadata(leftRowIndicatorColumn, rightRowIndicatorColumn);\n            if (barcodeMetadata == null) {\n                return null;\n            }\n            let boundingBox = BoundingBox.merge(PDF417ScanningDecoder.adjustBoundingBox(leftRowIndicatorColumn), PDF417ScanningDecoder.adjustBoundingBox(rightRowIndicatorColumn));\n            return new DetectionResult(barcodeMetadata, boundingBox);\n        }\n        /**\n         *\n         * @param rowIndicatorColumn\n         *\n         * @throws NotFoundException\n         */\n        static adjustBoundingBox(rowIndicatorColumn) {\n            if (rowIndicatorColumn == null) {\n                return null;\n            }\n            let rowHeights = rowIndicatorColumn.getRowHeights();\n            if (rowHeights == null) {\n                return null;\n            }\n            let maxRowHeight = PDF417ScanningDecoder.getMax(rowHeights);\n            let missingStartRows = 0;\n            for (let rowHeight /*int*/ of rowHeights) {\n                missingStartRows += maxRowHeight - rowHeight;\n                if (rowHeight > 0) {\n                    break;\n                }\n            }\n            let codewords = rowIndicatorColumn.getCodewords();\n            for (let row /*int*/ = 0; missingStartRows > 0 && codewords[row] == null; row++) {\n                missingStartRows--;\n            }\n            let missingEndRows = 0;\n            for (let row /*int*/ = rowHeights.length - 1; row >= 0; row--) {\n                missingEndRows += maxRowHeight - rowHeights[row];\n                if (rowHeights[row] > 0) {\n                    break;\n                }\n            }\n            for (let row /*int*/ = codewords.length - 1; missingEndRows > 0 && codewords[row] == null; row--) {\n                missingEndRows--;\n            }\n            return rowIndicatorColumn.getBoundingBox().addMissingRows(missingStartRows, missingEndRows, rowIndicatorColumn.isLeft());\n        }\n        static getMax(values) {\n            let maxValue = -1;\n            for (let value /*int*/ of values) {\n                maxValue = Math.max(maxValue, value);\n            }\n            return maxValue;\n        }\n        static getBarcodeMetadata(leftRowIndicatorColumn, rightRowIndicatorColumn) {\n            let leftBarcodeMetadata;\n            if (leftRowIndicatorColumn == null ||\n                (leftBarcodeMetadata = leftRowIndicatorColumn.getBarcodeMetadata()) == null) {\n                return rightRowIndicatorColumn == null ? null : rightRowIndicatorColumn.getBarcodeMetadata();\n            }\n            let rightBarcodeMetadata;\n            if (rightRowIndicatorColumn == null ||\n                (rightBarcodeMetadata = rightRowIndicatorColumn.getBarcodeMetadata()) == null) {\n                return leftBarcodeMetadata;\n            }\n            if (leftBarcodeMetadata.getColumnCount() !== rightBarcodeMetadata.getColumnCount() &&\n                leftBarcodeMetadata.getErrorCorrectionLevel() !== rightBarcodeMetadata.getErrorCorrectionLevel() &&\n                leftBarcodeMetadata.getRowCount() !== rightBarcodeMetadata.getRowCount()) {\n                return null;\n            }\n            return leftBarcodeMetadata;\n        }\n        static getRowIndicatorColumn(image, boundingBox, startPoint, leftToRight, minCodewordWidth, maxCodewordWidth) {\n            let rowIndicatorColumn = new DetectionResultRowIndicatorColumn(boundingBox, leftToRight);\n            for (let i /*int*/ = 0; i < 2; i++) {\n                let increment = i === 0 ? 1 : -1;\n                let startColumn = Math.trunc(Math.trunc(startPoint.getX()));\n                for (let imageRow /*int*/ = Math.trunc(Math.trunc(startPoint.getY())); imageRow <= boundingBox.getMaxY() &&\n                    imageRow >= boundingBox.getMinY(); imageRow += increment) {\n                    let codeword = PDF417ScanningDecoder.detectCodeword(image, 0, image.getWidth(), leftToRight, startColumn, imageRow, minCodewordWidth, maxCodewordWidth);\n                    if (codeword != null) {\n                        rowIndicatorColumn.setCodeword(imageRow, codeword);\n                        if (leftToRight) {\n                            startColumn = codeword.getStartX();\n                        }\n                        else {\n                            startColumn = codeword.getEndX();\n                        }\n                    }\n                }\n            }\n            return rowIndicatorColumn;\n        }\n        /**\n         *\n         * @param detectionResult\n         * @param BarcodeValue\n         * @param param2\n         * @param param3\n         * @param barcodeMatrix\n         *\n         * @throws NotFoundException\n         */\n        static adjustCodewordCount(detectionResult, barcodeMatrix) {\n            let barcodeMatrix01 = barcodeMatrix[0][1];\n            let numberOfCodewords = barcodeMatrix01.getValue();\n            let calculatedNumberOfCodewords = detectionResult.getBarcodeColumnCount() *\n                detectionResult.getBarcodeRowCount() -\n                PDF417ScanningDecoder.getNumberOfECCodeWords(detectionResult.getBarcodeECLevel());\n            if (numberOfCodewords.length === 0) {\n                if (calculatedNumberOfCodewords < 1 || calculatedNumberOfCodewords > PDF417Common.MAX_CODEWORDS_IN_BARCODE) {\n                    throw NotFoundException.getNotFoundInstance();\n                }\n                barcodeMatrix01.setValue(calculatedNumberOfCodewords);\n            }\n            else if (numberOfCodewords[0] !== calculatedNumberOfCodewords) {\n                // The calculated one is more reliable as it is derived from the row indicator columns\n                barcodeMatrix01.setValue(calculatedNumberOfCodewords);\n            }\n        }\n        /**\n         *\n         * @param detectionResult\n         *\n         * @throws FormatException\n         * @throws ChecksumException\n         * @throws NotFoundException\n         */\n        static createDecoderResult(detectionResult) {\n            let barcodeMatrix = PDF417ScanningDecoder.createBarcodeMatrix(detectionResult);\n            PDF417ScanningDecoder.adjustCodewordCount(detectionResult, barcodeMatrix);\n            let erasures /*Collection<Integer>*/ = new Array();\n            let codewords = new Int32Array(detectionResult.getBarcodeRowCount() * detectionResult.getBarcodeColumnCount());\n            let ambiguousIndexValuesList = /*List<int[]>*/ [];\n            let ambiguousIndexesList = /*Collection<Integer>*/ new Array();\n            for (let row /*int*/ = 0; row < detectionResult.getBarcodeRowCount(); row++) {\n                for (let column /*int*/ = 0; column < detectionResult.getBarcodeColumnCount(); column++) {\n                    let values = barcodeMatrix[row][column + 1].getValue();\n                    let codewordIndex = row * detectionResult.getBarcodeColumnCount() + column;\n                    if (values.length === 0) {\n                        erasures.push(codewordIndex);\n                    }\n                    else if (values.length === 1) {\n                        codewords[codewordIndex] = values[0];\n                    }\n                    else {\n                        ambiguousIndexesList.push(codewordIndex);\n                        ambiguousIndexValuesList.push(values);\n                    }\n                }\n            }\n            let ambiguousIndexValues = new Array(ambiguousIndexValuesList.length);\n            for (let i /*int*/ = 0; i < ambiguousIndexValues.length; i++) {\n                ambiguousIndexValues[i] = ambiguousIndexValuesList[i];\n            }\n            return PDF417ScanningDecoder.createDecoderResultFromAmbiguousValues(detectionResult.getBarcodeECLevel(), codewords, PDF417Common.toIntArray(erasures), PDF417Common.toIntArray(ambiguousIndexesList), ambiguousIndexValues);\n        }\n        /**\n         * This method deals with the fact, that the decoding process doesn't always yield a single most likely value. The\n         * current error correction implementation doesn't deal with erasures very well, so it's better to provide a value\n         * for these ambiguous codewords instead of treating it as an erasure. The problem is that we don't know which of\n         * the ambiguous values to choose. We try decode using the first value, and if that fails, we use another of the\n         * ambiguous values and try to decode again. This usually only happens on very hard to read and decode barcodes,\n         * so decoding the normal barcodes is not affected by this.\n         *\n         * @param erasureArray contains the indexes of erasures\n         * @param ambiguousIndexes array with the indexes that have more than one most likely value\n         * @param ambiguousIndexValues two dimensional array that contains the ambiguous values. The first dimension must\n         * be the same length as the ambiguousIndexes array\n         *\n         * @throws FormatException\n         * @throws ChecksumException\n         */\n        static createDecoderResultFromAmbiguousValues(ecLevel, codewords, erasureArray, ambiguousIndexes, ambiguousIndexValues) {\n            let ambiguousIndexCount = new Int32Array(ambiguousIndexes.length);\n            let tries = 100;\n            while (tries-- > 0) {\n                for (let i /*int*/ = 0; i < ambiguousIndexCount.length; i++) {\n                    codewords[ambiguousIndexes[i]] = ambiguousIndexValues[i][ambiguousIndexCount[i]];\n                }\n                try {\n                    return PDF417ScanningDecoder.decodeCodewords(codewords, ecLevel, erasureArray);\n                }\n                catch (err) {\n                    let ignored = err instanceof ChecksumException;\n                    if (!ignored) {\n                        throw err;\n                    }\n                }\n                if (ambiguousIndexCount.length === 0) {\n                    throw ChecksumException.getChecksumInstance();\n                }\n                for (let i /*int*/ = 0; i < ambiguousIndexCount.length; i++) {\n                    if (ambiguousIndexCount[i] < ambiguousIndexValues[i].length - 1) {\n                        ambiguousIndexCount[i]++;\n                        break;\n                    }\n                    else {\n                        ambiguousIndexCount[i] = 0;\n                        if (i === ambiguousIndexCount.length - 1) {\n                            throw ChecksumException.getChecksumInstance();\n                        }\n                    }\n                }\n            }\n            throw ChecksumException.getChecksumInstance();\n        }\n        static createBarcodeMatrix(detectionResult) {\n            // let barcodeMatrix: BarcodeValue[][] =\n            // new BarcodeValue[detectionResult.getBarcodeRowCount()][detectionResult.getBarcodeColumnCount() + 2];\n            let barcodeMatrix = Array.from({ length: detectionResult.getBarcodeRowCount() }, () => new Array(detectionResult.getBarcodeColumnCount() + 2));\n            for (let row /*int*/ = 0; row < barcodeMatrix.length; row++) {\n                for (let column /*int*/ = 0; column < barcodeMatrix[row].length; column++) {\n                    barcodeMatrix[row][column] = new BarcodeValue();\n                }\n            }\n            let column = 0;\n            for (let detectionResultColumn /*DetectionResultColumn*/ of detectionResult.getDetectionResultColumns()) {\n                if (detectionResultColumn != null) {\n                    for (let codeword /*Codeword*/ of detectionResultColumn.getCodewords()) {\n                        if (codeword != null) {\n                            let rowNumber = codeword.getRowNumber();\n                            if (rowNumber >= 0) {\n                                if (rowNumber >= barcodeMatrix.length) {\n                                    // We have more rows than the barcode metadata allows for, ignore them.\n                                    continue;\n                                }\n                                barcodeMatrix[rowNumber][column].setValue(codeword.getValue());\n                            }\n                        }\n                    }\n                }\n                column++;\n            }\n            return barcodeMatrix;\n        }\n        static isValidBarcodeColumn(detectionResult, barcodeColumn) {\n            return barcodeColumn >= 0 && barcodeColumn <= detectionResult.getBarcodeColumnCount() + 1;\n        }\n        static getStartColumn(detectionResult, barcodeColumn, imageRow, leftToRight) {\n            let offset = leftToRight ? 1 : -1;\n            let codeword = null;\n            if (PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult, barcodeColumn - offset)) {\n                codeword = detectionResult.getDetectionResultColumn(barcodeColumn - offset).getCodeword(imageRow);\n            }\n            if (codeword != null) {\n                return leftToRight ? codeword.getEndX() : codeword.getStartX();\n            }\n            codeword = detectionResult.getDetectionResultColumn(barcodeColumn).getCodewordNearby(imageRow);\n            if (codeword != null) {\n                return leftToRight ? codeword.getStartX() : codeword.getEndX();\n            }\n            if (PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult, barcodeColumn - offset)) {\n                codeword = detectionResult.getDetectionResultColumn(barcodeColumn - offset).getCodewordNearby(imageRow);\n            }\n            if (codeword != null) {\n                return leftToRight ? codeword.getEndX() : codeword.getStartX();\n            }\n            let skippedColumns = 0;\n            while (PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult, barcodeColumn - offset)) {\n                barcodeColumn -= offset;\n                for (let previousRowCodeword /*Codeword*/ of detectionResult.getDetectionResultColumn(barcodeColumn).getCodewords()) {\n                    if (previousRowCodeword != null) {\n                        return (leftToRight ? previousRowCodeword.getEndX() : previousRowCodeword.getStartX()) +\n                            offset *\n                                skippedColumns *\n                                (previousRowCodeword.getEndX() - previousRowCodeword.getStartX());\n                    }\n                }\n                skippedColumns++;\n            }\n            return leftToRight ? detectionResult.getBoundingBox().getMinX() : detectionResult.getBoundingBox().getMaxX();\n        }\n        static detectCodeword(image, minColumn, maxColumn, leftToRight, startColumn, imageRow, minCodewordWidth, maxCodewordWidth) {\n            startColumn = PDF417ScanningDecoder.adjustCodewordStartColumn(image, minColumn, maxColumn, leftToRight, startColumn, imageRow);\n            // we usually know fairly exact now how long a codeword is. We should provide minimum and maximum expected length\n            // and try to adjust the read pixels, e.g. remove single pixel errors or try to cut off exceeding pixels.\n            // min and maxCodewordWidth should not be used as they are calculated for the whole barcode an can be inaccurate\n            // for the current position\n            let moduleBitCount = PDF417ScanningDecoder.getModuleBitCount(image, minColumn, maxColumn, leftToRight, startColumn, imageRow);\n            if (moduleBitCount == null) {\n                return null;\n            }\n            let endColumn;\n            let codewordBitCount = MathUtils.sum(moduleBitCount);\n            if (leftToRight) {\n                endColumn = startColumn + codewordBitCount;\n            }\n            else {\n                for (let i /*int*/ = 0; i < moduleBitCount.length / 2; i++) {\n                    let tmpCount = moduleBitCount[i];\n                    moduleBitCount[i] = moduleBitCount[moduleBitCount.length - 1 - i];\n                    moduleBitCount[moduleBitCount.length - 1 - i] = tmpCount;\n                }\n                endColumn = startColumn;\n                startColumn = endColumn - codewordBitCount;\n            }\n            // TODO implement check for width and correction of black and white bars\n            // use start (and maybe stop pattern) to determine if black bars are wider than white bars. If so, adjust.\n            // should probably done only for codewords with a lot more than 17 bits.\n            // The following fixes 10-1.png, which has wide black bars and small white bars\n            //    for (let i /*int*/ = 0; i < moduleBitCount.length; i++) {\n            //      if (i % 2 === 0) {\n            //        moduleBitCount[i]--;\n            //      } else {\n            //        moduleBitCount[i]++;\n            //      }\n            //    }\n            // We could also use the width of surrounding codewords for more accurate results, but this seems\n            // sufficient for now\n            if (!PDF417ScanningDecoder.checkCodewordSkew(codewordBitCount, minCodewordWidth, maxCodewordWidth)) {\n                // We could try to use the startX and endX position of the codeword in the same column in the previous row,\n                // create the bit count from it and normalize it to 8. This would help with single pixel errors.\n                return null;\n            }\n            let decodedValue = PDF417CodewordDecoder.getDecodedValue(moduleBitCount);\n            let codeword = PDF417Common.getCodeword(decodedValue);\n            if (codeword === -1) {\n                return null;\n            }\n            return new Codeword(startColumn, endColumn, PDF417ScanningDecoder.getCodewordBucketNumber(decodedValue), codeword);\n        }\n        static getModuleBitCount(image, minColumn, maxColumn, leftToRight, startColumn, imageRow) {\n            let imageColumn = startColumn;\n            let moduleBitCount = new Int32Array(8);\n            let moduleNumber = 0;\n            let increment = leftToRight ? 1 : -1;\n            let previousPixelValue = leftToRight;\n            while ((leftToRight ? imageColumn < maxColumn : imageColumn >= minColumn) &&\n                moduleNumber < moduleBitCount.length) {\n                if (image.get(imageColumn, imageRow) === previousPixelValue) {\n                    moduleBitCount[moduleNumber]++;\n                    imageColumn += increment;\n                }\n                else {\n                    moduleNumber++;\n                    previousPixelValue = !previousPixelValue;\n                }\n            }\n            if (moduleNumber === moduleBitCount.length ||\n                ((imageColumn === (leftToRight ? maxColumn : minColumn)) &&\n                    moduleNumber === moduleBitCount.length - 1)) {\n                return moduleBitCount;\n            }\n            return null;\n        }\n        static getNumberOfECCodeWords(barcodeECLevel) {\n            return 2 << barcodeECLevel;\n        }\n        static adjustCodewordStartColumn(image, minColumn, maxColumn, leftToRight, codewordStartColumn, imageRow) {\n            let correctedStartColumn = codewordStartColumn;\n            let increment = leftToRight ? -1 : 1;\n            // there should be no black pixels before the start column. If there are, then we need to start earlier.\n            for (let i /*int*/ = 0; i < 2; i++) {\n                while ((leftToRight ? correctedStartColumn >= minColumn : correctedStartColumn < maxColumn) &&\n                    leftToRight === image.get(correctedStartColumn, imageRow)) {\n                    if (Math.abs(codewordStartColumn - correctedStartColumn) > PDF417ScanningDecoder.CODEWORD_SKEW_SIZE) {\n                        return codewordStartColumn;\n                    }\n                    correctedStartColumn += increment;\n                }\n                increment = -increment;\n                leftToRight = !leftToRight;\n            }\n            return correctedStartColumn;\n        }\n        static checkCodewordSkew(codewordSize, minCodewordWidth, maxCodewordWidth) {\n            return minCodewordWidth - PDF417ScanningDecoder.CODEWORD_SKEW_SIZE <= codewordSize &&\n                codewordSize <= maxCodewordWidth + PDF417ScanningDecoder.CODEWORD_SKEW_SIZE;\n        }\n        /**\n         * @throws FormatException,\n         * @throws ChecksumException\n         */\n        static decodeCodewords(codewords, ecLevel, erasures) {\n            if (codewords.length === 0) {\n                throw FormatException.getFormatInstance();\n            }\n            let numECCodewords = 1 << (ecLevel + 1);\n            let correctedErrorsCount = PDF417ScanningDecoder.correctErrors(codewords, erasures, numECCodewords);\n            PDF417ScanningDecoder.verifyCodewordCount(codewords, numECCodewords);\n            // Decode the codewords\n            let decoderResult = DecodedBitStreamParser$2.decode(codewords, '' + ecLevel);\n            decoderResult.setErrorsCorrected(correctedErrorsCount);\n            decoderResult.setErasures(erasures.length);\n            return decoderResult;\n        }\n        /**\n         * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\n         * correct the errors in-place.</p>\n         *\n         * @param codewords   data and error correction codewords\n         * @param erasures positions of any known erasures\n         * @param numECCodewords number of error correction codewords that are available in codewords\n         * @throws ChecksumException if error correction fails\n         */\n        static correctErrors(codewords, erasures, numECCodewords) {\n            if (erasures != null &&\n                erasures.length > numECCodewords / 2 + PDF417ScanningDecoder.MAX_ERRORS ||\n                numECCodewords < 0 ||\n                numECCodewords > PDF417ScanningDecoder.MAX_EC_CODEWORDS) {\n                // Too many errors or EC Codewords is corrupted\n                throw ChecksumException.getChecksumInstance();\n            }\n            return PDF417ScanningDecoder.errorCorrection.decode(codewords, numECCodewords, erasures);\n        }\n        /**\n         * Verify that all is OK with the codeword array.\n         * @throws FormatException\n         */\n        static verifyCodewordCount(codewords, numECCodewords) {\n            if (codewords.length < 4) {\n                // Codeword array size should be at least 4 allowing for\n                // Count CW, At least one Data CW, Error Correction CW, Error Correction CW\n                throw FormatException.getFormatInstance();\n            }\n            // The first codeword, the Symbol Length Descriptor, shall always encode the total number of data\n            // codewords in the symbol, including the Symbol Length Descriptor itself, data codewords and pad\n            // codewords, but excluding the number of error correction codewords.\n            let numberOfCodewords = codewords[0];\n            if (numberOfCodewords > codewords.length) {\n                throw FormatException.getFormatInstance();\n            }\n            if (numberOfCodewords === 0) {\n                // Reset to the length of the array - 8 (Allow for at least level 3 Error Correction (8 Error Codewords)\n                if (numECCodewords < codewords.length) {\n                    codewords[0] = codewords.length - numECCodewords;\n                }\n                else {\n                    throw FormatException.getFormatInstance();\n                }\n            }\n        }\n        static getBitCountForCodeword(codeword) {\n            let result = new Int32Array(8);\n            let previousValue = 0;\n            let i = result.length - 1;\n            while (true) {\n                if ((codeword & 0x1) !== previousValue) {\n                    previousValue = codeword & 0x1;\n                    i--;\n                    if (i < 0) {\n                        break;\n                    }\n                }\n                result[i]++;\n                codeword >>= 1;\n            }\n            return result;\n        }\n        static getCodewordBucketNumber(codeword) {\n            if (codeword instanceof Int32Array) {\n                return this.getCodewordBucketNumber_Int32Array(codeword);\n            }\n            return this.getCodewordBucketNumber_number(codeword);\n        }\n        static getCodewordBucketNumber_number(codeword) {\n            return PDF417ScanningDecoder.getCodewordBucketNumber(PDF417ScanningDecoder.getBitCountForCodeword(codeword));\n        }\n        static getCodewordBucketNumber_Int32Array(moduleBitCount) {\n            return (moduleBitCount[0] - moduleBitCount[2] + moduleBitCount[4] - moduleBitCount[6] + 9) % 9;\n        }\n        static toString(barcodeMatrix) {\n            let formatter = new Formatter();\n            // try (let formatter = new Formatter()) {\n            for (let row /*int*/ = 0; row < barcodeMatrix.length; row++) {\n                formatter.format('Row %2d: ', row);\n                for (let column /*int*/ = 0; column < barcodeMatrix[row].length; column++) {\n                    let barcodeValue = barcodeMatrix[row][column];\n                    if (barcodeValue.getValue().length === 0) {\n                        formatter.format('        ', null);\n                    }\n                    else {\n                        formatter.format('%4d(%2d)', barcodeValue.getValue()[0], barcodeValue.getConfidence(barcodeValue.getValue()[0]));\n                    }\n                }\n                formatter.format('%n');\n            }\n            return formatter.toString();\n            // }\n        }\n    }\n    /*final*/ PDF417ScanningDecoder.CODEWORD_SKEW_SIZE = 2;\n    /*final*/ PDF417ScanningDecoder.MAX_ERRORS = 3;\n    /*final*/ PDF417ScanningDecoder.MAX_EC_CODEWORDS = 512;\n    /*final*/ PDF417ScanningDecoder.errorCorrection = new ErrorCorrection();\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.ArrayList;\n    // import java.util.List;\n    // import java.util.Map;\n    /**\n     * This implementation can detect and decode PDF417 codes in an image.\n     *\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417Reader {\n        // private static /*final Result[]*/ EMPTY_RESULT_ARRAY: Result[] = new Result([0]);\n        /**\n         * Locates and decodes a PDF417 code in an image.\n         *\n         * @return a String representing the content encoded by the PDF417 code\n         * @throws NotFoundException if a PDF417 code cannot be found,\n         * @throws FormatException if a PDF417 cannot be decoded\n         * @throws ChecksumException\n         */\n        // @Override\n        decode(image, hints = null) {\n            let result = PDF417Reader.decode(image, hints, false);\n            if (result == null || result.length === 0 || result[0] == null) {\n                throw NotFoundException.getNotFoundInstance();\n            }\n            return result[0];\n        }\n        /**\n         *\n         * @param BinaryBitmap\n         * @param image\n         * @throws NotFoundException\n         */\n        //   @Override\n        decodeMultiple(image, hints = null) {\n            try {\n                return PDF417Reader.decode(image, hints, true);\n            }\n            catch (ignored) {\n                if (ignored instanceof FormatException || ignored instanceof ChecksumException) {\n                    throw NotFoundException.getNotFoundInstance();\n                }\n                throw ignored;\n            }\n        }\n        /**\n         *\n         * @param image\n         * @param hints\n         * @param multiple\n         *\n         * @throws NotFoundException\n         * @throws FormatExceptionß\n         * @throws ChecksumException\n         */\n        static decode(image, hints, multiple) {\n            const results = new Array();\n            const detectorResult = Detector$3.detectMultiple(image, hints, multiple);\n            for (const points of detectorResult.getPoints()) {\n                const decoderResult = PDF417ScanningDecoder.decode(detectorResult.getBits(), points[4], points[5], points[6], points[7], PDF417Reader.getMinCodewordWidth(points), PDF417Reader.getMaxCodewordWidth(points));\n                const result = new Result(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat$1.PDF_417);\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, decoderResult.getECLevel());\n                const pdf417ResultMetadata = decoderResult.getOther();\n                if (pdf417ResultMetadata != null) {\n                    result.putMetadata(ResultMetadataType$1.PDF417_EXTRA_METADATA, pdf417ResultMetadata);\n                }\n                results.push(result);\n            }\n            return results.map(x => x);\n        }\n        static getMaxWidth(p1, p2) {\n            if (p1 == null || p2 == null) {\n                return 0;\n            }\n            return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n        }\n        static getMinWidth(p1, p2) {\n            if (p1 == null || p2 == null) {\n                return Integer.MAX_VALUE;\n            }\n            return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n        }\n        static getMaxCodewordWidth(p) {\n            return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0], p[4]), PDF417Reader.getMaxWidth(p[6], p[2]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN), Math.max(PDF417Reader.getMaxWidth(p[1], p[5]), PDF417Reader.getMaxWidth(p[7], p[3]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN)));\n        }\n        static getMinCodewordWidth(p) {\n            return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0], p[4]), PDF417Reader.getMinWidth(p[6], p[2]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN), Math.min(PDF417Reader.getMinWidth(p[1], p[5]), PDF417Reader.getMinWidth(p[7], p[3]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN)));\n        }\n        // @Override\n        reset() {\n            // nothing needs to be reset\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ReaderException extends Exception {\n    }\n    ReaderException.kind = 'ReaderException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * MultiFormatReader is a convenience class and the main entry point into the library for most uses.\n     * By default it attempts to decode all barcode formats that the library supports. Optionally, you\n     * can provide a hints object to request different behavior, for example only decoding QR codes.\n     *\n     * @author Sean Owen\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class MultiFormatReader {\n        /**\n         * Creates an instance of this class\n         * \n         * @param {Boolean} verbose if 'true' logs will be dumped to console, otherwise hidden.\n         * @param hints The hints to use, clearing the previous state.\n         */\n        constructor(verbose, hints) {\n            this.verbose = (verbose === true);\n            if (hints) {\n                this.setHints(hints);\n            }\n        }\n        /**\n         * This version of decode honors the intent of Reader.decode(BinaryBitmap) in that it\n         * passes null as a hint to the decoders. However, that makes it inefficient to call repeatedly.\n         * Use setHints() followed by decodeWithState() for continuous scan applications.\n         *\n         * @param image The pixel data to decode\n         * @return The contents of the image\n         *\n         * @throws NotFoundException Any errors which occurred\n         */\n        /*@Override*/\n        // public decode(image: BinaryBitmap): Result {\n        //   setHints(null)\n        //   return decodeInternal(image)\n        // }\n        /**\n         * Decode an image using the hints provided. Does not honor existing state.\n         *\n         * @param image The pixel data to decode\n         * @param hints The hints to use, clearing the previous state.\n         * @return The contents of the image\n         *\n         * @throws NotFoundException Any errors which occurred\n         */\n        /*@Override*/\n        decode(image, hints) {\n            if (hints) {\n                this.setHints(hints);\n            }\n            return this.decodeInternal(image);\n        }\n        /**\n         * Decode an image using the state set up by calling setHints() previously. Continuous scan\n         * clients will get a <b>large</b> speed increase by using this instead of decode().\n         *\n         * @param image The pixel data to decode\n         * @return The contents of the image\n         *\n         * @throws NotFoundException Any errors which occurred\n         */\n        decodeWithState(image) {\n            // Make sure to set up the default state so we don't crash\n            if (this.readers === null || this.readers === undefined) {\n                this.setHints(null);\n            }\n            return this.decodeInternal(image);\n        }\n        /**\n         * This method adds state to the MultiFormatReader. By setting the hints once, subsequent calls\n         * to decodeWithState(image) can reuse the same set of readers without reallocating memory. This\n         * is important for performance in continuous scan clients.\n         *\n         * @param hints The set of hints to use for subsequent calls to decode(image)\n         */\n        setHints(hints) {\n            this.hints = hints;\n            const tryHarder = !isNullOrUndefined(hints)\n                && hints.get(DecodeHintType$1.TRY_HARDER) === true;\n            const formats = isNullOrUndefined(hints) ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n            const readers = new Array();\n            if (!isNullOrUndefined(formats)) {\n                const addOneDReader = formats.some(f => {\n                    return (\n                        f === BarcodeFormat$1.UPC_A ||\n                        f === BarcodeFormat$1.UPC_E ||\n                        f === BarcodeFormat$1.EAN_13 ||\n                        f === BarcodeFormat$1.EAN_8 ||\n                        f === BarcodeFormat$1.CODABAR ||\n                        f === BarcodeFormat$1.CODE_39 ||\n                        f === BarcodeFormat$1.CODE_93 ||\n                        f === BarcodeFormat$1.CODE_128 ||\n                        f === BarcodeFormat$1.ITF ||\n                        f === BarcodeFormat$1.RSS_14 ||\n                        f === BarcodeFormat$1.RSS_EXPANDED);\n                });\n                // Put 1D readers upfront in \"normal\" mode\n                if (addOneDReader && !tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints, this.verbose));\n                }\n                if (formats.includes(BarcodeFormat$1.QR_CODE)) {\n                    readers.push(new QRCodeReader());\n                }\n                if (formats.includes(BarcodeFormat$1.DATA_MATRIX)) {\n                    readers.push(new DataMatrixReader());\n                }\n                if (formats.includes(BarcodeFormat$1.AZTEC)) {\n                    readers.push(new AztecReader());\n                }\n                if (formats.includes(BarcodeFormat$1.PDF_417)) {\n                    readers.push(new PDF417Reader());\n                }\n                // if (formats.includes(BarcodeFormat.MAXICODE)) {\n                //    readers.push(new MaxiCodeReader())\n                // }\n                // At end in \"try harder\" mode\n                if (addOneDReader && tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints, this.verbose));\n                }\n            }\n            if (readers.length === 0) {\n                if (!tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints, this.verbose));\n                }\n                readers.push(new QRCodeReader());\n                readers.push(new DataMatrixReader());\n                readers.push(new AztecReader());\n                readers.push(new PDF417Reader());\n                // readers.push(new MaxiCodeReader())\n                if (tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints, this.verbose));\n                }\n            }\n            this.readers = readers; // .toArray(new Reader[readers.size()])\n        }\n        /*@Override*/\n        reset() {\n            if (this.readers !== null) {\n                for (const reader of this.readers) {\n                    reader.reset();\n                }\n            }\n        }\n        /**\n         * @throws NotFoundException\n         */\n        decodeInternal(image) {\n            if (this.readers === null) {\n                throw new ReaderException('No readers where selected, nothing can be read.');\n            }\n            for (const reader of this.readers) {\n                // Trying to decode with ${reader} reader.\n                try {\n                    return reader.decode(image, this.hints);\n                }\n                catch (ex) {\n                    if (ex instanceof ReaderException) {\n                        continue;\n                    }\n                    // Bad Exception.\n                }\n            }\n            throw new NotFoundException('No MultiFormat Readers were able to detect the code.');\n        }\n    }\n\n    class BrowserMultiFormatReader extends BrowserCodeReader {\n        constructor(hints = null, timeBetweenScansMillis = 500) {\n            const reader = new MultiFormatReader();\n            reader.setHints(hints);\n            super(reader, timeBetweenScansMillis);\n        }\n        /**\n         * Overwrite decodeBitmap to call decodeWithState, which will pay\n         * attention to the hints set in the constructor function\n         */\n        decodeBitmap(binaryBitmap) {\n            return this.reader.decodeWithState(binaryBitmap);\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * QR Code reader to use from browser.\n     */\n    class BrowserPDF417Reader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserPDF417Reader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new PDF417Reader(), timeBetweenScansMillis);\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * QR Code reader to use from browser.\n     */\n    class BrowserQRCodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserQRCodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new QRCodeReader(), timeBetweenScansMillis);\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * These are a set of hints that you may pass to Writers to specify their behavior.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    var EncodeHintType;\n    (function (EncodeHintType) {\n        /**\n         * Specifies what degree of error correction to use, for example in QR Codes.\n         * Type depends on the encoder. For example for QR codes it's type\n         * {@link com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ErrorCorrectionLevel}.\n         * For Aztec it is of type {@link Integer}, representing the minimal percentage of error correction words.\n         * For PDF417 it is of type {@link Integer}, valid values being 0 to 8.\n         * In all cases, it can also be a {@link String} representation of the desired value as well.\n         * Note: an Aztec symbol should have a minimum of 25% EC words.\n         */\n        EncodeHintType[EncodeHintType[\"ERROR_CORRECTION\"] = 0] = \"ERROR_CORRECTION\";\n        /**\n         * Specifies what character encoding to use where applicable (type {@link String})\n         */\n        EncodeHintType[EncodeHintType[\"CHARACTER_SET\"] = 1] = \"CHARACTER_SET\";\n        /**\n         * Specifies the matrix shape for Data Matrix (type {@link com.google.zxing.datamatrix.encoder.SymbolShapeHint})\n         */\n        EncodeHintType[EncodeHintType[\"DATA_MATRIX_SHAPE\"] = 2] = \"DATA_MATRIX_SHAPE\";\n        /**\n         * Specifies a minimum barcode size (type {@link Dimension}). Only applicable to Data Matrix now.\n         *\n         * @deprecated use width/height params in\n         * {@link com.google.zxing.datamatrix.DataMatrixWriter#encode(String, BarcodeFormat, int, int)}\n         */\n        /*@Deprecated*/\n        EncodeHintType[EncodeHintType[\"MIN_SIZE\"] = 3] = \"MIN_SIZE\";\n        /**\n         * Specifies a maximum barcode size (type {@link Dimension}). Only applicable to Data Matrix now.\n         *\n         * @deprecated without replacement\n         */\n        /*@Deprecated*/\n        EncodeHintType[EncodeHintType[\"MAX_SIZE\"] = 4] = \"MAX_SIZE\";\n        /**\n         * Specifies margin, in pixels, to use when generating the barcode. The meaning can vary\n         * by format; for example it controls margin before and after the barcode horizontally for\n         * most 1D formats. (Type {@link Integer}, or {@link String} representation of the integer value).\n         */\n        EncodeHintType[EncodeHintType[\"MARGIN\"] = 5] = \"MARGIN\";\n        /**\n         * Specifies whether to use compact mode for PDF417 (type {@link Boolean}, or \"true\" or \"false\"\n         * {@link String} value).\n         */\n        EncodeHintType[EncodeHintType[\"PDF417_COMPACT\"] = 6] = \"PDF417_COMPACT\";\n        /**\n         * Specifies what compaction mode to use for PDF417 (type\n         * {@link com.google.zxing.pdf417.encoder.Compaction Compaction} or {@link String} value of one of its\n         * enum values).\n         */\n        EncodeHintType[EncodeHintType[\"PDF417_COMPACTION\"] = 7] = \"PDF417_COMPACTION\";\n        /**\n         * Specifies the minimum and maximum number of rows and columns for PDF417 (type\n         * {@link com.google.zxing.pdf417.encoder.Dimensions Dimensions}).\n         */\n        EncodeHintType[EncodeHintType[\"PDF417_DIMENSIONS\"] = 8] = \"PDF417_DIMENSIONS\";\n        /**\n         * Specifies the required number of layers for an Aztec code.\n         * A negative number (-1, -2, -3, -4) specifies a compact Aztec code.\n         * 0 indicates to use the minimum number of layers (the default).\n         * A positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code.\n         * (Type {@link Integer}, or {@link String} representation of the integer value).\n         */\n        EncodeHintType[EncodeHintType[\"AZTEC_LAYERS\"] = 9] = \"AZTEC_LAYERS\";\n        /**\n         * Specifies the exact version of QR code to be encoded.\n         * (Type {@link Integer}, or {@link String} representation of the integer value).\n         */\n        EncodeHintType[EncodeHintType[\"QR_VERSION\"] = 10] = \"QR_VERSION\";\n    })(EncodeHintType || (EncodeHintType = {}));\n    var EncodeHintType$1 = EncodeHintType;\n\n    /**\n     * <p>Implements Reed-Solomon encoding, as the name implies.</p>\n     *\n     * @author Sean Owen\n     * @author William Rucklidge\n     */\n    class ReedSolomonEncoder {\n        /**\n         * A reed solomon error-correcting encoding constructor is created by\n         * passing as Galois Field with of size equal to the number of code\n         * words (symbols) in the alphabet (the number of values in each\n         * element of arrays that are encoded/decoded).\n         * @param field A galois field with a number of elements equal to the size\n         * of the alphabet of symbols to encode.\n         */\n        constructor(field) {\n            this.field = field;\n            this.cachedGenerators = [];\n            this.cachedGenerators.push(new GenericGFPoly(field, Int32Array.from([1])));\n        }\n        buildGenerator(degree /*int*/) {\n            const cachedGenerators = this.cachedGenerators;\n            if (degree >= cachedGenerators.length) {\n                let lastGenerator = cachedGenerators[cachedGenerators.length - 1];\n                const field = this.field;\n                for (let d = cachedGenerators.length; d <= degree; d++) {\n                    const nextGenerator = lastGenerator.multiply(new GenericGFPoly(field, Int32Array.from([1, field.exp(d - 1 + field.getGeneratorBase())])));\n                    cachedGenerators.push(nextGenerator);\n                    lastGenerator = nextGenerator;\n                }\n            }\n            return cachedGenerators[degree];\n        }\n        /**\n         * <p>Encode a sequence of code words (symbols) using Reed-Solomon to allow decoders\n         * to detect and correct errors that may have been introduced when the resulting\n         * data is stored or transmitted.</p>\n         *\n         * @param toEncode array used for both and output. Caller initializes the array with\n         * the code words (symbols) to be encoded followed by empty elements allocated to make\n         * space for error-correction code words in the encoded output. The array contains\n         * the encdoded output when encode returns. Code words are encoded as numbers from\n         * 0 to n-1, where n is the number of possible code words (symbols), as determined\n         * by the size of the Galois Field passed in the constructor of this object.\n         * @param ecBytes the number of elements reserved in the array (first parameter)\n         * to store error-correction code words. Thus, the number of code words (symbols)\n         * to encode in the first parameter is thus toEncode.length - ecBytes.\n         * Note, the use of \"bytes\" in the name of this parameter is misleading, as there may\n         * be more or fewer than 256 symbols being encoded, as determined by the number of\n         * elements in the Galois Field passed as a constructor to this object.\n         * @throws IllegalArgumentException thrown in response to validation errros.\n         */\n        encode(toEncode, ecBytes /*int*/) {\n            if (ecBytes === 0) {\n                throw new IllegalArgumentException('No error correction bytes');\n            }\n            const dataBytes = toEncode.length - ecBytes;\n            if (dataBytes <= 0) {\n                throw new IllegalArgumentException('No data bytes provided');\n            }\n            const generator = this.buildGenerator(ecBytes);\n            const infoCoefficients = new Int32Array(dataBytes);\n            System.arraycopy(toEncode, 0, infoCoefficients, 0, dataBytes);\n            let info = new GenericGFPoly(this.field, infoCoefficients);\n            info = info.multiplyByMonomial(ecBytes, 1);\n            const remainder = info.divide(generator)[1];\n            const coefficients = remainder.getCoefficients();\n            const numZeroCoefficients = ecBytes - coefficients.length;\n            for (let i = 0; i < numZeroCoefficients; i++) {\n                toEncode[dataBytes + i] = 0;\n            }\n            System.arraycopy(coefficients, 0, toEncode, dataBytes + numZeroCoefficients, coefficients.length);\n        }\n    }\n\n    /**\n     * @author Satoru Takabayashi\n     * @author Daniel Switkin\n     * @author Sean Owen\n     */\n    class MaskUtil {\n        constructor() {\n            // do nothing\n        }\n        /**\n         * Apply mask penalty rule 1 and return the penalty. Find repetitive cells with the same color and\n         * give penalty to them. Example: 00000 or 11111.\n         */\n        static applyMaskPenaltyRule1(matrix) {\n            return MaskUtil.applyMaskPenaltyRule1Internal(matrix, true) + MaskUtil.applyMaskPenaltyRule1Internal(matrix, false);\n        }\n        /**\n         * Apply mask penalty rule 2 and return the penalty. Find 2x2 blocks with the same color and give\n         * penalty to them. This is actually equivalent to the spec's rule, which is to find MxN blocks and give a\n         * penalty proportional to (M-1)x(N-1), because this is the number of 2x2 blocks inside such a block.\n         */\n        static applyMaskPenaltyRule2(matrix) {\n            let penalty = 0;\n            const array = matrix.getArray();\n            const width = matrix.getWidth();\n            const height = matrix.getHeight();\n            for (let y = 0; y < height - 1; y++) {\n                const arrayY = array[y];\n                for (let x = 0; x < width - 1; x++) {\n                    const value = arrayY[x];\n                    if (value === arrayY[x + 1] && value === array[y + 1][x] && value === array[y + 1][x + 1]) {\n                        penalty++;\n                    }\n                }\n            }\n            return MaskUtil.N2 * penalty;\n        }\n        /**\n         * Apply mask penalty rule 3 and return the penalty. Find consecutive runs of 1:1:3:1:1:4\n         * starting with black, or 4:1:1:3:1:1 starting with white, and give penalty to them.  If we\n         * find patterns like 000010111010000, we give penalty once.\n         */\n        static applyMaskPenaltyRule3(matrix) {\n            let numPenalties = 0;\n            const array = matrix.getArray();\n            const width = matrix.getWidth();\n            const height = matrix.getHeight();\n            for (let y = 0; y < height; y++) {\n                for (let x = 0; x < width; x++) {\n                    const arrayY = array[y]; // We can at least optimize this access\n                    if (x + 6 < width &&\n                        arrayY[x] === 1 &&\n                        arrayY[x + 1] === 0 &&\n                        arrayY[x + 2] === 1 &&\n                        arrayY[x + 3] === 1 &&\n                        arrayY[x + 4] === 1 &&\n                        arrayY[x + 5] === 0 &&\n                        arrayY[x + 6] === 1 &&\n                        (MaskUtil.isWhiteHorizontal(arrayY, x - 4, x) || MaskUtil.isWhiteHorizontal(arrayY, x + 7, x + 11))) {\n                        numPenalties++;\n                    }\n                    if (y + 6 < height &&\n                        array[y][x] === 1 &&\n                        array[y + 1][x] === 0 &&\n                        array[y + 2][x] === 1 &&\n                        array[y + 3][x] === 1 &&\n                        array[y + 4][x] === 1 &&\n                        array[y + 5][x] === 0 &&\n                        array[y + 6][x] === 1 &&\n                        (MaskUtil.isWhiteVertical(array, x, y - 4, y) || MaskUtil.isWhiteVertical(array, x, y + 7, y + 11))) {\n                        numPenalties++;\n                    }\n                }\n            }\n            return numPenalties * MaskUtil.N3;\n        }\n        static isWhiteHorizontal(rowArray, from /*int*/, to /*int*/) {\n            from = Math.max(from, 0);\n            to = Math.min(to, rowArray.length);\n            for (let i = from; i < to; i++) {\n                if (rowArray[i] === 1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        static isWhiteVertical(array, col /*int*/, from /*int*/, to /*int*/) {\n            from = Math.max(from, 0);\n            to = Math.min(to, array.length);\n            for (let i = from; i < to; i++) {\n                if (array[i][col] === 1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        /**\n         * Apply mask penalty rule 4 and return the penalty. Calculate the ratio of dark cells and give\n         * penalty if the ratio is far from 50%. It gives 10 penalty for 5% distance.\n         */\n        static applyMaskPenaltyRule4(matrix) {\n            let numDarkCells = 0;\n            const array = matrix.getArray();\n            const width = matrix.getWidth();\n            const height = matrix.getHeight();\n            for (let y = 0; y < height; y++) {\n                const arrayY = array[y];\n                for (let x = 0; x < width; x++) {\n                    if (arrayY[x] === 1) {\n                        numDarkCells++;\n                    }\n                }\n            }\n            const numTotalCells = matrix.getHeight() * matrix.getWidth();\n            const fivePercentVariances = Math.floor(Math.abs(numDarkCells * 2 - numTotalCells) * 10 / numTotalCells);\n            return fivePercentVariances * MaskUtil.N4;\n        }\n        /**\n         * Return the mask bit for \"getMaskPattern\" at \"x\" and \"y\". See 8.8 of JISX0510:2004 for mask\n         * pattern conditions.\n         */\n        static getDataMaskBit(maskPattern /*int*/, x /*int*/, y /*int*/) {\n            let intermediate; /*int*/\n            let temp; /*int*/\n            switch (maskPattern) {\n                case 0:\n                    intermediate = (y + x) & 0x1;\n                    break;\n                case 1:\n                    intermediate = y & 0x1;\n                    break;\n                case 2:\n                    intermediate = x % 3;\n                    break;\n                case 3:\n                    intermediate = (y + x) % 3;\n                    break;\n                case 4:\n                    intermediate = (Math.floor(y / 2) + Math.floor(x / 3)) & 0x1;\n                    break;\n                case 5:\n                    temp = y * x;\n                    intermediate = (temp & 0x1) + (temp % 3);\n                    break;\n                case 6:\n                    temp = y * x;\n                    intermediate = ((temp & 0x1) + (temp % 3)) & 0x1;\n                    break;\n                case 7:\n                    temp = y * x;\n                    intermediate = ((temp % 3) + ((y + x) & 0x1)) & 0x1;\n                    break;\n                default:\n                    throw new IllegalArgumentException('Invalid mask pattern: ' + maskPattern);\n            }\n            return intermediate === 0;\n        }\n        /**\n         * Helper function for applyMaskPenaltyRule1. We need this for doing this calculation in both\n         * vertical and horizontal orders respectively.\n         */\n        static applyMaskPenaltyRule1Internal(matrix, isHorizontal) {\n            let penalty = 0;\n            const iLimit = isHorizontal ? matrix.getHeight() : matrix.getWidth();\n            const jLimit = isHorizontal ? matrix.getWidth() : matrix.getHeight();\n            const array = matrix.getArray();\n            for (let i = 0; i < iLimit; i++) {\n                let numSameBitCells = 0;\n                let prevBit = -1;\n                for (let j = 0; j < jLimit; j++) {\n                    const bit = isHorizontal ? array[i][j] : array[j][i];\n                    if (bit === prevBit) {\n                        numSameBitCells++;\n                    }\n                    else {\n                        if (numSameBitCells >= 5) {\n                            penalty += MaskUtil.N1 + (numSameBitCells - 5);\n                        }\n                        numSameBitCells = 1; // Include the cell itself.\n                        prevBit = bit;\n                    }\n                }\n                if (numSameBitCells >= 5) {\n                    penalty += MaskUtil.N1 + (numSameBitCells - 5);\n                }\n            }\n            return penalty;\n        }\n    }\n    // Penalty weights from section 6.8.2.1\n    MaskUtil.N1 = 3;\n    MaskUtil.N2 = 3;\n    MaskUtil.N3 = 40;\n    MaskUtil.N4 = 10;\n\n    /**\n     * JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned\n     * -1, 0, and 1, I'm going to use less memory and go with bytes.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class ByteMatrix {\n        constructor(width /*int*/, height /*int*/) {\n            this.width = width;\n            this.height = height;\n            const bytes = new Array(height); // [height][width]\n            for (let i = 0; i !== height; i++) {\n                bytes[i] = new Uint8Array(width);\n            }\n            this.bytes = bytes;\n        }\n        getHeight() {\n            return this.height;\n        }\n        getWidth() {\n            return this.width;\n        }\n        get(x /*int*/, y /*int*/) {\n            return this.bytes[y][x];\n        }\n        /**\n         * @return an internal representation as bytes, in row-major order. array[y][x] represents point (x,y)\n         */\n        getArray() {\n            return this.bytes;\n        }\n        // TYPESCRIPTPORT: preffer to let two methods instead of override to avoid type comparison inside\n        setNumber(x /*int*/, y /*int*/, value /*byte|int*/) {\n            this.bytes[y][x] = value;\n        }\n        // public set(x: number /*int*/, y: number /*int*/, value: number /*int*/): void {\n        //   bytes[y][x] = (byte) value\n        // }\n        setBoolean(x /*int*/, y /*int*/, value) {\n            this.bytes[y][x] = /*(byte) */ (value ? 1 : 0);\n        }\n        clear(value /*byte*/) {\n            for (const aByte of this.bytes) {\n                Arrays.fill(aByte, value);\n            }\n        }\n        equals(o) {\n            if (!(o instanceof ByteMatrix)) {\n                return false;\n            }\n            const other = o;\n            if (this.width !== other.width) {\n                return false;\n            }\n            if (this.height !== other.height) {\n                return false;\n            }\n            for (let y = 0, height = this.height; y < height; ++y) {\n                const bytesY = this.bytes[y];\n                const otherBytesY = other.bytes[y];\n                for (let x = 0, width = this.width; x < width; ++x) {\n                    if (bytesY[x] !== otherBytesY[x]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        /*@Override*/\n        toString() {\n            const result = new StringBuilder(); // (2 * width * height + 2)\n            for (let y = 0, height = this.height; y < height; ++y) {\n                const bytesY = this.bytes[y];\n                for (let x = 0, width = this.width; x < width; ++x) {\n                    switch (bytesY[x]) {\n                        case 0:\n                            result.append(' 0');\n                            break;\n                        case 1:\n                            result.append(' 1');\n                            break;\n                        default:\n                            result.append('  ');\n                            break;\n                    }\n                }\n                result.append('\\n');\n            }\n            return result.toString();\n        }\n    }\n\n    /**\n     * @author satorux@google.com (Satoru Takabayashi) - creator\n     * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n     */\n    class QRCode {\n        constructor() {\n            this.maskPattern = -1;\n        }\n        getMode() {\n            return this.mode;\n        }\n        getECLevel() {\n            return this.ecLevel;\n        }\n        getVersion() {\n            return this.version;\n        }\n        getMaskPattern() {\n            return this.maskPattern;\n        }\n        getMatrix() {\n            return this.matrix;\n        }\n        /*@Override*/\n        toString() {\n            const result = new StringBuilder(); // (200)\n            result.append('<<\\n');\n            result.append(' mode: ');\n            result.append(this.mode ? this.mode.toString() : 'null');\n            result.append('\\n ecLevel: ');\n            result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n            result.append('\\n version: ');\n            result.append(this.version ? this.version.toString() : 'null');\n            result.append('\\n maskPattern: ');\n            result.append(this.maskPattern.toString());\n            if (this.matrix) {\n                result.append('\\n matrix:\\n');\n                result.append(this.matrix.toString());\n            }\n            else {\n                result.append('\\n matrix: null\\n');\n            }\n            result.append('>>\\n');\n            return result.toString();\n        }\n        setMode(value) {\n            this.mode = value;\n        }\n        setECLevel(value) {\n            this.ecLevel = value;\n        }\n        setVersion(version) {\n            this.version = version;\n        }\n        setMaskPattern(value /*int*/) {\n            this.maskPattern = value;\n        }\n        setMatrix(value) {\n            this.matrix = value;\n        }\n        // Check if \"mask_pattern\" is valid.\n        static isValidMaskPattern(maskPattern /*int*/) {\n            return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n        }\n    }\n    QRCode.NUM_MASK_PATTERNS = 8;\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class WriterException extends Exception {\n    }\n    WriterException.kind = 'WriterException';\n\n    /**\n     * @author satorux@google.com (Satoru Takabayashi) - creator\n     * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n     */\n    class MatrixUtil {\n        constructor() {\n            // do nothing\n        }\n        // Set all cells to -1 (TYPESCRIPTPORT: 255).  -1 (TYPESCRIPTPORT: 255) means that the cell is empty (not set yet).\n        //\n        // JAVAPORT: We shouldn't need to do this at all. The code should be rewritten to begin encoding\n        // with the ByteMatrix initialized all to zero.\n        static clearMatrix(matrix) {\n            // TYPESCRIPTPORT: we use UintArray se changed here from -1 to 255\n            matrix.clear(/*(byte) */ /*-1*/ 255);\n        }\n        // Build 2D matrix of QR Code from \"dataBits\" with \"ecLevel\", \"version\" and \"getMaskPattern\". On\n        // success, store the result in \"matrix\" and return true.\n        static buildMatrix(dataBits, ecLevel, version, maskPattern /*int*/, matrix) {\n            MatrixUtil.clearMatrix(matrix);\n            MatrixUtil.embedBasicPatterns(version, matrix);\n            // Type information appear with any version.\n            MatrixUtil.embedTypeInfo(ecLevel, maskPattern, matrix);\n            // Version info appear if version >= 7.\n            MatrixUtil.maybeEmbedVersionInfo(version, matrix);\n            // Data should be embedded at end.\n            MatrixUtil.embedDataBits(dataBits, maskPattern, matrix);\n        }\n        // Embed basic patterns. On success, modify the matrix and return true.\n        // The basic patterns are:\n        // - Position detection patterns\n        // - Timing patterns\n        // - Dark dot at the left bottom corner\n        // - Position adjustment patterns, if need be\n        static embedBasicPatterns(version, matrix) {\n            // Let's get started with embedding big squares at corners.\n            MatrixUtil.embedPositionDetectionPatternsAndSeparators(matrix);\n            // Then, embed the dark dot at the left bottom corner.\n            MatrixUtil.embedDarkDotAtLeftBottomCorner(matrix);\n            // Position adjustment patterns appear if version >= 2.\n            MatrixUtil.maybeEmbedPositionAdjustmentPatterns(version, matrix);\n            // Timing patterns should be embedded after position adj. patterns.\n            MatrixUtil.embedTimingPatterns(matrix);\n        }\n        // Embed type information. On success, modify the matrix.\n        static embedTypeInfo(ecLevel, maskPattern /*int*/, matrix) {\n            const typeInfoBits = new BitArray();\n            MatrixUtil.makeTypeInfoBits(ecLevel, maskPattern, typeInfoBits);\n            for (let i = 0, size = typeInfoBits.getSize(); i < size; ++i) {\n                // Place bits in LSB to MSB order.  LSB (least significant bit) is the last value in\n                // \"typeInfoBits\".\n                const bit = typeInfoBits.get(typeInfoBits.getSize() - 1 - i);\n                // Type info bits at the left top corner. See 8.9 of JISX0510:2004 (p.46).\n                const coordinates = MatrixUtil.TYPE_INFO_COORDINATES[i];\n                const x1 = coordinates[0];\n                const y1 = coordinates[1];\n                matrix.setBoolean(x1, y1, bit);\n                if (i < 8) {\n                    // Right top corner.\n                    const x2 = matrix.getWidth() - i - 1;\n                    const y2 = 8;\n                    matrix.setBoolean(x2, y2, bit);\n                }\n                else {\n                    // Left bottom corner.\n                    const x2 = 8;\n                    const y2 = matrix.getHeight() - 7 + (i - 8);\n                    matrix.setBoolean(x2, y2, bit);\n                }\n            }\n        }\n        // Embed version information if need be. On success, modify the matrix and return true.\n        // See 8.10 of JISX0510:2004 (p.47) for how to embed version information.\n        static maybeEmbedVersionInfo(version, matrix) {\n            if (version.getVersionNumber() < 7) { // Version info is necessary if version >= 7.\n                return; // Don't need version info.\n            }\n            const versionInfoBits = new BitArray();\n            MatrixUtil.makeVersionInfoBits(version, versionInfoBits);\n            let bitIndex = 6 * 3 - 1; // It will decrease from 17 to 0.\n            for (let i = 0; i < 6; ++i) {\n                for (let j = 0; j < 3; ++j) {\n                    // Place bits in LSB (least significant bit) to MSB order.\n                    const bit = versionInfoBits.get(bitIndex);\n                    bitIndex--;\n                    // Left bottom corner.\n                    matrix.setBoolean(i, matrix.getHeight() - 11 + j, bit);\n                    // Right bottom corner.\n                    matrix.setBoolean(matrix.getHeight() - 11 + j, i, bit);\n                }\n            }\n        }\n        // Embed \"dataBits\" using \"getMaskPattern\". On success, modify the matrix and return true.\n        // For debugging purposes, it skips masking process if \"getMaskPattern\" is -1(TYPESCRIPTPORT: 255).\n        // See 8.7 of JISX0510:2004 (p.38) for how to embed data bits.\n        static embedDataBits(dataBits, maskPattern /*int*/, matrix) {\n            let bitIndex = 0;\n            let direction = -1;\n            // Start from the right bottom cell.\n            let x = matrix.getWidth() - 1;\n            let y = matrix.getHeight() - 1;\n            while (x > 0) {\n                // Skip the vertical timing pattern.\n                if (x === 6) {\n                    x -= 1;\n                }\n                while (y >= 0 && y < matrix.getHeight()) {\n                    for (let i = 0; i < 2; ++i) {\n                        const xx = x - i;\n                        // Skip the cell if it's not empty.\n                        if (!MatrixUtil.isEmpty(matrix.get(xx, y))) {\n                            continue;\n                        }\n                        let bit;\n                        if (bitIndex < dataBits.getSize()) {\n                            bit = dataBits.get(bitIndex);\n                            ++bitIndex;\n                        }\n                        else {\n                            // Padding bit. If there is no bit left, we'll fill the left cells with 0, as described\n                            // in 8.4.9 of JISX0510:2004 (p. 24).\n                            bit = false;\n                        }\n                        // Skip masking if mask_pattern is -1 (TYPESCRIPTPORT: 255).\n                        if (maskPattern !== 255 && MaskUtil.getDataMaskBit(maskPattern, xx, y)) {\n                            bit = !bit;\n                        }\n                        matrix.setBoolean(xx, y, bit);\n                    }\n                    y += direction;\n                }\n                direction = -direction; // Reverse the direction.\n                y += direction;\n                x -= 2; // Move to the left.\n            }\n            // All bits should be consumed.\n            if (bitIndex !== dataBits.getSize()) {\n                throw new WriterException('Not all bits consumed: ' + bitIndex + '/' + dataBits.getSize());\n            }\n        }\n        // Return the position of the most significant bit set (one: to) in the \"value\". The most\n        // significant bit is position 32. If there is no bit set, return 0. Examples:\n        // - findMSBSet(0) => 0\n        // - findMSBSet(1) => 1\n        // - findMSBSet(255) => 8\n        static findMSBSet(value /*int*/) {\n            return 32 - Integer.numberOfLeadingZeros(value);\n        }\n        // Calculate BCH (Bose-Chaudhuri-Hocquenghem) code for \"value\" using polynomial \"poly\". The BCH\n        // code is used for encoding type information and version information.\n        // Example: Calculation of version information of 7.\n        // f(x) is created from 7.\n        //   - 7 = 000111 in 6 bits\n        //   - f(x) = x^2 + x^1 + x^0\n        // g(x) is given by the standard (p. 67)\n        //   - g(x) = x^12 + x^11 + x^10 + x^9 + x^8 + x^5 + x^2 + 1\n        // Multiply f(x) by x^(18 - 6)\n        //   - f'(x) = f(x) * x^(18 - 6)\n        //   - f'(x) = x^14 + x^13 + x^12\n        // Calculate the remainder of f'(x) / g(x)\n        //         x^2\n        //         __________________________________________________\n        //   g(x) )x^14 + x^13 + x^12\n        //         x^14 + x^13 + x^12 + x^11 + x^10 + x^7 + x^4 + x^2\n        //         --------------------------------------------------\n        //                              x^11 + x^10 + x^7 + x^4 + x^2\n        //\n        // The remainder is x^11 + x^10 + x^7 + x^4 + x^2\n        // Encode it in binary: 110010010100\n        // The return value is 0xc94 (1100 1001 0100)\n        //\n        // Since all coefficients in the polynomials are 1 or 0, we can do the calculation by bit\n        // operations. We don't care if coefficients are positive or negative.\n        static calculateBCHCode(value /*int*/, poly /*int*/) {\n            if (poly === 0) {\n                throw new IllegalArgumentException('0 polynomial');\n            }\n            // If poly is \"1 1111 0010 0101\" (version info poly), msbSetInPoly is 13. We'll subtract 1\n            // from 13 to make it 12.\n            const msbSetInPoly = MatrixUtil.findMSBSet(poly);\n            value <<= msbSetInPoly - 1;\n            // Do the division business using exclusive-or operations.\n            while (MatrixUtil.findMSBSet(value) >= msbSetInPoly) {\n                value ^= poly << (MatrixUtil.findMSBSet(value) - msbSetInPoly);\n            }\n            // Now the \"value\" is the remainder (i.e. the BCH code)\n            return value;\n        }\n        // Make bit vector of type information. On success, store the result in \"bits\" and return true.\n        // Encode error correction level and mask pattern. See 8.9 of\n        // JISX0510:2004 (p.45) for details.\n        static makeTypeInfoBits(ecLevel, maskPattern /*int*/, bits) {\n            if (!QRCode.isValidMaskPattern(maskPattern)) {\n                throw new WriterException('Invalid mask pattern');\n            }\n            const typeInfo = (ecLevel.getBits() << 3) | maskPattern;\n            bits.appendBits(typeInfo, 5);\n            const bchCode = MatrixUtil.calculateBCHCode(typeInfo, MatrixUtil.TYPE_INFO_POLY);\n            bits.appendBits(bchCode, 10);\n            const maskBits = new BitArray();\n            maskBits.appendBits(MatrixUtil.TYPE_INFO_MASK_PATTERN, 15);\n            bits.xor(maskBits);\n            if (bits.getSize() !== 15) { // Just in case.\n                throw new WriterException('should not happen but we got: ' + bits.getSize());\n            }\n        }\n        // Make bit vector of version information. On success, store the result in \"bits\" and return true.\n        // See 8.10 of JISX0510:2004 (p.45) for details.\n        static makeVersionInfoBits(version, bits) {\n            bits.appendBits(version.getVersionNumber(), 6);\n            const bchCode = MatrixUtil.calculateBCHCode(version.getVersionNumber(), MatrixUtil.VERSION_INFO_POLY);\n            bits.appendBits(bchCode, 12);\n            if (bits.getSize() !== 18) { // Just in case.\n                throw new WriterException('should not happen but we got: ' + bits.getSize());\n            }\n        }\n        // Check if \"value\" is empty.\n        static isEmpty(value /*int*/) {\n            return value === 255; // -1\n        }\n        static embedTimingPatterns(matrix) {\n            // -8 is for skipping position detection patterns (7: size), and two horizontal/vertical\n            // separation patterns (1: size). Thus, 8 = 7 + 1.\n            for (let i = 8; i < matrix.getWidth() - 8; ++i) {\n                const bit = (i + 1) % 2;\n                // Horizontal line.\n                if (MatrixUtil.isEmpty(matrix.get(i, 6))) {\n                    matrix.setNumber(i, 6, bit);\n                }\n                // Vertical line.\n                if (MatrixUtil.isEmpty(matrix.get(6, i))) {\n                    matrix.setNumber(6, i, bit);\n                }\n            }\n        }\n        // Embed the lonely dark dot at left bottom corner. JISX0510:2004 (p.46)\n        static embedDarkDotAtLeftBottomCorner(matrix) {\n            if (matrix.get(8, matrix.getHeight() - 8) === 0) {\n                throw new WriterException();\n            }\n            matrix.setNumber(8, matrix.getHeight() - 8, 1);\n        }\n        static embedHorizontalSeparationPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let x = 0; x < 8; ++x) {\n                if (!MatrixUtil.isEmpty(matrix.get(xStart + x, yStart))) {\n                    throw new WriterException();\n                }\n                matrix.setNumber(xStart + x, yStart, 0);\n            }\n        }\n        static embedVerticalSeparationPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let y = 0; y < 7; ++y) {\n                if (!MatrixUtil.isEmpty(matrix.get(xStart, yStart + y))) {\n                    throw new WriterException();\n                }\n                matrix.setNumber(xStart, yStart + y, 0);\n            }\n        }\n        static embedPositionAdjustmentPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let y = 0; y < 5; ++y) {\n                const patternY = MatrixUtil.POSITION_ADJUSTMENT_PATTERN[y];\n                for (let x = 0; x < 5; ++x) {\n                    matrix.setNumber(xStart + x, yStart + y, patternY[x]);\n                }\n            }\n        }\n        static embedPositionDetectionPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let y = 0; y < 7; ++y) {\n                const patternY = MatrixUtil.POSITION_DETECTION_PATTERN[y];\n                for (let x = 0; x < 7; ++x) {\n                    matrix.setNumber(xStart + x, yStart + y, patternY[x]);\n                }\n            }\n        }\n        // Embed position detection patterns and surrounding vertical/horizontal separators.\n        static embedPositionDetectionPatternsAndSeparators(matrix) {\n            // Embed three big squares at corners.\n            const pdpWidth = MatrixUtil.POSITION_DETECTION_PATTERN[0].length;\n            // Left top corner.\n            MatrixUtil.embedPositionDetectionPattern(0, 0, matrix);\n            // Right top corner.\n            MatrixUtil.embedPositionDetectionPattern(matrix.getWidth() - pdpWidth, 0, matrix);\n            // Left bottom corner.\n            MatrixUtil.embedPositionDetectionPattern(0, matrix.getWidth() - pdpWidth, matrix);\n            // Embed horizontal separation patterns around the squares.\n            const hspWidth = 8;\n            // Left top corner.\n            MatrixUtil.embedHorizontalSeparationPattern(0, hspWidth - 1, matrix);\n            // Right top corner.\n            MatrixUtil.embedHorizontalSeparationPattern(matrix.getWidth() - hspWidth, hspWidth - 1, matrix);\n            // Left bottom corner.\n            MatrixUtil.embedHorizontalSeparationPattern(0, matrix.getWidth() - hspWidth, matrix);\n            // Embed vertical separation patterns around the squares.\n            const vspSize = 7;\n            // Left top corner.\n            MatrixUtil.embedVerticalSeparationPattern(vspSize, 0, matrix);\n            // Right top corner.\n            MatrixUtil.embedVerticalSeparationPattern(matrix.getHeight() - vspSize - 1, 0, matrix);\n            // Left bottom corner.\n            MatrixUtil.embedVerticalSeparationPattern(vspSize, matrix.getHeight() - vspSize, matrix);\n        }\n        // Embed position adjustment patterns if need be.\n        static maybeEmbedPositionAdjustmentPatterns(version, matrix) {\n            if (version.getVersionNumber() < 2) { // The patterns appear if version >= 2\n                return;\n            }\n            const index = version.getVersionNumber() - 1;\n            const coordinates = MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[index];\n            for (let i = 0, length = coordinates.length; i !== length; i++) {\n                const y = coordinates[i];\n                if (y >= 0) {\n                    for (let j = 0; j !== length; j++) {\n                        const x = coordinates[j];\n                        if (x >= 0 && MatrixUtil.isEmpty(matrix.get(x, y))) {\n                            // If the cell is unset, we embed the position adjustment pattern here.\n                            // -2 is necessary since the x/y coordinates point to the center of the pattern, not the\n                            // left top corner.\n                            MatrixUtil.embedPositionAdjustmentPattern(x - 2, y - 2, matrix);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    MatrixUtil.POSITION_DETECTION_PATTERN = Array.from([\n        Int32Array.from([1, 1, 1, 1, 1, 1, 1]),\n        Int32Array.from([1, 0, 0, 0, 0, 0, 1]),\n        Int32Array.from([1, 0, 1, 1, 1, 0, 1]),\n        Int32Array.from([1, 0, 1, 1, 1, 0, 1]),\n        Int32Array.from([1, 0, 1, 1, 1, 0, 1]),\n        Int32Array.from([1, 0, 0, 0, 0, 0, 1]),\n        Int32Array.from([1, 1, 1, 1, 1, 1, 1]),\n    ]);\n    MatrixUtil.POSITION_ADJUSTMENT_PATTERN = Array.from([\n        Int32Array.from([1, 1, 1, 1, 1]),\n        Int32Array.from([1, 0, 0, 0, 1]),\n        Int32Array.from([1, 0, 1, 0, 1]),\n        Int32Array.from([1, 0, 0, 0, 1]),\n        Int32Array.from([1, 1, 1, 1, 1]),\n    ]);\n    // From Appendix E. Table 1, JIS0510X:2004 (71: p). The table was double-checked by komatsu.\n    MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE = Array.from([\n        Int32Array.from([-1, -1, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 18, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 22, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 26, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 30, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 34, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 22, 38, -1, -1, -1, -1]),\n        Int32Array.from([6, 24, 42, -1, -1, -1, -1]),\n        Int32Array.from([6, 26, 46, -1, -1, -1, -1]),\n        Int32Array.from([6, 28, 50, -1, -1, -1, -1]),\n        Int32Array.from([6, 30, 54, -1, -1, -1, -1]),\n        Int32Array.from([6, 32, 58, -1, -1, -1, -1]),\n        Int32Array.from([6, 34, 62, -1, -1, -1, -1]),\n        Int32Array.from([6, 26, 46, 66, -1, -1, -1]),\n        Int32Array.from([6, 26, 48, 70, -1, -1, -1]),\n        Int32Array.from([6, 26, 50, 74, -1, -1, -1]),\n        Int32Array.from([6, 30, 54, 78, -1, -1, -1]),\n        Int32Array.from([6, 30, 56, 82, -1, -1, -1]),\n        Int32Array.from([6, 30, 58, 86, -1, -1, -1]),\n        Int32Array.from([6, 34, 62, 90, -1, -1, -1]),\n        Int32Array.from([6, 28, 50, 72, 94, -1, -1]),\n        Int32Array.from([6, 26, 50, 74, 98, -1, -1]),\n        Int32Array.from([6, 30, 54, 78, 102, -1, -1]),\n        Int32Array.from([6, 28, 54, 80, 106, -1, -1]),\n        Int32Array.from([6, 32, 58, 84, 110, -1, -1]),\n        Int32Array.from([6, 30, 58, 86, 114, -1, -1]),\n        Int32Array.from([6, 34, 62, 90, 118, -1, -1]),\n        Int32Array.from([6, 26, 50, 74, 98, 122, -1]),\n        Int32Array.from([6, 30, 54, 78, 102, 126, -1]),\n        Int32Array.from([6, 26, 52, 78, 104, 130, -1]),\n        Int32Array.from([6, 30, 56, 82, 108, 134, -1]),\n        Int32Array.from([6, 34, 60, 86, 112, 138, -1]),\n        Int32Array.from([6, 30, 58, 86, 114, 142, -1]),\n        Int32Array.from([6, 34, 62, 90, 118, 146, -1]),\n        Int32Array.from([6, 30, 54, 78, 102, 126, 150]),\n        Int32Array.from([6, 24, 50, 76, 102, 128, 154]),\n        Int32Array.from([6, 28, 54, 80, 106, 132, 158]),\n        Int32Array.from([6, 32, 58, 84, 110, 136, 162]),\n        Int32Array.from([6, 26, 54, 82, 110, 138, 166]),\n        Int32Array.from([6, 30, 58, 86, 114, 142, 170]),\n    ]);\n    // Type info cells at the left top corner.\n    MatrixUtil.TYPE_INFO_COORDINATES = Array.from([\n        Int32Array.from([8, 0]),\n        Int32Array.from([8, 1]),\n        Int32Array.from([8, 2]),\n        Int32Array.from([8, 3]),\n        Int32Array.from([8, 4]),\n        Int32Array.from([8, 5]),\n        Int32Array.from([8, 7]),\n        Int32Array.from([8, 8]),\n        Int32Array.from([7, 8]),\n        Int32Array.from([5, 8]),\n        Int32Array.from([4, 8]),\n        Int32Array.from([3, 8]),\n        Int32Array.from([2, 8]),\n        Int32Array.from([1, 8]),\n        Int32Array.from([0, 8]),\n    ]);\n    // From Appendix D in JISX0510:2004 (p. 67)\n    MatrixUtil.VERSION_INFO_POLY = 0x1f25; // 1 1111 0010 0101\n    // From Appendix C in JISX0510:2004 (p.65).\n    MatrixUtil.TYPE_INFO_POLY = 0x537;\n    MatrixUtil.TYPE_INFO_MASK_PATTERN = 0x5412;\n\n    /*namespace com.google.zxing.qrcode.encoder {*/\n    class BlockPair {\n        constructor(dataBytes, errorCorrectionBytes) {\n            this.dataBytes = dataBytes;\n            this.errorCorrectionBytes = errorCorrectionBytes;\n        }\n        getDataBytes() {\n            return this.dataBytes;\n        }\n        getErrorCorrectionBytes() {\n            return this.errorCorrectionBytes;\n        }\n    }\n\n    /*import java.io.UnsupportedEncodingException;*/\n    /*import java.util.ArrayList;*/\n    /*import java.util.Collection;*/\n    /*import java.util.Map;*/\n    /**\n     * @author satorux@google.com (Satoru Takabayashi) - creator\n     * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n     */\n    class Encoder {\n        // TYPESCRIPTPORT: changed to UTF8, the default for js\n        constructor() { }\n        // The mask penalty calculation is complicated.  See Table 21 of JISX0510:2004 (p.45) for details.\n        // Basically it applies four rules and summate all penalties.\n        static calculateMaskPenalty(matrix) {\n            return MaskUtil.applyMaskPenaltyRule1(matrix)\n                + MaskUtil.applyMaskPenaltyRule2(matrix)\n                + MaskUtil.applyMaskPenaltyRule3(matrix)\n                + MaskUtil.applyMaskPenaltyRule4(matrix);\n        }\n        /**\n         * @param content text to encode\n         * @param ecLevel error correction level to use\n         * @return {@link QRCode} representing the encoded QR code\n         * @throws WriterException if encoding can't succeed, because of for example invalid content\n         *   or configuration\n         */\n        // public static encode(content: string, ecLevel: ErrorCorrectionLevel): QRCode /*throws WriterException*/ {\n        //   return encode(content, ecLevel, null)\n        // }\n        static encode(content, ecLevel, hints = null) {\n            // Determine what character encoding has been specified by the caller, if any\n            let encoding = Encoder.DEFAULT_BYTE_MODE_ENCODING;\n            const hasEncodingHint = hints !== null && undefined !== hints.get(EncodeHintType$1.CHARACTER_SET);\n            if (hasEncodingHint) {\n                encoding = hints.get(EncodeHintType$1.CHARACTER_SET).toString();\n            }\n            // Pick an encoding mode appropriate for the content. Note that this will not attempt to use\n            // multiple modes / segments even if that were more efficient. Twould be nice.\n            const mode = this.chooseMode(content, encoding);\n            // This will store the header information, like mode and\n            // length, as well as \"header\" segments like an ECI segment.\n            const headerBits = new BitArray();\n            // Append ECI segment if applicable\n            if (mode === Mode$1.BYTE && (hasEncodingHint || Encoder.DEFAULT_BYTE_MODE_ENCODING !== encoding)) {\n                const eci = CharacterSetECI.getCharacterSetECIByName(encoding);\n                if (eci !== undefined) {\n                    this.appendECI(eci, headerBits);\n                }\n            }\n            // (With ECI in place,) Write the mode marker\n            this.appendModeInfo(mode, headerBits);\n            // Collect data within the main segment, separately, to count its size if needed. Don't add it to\n            // main payload yet.\n            const dataBits = new BitArray();\n            this.appendBytes(content, mode, dataBits, encoding);\n            let version;\n            if (hints !== null && undefined !== hints.get(EncodeHintType$1.QR_VERSION)) {\n                const versionNumber = Number.parseInt(hints.get(EncodeHintType$1.QR_VERSION).toString(), 10);\n                version = Version$1.getVersionForNumber(versionNumber);\n                const bitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, version);\n                if (!this.willFit(bitsNeeded, version, ecLevel)) {\n                    throw new WriterException('Data too big for requested version');\n                }\n            }\n            else {\n                version = this.recommendVersion(ecLevel, mode, headerBits, dataBits);\n            }\n            const headerAndDataBits = new BitArray();\n            headerAndDataBits.appendBitArray(headerBits);\n            // Find \"length\" of main segment and write it\n            const numLetters = mode === Mode$1.BYTE ? dataBits.getSizeInBytes() : content.length;\n            this.appendLengthInfo(numLetters, version, mode, headerAndDataBits);\n            // Put data together into the overall payload\n            headerAndDataBits.appendBitArray(dataBits);\n            const ecBlocks = version.getECBlocksForLevel(ecLevel);\n            const numDataBytes = version.getTotalCodewords() - ecBlocks.getTotalECCodewords();\n            // Terminate the bits properly.\n            this.terminateBits(numDataBytes, headerAndDataBits);\n            // Interleave data bits with error correction code.\n            const finalBits = this.interleaveWithECBytes(headerAndDataBits, version.getTotalCodewords(), numDataBytes, ecBlocks.getNumBlocks());\n            const qrCode = new QRCode();\n            qrCode.setECLevel(ecLevel);\n            qrCode.setMode(mode);\n            qrCode.setVersion(version);\n            //  Choose the mask pattern and set to \"qrCode\".\n            const dimension = version.getDimensionForVersion();\n            const matrix = new ByteMatrix(dimension, dimension);\n            const maskPattern = this.chooseMaskPattern(finalBits, ecLevel, version, matrix);\n            qrCode.setMaskPattern(maskPattern);\n            // Build the matrix and set it to \"qrCode\".\n            MatrixUtil.buildMatrix(finalBits, ecLevel, version, maskPattern, matrix);\n            qrCode.setMatrix(matrix);\n            return qrCode;\n        }\n        /**\n         * Decides the smallest version of QR code that will contain all of the provided data.\n         *\n         * @throws WriterException if the data cannot fit in any version\n         */\n        static recommendVersion(ecLevel, mode, headerBits, dataBits) {\n            // Hard part: need to know version to know how many bits length takes. But need to know how many\n            // bits it takes to know version. First we take a guess at version by assuming version will be\n            // the minimum, 1:\n            const provisionalBitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, Version$1.getVersionForNumber(1));\n            const provisionalVersion = this.chooseVersion(provisionalBitsNeeded, ecLevel);\n            // Use that guess to calculate the right version. I am still not sure this works in 100% of cases.\n            const bitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, provisionalVersion);\n            return this.chooseVersion(bitsNeeded, ecLevel);\n        }\n        static calculateBitsNeeded(mode, headerBits, dataBits, version) {\n            return headerBits.getSize() + mode.getCharacterCountBits(version) + dataBits.getSize();\n        }\n        /**\n         * @return the code point of the table used in alphanumeric mode or\n         *  -1 if there is no corresponding code in the table.\n         */\n        static getAlphanumericCode(code /*int*/) {\n            if (code < Encoder.ALPHANUMERIC_TABLE.length) {\n                return Encoder.ALPHANUMERIC_TABLE[code];\n            }\n            return -1;\n        }\n        // public static chooseMode(content: string): Mode {\n        //   return chooseMode(content, null);\n        // }\n        /**\n         * Choose the best mode by examining the content. Note that 'encoding' is used as a hint;\n         * if it is Shift_JIS, and the input is only double-byte Kanji, then we return {@link Mode#KANJI}.\n         */\n        static chooseMode(content, encoding = null) {\n            if (CharacterSetECI.SJIS.getName() === encoding && this.isOnlyDoubleByteKanji(content)) {\n                // Choose Kanji mode if all input are double-byte characters\n                return Mode$1.KANJI;\n            }\n            let hasNumeric = false;\n            let hasAlphanumeric = false;\n            for (let i = 0, length = content.length; i < length; ++i) {\n                const c = content.charAt(i);\n                if (Encoder.isDigit(c)) {\n                    hasNumeric = true;\n                }\n                else if (this.getAlphanumericCode(c.charCodeAt(0)) !== -1) {\n                    hasAlphanumeric = true;\n                }\n                else {\n                    return Mode$1.BYTE;\n                }\n            }\n            if (hasAlphanumeric) {\n                return Mode$1.ALPHANUMERIC;\n            }\n            if (hasNumeric) {\n                return Mode$1.NUMERIC;\n            }\n            return Mode$1.BYTE;\n        }\n        static isOnlyDoubleByteKanji(content) {\n            let bytes;\n            try {\n                bytes = StringEncoding.encode(content, CharacterSetECI.SJIS); // content.getBytes(\"Shift_JIS\"))\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                return false;\n            }\n            const length = bytes.length;\n            if (length % 2 !== 0) {\n                return false;\n            }\n            for (let i = 0; i < length; i += 2) {\n                const byte1 = bytes[i] & 0xFF;\n                if ((byte1 < 0x81 || byte1 > 0x9F) && (byte1 < 0xE0 || byte1 > 0xEB)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        static chooseMaskPattern(bits, ecLevel, version, matrix) {\n            let minPenalty = Number.MAX_SAFE_INTEGER; // Lower penalty is better.\n            let bestMaskPattern = -1;\n            // We try all mask patterns to choose the best one.\n            for (let maskPattern = 0; maskPattern < QRCode.NUM_MASK_PATTERNS; maskPattern++) {\n                MatrixUtil.buildMatrix(bits, ecLevel, version, maskPattern, matrix);\n                let penalty = this.calculateMaskPenalty(matrix);\n                if (penalty < minPenalty) {\n                    minPenalty = penalty;\n                    bestMaskPattern = maskPattern;\n                }\n            }\n            return bestMaskPattern;\n        }\n        static chooseVersion(numInputBits /*int*/, ecLevel) {\n            for (let versionNum = 1; versionNum <= 40; versionNum++) {\n                const version = Version$1.getVersionForNumber(versionNum);\n                if (Encoder.willFit(numInputBits, version, ecLevel)) {\n                    return version;\n                }\n            }\n            throw new WriterException('Data too big');\n        }\n        /**\n         * @return true if the number of input bits will fit in a code with the specified version and\n         * error correction level.\n         */\n        static willFit(numInputBits /*int*/, version, ecLevel) {\n            // In the following comments, we use numbers of Version 7-H.\n            // numBytes = 196\n            const numBytes = version.getTotalCodewords();\n            // getNumECBytes = 130\n            const ecBlocks = version.getECBlocksForLevel(ecLevel);\n            const numEcBytes = ecBlocks.getTotalECCodewords();\n            // getNumDataBytes = 196 - 130 = 66\n            const numDataBytes = numBytes - numEcBytes;\n            const totalInputBytes = (numInputBits + 7) / 8;\n            return numDataBytes >= totalInputBytes;\n        }\n        /**\n         * Terminate bits as described in 8.4.8 and 8.4.9 of JISX0510:2004 (p.24).\n         */\n        static terminateBits(numDataBytes /*int*/, bits) {\n            const capacity = numDataBytes * 8;\n            if (bits.getSize() > capacity) {\n                throw new WriterException('data bits cannot fit in the QR Code' + bits.getSize() + ' > ' +\n                    capacity);\n            }\n            for (let i = 0; i < 4 && bits.getSize() < capacity; ++i) {\n                bits.appendBit(false);\n            }\n            // Append termination bits. See 8.4.8 of JISX0510:2004 (p.24) for details.\n            // If the last byte isn't 8-bit aligned, we'll add padding bits.\n            const numBitsInLastByte = bits.getSize() & 0x07;\n            if (numBitsInLastByte > 0) {\n                for (let i = numBitsInLastByte; i < 8; i++) {\n                    bits.appendBit(false);\n                }\n            }\n            // If we have more space, we'll fill the space with padding patterns defined in 8.4.9 (p.24).\n            const numPaddingBytes = numDataBytes - bits.getSizeInBytes();\n            for (let i = 0; i < numPaddingBytes; ++i) {\n                bits.appendBits((i & 0x01) === 0 ? 0xEC : 0x11, 8);\n            }\n            if (bits.getSize() !== capacity) {\n                throw new WriterException('Bits size does not equal capacity');\n            }\n        }\n        /**\n         * Get number of data bytes and number of error correction bytes for block id \"blockID\". Store\n         * the result in \"numDataBytesInBlock\", and \"numECBytesInBlock\". See table 12 in 8.5.1 of\n         * JISX0510:2004 (p.30)\n         */\n        static getNumDataBytesAndNumECBytesForBlockID(numTotalBytes /*int*/, numDataBytes /*int*/, numRSBlocks /*int*/, blockID /*int*/, numDataBytesInBlock, numECBytesInBlock) {\n            if (blockID >= numRSBlocks) {\n                throw new WriterException('Block ID too large');\n            }\n            // numRsBlocksInGroup2 = 196 % 5 = 1\n            const numRsBlocksInGroup2 = numTotalBytes % numRSBlocks;\n            // numRsBlocksInGroup1 = 5 - 1 = 4\n            const numRsBlocksInGroup1 = numRSBlocks - numRsBlocksInGroup2;\n            // numTotalBytesInGroup1 = 196 / 5 = 39\n            const numTotalBytesInGroup1 = Math.floor(numTotalBytes / numRSBlocks);\n            // numTotalBytesInGroup2 = 39 + 1 = 40\n            const numTotalBytesInGroup2 = numTotalBytesInGroup1 + 1;\n            // numDataBytesInGroup1 = 66 / 5 = 13\n            const numDataBytesInGroup1 = Math.floor(numDataBytes / numRSBlocks);\n            // numDataBytesInGroup2 = 13 + 1 = 14\n            const numDataBytesInGroup2 = numDataBytesInGroup1 + 1;\n            // numEcBytesInGroup1 = 39 - 13 = 26\n            const numEcBytesInGroup1 = numTotalBytesInGroup1 - numDataBytesInGroup1;\n            // numEcBytesInGroup2 = 40 - 14 = 26\n            const numEcBytesInGroup2 = numTotalBytesInGroup2 - numDataBytesInGroup2;\n            // Sanity checks.\n            // 26 = 26\n            if (numEcBytesInGroup1 !== numEcBytesInGroup2) {\n                throw new WriterException('EC bytes mismatch');\n            }\n            // 5 = 4 + 1.\n            if (numRSBlocks !== numRsBlocksInGroup1 + numRsBlocksInGroup2) {\n                throw new WriterException('RS blocks mismatch');\n            }\n            // 196 = (13 + 26) * 4 + (14 + 26) * 1\n            if (numTotalBytes !==\n                ((numDataBytesInGroup1 + numEcBytesInGroup1) *\n                    numRsBlocksInGroup1) +\n                    ((numDataBytesInGroup2 + numEcBytesInGroup2) *\n                        numRsBlocksInGroup2)) {\n                throw new WriterException('Total bytes mismatch');\n            }\n            if (blockID < numRsBlocksInGroup1) {\n                numDataBytesInBlock[0] = numDataBytesInGroup1;\n                numECBytesInBlock[0] = numEcBytesInGroup1;\n            }\n            else {\n                numDataBytesInBlock[0] = numDataBytesInGroup2;\n                numECBytesInBlock[0] = numEcBytesInGroup2;\n            }\n        }\n        /**\n         * Interleave \"bits\" with corresponding error correction bytes. On success, store the result in\n         * \"result\". The interleave rule is complicated. See 8.6 of JISX0510:2004 (p.37) for details.\n         */\n        static interleaveWithECBytes(bits, numTotalBytes /*int*/, numDataBytes /*int*/, numRSBlocks /*int*/) {\n            // \"bits\" must have \"getNumDataBytes\" bytes of data.\n            if (bits.getSizeInBytes() !== numDataBytes) {\n                throw new WriterException('Number of bits and data bytes does not match');\n            }\n            // Step 1.  Divide data bytes into blocks and generate error correction bytes for them. We'll\n            // store the divided data bytes blocks and error correction bytes blocks into \"blocks\".\n            let dataBytesOffset = 0;\n            let maxNumDataBytes = 0;\n            let maxNumEcBytes = 0;\n            // Since, we know the number of reedsolmon blocks, we can initialize the vector with the number.\n            const blocks = new Array(); // new Array<BlockPair>(numRSBlocks)\n            for (let i = 0; i < numRSBlocks; ++i) {\n                const numDataBytesInBlock = new Int32Array(1);\n                const numEcBytesInBlock = new Int32Array(1);\n                Encoder.getNumDataBytesAndNumECBytesForBlockID(numTotalBytes, numDataBytes, numRSBlocks, i, numDataBytesInBlock, numEcBytesInBlock);\n                const size = numDataBytesInBlock[0];\n                const dataBytes = new Uint8Array(size);\n                bits.toBytes(8 * dataBytesOffset, dataBytes, 0, size);\n                const ecBytes = Encoder.generateECBytes(dataBytes, numEcBytesInBlock[0]);\n                blocks.push(new BlockPair(dataBytes, ecBytes));\n                maxNumDataBytes = Math.max(maxNumDataBytes, size);\n                maxNumEcBytes = Math.max(maxNumEcBytes, ecBytes.length);\n                dataBytesOffset += numDataBytesInBlock[0];\n            }\n            if (numDataBytes !== dataBytesOffset) {\n                throw new WriterException('Data bytes does not match offset');\n            }\n            const result = new BitArray();\n            // First, place data blocks.\n            for (let i = 0; i < maxNumDataBytes; ++i) {\n                for (const block of blocks) {\n                    const dataBytes = block.getDataBytes();\n                    if (i < dataBytes.length) {\n                        result.appendBits(dataBytes[i], 8);\n                    }\n                }\n            }\n            // Then, place error correction blocks.\n            for (let i = 0; i < maxNumEcBytes; ++i) {\n                for (const block of blocks) {\n                    const ecBytes = block.getErrorCorrectionBytes();\n                    if (i < ecBytes.length) {\n                        result.appendBits(ecBytes[i], 8);\n                    }\n                }\n            }\n            if (numTotalBytes !== result.getSizeInBytes()) { // Should be same.\n                throw new WriterException('Interleaving error: ' + numTotalBytes + ' and ' +\n                    result.getSizeInBytes() + ' differ.');\n            }\n            return result;\n        }\n        static generateECBytes(dataBytes, numEcBytesInBlock /*int*/) {\n            const numDataBytes = dataBytes.length;\n            const toEncode = new Int32Array(numDataBytes + numEcBytesInBlock); // int[numDataBytes + numEcBytesInBlock]\n            for (let i = 0; i < numDataBytes; i++) {\n                toEncode[i] = dataBytes[i] & 0xFF;\n            }\n            new ReedSolomonEncoder(GenericGF.QR_CODE_FIELD_256).encode(toEncode, numEcBytesInBlock);\n            const ecBytes = new Uint8Array(numEcBytesInBlock);\n            for (let i = 0; i < numEcBytesInBlock; i++) {\n                ecBytes[i] = /*(byte) */ toEncode[numDataBytes + i];\n            }\n            return ecBytes;\n        }\n        /**\n         * Append mode info. On success, store the result in \"bits\".\n         */\n        static appendModeInfo(mode, bits) {\n            bits.appendBits(mode.getBits(), 4);\n        }\n        /**\n         * Append length info. On success, store the result in \"bits\".\n         */\n        static appendLengthInfo(numLetters /*int*/, version, mode, bits) {\n            const numBits = mode.getCharacterCountBits(version);\n            if (numLetters >= (1 << numBits)) {\n                throw new WriterException(numLetters + ' is bigger than ' + ((1 << numBits) - 1));\n            }\n            bits.appendBits(numLetters, numBits);\n        }\n        /**\n         * Append \"bytes\" in \"mode\" mode (encoding) into \"bits\". On success, store the result in \"bits\".\n         */\n        static appendBytes(content, mode, bits, encoding) {\n            switch (mode) {\n                case Mode$1.NUMERIC:\n                    Encoder.appendNumericBytes(content, bits);\n                    break;\n                case Mode$1.ALPHANUMERIC:\n                    Encoder.appendAlphanumericBytes(content, bits);\n                    break;\n                case Mode$1.BYTE:\n                    Encoder.append8BitBytes(content, bits, encoding);\n                    break;\n                case Mode$1.KANJI:\n                    Encoder.appendKanjiBytes(content, bits);\n                    break;\n                default:\n                    throw new WriterException('Invalid mode: ' + mode);\n            }\n        }\n        static getDigit(singleCharacter) {\n            return singleCharacter.charCodeAt(0) - 48;\n        }\n        static isDigit(singleCharacter) {\n            const cn = Encoder.getDigit(singleCharacter);\n            return cn >= 0 && cn <= 9;\n        }\n        static appendNumericBytes(content, bits) {\n            const length = content.length;\n            let i = 0;\n            while (i < length) {\n                const num1 = Encoder.getDigit(content.charAt(i));\n                if (i + 2 < length) {\n                    // Encode three numeric letters in ten bits.\n                    const num2 = Encoder.getDigit(content.charAt(i + 1));\n                    const num3 = Encoder.getDigit(content.charAt(i + 2));\n                    bits.appendBits(num1 * 100 + num2 * 10 + num3, 10);\n                    i += 3;\n                }\n                else if (i + 1 < length) {\n                    // Encode two numeric letters in seven bits.\n                    const num2 = Encoder.getDigit(content.charAt(i + 1));\n                    bits.appendBits(num1 * 10 + num2, 7);\n                    i += 2;\n                }\n                else {\n                    // Encode one numeric letter in four bits.\n                    bits.appendBits(num1, 4);\n                    i++;\n                }\n            }\n        }\n        static appendAlphanumericBytes(content, bits) {\n            const length = content.length;\n            let i = 0;\n            while (i < length) {\n                const code1 = Encoder.getAlphanumericCode(content.charCodeAt(i));\n                if (code1 === -1) {\n                    throw new WriterException();\n                }\n                if (i + 1 < length) {\n                    const code2 = Encoder.getAlphanumericCode(content.charCodeAt(i + 1));\n                    if (code2 === -1) {\n                        throw new WriterException();\n                    }\n                    // Encode two alphanumeric letters in 11 bits.\n                    bits.appendBits(code1 * 45 + code2, 11);\n                    i += 2;\n                }\n                else {\n                    // Encode one alphanumeric letter in six bits.\n                    bits.appendBits(code1, 6);\n                    i++;\n                }\n            }\n        }\n        static append8BitBytes(content, bits, encoding) {\n            let bytes;\n            try {\n                bytes = StringEncoding.encode(content, encoding);\n            }\n            catch (uee /*: UnsupportedEncodingException*/) {\n                throw new WriterException(uee);\n            }\n            for (let i = 0, length = bytes.length; i !== length; i++) {\n                const b = bytes[i];\n                bits.appendBits(b, 8);\n            }\n        }\n        /**\n         * @throws WriterException\n         */\n        static appendKanjiBytes(content, bits) {\n            let bytes;\n            try {\n                bytes = StringEncoding.encode(content, CharacterSetECI.SJIS);\n            }\n            catch (uee /*: UnsupportedEncodingException*/) {\n                throw new WriterException(uee);\n            }\n            const length = bytes.length;\n            for (let i = 0; i < length; i += 2) {\n                const byte1 = bytes[i] & 0xFF;\n                const byte2 = bytes[i + 1] & 0xFF;\n                const code = ((byte1 << 8) & 0xFFFFFFFF) | byte2;\n                let subtracted = -1;\n                if (code >= 0x8140 && code <= 0x9ffc) {\n                    subtracted = code - 0x8140;\n                }\n                else if (code >= 0xe040 && code <= 0xebbf) {\n                    subtracted = code - 0xc140;\n                }\n                if (subtracted === -1) {\n                    throw new WriterException('Invalid byte sequence');\n                }\n                const encoded = ((subtracted >> 8) * 0xc0) + (subtracted & 0xff);\n                bits.appendBits(encoded, 13);\n            }\n        }\n        static appendECI(eci, bits) {\n            bits.appendBits(Mode$1.ECI.getBits(), 4);\n            // This is correct for values up to 127, which is all we need now.\n            bits.appendBits(eci.getValue(), 8);\n        }\n    }\n    // The original table is defined in the table 5 of JISX0510:2004 (p.19).\n    Encoder.ALPHANUMERIC_TABLE = Int32Array.from([\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43,\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1,\n        -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n        25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1,\n    ]);\n    Encoder.DEFAULT_BYTE_MODE_ENCODING = CharacterSetECI.UTF8.getName(); // \"ISO-8859-1\"\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     */\n    class BrowserQRCodeSvgWriter {\n        /**\n         * Writes and renders a QRCode SVG element.\n         *\n         * @param contents\n         * @param width\n         * @param height\n         * @param hints\n         */\n        write(contents, width, height, hints = null) {\n            if (contents.length === 0) {\n                throw new IllegalArgumentException('Found empty contents');\n            }\n            // if (format != BarcodeFormat.QR_CODE) {\n            //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\n            // }\n            if (width < 0 || height < 0) {\n                throw new IllegalArgumentException('Requested dimensions are too small: ' + width + 'x' + height);\n            }\n            let errorCorrectionLevel = ErrorCorrectionLevel.L;\n            let quietZone = BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;\n            if (hints !== null) {\n                if (undefined !== hints.get(EncodeHintType$1.ERROR_CORRECTION)) {\n                    errorCorrectionLevel = ErrorCorrectionLevel.fromString(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());\n                }\n                if (undefined !== hints.get(EncodeHintType$1.MARGIN)) {\n                    quietZone = Number.parseInt(hints.get(EncodeHintType$1.MARGIN).toString(), 10);\n                }\n            }\n            const code = Encoder.encode(contents, errorCorrectionLevel, hints);\n            return this.renderResult(code, width, height, quietZone);\n        }\n        /**\n         * Renders the result and then appends it to the DOM.\n         */\n        writeToDom(containerElement, contents, width, height, hints = null) {\n            if (typeof containerElement === 'string') {\n                containerElement = document.querySelector(containerElement);\n            }\n            const svgElement = this.write(contents, width, height, hints);\n            if (containerElement)\n                containerElement.appendChild(svgElement);\n        }\n        /**\n         * Note that the input matrix uses 0 == white, 1 == black.\n         * The output matrix uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n         */\n        renderResult(code, width /*int*/, height /*int*/, quietZone /*int*/) {\n            const input = code.getMatrix();\n            if (input === null) {\n                throw new IllegalStateException();\n            }\n            const inputWidth = input.getWidth();\n            const inputHeight = input.getHeight();\n            const qrWidth = inputWidth + (quietZone * 2);\n            const qrHeight = inputHeight + (quietZone * 2);\n            const outputWidth = Math.max(width, qrWidth);\n            const outputHeight = Math.max(height, qrHeight);\n            const multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n            // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n            // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n            // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n            // handle all the padding from 100x100 (the actual QR) up to 200x160.\n            const leftPadding = Math.floor((outputWidth - (inputWidth * multiple)) / 2);\n            const topPadding = Math.floor((outputHeight - (inputHeight * multiple)) / 2);\n            const svgElement = this.createSVGElement(outputWidth, outputHeight);\n            for (let inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n                // Write the contents of this row of the barcode\n                for (let inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                    if (input.get(inputX, inputY) === 1) {\n                        const svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\n                        svgElement.appendChild(svgRectElement);\n                    }\n                }\n            }\n            return svgElement;\n        }\n        /**\n         * Creates a SVG element.\n         *\n         * @param w SVG's width attribute\n         * @param h SVG's height attribute\n         */\n        createSVGElement(w, h) {\n            const svgElement = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'svg');\n            svgElement.setAttributeNS(null, 'height', w.toString());\n            svgElement.setAttributeNS(null, 'width', h.toString());\n            return svgElement;\n        }\n        /**\n         * Creates a SVG rect element.\n         *\n         * @param x Element's x coordinate\n         * @param y Element's y coordinate\n         * @param w Element's width attribute\n         * @param h Element's height attribute\n         */\n        createSvgRectElement(x, y, w, h) {\n            const rect = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'rect');\n            rect.setAttributeNS(null, 'x', x.toString());\n            rect.setAttributeNS(null, 'y', y.toString());\n            rect.setAttributeNS(null, 'height', w.toString());\n            rect.setAttributeNS(null, 'width', h.toString());\n            rect.setAttributeNS(null, 'fill', '#000000');\n            return rect;\n        }\n    }\n    BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE = 4;\n    /**\n     * SVG markup NameSpace\n     */\n    BrowserQRCodeSvgWriter.SVG_NS = 'http://www.w3.org/2000/svg';\n\n    /*import java.util.Map;*/\n    /**\n     * This object renders a QR Code as a BitMatrix 2D array of greyscale values.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class QRCodeWriter {\n        /*@Override*/\n        // public encode(contents: string, format: BarcodeFormat, width: number /*int*/, height: number /*int*/): BitMatrix\n        //     /*throws WriterException */ {\n        //   return encode(contents, format, width, height, null)\n        // }\n        /*@Override*/\n        encode(contents, format, width /*int*/, height /*int*/, hints) {\n            if (contents.length === 0) {\n                throw new IllegalArgumentException('Found empty contents');\n            }\n            if (format !== BarcodeFormat$1.QR_CODE) {\n                throw new IllegalArgumentException('Can only encode QR_CODE, but got ' + format);\n            }\n            if (width < 0 || height < 0) {\n                throw new IllegalArgumentException(`Requested dimensions are too small: ${width}x${height}`);\n            }\n            let errorCorrectionLevel = ErrorCorrectionLevel.L;\n            let quietZone = QRCodeWriter.QUIET_ZONE_SIZE;\n            if (hints !== null) {\n                if (undefined !== hints.get(EncodeHintType$1.ERROR_CORRECTION)) {\n                    errorCorrectionLevel = ErrorCorrectionLevel.fromString(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());\n                }\n                if (undefined !== hints.get(EncodeHintType$1.MARGIN)) {\n                    quietZone = Number.parseInt(hints.get(EncodeHintType$1.MARGIN).toString(), 10);\n                }\n            }\n            const code = Encoder.encode(contents, errorCorrectionLevel, hints);\n            return QRCodeWriter.renderResult(code, width, height, quietZone);\n        }\n        // Note that the input matrix uses 0 == white, 1 == black, while the output matrix uses\n        // 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n        static renderResult(code, width /*int*/, height /*int*/, quietZone /*int*/) {\n            const input = code.getMatrix();\n            if (input === null) {\n                throw new IllegalStateException();\n            }\n            const inputWidth = input.getWidth();\n            const inputHeight = input.getHeight();\n            const qrWidth = inputWidth + (quietZone * 2);\n            const qrHeight = inputHeight + (quietZone * 2);\n            const outputWidth = Math.max(width, qrWidth);\n            const outputHeight = Math.max(height, qrHeight);\n            const multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n            // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n            // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n            // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n            // handle all the padding from 100x100 (the actual QR) up to 200x160.\n            const leftPadding = Math.floor((outputWidth - (inputWidth * multiple)) / 2);\n            const topPadding = Math.floor((outputHeight - (inputHeight * multiple)) / 2);\n            const output = new BitMatrix(outputWidth, outputHeight);\n            for (let inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n                // Write the contents of this row of the barcode\n                for (let inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                    if (input.get(inputX, inputY) === 1) {\n                        output.setRegion(outputX, outputY, multiple, multiple);\n                    }\n                }\n            }\n            return output;\n        }\n    }\n    QRCodeWriter.QUIET_ZONE_SIZE = 4;\n\n    /*import java.util.Map;*/\n    /**\n     * This is a factory class which finds the appropriate Writer subclass for the BarcodeFormat\n     * requested and encodes the barcode with the supplied contents.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class MultiFormatWriter {\n        /*@Override*/\n        // public encode(contents: string,\n        //                         format: BarcodeFormat,\n        //                         width: number /*int*/,\n        //                         height: number /*int*/): BitMatrix /*throws WriterException */ {\n        //   return encode(contents, format, width, height, null)\n        // }\n        /*@Override*/\n        encode(contents, format, width /*int*/, height /*int*/, hints) {\n            let writer;\n            switch (format) {\n                // case BarcodeFormat.EAN_8:\n                //   writer = new EAN8Writer()\n                //   break\n                // case BarcodeFormat.UPC_E:\n                //   writer = new UPCEWriter()\n                //   break\n                // case BarcodeFormat.EAN_13:\n                //   writer = new EAN13Writer()\n                //   break\n                // case BarcodeFormat.UPC_A:\n                //   writer = new UPCAWriter()\n                //   break\n                case BarcodeFormat$1.QR_CODE:\n                    writer = new QRCodeWriter();\n                    break;\n                // case BarcodeFormat.CODE_39:\n                //   writer = new Code39Writer()\n                //   break\n                // case BarcodeFormat.CODE_93:\n                //   writer = new Code93Writer()\n                //   break\n                // case BarcodeFormat.CODE_128:\n                //   writer = new Code128Writer()\n                //   break\n                // case BarcodeFormat.ITF:\n                //   writer = new ITFWriter()\n                //   break\n                // case BarcodeFormat.PDF_417:\n                //   writer = new PDF417Writer()\n                //   break\n                // case BarcodeFormat.CODABAR:\n                //   writer = new CodaBarWriter()\n                //   break\n                // case BarcodeFormat.DATA_MATRIX:\n                //   writer = new DataMatrixWriter()\n                //   break\n                // case BarcodeFormat.AZTEC:\n                //   writer = new AztecWriter()\n                //   break\n                default:\n                    throw new IllegalArgumentException('No encoder available for format ' + format);\n            }\n            return writer.encode(contents, format, width, height, hints);\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This object extends LuminanceSource around an array of YUV data returned from the camera driver,\n     * with the option to crop to a rectangle within the full data. This can be used to exclude\n     * superfluous pixels around the perimeter and speed up decoding.\n     *\n     * It works for any pixel format where the Y channel is planar and appears first, including\n     * YCbCr_420_SP and YCbCr_422_SP.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class PlanarYUVLuminanceSource extends LuminanceSource {\n        constructor(yuvData, dataWidth /*int*/, dataHeight /*int*/, left /*int*/, top /*int*/, width /*int*/, height /*int*/, reverseHorizontal) {\n            super(width, height);\n            this.yuvData = yuvData;\n            this.dataWidth = dataWidth;\n            this.dataHeight = dataHeight;\n            this.left = left;\n            this.top = top;\n            if (left + width > dataWidth || top + height > dataHeight) {\n                throw new IllegalArgumentException('Crop rectangle does not fit within image data.');\n            }\n            if (reverseHorizontal) {\n                this.reverseHorizontal(width, height);\n            }\n        }\n        /*@Override*/\n        getRow(y /*int*/, row) {\n            if (y < 0 || y >= this.getHeight()) {\n                throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n            }\n            const width = this.getWidth();\n            if (row === null || row === undefined || row.length < width) {\n                row = new Uint8ClampedArray(width);\n            }\n            const offset = (y + this.top) * this.dataWidth + this.left;\n            System.arraycopy(this.yuvData, offset, row, 0, width);\n            return row;\n        }\n        /*@Override*/\n        getMatrix() {\n            const width = this.getWidth();\n            const height = this.getHeight();\n            // If the caller asks for the entire underlying image, save the copy and give them the\n            // original data. The docs specifically warn that result.length must be ignored.\n            if (width === this.dataWidth && height === this.dataHeight) {\n                return this.yuvData;\n            }\n            const area = width * height;\n            const matrix = new Uint8ClampedArray(area);\n            let inputOffset = this.top * this.dataWidth + this.left;\n            // If the width matches the full width of the underlying data, perform a single copy.\n            if (width === this.dataWidth) {\n                System.arraycopy(this.yuvData, inputOffset, matrix, 0, area);\n                return matrix;\n            }\n            // Otherwise copy one cropped row at a time.\n            for (let y = 0; y < height; y++) {\n                const outputOffset = y * width;\n                System.arraycopy(this.yuvData, inputOffset, matrix, outputOffset, width);\n                inputOffset += this.dataWidth;\n            }\n            return matrix;\n        }\n        /*@Override*/\n        isCropSupported() {\n            return true;\n        }\n        /*@Override*/\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            return new PlanarYUVLuminanceSource(this.yuvData, this.dataWidth, this.dataHeight, this.left + left, this.top + top, width, height, false);\n        }\n        renderThumbnail() {\n            const width = this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n            const height = this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n            const pixels = new Int32Array(width * height);\n            const yuv = this.yuvData;\n            let inputOffset = this.top * this.dataWidth + this.left;\n            for (let y = 0; y < height; y++) {\n                const outputOffset = y * width;\n                for (let x = 0; x < width; x++) {\n                    const grey = yuv[inputOffset + x * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR] & 0xff;\n                    pixels[outputOffset + x] = 0xFF000000 | (grey * 0x00010101);\n                }\n                inputOffset += this.dataWidth * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n            }\n            return pixels;\n        }\n        /**\n         * @return width of image from {@link #renderThumbnail()}\n         */\n        getThumbnailWidth() {\n            return this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n        }\n        /**\n         * @return height of image from {@link #renderThumbnail()}\n         */\n        getThumbnailHeight() {\n            return this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n        }\n        reverseHorizontal(width /*int*/, height /*int*/) {\n            const yuvData = this.yuvData;\n            for (let y = 0, rowStart = this.top * this.dataWidth + this.left; y < height; y++, rowStart += this.dataWidth) {\n                const middle = rowStart + width / 2;\n                for (let x1 = rowStart, x2 = rowStart + width - 1; x1 < middle; x1++, x2--) {\n                    const temp = yuvData[x1];\n                    yuvData[x1] = yuvData[x2];\n                    yuvData[x2] = temp;\n                }\n            }\n        }\n        invert() {\n            return new InvertedLuminanceSource(this);\n        }\n    }\n    PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR = 2;\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This class is used to help decode images from files which arrive as RGB data from\n     * an ARGB pixel array. It does not support rotation.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Betaminos\n     */\n    class RGBLuminanceSource extends LuminanceSource {\n        constructor(luminances, width /*int*/, height /*int*/, dataWidth /*int*/, dataHeight /*int*/, left /*int*/, top /*int*/) {\n            super(width, height);\n            this.dataWidth = dataWidth;\n            this.dataHeight = dataHeight;\n            this.left = left;\n            this.top = top;\n            if (luminances.BYTES_PER_ELEMENT === 4) { // Int32Array\n                const size = width * height;\n                const luminancesUint8Array = new Uint8ClampedArray(size);\n                for (let offset = 0; offset < size; offset++) {\n                    const pixel = luminances[offset];\n                    const r = (pixel >> 16) & 0xff; // red\n                    const g2 = (pixel >> 7) & 0x1fe; // 2 * green\n                    const b = pixel & 0xff; // blue\n                    // Calculate green-favouring average cheaply\n                    luminancesUint8Array[offset] = /*(byte) */ ((r + g2 + b) / 4) & 0xFF;\n                }\n                this.luminances = luminancesUint8Array;\n            }\n            else {\n                this.luminances = luminances;\n            }\n            if (undefined === dataWidth) {\n                this.dataWidth = width;\n            }\n            if (undefined === dataHeight) {\n                this.dataHeight = height;\n            }\n            if (undefined === left) {\n                this.left = 0;\n            }\n            if (undefined === top) {\n                this.top = 0;\n            }\n            if (this.left + width > this.dataWidth || this.top + height > this.dataHeight) {\n                throw new IllegalArgumentException('Crop rectangle does not fit within image data.');\n            }\n        }\n        /*@Override*/\n        getRow(y /*int*/, row) {\n            if (y < 0 || y >= this.getHeight()) {\n                throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n            }\n            const width = this.getWidth();\n            if (row === null || row === undefined || row.length < width) {\n                row = new Uint8ClampedArray(width);\n            }\n            const offset = (y + this.top) * this.dataWidth + this.left;\n            System.arraycopy(this.luminances, offset, row, 0, width);\n            return row;\n        }\n        /*@Override*/\n        getMatrix() {\n            const width = this.getWidth();\n            const height = this.getHeight();\n            // If the caller asks for the entire underlying image, save the copy and give them the\n            // original data. The docs specifically warn that result.length must be ignored.\n            if (width === this.dataWidth && height === this.dataHeight) {\n                return this.luminances;\n            }\n            const area = width * height;\n            const matrix = new Uint8ClampedArray(area);\n            let inputOffset = this.top * this.dataWidth + this.left;\n            // If the width matches the full width of the underlying data, perform a single copy.\n            if (width === this.dataWidth) {\n                System.arraycopy(this.luminances, inputOffset, matrix, 0, area);\n                return matrix;\n            }\n            // Otherwise copy one cropped row at a time.\n            for (let y = 0; y < height; y++) {\n                const outputOffset = y * width;\n                System.arraycopy(this.luminances, inputOffset, matrix, outputOffset, width);\n                inputOffset += this.dataWidth;\n            }\n            return matrix;\n        }\n        /*@Override*/\n        isCropSupported() {\n            return true;\n        }\n        /*@Override*/\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            return new RGBLuminanceSource(this.luminances, width, height, this.dataWidth, this.dataHeight, this.left + left, this.top + top);\n        }\n        invert() {\n            return new InvertedLuminanceSource(this);\n        }\n    }\n\n    /**\n     * Just to make a shortcut between Java code and TS code.\n     */\n    class Charset extends CharacterSetECI {\n        static forName(name) {\n            return this.getCharacterSetECIByName(name);\n        }\n    }\n\n    /**\n     * Just to make a shortcut between Java code and TS code.\n     */\n    class StandardCharsets {\n    }\n    StandardCharsets.ISO_8859_1 = CharacterSetECI.ISO8859_1;\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * Aztec 2D code representation\n     *\n     * @author Rustam Abdullaev\n     */\n    /*public final*/ class AztecCode {\n        /**\n         * @return {@code true} if compact instead of full mode\n         */\n        isCompact() {\n            return this.compact;\n        }\n        setCompact(compact) {\n            this.compact = compact;\n        }\n        /**\n         * @return size in pixels (width and height)\n         */\n        getSize() {\n            return this.size;\n        }\n        setSize(size) {\n            this.size = size;\n        }\n        /**\n         * @return number of levels\n         */\n        getLayers() {\n            return this.layers;\n        }\n        setLayers(layers) {\n            this.layers = layers;\n        }\n        /**\n         * @return number of data codewords\n         */\n        getCodeWords() {\n            return this.codeWords;\n        }\n        setCodeWords(codeWords) {\n            this.codeWords = codeWords;\n        }\n        /**\n         * @return the symbol image\n         */\n        getMatrix() {\n            return this.matrix;\n        }\n        setMatrix(matrix) {\n            this.matrix = matrix;\n        }\n    }\n\n    class Collections {\n        /**\n         * The singletonList(T) method is used to return an immutable list containing only the specified object.\n         */\n        static singletonList(item) {\n            return [item];\n        }\n        /**\n         * The min(Collection<? extends T>, Comparator<? super T>) method is used to return the minimum element of the given collection, according to the order induced by the specified comparator.\n         */\n        static min(collection, comparator) {\n            return collection.sort(comparator)[0];\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    class Token {\n        constructor(previous) {\n            this.previous = previous;\n        }\n        getPrevious() {\n            return this.previous;\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /*final*/ class SimpleToken extends Token {\n        constructor(previous, value, bitCount) {\n            super(previous);\n            this.value = value;\n            this.bitCount = bitCount;\n        }\n        /**\n         * @Override\n         */\n        appendTo(bitArray, text) {\n            bitArray.appendBits(this.value, this.bitCount);\n        }\n        add(value, bitCount) {\n            return new SimpleToken(this, value, bitCount);\n        }\n        addBinaryShift(start, byteCount) {\n            // no-op can't binary shift a simple token\n            console.warn('addBinaryShift on SimpleToken, this simply returns a copy of this token');\n            return new SimpleToken(this, start, byteCount);\n        }\n        /**\n         * @Override\n         */\n        toString() {\n            let value = this.value & ((1 << this.bitCount) - 1);\n            value |= 1 << this.bitCount;\n            return '<' + Integer.toBinaryString(value | (1 << this.bitCount)).substring(1) + '>';\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /*final*/ class BinaryShiftToken extends SimpleToken {\n        constructor(previous, binaryShiftStart, binaryShiftByteCount) {\n            super(previous, 0, 0);\n            this.binaryShiftStart = binaryShiftStart;\n            this.binaryShiftByteCount = binaryShiftByteCount;\n        }\n        /**\n         * @Override\n         */\n        appendTo(bitArray, text) {\n            for (let i = 0; i < this.binaryShiftByteCount; i++) {\n                if (i === 0 || (i === 31 && this.binaryShiftByteCount <= 62)) {\n                    // We need a header before the first character, and before\n                    // character 31 when the total byte code is <= 62\n                    bitArray.appendBits(31, 5); // BINARY_SHIFT\n                    if (this.binaryShiftByteCount > 62) {\n                        bitArray.appendBits(this.binaryShiftByteCount - 31, 16);\n                    }\n                    else if (i === 0) {\n                        // 1 <= binaryShiftByteCode <= 62\n                        bitArray.appendBits(Math.min(this.binaryShiftByteCount, 31), 5);\n                    }\n                    else {\n                        // 32 <= binaryShiftCount <= 62 and i == 31\n                        bitArray.appendBits(this.binaryShiftByteCount - 31, 5);\n                    }\n                }\n                bitArray.appendBits(text[this.binaryShiftStart + i], 8);\n            }\n        }\n        addBinaryShift(start, byteCount) {\n            // int bitCount = (byteCount * 8) + (byteCount <= 31 ? 10 : byteCount <= 62 ? 20 : 21);\n            return new BinaryShiftToken(this, start, byteCount);\n        }\n        /**\n         * @Override\n         */\n        toString() {\n            return '<' + this.binaryShiftStart + '::' + (this.binaryShiftStart + this.binaryShiftByteCount - 1) + '>';\n        }\n    }\n\n    function addBinaryShift(token, start, byteCount) {\n        // int bitCount = (byteCount * 8) + (byteCount <= 31 ? 10 : byteCount <= 62 ? 20 : 21);\n        return new BinaryShiftToken(token, start, byteCount);\n    }\n    function add(token, value, bitCount) {\n        return new SimpleToken(token, value, bitCount);\n    }\n\n    const /*final*/ MODE_NAMES = [\n        'UPPER',\n        'LOWER',\n        'DIGIT',\n        'MIXED',\n        'PUNCT'\n    ];\n    const /*final*/ MODE_UPPER = 0; // 5 bits\n    const /*final*/ MODE_LOWER = 1; // 5 bits\n    const /*final*/ MODE_DIGIT = 2; // 4 bits\n    const /*final*/ MODE_MIXED = 3; // 5 bits\n    const /*final*/ MODE_PUNCT = 4; // 5 bits\n    const EMPTY_TOKEN = new SimpleToken(null, 0, 0);\n\n    // The Latch Table shows, for each pair of Modes, the optimal method for\n    // getting from one mode to another.  In the worst possible case, this can\n    // be up to 14 bits.  In the best possible case, we are already there!\n    // The high half-word of each entry gives the number of bits.\n    // The low half-word of each entry are the actual bits necessary to change\n    const LATCH_TABLE = [\n        Int32Array.from([\n            0,\n            (5 << 16) + 28,\n            (5 << 16) + 30,\n            (5 << 16) + 29,\n            (10 << 16) + (29 << 5) + 30 // UPPER -> MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (9 << 16) + (30 << 4) + 14,\n            0,\n            (5 << 16) + 30,\n            (5 << 16) + 29,\n            (10 << 16) + (29 << 5) + 30 // LOWER -> MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (4 << 16) + 14,\n            (9 << 16) + (14 << 5) + 28,\n            0,\n            (9 << 16) + (14 << 5) + 29,\n            (14 << 16) + (14 << 10) + (29 << 5) + 30\n            // DIGIT -> UPPER -> MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (5 << 16) + 29,\n            (5 << 16) + 28,\n            (10 << 16) + (29 << 5) + 30,\n            0,\n            (5 << 16) + 30 // MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (5 << 16) + 31,\n            (10 << 16) + (31 << 5) + 28,\n            (10 << 16) + (31 << 5) + 30,\n            (10 << 16) + (31 << 5) + 29,\n            0\n        ])\n    ];\n\n    function static_SHIFT_TABLE(SHIFT_TABLE) {\n        for (let table /*Int32Array*/ of SHIFT_TABLE) {\n            Arrays.fill(table, -1);\n        }\n        SHIFT_TABLE[MODE_UPPER][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_LOWER][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_LOWER][MODE_UPPER] = 28;\n        SHIFT_TABLE[MODE_MIXED][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_DIGIT][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_DIGIT][MODE_UPPER] = 15;\n        return SHIFT_TABLE;\n    }\n    const /*final*/ SHIFT_TABLE = static_SHIFT_TABLE(Arrays.createInt32Array(6, 6)); // mode shift codes, per table\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * State represents all information about a sequence necessary to generate the current output.\n     * Note that a state is immutable.\n     */\n    /*final*/ class State {\n        constructor(token, mode, binaryBytes, bitCount) {\n            this.token = token;\n            this.mode = mode;\n            this.binaryShiftByteCount = binaryBytes;\n            this.bitCount = bitCount;\n            // Make sure we match the token\n            // int binaryShiftBitCount = (binaryShiftByteCount * 8) +\n            //    (binaryShiftByteCount === 0 ? 0 :\n            //     binaryShiftByteCount <= 31 ? 10 :\n            //     binaryShiftByteCount <= 62 ? 20 : 21);\n            // assert this.bitCount === token.getTotalBitCount() + binaryShiftBitCount;\n        }\n        getMode() {\n            return this.mode;\n        }\n        getToken() {\n            return this.token;\n        }\n        getBinaryShiftByteCount() {\n            return this.binaryShiftByteCount;\n        }\n        getBitCount() {\n            return this.bitCount;\n        }\n        // Create a new state representing this state with a latch to a (not\n        // necessary different) mode, and then a code.\n        latchAndAppend(mode, value) {\n            // assert binaryShiftByteCount === 0;\n            let bitCount = this.bitCount;\n            let token = this.token;\n            if (mode !== this.mode) {\n                let latch = LATCH_TABLE[this.mode][mode];\n                token = add(token, latch & 0xffff, latch >> 16);\n                bitCount += latch >> 16;\n            }\n            let latchModeBitCount = mode === MODE_DIGIT ? 4 : 5;\n            token = add(token, value, latchModeBitCount);\n            return new State(token, mode, 0, bitCount + latchModeBitCount);\n        }\n        // Create a new state representing this state, with a temporary shift\n        // to a different mode to output a single value.\n        shiftAndAppend(mode, value) {\n            // assert binaryShiftByteCount === 0 && this.mode !== mode;\n            let token = this.token;\n            let thisModeBitCount = this.mode === MODE_DIGIT ? 4 : 5;\n            // Shifts exist only to UPPER and PUNCT, both with tokens size 5.\n            token = add(token, SHIFT_TABLE[this.mode][mode], thisModeBitCount);\n            token = add(token, value, 5);\n            return new State(token, this.mode, 0, this.bitCount + thisModeBitCount + 5);\n        }\n        // Create a new state representing this state, but an additional character\n        // output in Binary Shift mode.\n        addBinaryShiftChar(index) {\n            let token = this.token;\n            let mode = this.mode;\n            let bitCount = this.bitCount;\n            if (this.mode === MODE_PUNCT || this.mode === MODE_DIGIT) {\n                // assert binaryShiftByteCount === 0;\n                let latch = LATCH_TABLE[mode][MODE_UPPER];\n                token = add(token, latch & 0xffff, latch >> 16);\n                bitCount += latch >> 16;\n                mode = MODE_UPPER;\n            }\n            let deltaBitCount = this.binaryShiftByteCount === 0 || this.binaryShiftByteCount === 31\n                ? 18\n                : this.binaryShiftByteCount === 62\n                    ? 9\n                    : 8;\n            let result = new State(token, mode, this.binaryShiftByteCount + 1, bitCount + deltaBitCount);\n            if (result.binaryShiftByteCount === 2047 + 31) {\n                // The string is as long as it's allowed to be.  We should end it.\n                result = result.endBinaryShift(index + 1);\n            }\n            return result;\n        }\n        // Create the state identical to this one, but we are no longer in\n        // Binary Shift mode.\n        endBinaryShift(index) {\n            if (this.binaryShiftByteCount === 0) {\n                return this;\n            }\n            let token = this.token;\n            token = addBinaryShift(token, index - this.binaryShiftByteCount, this.binaryShiftByteCount);\n            // assert token.getTotalBitCount() === this.bitCount;\n            return new State(token, this.mode, 0, this.bitCount);\n        }\n        // Returns true if \"this\" state is better (equal: or) to be in than \"that\"\n        // state under all possible circumstances.\n        isBetterThanOrEqualTo(other) {\n            let newModeBitCount = this.bitCount + (LATCH_TABLE[this.mode][other.mode] >> 16);\n            if (this.binaryShiftByteCount < other.binaryShiftByteCount) {\n                // add additional B/S encoding cost of other, if any\n                newModeBitCount +=\n                    State.calculateBinaryShiftCost(other) -\n                        State.calculateBinaryShiftCost(this);\n            }\n            else if (this.binaryShiftByteCount > other.binaryShiftByteCount &&\n                other.binaryShiftByteCount > 0) {\n                // maximum possible additional cost (it: h)\n                newModeBitCount += 10;\n            }\n            return newModeBitCount <= other.bitCount;\n        }\n        toBitArray(text) {\n            // Reverse the tokens, so that they are in the order that they should\n            // be output\n            let symbols = [];\n            for (let token = this.endBinaryShift(text.length).token; token !== null; token = token.getPrevious()) {\n                symbols.unshift(token);\n            }\n            let bitArray = new BitArray();\n            // Add each token to the result.\n            for (const symbol of symbols) {\n                symbol.appendTo(bitArray, text);\n            }\n            // assert bitArray.getSize() === this.bitCount;\n            return bitArray;\n        }\n        /**\n         * @Override\n         */\n        toString() {\n            return StringUtils.format('%s bits=%d bytes=%d', MODE_NAMES[this.mode], this.bitCount, this.binaryShiftByteCount);\n        }\n        static calculateBinaryShiftCost(state) {\n            if (state.binaryShiftByteCount > 62) {\n                return 21; // B/S with extended length\n            }\n            if (state.binaryShiftByteCount > 31) {\n                return 20; // two B/S\n            }\n            if (state.binaryShiftByteCount > 0) {\n                return 10; // one B/S\n            }\n            return 0;\n        }\n    }\n    State.INITIAL_STATE = new State(EMPTY_TOKEN, MODE_UPPER, 0, 0);\n\n    function static_CHAR_MAP(CHAR_MAP) {\n        const spaceCharCode = StringUtils.getCharCode(' ');\n        const pointCharCode = StringUtils.getCharCode('.');\n        const commaCharCode = StringUtils.getCharCode(',');\n        CHAR_MAP[MODE_UPPER][spaceCharCode] = 1;\n        const zUpperCharCode = StringUtils.getCharCode('Z');\n        const aUpperCharCode = StringUtils.getCharCode('A');\n        for (let c = aUpperCharCode; c <= zUpperCharCode; c++) {\n            CHAR_MAP[MODE_UPPER][c] = c - aUpperCharCode + 2;\n        }\n        CHAR_MAP[MODE_LOWER][spaceCharCode] = 1;\n        const zLowerCharCode = StringUtils.getCharCode('z');\n        const aLowerCharCode = StringUtils.getCharCode('a');\n        for (let c = aLowerCharCode; c <= zLowerCharCode; c++) {\n            CHAR_MAP[MODE_LOWER][c] = c - aLowerCharCode + 2;\n        }\n        CHAR_MAP[MODE_DIGIT][spaceCharCode] = 1;\n        const nineCharCode = StringUtils.getCharCode('9');\n        const zeroCharCode = StringUtils.getCharCode('0');\n        for (let c = zeroCharCode; c <= nineCharCode; c++) {\n            CHAR_MAP[MODE_DIGIT][c] = c - zeroCharCode + 2;\n        }\n        CHAR_MAP[MODE_DIGIT][commaCharCode] = 12;\n        CHAR_MAP[MODE_DIGIT][pointCharCode] = 13;\n        const mixedTable = [\n            '\\x00',\n            ' ',\n            '\\x01',\n            '\\x02',\n            '\\x03',\n            '\\x04',\n            '\\x05',\n            '\\x06',\n            '\\x07',\n            '\\b',\n            '\\t',\n            '\\n',\n            '\\x0b',\n            '\\f',\n            '\\r',\n            '\\x1b',\n            '\\x1c',\n            '\\x1d',\n            '\\x1e',\n            '\\x1f',\n            '@',\n            '\\\\',\n            '^',\n            '_',\n            '`',\n            '|',\n            '~',\n            '\\x7f'\n        ];\n        for (let i = 0; i < mixedTable.length; i++) {\n            CHAR_MAP[MODE_MIXED][StringUtils.getCharCode(mixedTable[i])] = i;\n        }\n        const punctTable = [\n            '\\x00',\n            '\\r',\n            '\\x00',\n            '\\x00',\n            '\\x00',\n            '\\x00',\n            '!',\n            '\\'',\n            '#',\n            '$',\n            '%',\n            '&',\n            '\\'',\n            '(',\n            ')',\n            '*',\n            '+',\n            ',',\n            '-',\n            '.',\n            '/',\n            ':',\n            ';',\n            '<',\n            '=',\n            '>',\n            '?',\n            '[',\n            ']',\n            '{',\n            '}'\n        ];\n        for (let i = 0; i < punctTable.length; i++) {\n            if (StringUtils.getCharCode(punctTable[i]) > 0) {\n                CHAR_MAP[MODE_PUNCT][StringUtils.getCharCode(punctTable[i])] = i;\n            }\n        }\n        return CHAR_MAP;\n    }\n    const CHAR_MAP = static_CHAR_MAP(Arrays.createInt32Array(5, 256));\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This produces nearly optimal encodings of text into the first-level of\n     * encoding used by Aztec code.\n     *\n     * It uses a dynamic algorithm.  For each prefix of the string, it determines\n     * a set of encodings that could lead to this prefix.  We repeatedly add a\n     * character and generate a new set of optimal encodings until we have read\n     * through the entire input.\n     *\n     * @author Frank Yellin\n     * @author Rustam Abdullaev\n     */\n    /*public final*/ class HighLevelEncoder {\n        constructor(text) {\n            this.text = text;\n        }\n        /**\n         * @return text represented by this encoder encoded as a {@link BitArray}\n         */\n        encode() {\n            const spaceCharCode = StringUtils.getCharCode(' ');\n            const lineBreakCharCode = StringUtils.getCharCode('\\n');\n            let states = Collections.singletonList(State.INITIAL_STATE);\n            for (let index = 0; index < this.text.length; index++) {\n                let pairCode;\n                let nextChar = index + 1 < this.text.length ? this.text[index + 1] : 0;\n                switch (this.text[index]) {\n                    case StringUtils.getCharCode('\\r'):\n                        pairCode = nextChar === lineBreakCharCode ? 2 : 0;\n                        break;\n                    case StringUtils.getCharCode('.'):\n                        pairCode = nextChar === spaceCharCode ? 3 : 0;\n                        break;\n                    case StringUtils.getCharCode(','):\n                        pairCode = nextChar === spaceCharCode ? 4 : 0;\n                        break;\n                    case StringUtils.getCharCode(':'):\n                        pairCode = nextChar === spaceCharCode ? 5 : 0;\n                        break;\n                    default:\n                        pairCode = 0;\n                }\n                if (pairCode > 0) {\n                    // We have one of the four special PUNCT pairs.  Treat them specially.\n                    // Get a new set of states for the two new characters.\n                    states = HighLevelEncoder.updateStateListForPair(states, index, pairCode);\n                    index++;\n                }\n                else {\n                    // Get a new set of states for the new character.\n                    states = this.updateStateListForChar(states, index);\n                }\n            }\n            // We are left with a set of states.  Find the shortest one.\n            const minState = Collections.min(states, (a, b) => {\n                return a.getBitCount() - b.getBitCount();\n            });\n            // Convert it to a bit array, and return.\n            return minState.toBitArray(this.text);\n        }\n        // We update a set of states for a new character by updating each state\n        // for the new character, merging the results, and then removing the\n        // non-optimal states.\n        updateStateListForChar(states, index) {\n            const result = [];\n            for (let state /*State*/ of states) {\n                this.updateStateForChar(state, index, result);\n            }\n            return HighLevelEncoder.simplifyStates(result);\n        }\n        // Return a set of states that represent the possible ways of updating this\n        // state for the next character.  The resulting set of states are added to\n        // the \"result\" list.\n        updateStateForChar(state, index, result) {\n            let ch = (this.text[index] & 0xff);\n            let charInCurrentTable = CHAR_MAP[state.getMode()][ch] > 0;\n            let stateNoBinary = null;\n            for (let mode /*int*/ = 0; mode <= MODE_PUNCT; mode++) {\n                let charInMode = CHAR_MAP[mode][ch];\n                if (charInMode > 0) {\n                    if (stateNoBinary == null) {\n                        // Only create stateNoBinary the first time it's required.\n                        stateNoBinary = state.endBinaryShift(index);\n                    }\n                    // Try generating the character by latching to its mode\n                    if (!charInCurrentTable ||\n                        mode === state.getMode() ||\n                        mode === MODE_DIGIT) {\n                        // If the character is in the current table, we don't want to latch to\n                        // any other mode except possibly digit (which uses only 4 bits).  Any\n                        // other latch would be equally successful *after* this character, and\n                        // so wouldn't save any bits.\n                        const latchState = stateNoBinary.latchAndAppend(mode, charInMode);\n                        result.push(latchState);\n                    }\n                    // Try generating the character by switching to its mode.\n                    if (!charInCurrentTable &&\n                        SHIFT_TABLE[state.getMode()][mode] >= 0) {\n                        // It never makes sense to temporarily shift to another mode if the\n                        // character exists in the current mode.  That can never save bits.\n                        const shiftState = stateNoBinary.shiftAndAppend(mode, charInMode);\n                        result.push(shiftState);\n                    }\n                }\n            }\n            if (state.getBinaryShiftByteCount() > 0 ||\n                CHAR_MAP[state.getMode()][ch] === 0) {\n                // It's never worthwhile to go into binary shift mode if you're not already\n                // in binary shift mode, and the character exists in your current mode.\n                // That can never save bits over just outputting the char in the current mode.\n                let binaryState = state.addBinaryShiftChar(index);\n                result.push(binaryState);\n            }\n        }\n        static updateStateListForPair(states, index, pairCode) {\n            const result = [];\n            for (let state /*State*/ of states) {\n                this.updateStateForPair(state, index, pairCode, result);\n            }\n            return this.simplifyStates(result);\n        }\n        static updateStateForPair(state, index, pairCode, result) {\n            let stateNoBinary = state.endBinaryShift(index);\n            // Possibility 1.  Latch to C.MODE_PUNCT, and then append this code\n            result.push(stateNoBinary.latchAndAppend(MODE_PUNCT, pairCode));\n            if (state.getMode() !== MODE_PUNCT) {\n                // Possibility 2.  Shift to C.MODE_PUNCT, and then append this code.\n                // Every state except C.MODE_PUNCT (handled above) can shift\n                result.push(stateNoBinary.shiftAndAppend(MODE_PUNCT, pairCode));\n            }\n            if (pairCode === 3 || pairCode === 4) {\n                // both characters are in DIGITS.  Sometimes better to just add two digits\n                let digitState = stateNoBinary\n                    .latchAndAppend(MODE_DIGIT, 16 - pairCode) // period or comma in DIGIT\n                    .latchAndAppend(MODE_DIGIT, 1); // space in DIGIT\n                result.push(digitState);\n            }\n            if (state.getBinaryShiftByteCount() > 0) {\n                // It only makes sense to do the characters as binary if we're already\n                // in binary mode.\n                let binaryState = state\n                    .addBinaryShiftChar(index)\n                    .addBinaryShiftChar(index + 1);\n                result.push(binaryState);\n            }\n        }\n        static simplifyStates(states) {\n            let result = [];\n            for (const newState of states) {\n                let add = true;\n                for (const oldState of result) {\n                    if (oldState.isBetterThanOrEqualTo(newState)) {\n                        add = false;\n                        break;\n                    }\n                    if (newState.isBetterThanOrEqualTo(oldState)) {\n                        // iterator.remove();\n                        result = result.filter(x => x !== oldState); // remove old state\n                    }\n                }\n                if (add) {\n                    result.push(newState);\n                }\n            }\n            return result;\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.aztec.encoder;\n    // import com.google.zxing.common.BitArray;\n    // import com.google.zxing.common.BitMatrix;\n    // import com.google.zxing.common.reedsolomon.GenericGF;\n    // import com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n    /**\n     * Generates Aztec 2D barcodes.\n     *\n     * @author Rustam Abdullaev\n     */\n    /*public final*/ class Encoder$1 {\n        constructor() {\n        }\n        /**\n         * Encodes the given binary content as an Aztec symbol\n         *\n         * @param data input data string\n         * @return Aztec symbol matrix with metadata\n         */\n        static encodeBytes(data) {\n            return Encoder$1.encode(data, Encoder$1.DEFAULT_EC_PERCENT, Encoder$1.DEFAULT_AZTEC_LAYERS);\n        }\n        /**\n         * Encodes the given binary content as an Aztec symbol\n         *\n         * @param data input data string\n         * @param minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008,\n         *                      a minimum of 23% + 3 words is recommended)\n         * @param userSpecifiedLayers if non-zero, a user-specified value for the number of layers\n         * @return Aztec symbol matrix with metadata\n         */\n        static encode(data, minECCPercent, userSpecifiedLayers) {\n            // High-level encode\n            let bits = new HighLevelEncoder(data).encode();\n            // stuff bits and choose symbol size\n            let eccBits = Integer.truncDivision((bits.getSize() * minECCPercent), 100) + 11;\n            let totalSizeBits = bits.getSize() + eccBits;\n            let compact;\n            let layers;\n            let totalBitsInLayer;\n            let wordSize;\n            let stuffedBits;\n            if (userSpecifiedLayers !== Encoder$1.DEFAULT_AZTEC_LAYERS) {\n                compact = userSpecifiedLayers < 0;\n                layers = Math.abs(userSpecifiedLayers);\n                if (layers > (compact ? Encoder$1.MAX_NB_BITS_COMPACT : Encoder$1.MAX_NB_BITS)) {\n                    throw new IllegalArgumentException(StringUtils.format('Illegal value %s for layers', userSpecifiedLayers));\n                }\n                totalBitsInLayer = Encoder$1.totalBitsInLayer(layers, compact);\n                wordSize = Encoder$1.WORD_SIZE[layers];\n                let usableBitsInLayers = totalBitsInLayer - (totalBitsInLayer % wordSize);\n                stuffedBits = Encoder$1.stuffBits(bits, wordSize);\n                if (stuffedBits.getSize() + eccBits > usableBitsInLayers) {\n                    throw new IllegalArgumentException('Data to large for user specified layer');\n                }\n                if (compact && stuffedBits.getSize() > wordSize * 64) {\n                    // Compact format only allows 64 data words, though C4 can hold more words than that\n                    throw new IllegalArgumentException('Data to large for user specified layer');\n                }\n            }\n            else {\n                wordSize = 0;\n                stuffedBits = null;\n                // We look at the possible table sizes in the order Compact1, Compact2, Compact3,\n                // Compact4, Normal4,...  Normal(i) for i < 4 isn't typically used since Compact(i+1)\n                // is the same size, but has more data.\n                for (let i /*int*/ = 0;; i++) {\n                    if (i > Encoder$1.MAX_NB_BITS) {\n                        throw new IllegalArgumentException('Data too large for an Aztec code');\n                    }\n                    compact = i <= 3;\n                    layers = compact ? i + 1 : i;\n                    totalBitsInLayer = Encoder$1.totalBitsInLayer(layers, compact);\n                    if (totalSizeBits > totalBitsInLayer) {\n                        continue;\n                    }\n                    // [Re]stuff the bits if this is the first opportunity, or if the\n                    // wordSize has changed\n                    if (stuffedBits == null || wordSize !== Encoder$1.WORD_SIZE[layers]) {\n                        wordSize = Encoder$1.WORD_SIZE[layers];\n                        stuffedBits = Encoder$1.stuffBits(bits, wordSize);\n                    }\n                    let usableBitsInLayers = totalBitsInLayer - (totalBitsInLayer % wordSize);\n                    if (compact && stuffedBits.getSize() > wordSize * 64) {\n                        // Compact format only allows 64 data words, though C4 can hold more words than that\n                        continue;\n                    }\n                    if (stuffedBits.getSize() + eccBits <= usableBitsInLayers) {\n                        break;\n                    }\n                }\n            }\n            let messageBits = Encoder$1.generateCheckWords(stuffedBits, totalBitsInLayer, wordSize);\n            // generate mode message\n            let messageSizeInWords = stuffedBits.getSize() / wordSize;\n            let modeMessage = Encoder$1.generateModeMessage(compact, layers, messageSizeInWords);\n            // allocate symbol\n            let baseMatrixSize = (compact ? 11 : 14) + layers * 4; // not including alignment lines\n            let alignmentMap = new Int32Array(baseMatrixSize);\n            let matrixSize;\n            if (compact) {\n                // no alignment marks in compact mode, alignmentMap is a no-op\n                matrixSize = baseMatrixSize;\n                for (let i /*int*/ = 0; i < alignmentMap.length; i++) {\n                    alignmentMap[i] = i;\n                }\n            }\n            else {\n                matrixSize = baseMatrixSize + 1 + 2 * Integer.truncDivision((Integer.truncDivision(baseMatrixSize, 2) - 1), 15);\n                let origCenter = Integer.truncDivision(baseMatrixSize, 2);\n                let center = Integer.truncDivision(matrixSize, 2);\n                for (let i /*int*/ = 0; i < origCenter; i++) {\n                    let newOffset = i + Integer.truncDivision(i, 15);\n                    alignmentMap[origCenter - i - 1] = center - newOffset - 1;\n                    alignmentMap[origCenter + i] = center + newOffset + 1;\n                }\n            }\n            let matrix = new BitMatrix(matrixSize);\n            // draw data bits\n            for (let i /*int*/ = 0, rowOffset = 0; i < layers; i++) {\n                let rowSize = (layers - i) * 4 + (compact ? 9 : 12);\n                for (let j /*int*/ = 0; j < rowSize; j++) {\n                    let columnOffset = j * 2;\n                    for (let k /*int*/ = 0; k < 2; k++) {\n                        if (messageBits.get(rowOffset + columnOffset + k)) {\n                            matrix.set(alignmentMap[i * 2 + k], alignmentMap[i * 2 + j]);\n                        }\n                        if (messageBits.get(rowOffset + rowSize * 2 + columnOffset + k)) {\n                            matrix.set(alignmentMap[i * 2 + j], alignmentMap[baseMatrixSize - 1 - i * 2 - k]);\n                        }\n                        if (messageBits.get(rowOffset + rowSize * 4 + columnOffset + k)) {\n                            matrix.set(alignmentMap[baseMatrixSize - 1 - i * 2 - k], alignmentMap[baseMatrixSize - 1 - i * 2 - j]);\n                        }\n                        if (messageBits.get(rowOffset + rowSize * 6 + columnOffset + k)) {\n                            matrix.set(alignmentMap[baseMatrixSize - 1 - i * 2 - j], alignmentMap[i * 2 + k]);\n                        }\n                    }\n                }\n                rowOffset += rowSize * 8;\n            }\n            // draw mode message\n            Encoder$1.drawModeMessage(matrix, compact, matrixSize, modeMessage);\n            // draw alignment marks\n            if (compact) {\n                Encoder$1.drawBullsEye(matrix, Integer.truncDivision(matrixSize, 2), 5);\n            }\n            else {\n                Encoder$1.drawBullsEye(matrix, Integer.truncDivision(matrixSize, 2), 7);\n                for (let i /*int*/ = 0, j = 0; i < Integer.truncDivision(baseMatrixSize, 2) - 1; i += 15, j += 16) {\n                    for (let k /*int*/ = Integer.truncDivision(matrixSize, 2) & 1; k < matrixSize; k += 2) {\n                        matrix.set(Integer.truncDivision(matrixSize, 2) - j, k);\n                        matrix.set(Integer.truncDivision(matrixSize, 2) + j, k);\n                        matrix.set(k, Integer.truncDivision(matrixSize, 2) - j);\n                        matrix.set(k, Integer.truncDivision(matrixSize, 2) + j);\n                    }\n                }\n            }\n            let aztec = new AztecCode();\n            aztec.setCompact(compact);\n            aztec.setSize(matrixSize);\n            aztec.setLayers(layers);\n            aztec.setCodeWords(messageSizeInWords);\n            aztec.setMatrix(matrix);\n            return aztec;\n        }\n        static drawBullsEye(matrix, center, size) {\n            for (let i /*int*/ = 0; i < size; i += 2) {\n                for (let j /*int*/ = center - i; j <= center + i; j++) {\n                    matrix.set(j, center - i);\n                    matrix.set(j, center + i);\n                    matrix.set(center - i, j);\n                    matrix.set(center + i, j);\n                }\n            }\n            matrix.set(center - size, center - size);\n            matrix.set(center - size + 1, center - size);\n            matrix.set(center - size, center - size + 1);\n            matrix.set(center + size, center - size);\n            matrix.set(center + size, center - size + 1);\n            matrix.set(center + size, center + size - 1);\n        }\n        static generateModeMessage(compact, layers, messageSizeInWords) {\n            let modeMessage = new BitArray();\n            if (compact) {\n                modeMessage.appendBits(layers - 1, 2);\n                modeMessage.appendBits(messageSizeInWords - 1, 6);\n                modeMessage = Encoder$1.generateCheckWords(modeMessage, 28, 4);\n            }\n            else {\n                modeMessage.appendBits(layers - 1, 5);\n                modeMessage.appendBits(messageSizeInWords - 1, 11);\n                modeMessage = Encoder$1.generateCheckWords(modeMessage, 40, 4);\n            }\n            return modeMessage;\n        }\n        static drawModeMessage(matrix, compact, matrixSize, modeMessage) {\n            let center = Integer.truncDivision(matrixSize, 2);\n            if (compact) {\n                for (let i /*int*/ = 0; i < 7; i++) {\n                    let offset = center - 3 + i;\n                    if (modeMessage.get(i)) {\n                        matrix.set(offset, center - 5);\n                    }\n                    if (modeMessage.get(i + 7)) {\n                        matrix.set(center + 5, offset);\n                    }\n                    if (modeMessage.get(20 - i)) {\n                        matrix.set(offset, center + 5);\n                    }\n                    if (modeMessage.get(27 - i)) {\n                        matrix.set(center - 5, offset);\n                    }\n                }\n            }\n            else {\n                for (let i /*int*/ = 0; i < 10; i++) {\n                    let offset = center - 5 + i + Integer.truncDivision(i, 5);\n                    if (modeMessage.get(i)) {\n                        matrix.set(offset, center - 7);\n                    }\n                    if (modeMessage.get(i + 10)) {\n                        matrix.set(center + 7, offset);\n                    }\n                    if (modeMessage.get(29 - i)) {\n                        matrix.set(offset, center + 7);\n                    }\n                    if (modeMessage.get(39 - i)) {\n                        matrix.set(center - 7, offset);\n                    }\n                }\n            }\n        }\n        static generateCheckWords(bitArray, totalBits, wordSize) {\n            // bitArray is guaranteed to be a multiple of the wordSize, so no padding needed\n            let messageSizeInWords = bitArray.getSize() / wordSize;\n            let rs = new ReedSolomonEncoder(Encoder$1.getGF(wordSize));\n            let totalWords = Integer.truncDivision(totalBits, wordSize);\n            let messageWords = Encoder$1.bitsToWords(bitArray, wordSize, totalWords);\n            rs.encode(messageWords, totalWords - messageSizeInWords);\n            let startPad = totalBits % wordSize;\n            let messageBits = new BitArray();\n            messageBits.appendBits(0, startPad);\n            for (const messageWord /*: int*/ of Array.from(messageWords)) {\n                messageBits.appendBits(messageWord, wordSize);\n            }\n            return messageBits;\n        }\n        static bitsToWords(stuffedBits, wordSize, totalWords) {\n            let message = new Int32Array(totalWords);\n            let i;\n            let n;\n            for (i = 0, n = stuffedBits.getSize() / wordSize; i < n; i++) {\n                let value = 0;\n                for (let j /*int*/ = 0; j < wordSize; j++) {\n                    value |= stuffedBits.get(i * wordSize + j) ? (1 << wordSize - j - 1) : 0;\n                }\n                message[i] = value;\n            }\n            return message;\n        }\n        static getGF(wordSize) {\n            switch (wordSize) {\n                case 4:\n                    return GenericGF.AZTEC_PARAM;\n                case 6:\n                    return GenericGF.AZTEC_DATA_6;\n                case 8:\n                    return GenericGF.AZTEC_DATA_8;\n                case 10:\n                    return GenericGF.AZTEC_DATA_10;\n                case 12:\n                    return GenericGF.AZTEC_DATA_12;\n                default:\n                    throw new IllegalArgumentException('Unsupported word size ' + wordSize);\n            }\n        }\n        static stuffBits(bits, wordSize) {\n            let out = new BitArray();\n            let n = bits.getSize();\n            let mask = (1 << wordSize) - 2;\n            for (let i /*int*/ = 0; i < n; i += wordSize) {\n                let word = 0;\n                for (let j /*int*/ = 0; j < wordSize; j++) {\n                    if (i + j >= n || bits.get(i + j)) {\n                        word |= 1 << (wordSize - 1 - j);\n                    }\n                }\n                if ((word & mask) === mask) {\n                    out.appendBits(word & mask, wordSize);\n                    i--;\n                }\n                else if ((word & mask) === 0) {\n                    out.appendBits(word | 1, wordSize);\n                    i--;\n                }\n                else {\n                    out.appendBits(word, wordSize);\n                }\n            }\n            return out;\n        }\n        static totalBitsInLayer(layers, compact) {\n            return ((compact ? 88 : 112) + 16 * layers) * layers;\n        }\n    }\n    Encoder$1.DEFAULT_EC_PERCENT = 33; // default minimal percentage of error check words\n    Encoder$1.DEFAULT_AZTEC_LAYERS = 0;\n    Encoder$1.MAX_NB_BITS = 32;\n    Encoder$1.MAX_NB_BITS_COMPACT = 4;\n    Encoder$1.WORD_SIZE = Int32Array.from([\n        4, 6, 6, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        12, 12, 12, 12, 12, 12, 12, 12, 12, 12\n    ]);\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * Renders an Aztec code as a {@link BitMatrix}.\n     */\n    /*public final*/ class AztecWriter {\n        // @Override\n        encode(contents, format, width, height) {\n            return this.encodeWithHints(contents, format, width, height, null);\n        }\n        // @Override\n        encodeWithHints(contents, format, width, height, hints) {\n            let charset = StandardCharsets.ISO_8859_1;\n            let eccPercent = Encoder$1.DEFAULT_EC_PERCENT;\n            let layers = Encoder$1.DEFAULT_AZTEC_LAYERS;\n            if (hints != null) {\n                if (hints.has(EncodeHintType$1.CHARACTER_SET)) {\n                    charset = Charset.forName(hints.get(EncodeHintType$1.CHARACTER_SET).toString());\n                }\n                if (hints.has(EncodeHintType$1.ERROR_CORRECTION)) {\n                    eccPercent = Integer.parseInt(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());\n                }\n                if (hints.has(EncodeHintType$1.AZTEC_LAYERS)) {\n                    layers = Integer.parseInt(hints.get(EncodeHintType$1.AZTEC_LAYERS).toString());\n                }\n            }\n            return AztecWriter.encodeLayers(contents, format, width, height, charset, eccPercent, layers);\n        }\n        static encodeLayers(contents, format, width, height, charset, eccPercent, layers) {\n            if (format !== BarcodeFormat$1.AZTEC) {\n                throw new IllegalArgumentException('Can only encode AZTEC, but got ' + format);\n            }\n            let aztec = Encoder$1.encode(StringUtils.getBytes(contents, charset), eccPercent, layers);\n            return AztecWriter.renderResult(aztec, width, height);\n        }\n        static renderResult(code, width, height) {\n            let input = code.getMatrix();\n            if (input == null) {\n                throw new IllegalStateException();\n            }\n            let inputWidth = input.getWidth();\n            let inputHeight = input.getHeight();\n            let outputWidth = Math.max(width, inputWidth);\n            let outputHeight = Math.max(height, inputHeight);\n            let multiple = Math.min(outputWidth / inputWidth, outputHeight / inputHeight);\n            let leftPadding = (outputWidth - (inputWidth * multiple)) / 2;\n            let topPadding = (outputHeight - (inputHeight * multiple)) / 2;\n            let output = new BitMatrix(outputWidth, outputHeight);\n            for (let inputY /*int*/ = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n                // Write the contents of this row of the barcode\n                for (let inputX /*int*/ = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                    if (input.get(inputX, inputY)) {\n                        output.setRegion(outputX, outputY, multiple, multiple);\n                    }\n                }\n            }\n            return output;\n        }\n    }\n\n    exports.AbstractExpandedDecoder = AbstractExpandedDecoder;\n    exports.ArgumentException = ArgumentException;\n    exports.ArithmeticException = ArithmeticException;\n    exports.AztecCode = AztecCode;\n    exports.AztecCodeReader = AztecReader;\n    exports.AztecCodeWriter = AztecWriter;\n    exports.AztecDecoder = Decoder;\n    exports.AztecDetector = Detector;\n    exports.AztecDetectorResult = AztecDetectorResult;\n    exports.AztecEncoder = Encoder$1;\n    exports.AztecHighLevelEncoder = HighLevelEncoder;\n    exports.AztecPoint = Point;\n    exports.BarcodeFormat = BarcodeFormat$1;\n    exports.Binarizer = Binarizer;\n    exports.BinaryBitmap = BinaryBitmap;\n    exports.BitArray = BitArray;\n    exports.BitMatrix = BitMatrix;\n    exports.BitSource = BitSource;\n    exports.BrowserAztecCodeReader = BrowserAztecCodeReader;\n    exports.BrowserBarcodeReader = BrowserBarcodeReader;\n    exports.BrowserCodeReader = BrowserCodeReader;\n    exports.BrowserDatamatrixCodeReader = BrowserDatamatrixCodeReader;\n    exports.BrowserMultiFormatReader = BrowserMultiFormatReader;\n    exports.BrowserPDF417Reader = BrowserPDF417Reader;\n    exports.BrowserQRCodeReader = BrowserQRCodeReader;\n    exports.BrowserQRCodeSvgWriter = BrowserQRCodeSvgWriter;\n    exports.CharacterSetECI = CharacterSetECI;\n    exports.ChecksumException = ChecksumException;\n    exports.Code128Reader = Code128Reader;\n    exports.Code39Reader = Code39Reader;\n    exports.DataMatrixDecodedBitStreamParser = DecodedBitStreamParser;\n    exports.DataMatrixReader = DataMatrixReader;\n    exports.DecodeHintType = DecodeHintType$1;\n    exports.DecoderResult = DecoderResult;\n    exports.DefaultGridSampler = DefaultGridSampler;\n    exports.DetectorResult = DetectorResult;\n    exports.EAN13Reader = EAN13Reader;\n    exports.EncodeHintType = EncodeHintType$1;\n    exports.Exception = Exception;\n    exports.FormatException = FormatException;\n    exports.GenericGF = GenericGF;\n    exports.GenericGFPoly = GenericGFPoly;\n    exports.GlobalHistogramBinarizer = GlobalHistogramBinarizer;\n    exports.GridSampler = GridSampler;\n    exports.GridSamplerInstance = GridSamplerInstance;\n    exports.HTMLCanvasElementLuminanceSource = HTMLCanvasElementLuminanceSource;\n    exports.HybridBinarizer = HybridBinarizer;\n    exports.ITFReader = ITFReader;\n    exports.IllegalArgumentException = IllegalArgumentException;\n    exports.IllegalStateException = IllegalStateException;\n    exports.InvertedLuminanceSource = InvertedLuminanceSource;\n    exports.LuminanceSource = LuminanceSource;\n    exports.MathUtils = MathUtils;\n    exports.MultiFormatOneDReader = MultiFormatOneDReader;\n    exports.MultiFormatReader = MultiFormatReader;\n    exports.MultiFormatWriter = MultiFormatWriter;\n    exports.NotFoundException = NotFoundException;\n    exports.OneDReader = OneDReader;\n    exports.PDF417DecodedBitStreamParser = DecodedBitStreamParser$2;\n    exports.PDF417DecoderErrorCorrection = ErrorCorrection;\n    exports.PDF417Reader = PDF417Reader;\n    exports.PDF417ResultMetadata = PDF417ResultMetadata;\n    exports.PerspectiveTransform = PerspectiveTransform;\n    exports.PlanarYUVLuminanceSource = PlanarYUVLuminanceSource;\n    exports.QRCodeByteMatrix = ByteMatrix;\n    exports.QRCodeDataMask = DataMask;\n    exports.QRCodeDecodedBitStreamParser = DecodedBitStreamParser$1;\n    exports.QRCodeDecoderErrorCorrectionLevel = ErrorCorrectionLevel;\n    exports.QRCodeDecoderFormatInformation = FormatInformation;\n    exports.QRCodeEncoder = Encoder;\n    exports.QRCodeEncoderQRCode = QRCode;\n    exports.QRCodeMaskUtil = MaskUtil;\n    exports.QRCodeMatrixUtil = MatrixUtil;\n    exports.QRCodeMode = Mode$1;\n    exports.QRCodeReader = QRCodeReader;\n    exports.QRCodeVersion = Version$1;\n    exports.QRCodeWriter = QRCodeWriter;\n    exports.RGBLuminanceSource = RGBLuminanceSource;\n    exports.RSS14Reader = RSS14Reader;\n    exports.RSSExpandedReader = RSSExpandedReader;\n    exports.ReaderException = ReaderException;\n    exports.ReedSolomonDecoder = ReedSolomonDecoder;\n    exports.ReedSolomonEncoder = ReedSolomonEncoder;\n    exports.ReedSolomonException = ReedSolomonException;\n    exports.Result = Result;\n    exports.ResultMetadataType = ResultMetadataType$1;\n    exports.ResultPoint = ResultPoint;\n    exports.StringUtils = StringUtils;\n    exports.UnsupportedOperationException = UnsupportedOperationException;\n    exports.VideoInputDevice = VideoInputDevice;\n    exports.WhiteRectangleDetector = WhiteRectangleDetector;\n    exports.WriterException = WriterException;\n    exports.ZXingArrays = Arrays;\n    exports.ZXingCharset = Charset;\n    exports.ZXingInteger = Integer;\n    exports.ZXingStandardCharsets = StandardCharsets;\n    exports.ZXingStringBuilder = StringBuilder;\n    exports.ZXingStringEncoding = StringEncoding;\n    exports.ZXingSystem = System;\n    exports.createAbstractExpandedDecoder = createDecoder;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\nvar has = require('../internals/set-helpers').has;\n\n// Perform ? RequireInternalSlot(M, [[SetData]])\nmodule.exports = function (it) {\n  has(it);\n  return it;\n};\n","'use strict';\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw new $TypeError('Incorrect invocation');\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\n// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","'use strict';\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar classof = require('../internals/classof-raw');\n\nvar $TypeError = TypeError;\n\n// Includes\n// - Perform ? RequireInternalSlot(O, [[ArrayBufferData]]).\n// - If IsSharedArrayBuffer(O) is true, throw a TypeError exception.\nmodule.exports = uncurryThisAccessor(ArrayBuffer.prototype, 'byteLength', 'get') || function (O) {\n  if (classof(O) !== 'ArrayBuffer') throw new $TypeError('ArrayBuffer expected');\n  return O.byteLength;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\n\nvar slice = uncurryThis(ArrayBuffer.prototype.slice);\n\nmodule.exports = function (O) {\n  if (arrayBufferByteLength(O) !== 0) return false;\n  try {\n    slice(O, 0, 0);\n    return false;\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar toIndex = require('../internals/to-index');\nvar isDetached = require('../internals/array-buffer-is-detached');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\nvar detachTransferable = require('../internals/detach-transferable');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = global.structuredClone;\nvar ArrayBuffer = global.ArrayBuffer;\nvar DataView = global.DataView;\nvar TypeError = global.TypeError;\nvar min = Math.min;\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\nvar DataViewPrototype = DataView.prototype;\nvar slice = uncurryThis(ArrayBufferPrototype.slice);\nvar isResizable = uncurryThisAccessor(ArrayBufferPrototype, 'resizable', 'get');\nvar maxByteLength = uncurryThisAccessor(ArrayBufferPrototype, 'maxByteLength', 'get');\nvar getInt8 = uncurryThis(DataViewPrototype.getInt8);\nvar setInt8 = uncurryThis(DataViewPrototype.setInt8);\n\nmodule.exports = (PROPER_STRUCTURED_CLONE_TRANSFER || detachTransferable) && function (arrayBuffer, newLength, preserveResizability) {\n  var byteLength = arrayBufferByteLength(arrayBuffer);\n  var newByteLength = newLength === undefined ? byteLength : toIndex(newLength);\n  var fixedLength = !isResizable || !isResizable(arrayBuffer);\n  var newBuffer;\n  if (isDetached(arrayBuffer)) throw new TypeError('ArrayBuffer is detached');\n  if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n    arrayBuffer = structuredClone(arrayBuffer, { transfer: [arrayBuffer] });\n    if (byteLength === newByteLength && (preserveResizability || fixedLength)) return arrayBuffer;\n  }\n  if (byteLength >= newByteLength && (!preserveResizability || fixedLength)) {\n    newBuffer = slice(arrayBuffer, 0, newByteLength);\n  } else {\n    var options = preserveResizability && !fixedLength && maxByteLength ? { maxByteLength: maxByteLength(arrayBuffer) } : undefined;\n    newBuffer = new ArrayBuffer(newByteLength, options);\n    var a = new DataView(arrayBuffer);\n    var b = new DataView(newBuffer);\n    var copyLength = min(newByteLength, byteLength);\n    for (var i = 0; i < copyLength; i++) setInt8(b, i, getInt8(a, i));\n  }\n  if (!PROPER_STRUCTURED_CLONE_TRANSFER) detachTransferable(arrayBuffer);\n  return newBuffer;\n};\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = global.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar getTypedArrayConstructor = function (it) {\n  var proto = getPrototypeOf(it);\n  if (!isObject(proto)) return;\n  var state = getInternalState(proto);\n  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw new TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw new TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw new TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {\n    configurable: true,\n    get: function () {\n      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n    }\n  });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  getTypedArrayConstructor: getTypedArrayConstructor,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nmodule.exports = function (Constructor, list, $length) {\n  var index = 0;\n  var length = arguments.length > 2 ? $length : lengthOfArrayLike(list);\n  var result = new Constructor(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw new $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.toReversed\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toReversed\nmodule.exports = function (O, C) {\n  var len = lengthOfArrayLike(O);\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = O[len - k - 1];\n  return A;\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.with\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with\nmodule.exports = function (O, C, index, value) {\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualIndex = relativeIndex < 0 ? len + relativeIndex : relativeIndex;\n  if (actualIndex >= len || actualIndex < 0) throw new $RangeError('Incorrect index');\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = k === actualIndex ? value : O[k];\n  return A;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","'use strict';\nvar global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n","'use strict';\nvar global = require('../internals/global');\nvar tryNodeRequire = require('../internals/try-node-require');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = global.structuredClone;\nvar $ArrayBuffer = global.ArrayBuffer;\nvar $MessageChannel = global.MessageChannel;\nvar detach = false;\nvar WorkerThreads, channel, buffer, $detach;\n\nif (PROPER_STRUCTURED_CLONE_TRANSFER) {\n  detach = function (transferable) {\n    structuredClone(transferable, { transfer: [transferable] });\n  };\n} else if ($ArrayBuffer) try {\n  if (!$MessageChannel) {\n    WorkerThreads = tryNodeRequire('worker_threads');\n    if (WorkerThreads) $MessageChannel = WorkerThreads.MessageChannel;\n  }\n\n  if ($MessageChannel) {\n    channel = new $MessageChannel();\n    buffer = new $ArrayBuffer(2);\n\n    $detach = function (transferable) {\n      channel.port1.postMessage(null, [transferable]);\n    };\n\n    if (buffer.byteLength === 2) {\n      $detach(buffer);\n      if (buffer.byteLength === 0) detach = $detach;\n    }\n  }\n} catch (error) { /* empty */ }\n\nmodule.exports = detach;\n","'use strict';\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\nmodule.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n","'use strict';\nvar IS_DENO = require('../internals/engine-is-deno');\nvar IS_NODE = require('../internals/engine-is-node');\n\nmodule.exports = !IS_DENO && !IS_NODE\n  && typeof window == 'object'\n  && typeof document == 'object';\n","'use strict';\n/* global Deno -- Deno case */\nmodule.exports = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';\n","'use strict';\nvar global = require('../internals/global');\nvar classof = require('../internals/classof-raw');\n\nmodule.exports = classof(global.process) === 'process';\n","'use strict';\nmodule.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","'use strict';\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String(new $Error(arg).stack); })('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = global[TARGET] && global[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","'use strict';\n// `GetIteratorDirect(obj)` abstract operation\n// https://tc39.es/proposal-iterator-helpers/#sec-getiteratordirect\nmodule.exports = function (obj) {\n  return {\n    iterator: obj,\n    next: obj.next,\n    done: false\n  };\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar call = require('../internals/function-call');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\nvar INVALID_SIZE = 'Invalid size';\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar max = Math.max;\n\nvar SetRecord = function (set, intSize) {\n  this.set = set;\n  this.size = max(intSize, 0);\n  this.has = aCallable(set.has);\n  this.keys = aCallable(set.keys);\n};\n\nSetRecord.prototype = {\n  getIterator: function () {\n    return getIteratorDirect(anObject(call(this.keys, this.set)));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize !== numSize) throw new $TypeError(INVALID_SIZE);\n  var intSize = toIntegerOrInfinity(numSize);\n  if (intSize < 0) throw new $RangeError(INVALID_SIZE);\n  return new SetRecord(obj, intSize);\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","'use strict';\nvar classof = require('../internals/classof');\n\nmodule.exports = function (it) {\n  var klass = classof(it);\n  return klass === 'BigInt64Array' || klass === 'BigUint64Array';\n};\n","'use strict';\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};\n","'use strict';\nmodule.exports = false;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar call = require('../internals/function-call');\n\nmodule.exports = function (record, fn, ITERATOR_INSTEAD_OF_RECORD) {\n  var iterator = ITERATOR_INSTEAD_OF_RECORD ? record : record.iterator;\n  var next = record.next;\n  var step, result;\n  while (!(step = call(next, iterator)).done) {\n    result = fn(step.value);\n    if (result !== undefined) return result;\n  }\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\).*$/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\nvar toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar isObject = require('../internals/is-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar SetHelpers = require('../internals/set-helpers');\nvar iterate = require('../internals/set-iterate');\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\n\nmodule.exports = function (set) {\n  var result = new Set();\n  iterate(set, function (it) {\n    add(result, it);\n  });\n  return result;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar clone = require('../internals/set-clone');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.difference` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function difference(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = clone(O);\n  if (size(O) <= otherRec.size) iterateSet(O, function (e) {\n    if (otherRec.includes(e)) remove(result, e);\n  });\n  else iterateSimple(otherRec.getIterator(), function (e) {\n    if (has(O, e)) remove(result, e);\n  });\n  return result;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\n// eslint-disable-next-line es/no-set -- safe\nvar SetPrototype = Set.prototype;\n\nmodule.exports = {\n  // eslint-disable-next-line es/no-set -- safe\n  Set: Set,\n  add: uncurryThis(SetPrototype.add),\n  has: uncurryThis(SetPrototype.has),\n  remove: uncurryThis(SetPrototype['delete']),\n  proto: SetPrototype\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function intersection(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = new Set();\n\n  if (size(O) > otherRec.size) {\n    iterateSimple(otherRec.getIterator(), function (e) {\n      if (has(O, e)) add(result, e);\n    });\n  } else {\n    iterateSet(O, function (e) {\n      if (otherRec.includes(e)) add(result, e);\n    });\n  }\n\n  return result;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\nmodule.exports = function isDisjointFrom(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) <= otherRec.size) return iterateSet(O, function (e) {\n    if (otherRec.includes(e)) return false;\n  }, true) !== false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar size = require('../internals/set-size');\nvar iterate = require('../internals/set-iterate');\nvar getSetRecord = require('../internals/get-set-record');\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\nmodule.exports = function isSubsetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) > otherRec.size) return false;\n  return iterate(O, function (e) {\n    if (!otherRec.includes(e)) return false;\n  }, true) !== false;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\nmodule.exports = function isSupersetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) < otherRec.size) return false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (!has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar iterateSimple = require('../internals/iterate-simple');\nvar SetHelpers = require('../internals/set-helpers');\n\nvar Set = SetHelpers.Set;\nvar SetPrototype = SetHelpers.proto;\nvar forEach = uncurryThis(SetPrototype.forEach);\nvar keys = uncurryThis(SetPrototype.keys);\nvar next = keys(new Set()).next;\n\nmodule.exports = function (set, fn, interruptible) {\n  return interruptible ? iterateSimple({ iterator: keys(set), next: next }, fn) : forEach(set, fn);\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar createSetLike = function (size) {\n  return {\n    size: size,\n    has: function () {\n      return false;\n    },\n    keys: function () {\n      return {\n        next: function () {\n          return { done: true };\n        }\n      };\n    }\n  };\n};\n\nmodule.exports = function (name) {\n  var Set = getBuiltIn('Set');\n  try {\n    new Set()[name](createSetLike(0));\n    try {\n      // late spec change, early WebKit ~ Safari 17.0 beta implementation does not pass it\n      // https://github.com/tc39/proposal-set-methods/pull/88\n      new Set()[name](createSetLike(-1));\n      return false;\n    } catch (error2) {\n      return true;\n    }\n  } catch (error) {\n    return false;\n  }\n};\n","'use strict';\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar SetHelpers = require('../internals/set-helpers');\n\nmodule.exports = uncurryThisAccessor(SetHelpers.proto, 'size', 'get') || function (set) {\n  return set.size;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar clone = require('../internals/set-clone');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.symmetricDifference` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function symmetricDifference(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (e) {\n    if (has(O, e)) remove(result, e);\n    else add(result, e);\n  });\n  return result;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar add = require('../internals/set-helpers').add;\nvar clone = require('../internals/set-clone');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function union(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (it) {\n    add(result, it);\n  });\n  return result;\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar globalThis = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n\n(store.versions || (store.versions = [])).push({\n  version: '3.37.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.37.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\nvar store = require('../internals/shared-store');\n\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};\n","'use strict';\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar V8 = require('../internals/engine-v8-version');\nvar IS_BROWSER = require('../internals/engine-is-browser');\nvar IS_DENO = require('../internals/engine-is-deno');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar structuredClone = global.structuredClone;\n\nmodule.exports = !!structuredClone && !fails(function () {\n  // prevent V8 ArrayBufferDetaching protector cell invalidation and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if ((IS_DENO && V8 > 92) || (IS_NODE && V8 > 94) || (IS_BROWSER && V8 > 97)) return false;\n  var buffer = new ArrayBuffer(8);\n  var clone = structuredClone(buffer, { transfer: [buffer] });\n  return buffer.byteLength !== 0 || clone.byteLength !== 8;\n});\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw new $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\n\nvar $RangeError = RangeError;\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toIntegerOrInfinity(it);\n  var length = toLength(number);\n  if (number !== length) throw new $RangeError('Wrong length or index');\n  return length;\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar IS_NODE = require('../internals/engine-is-node');\n\nmodule.exports = function (name) {\n  try {\n    // eslint-disable-next-line no-new-func -- safe\n    if (IS_NODE) return Function('return require(\"' + name + '\")')();\n  } catch (error) { /* empty */ }\n};\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isDetached = require('../internals/array-buffer-is-detached');\n\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\n\nif (DESCRIPTORS && !('detached' in ArrayBufferPrototype)) {\n  defineBuiltInAccessor(ArrayBufferPrototype, 'detached', {\n    configurable: true,\n    get: function detached() {\n      return isDetached(this);\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transferToFixedLength` method\n// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfertofixedlength\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transferToFixedLength: function transferToFixedLength() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, false);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transfer` method\n// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfer\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transfer: function transfer() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, true);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 <= 121 and Safari <= 15.4; FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar difference = require('../internals/set-difference');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.difference` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('difference') }, {\n  difference: difference\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar intersection = require('../internals/set-intersection');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\nvar INCORRECT = !setMethodAcceptSetLike('intersection') || fails(function () {\n  // eslint-disable-next-line es/no-array-from, es/no-set -- testing\n  return String(Array.from(new Set([1, 2, 3]).intersection(new Set([3, 2])))) !== '3,2';\n});\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  intersection: intersection\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isDisjointFrom = require('../internals/set-is-disjoint-from');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.isDisjointFrom` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('isDisjointFrom') }, {\n  isDisjointFrom: isDisjointFrom\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isSubsetOf = require('../internals/set-is-subset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.isSubsetOf` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('isSubsetOf') }, {\n  isSubsetOf: isSubsetOf\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isSupersetOf = require('../internals/set-is-superset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.isSupersetOf` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('isSupersetOf') }, {\n  isSupersetOf: isSupersetOf\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar symmetricDifference = require('../internals/set-symmetric-difference');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.symmetricDifference` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('symmetricDifference') }, {\n  symmetricDifference: symmetricDifference\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar union = require('../internals/set-union');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('union') }, {\n  union: union\n});\n","'use strict';\nvar arrayToReversed = require('../internals/array-to-reversed');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\n\n// `%TypedArray%.prototype.toReversed` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.toreversed\nexportTypedArrayMethod('toReversed', function toReversed() {\n  return arrayToReversed(aTypedArray(this), getTypedArrayConstructor(this));\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar sort = uncurryThis(ArrayBufferViewCore.TypedArrayPrototype.sort);\n\n// `%TypedArray%.prototype.toSorted` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tosorted\nexportTypedArrayMethod('toSorted', function toSorted(compareFn) {\n  if (compareFn !== undefined) aCallable(compareFn);\n  var O = aTypedArray(this);\n  var A = arrayFromConstructorAndList(getTypedArrayConstructor(O), O);\n  return sort(A, compareFn);\n});\n","'use strict';\nvar arrayWith = require('../internals/array-with');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toBigInt = require('../internals/to-big-int');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar PROPER_ORDER = !!function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](2, { valueOf: function () { throw 8; } });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}();\n\n// `%TypedArray%.prototype.with` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nexportTypedArrayMethod('with', { 'with': function (index, value) {\n  var O = aTypedArray(this);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n  return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n} }['with'], !PROPER_ORDER);\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.difference.v2');\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.intersection.v2');\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.is-disjoint-from.v2');\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.is-subset-of.v2');\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.is-superset-of.v2');\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.symmetric-difference.v2');\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.set.union.v2');\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = new Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in new Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(global, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig, isBrowser } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n",null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CustomParams,\n  ControlParams,\n  EventParams,\n  ConsentSettings\n} from './public-types';\nimport { DynamicConfig, DataLayer, Gtag, MinimalDynamicConfig } from './types';\nimport { GtagCommand, GTAG_URL } from './constants';\nimport { logger } from './logger';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\n\n// Possible parameter types for gtag 'event' and 'config' commands\ntype GtagConfigOrEventParams = ControlParams & EventParams & CustomParams;\n\n/**\n * Verifies and creates a TrustedScriptURL.\n */\nexport function createGtagTrustedTypesScriptURL(url: string): string {\n  if (!url.startsWith(GTAG_URL)) {\n    const err = ERROR_FACTORY.create(AnalyticsError.INVALID_GTAG_RESOURCE, {\n      gtagURL: url\n    });\n    logger.warn(err.message);\n    return '';\n  }\n  return url;\n}\n\n/**\n * Makeshift polyfill for Promise.allSettled(). Resolves when all promises\n * have either resolved or rejected.\n *\n * @param promises Array of promises to wait for.\n */\nexport function promiseAllSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<T[]> {\n  return Promise.all(promises.map(promise => promise.catch(e => e)));\n}\n\n/**\n * Creates a TrustedTypePolicy object that implements the rules passed as policyOptions.\n *\n * @param policyName A string containing the name of the policy\n * @param policyOptions Object containing implementations of instance methods for TrustedTypesPolicy, see {@link https://developer.mozilla.org/en-US/docs/Web/API/TrustedTypePolicy#instance_methods\n * | the TrustedTypePolicy reference documentation}.\n */\nexport function createTrustedTypesPolicy(\n  policyName: string,\n  policyOptions: Partial<TrustedTypePolicyOptions>\n): Partial<TrustedTypePolicy> | undefined {\n  // Create a TrustedTypes policy that we can use for updating src\n  // properties\n  let trustedTypesPolicy: Partial<TrustedTypePolicy> | undefined;\n  if (window.trustedTypes) {\n    trustedTypesPolicy = window.trustedTypes.createPolicy(\n      policyName,\n      policyOptions\n    );\n  }\n  return trustedTypesPolicy;\n}\n\n/**\n * Inserts gtag script tag into the page to asynchronously download gtag.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function insertScriptTag(\n  dataLayerName: string,\n  measurementId: string\n): void {\n  const trustedTypesPolicy = createTrustedTypesPolicy(\n    'firebase-js-sdk-policy',\n    {\n      createScriptURL: createGtagTrustedTypesScriptURL\n    }\n  );\n\n  const script = document.createElement('script');\n  // We are not providing an analyticsId in the URL because it would trigger a `page_view`\n  // without fid. We will initialize ga-id using gtag (config) command together with fid.\n\n  const gtagScriptURL = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\n  (script.src as string | TrustedScriptURL) = trustedTypesPolicy\n    ? (trustedTypesPolicy as TrustedTypePolicy)?.createScriptURL(gtagScriptURL)\n    : gtagScriptURL;\n\n  script.async = true;\n  document.head.appendChild(script);\n}\n\n/**\n * Get reference to, or create, global datalayer.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function getOrCreateDataLayer(dataLayerName: string): DataLayer {\n  // Check for existing dataLayer and create if needed.\n  let dataLayer: DataLayer = [];\n  if (Array.isArray(window[dataLayerName])) {\n    dataLayer = window[dataLayerName] as DataLayer;\n  } else {\n    window[dataLayerName] = dataLayer;\n  }\n  return dataLayer;\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'config' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param measurementId GA Measurement ID to set config for.\n * @param gtagParams Gtag config params to set.\n */\nasync function gtagOnConfig(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  // If config is already fetched, we know the appId and can use it to look up what FID promise we\n  /// are waiting for, and wait only on that one.\n  const correspondingAppId = measurementIdToAppId[measurementId as string];\n  try {\n    if (correspondingAppId) {\n      await initializationPromisesMap[correspondingAppId];\n    } else {\n      // If config is not fetched yet, wait for all configs (we don't know which one we need) and\n      // find the appId (if any) corresponding to this measurementId. If there is one, wait on\n      // that appId's initialization promise. If there is none, promise resolves and gtag\n      // call goes through.\n      const dynamicConfigResults = await promiseAllSettled(\n        dynamicConfigPromisesList\n      );\n      const foundConfig = dynamicConfigResults.find(\n        config => config.measurementId === measurementId\n      );\n      if (foundConfig) {\n        await initializationPromisesMap[foundConfig.appId];\n      }\n    }\n  } catch (e) {\n    logger.error(e);\n  }\n  gtagCore(GtagCommand.CONFIG, measurementId, gtagParams);\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'event' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementId GA Measurement ID to log event to.\n * @param gtagParams Params to log with this event.\n */\nasync function gtagOnEvent(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  try {\n    let initializationPromisesToWaitFor: Array<Promise<string>> = [];\n\n    // If there's a 'send_to' param, check if any ID specified matches\n    // an initializeIds() promise we are waiting for.\n    if (gtagParams && gtagParams['send_to']) {\n      let gaSendToList: string | string[] = gtagParams['send_to'];\n      // Make it an array if is isn't, so it can be dealt with the same way.\n      if (!Array.isArray(gaSendToList)) {\n        gaSendToList = [gaSendToList];\n      }\n      // Checking 'send_to' fields requires having all measurement ID results back from\n      // the dynamic config fetch.\n      const dynamicConfigResults = await promiseAllSettled(\n        dynamicConfigPromisesList\n      );\n      for (const sendToId of gaSendToList) {\n        // Any fetched dynamic measurement ID that matches this 'send_to' ID\n        const foundConfig = dynamicConfigResults.find(\n          config => config.measurementId === sendToId\n        );\n        const initializationPromise =\n          foundConfig && initializationPromisesMap[foundConfig.appId];\n        if (initializationPromise) {\n          initializationPromisesToWaitFor.push(initializationPromise);\n        } else {\n          // Found an item in 'send_to' that is not associated\n          // directly with an FID, possibly a group.  Empty this array,\n          // exit the loop early, and let it get populated below.\n          initializationPromisesToWaitFor = [];\n          break;\n        }\n      }\n    }\n\n    // This will be unpopulated if there was no 'send_to' field , or\n    // if not all entries in the 'send_to' field could be mapped to\n    // a FID. In these cases, wait on all pending initialization promises.\n    if (initializationPromisesToWaitFor.length === 0) {\n      initializationPromisesToWaitFor = Object.values(\n        initializationPromisesMap\n      );\n    }\n\n    // Run core gtag function with args after all relevant initialization\n    // promises have been resolved.\n    await Promise.all(initializationPromisesToWaitFor);\n    // Workaround for http://b/141370449 - third argument cannot be undefined.\n    gtagCore(GtagCommand.EVENT, measurementId, gtagParams || {});\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\n/**\n * Wraps a standard gtag function with extra code to wait for completion of\n * relevant initialization promises before sending requests.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n */\nfunction wrapGtag(\n  gtagCore: Gtag,\n  /**\n   * Allows wrapped gtag calls to wait on whichever intialization promises are required,\n   * depending on the contents of the gtag params' `send_to` field, if any.\n   */\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  /**\n   * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\n   * before determining what initialization promises (which include FIDs) to wait for.\n   */\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  /**\n   * Wrapped gtag config calls can narrow down which initialization promise (with FID)\n   * to wait for if the measurementId is already fetched, by getting the corresponding appId,\n   * which is the key for the initialization promises map.\n   */\n  measurementIdToAppId: { [measurementId: string]: string }\n): Gtag {\n  /**\n   * Wrapper around gtag that ensures FID is sent with gtag calls.\n   * @param command Gtag command type.\n   * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\n   * @param gtagParams Params if event is EVENT/CONFIG.\n   */\n  async function gtagWrapper(\n    command: 'config' | 'set' | 'event' | 'consent' | 'get' | string,\n    ...args: unknown[]\n  ): Promise<void> {\n    try {\n      // If event, check that relevant initialization promises have completed.\n      if (command === GtagCommand.EVENT) {\n        const [measurementId, gtagParams] = args;\n        // If EVENT, second arg must be measurementId.\n        await gtagOnEvent(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          measurementId as string,\n          gtagParams as GtagConfigOrEventParams\n        );\n      } else if (command === GtagCommand.CONFIG) {\n        const [measurementId, gtagParams] = args;\n        // If CONFIG, second arg must be measurementId.\n        await gtagOnConfig(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          measurementIdToAppId,\n          measurementId as string,\n          gtagParams as GtagConfigOrEventParams\n        );\n      } else if (command === GtagCommand.CONSENT) {\n        const [consentAction, gtagParams] = args;\n        // consentAction can be one of 'default' or 'update'.\n        gtagCore(\n          GtagCommand.CONSENT,\n          consentAction,\n          gtagParams as ConsentSettings\n        );\n      } else if (command === GtagCommand.GET) {\n        const [measurementId, fieldName, callback] = args;\n        gtagCore(\n          GtagCommand.GET,\n          measurementId as string,\n          fieldName as string,\n          callback as (...args: unknown[]) => void\n        );\n      } else if (command === GtagCommand.SET) {\n        const [customParams] = args;\n        // If SET, second arg must be params.\n        gtagCore(GtagCommand.SET, customParams as CustomParams);\n      } else {\n        gtagCore(command, ...args);\n      }\n    } catch (e) {\n      logger.error(e);\n    }\n  }\n  return gtagWrapper as Gtag;\n}\n\n/**\n * Creates global gtag function or wraps existing one if found.\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\n * 'event' calls that belong to the GAID associated with this Firebase instance.\n *\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param dataLayerName Name of global GA datalayer array.\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\n */\nexport function wrapOrCreateGtag(\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  dataLayerName: string,\n  gtagFunctionName: string\n): {\n  gtagCore: Gtag;\n  wrappedGtag: Gtag;\n} {\n  // Create a basic core gtag function\n  let gtagCore: Gtag = function (..._args: unknown[]) {\n    // Must push IArguments object, not an array.\n    (window[dataLayerName] as DataLayer).push(arguments);\n  };\n\n  // Replace it with existing one if found\n  if (\n    window[gtagFunctionName] &&\n    typeof window[gtagFunctionName] === 'function'\n  ) {\n    // @ts-ignore\n    gtagCore = window[gtagFunctionName];\n  }\n\n  window[gtagFunctionName] = wrapGtag(\n    gtagCore,\n    initializationPromisesMap,\n    dynamicConfigPromisesList,\n    measurementIdToAppId\n  );\n\n  return {\n    gtagCore,\n    wrappedGtag: window[gtagFunctionName] as Gtag\n  };\n}\n\n/**\n * Returns the script tag in the DOM matching both the gtag url pattern\n * and the provided data layer name.\n */\nexport function findGtagScriptOnPage(\n  dataLayerName: string\n): HTMLScriptElement | null {\n  const scriptTags = window.document.getElementsByTagName('script');\n  for (const tag of Object.values(scriptTags)) {\n    if (\n      tag.src &&\n      tag.src.includes(GTAG_URL) &&\n      tag.src.includes(dataLayerName)\n    ) {\n      return tag;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Most logic is copied from packages/remote-config/src/client/retrying_client.ts\n */\n\nimport { FirebaseApp } from '@firebase/app';\nimport { DynamicConfig, ThrottleMetadata, MinimalDynamicConfig } from './types';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { DYNAMIC_CONFIG_URL, FETCH_TIMEOUT_MILLIS } from './constants';\nimport { logger } from './logger';\n\n// App config fields needed by analytics.\nexport interface AppFields {\n  appId: string;\n  apiKey: string;\n  measurementId?: string;\n}\n\n/**\n * Backoff factor for 503 errors, which we want to be conservative about\n * to avoid overloading servers. Each retry interval will be\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\n * will be ~30 seconds (with fuzzing).\n */\nexport const LONG_RETRY_FACTOR = 30;\n\n/**\n * Base wait interval to multiplied by backoffFactor^backoffCount.\n */\nconst BASE_INTERVAL_MILLIS = 1000;\n\n/**\n * Stubbable retry data storage class.\n */\nclass RetryData {\n  constructor(\n    public throttleMetadata: { [appId: string]: ThrottleMetadata } = {},\n    public intervalMillis: number = BASE_INTERVAL_MILLIS\n  ) {}\n\n  getThrottleMetadata(appId: string): ThrottleMetadata {\n    return this.throttleMetadata[appId];\n  }\n\n  setThrottleMetadata(appId: string, metadata: ThrottleMetadata): void {\n    this.throttleMetadata[appId] = metadata;\n  }\n\n  deleteThrottleMetadata(appId: string): void {\n    delete this.throttleMetadata[appId];\n  }\n}\n\nconst defaultRetryData = new RetryData();\n\n/**\n * Set GET request headers.\n * @param apiKey App API key.\n */\nfunction getHeaders(apiKey: string): Headers {\n  return new Headers({\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\n/**\n * Fetches dynamic config from backend.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfig(\n  appFields: AppFields\n): Promise<DynamicConfig> {\n  const { appId, apiKey } = appFields;\n  const request: RequestInit = {\n    method: 'GET',\n    headers: getHeaders(apiKey)\n  };\n  const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\n  const response = await fetch(appUrl, request);\n  if (response.status !== 200 && response.status !== 304) {\n    let errorMessage = '';\n    try {\n      // Try to get any error message text from server response.\n      const jsonResponse = (await response.json()) as {\n        error?: { message?: string };\n      };\n      if (jsonResponse.error?.message) {\n        errorMessage = jsonResponse.error.message;\n      }\n    } catch (_ignored) {}\n    throw ERROR_FACTORY.create(AnalyticsError.CONFIG_FETCH_FAILED, {\n      httpStatus: response.status,\n      responseMessage: errorMessage\n    });\n  }\n  return response.json();\n}\n\n/**\n * Fetches dynamic config from backend, retrying if failed.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfigWithRetry(\n  app: FirebaseApp,\n  // retryData and timeoutMillis are parameterized to allow passing a different value for testing.\n  retryData: RetryData = defaultRetryData,\n  timeoutMillis?: number\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, apiKey, measurementId } = app.options;\n\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n\n  if (!apiKey) {\n    if (measurementId) {\n      return {\n        measurementId,\n        appId\n      };\n    }\n    throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n  }\n\n  const throttleMetadata: ThrottleMetadata = retryData.getThrottleMetadata(\n    appId\n  ) || {\n    backoffCount: 0,\n    throttleEndTimeMillis: Date.now()\n  };\n\n  const signal = new AnalyticsAbortSignal();\n\n  setTimeout(\n    async () => {\n      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n      signal.abort();\n    },\n    timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS\n  );\n\n  return attemptFetchDynamicConfigWithRetry(\n    { appId, apiKey, measurementId },\n    throttleMetadata,\n    signal,\n    retryData\n  );\n}\n\n/**\n * Runs one retry attempt.\n * @param appFields Necessary app config fields.\n * @param throttleMetadata Ongoing metadata to determine throttling times.\n * @param signal Abort signal.\n */\nasync function attemptFetchDynamicConfigWithRetry(\n  appFields: AppFields,\n  { throttleEndTimeMillis, backoffCount }: ThrottleMetadata,\n  signal: AnalyticsAbortSignal,\n  retryData: RetryData = defaultRetryData // for testing\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, measurementId } = appFields;\n  // Starts with a (potentially zero) timeout to support resumption from stored state.\n  // Ensures the throttle end time is honored if the last attempt timed out.\n  // Note the SDK will never make a request if the fetch timeout expires at this point.\n  try {\n    await setAbortableTimeout(signal, throttleEndTimeMillis);\n  } catch (e) {\n    if (measurementId) {\n      logger.warn(\n        `Timed out fetching this Firebase app's measurement ID from the server.` +\n          ` Falling back to the measurement ID ${measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config. [${\n            (e as Error)?.message\n          }]`\n      );\n      return { appId, measurementId };\n    }\n    throw e;\n  }\n\n  try {\n    const response = await fetchDynamicConfig(appFields);\n\n    // Note the SDK only clears throttle state if response is success or non-retriable.\n    retryData.deleteThrottleMetadata(appId);\n\n    return response;\n  } catch (e) {\n    const error = e as Error;\n    if (!isRetriableError(error)) {\n      retryData.deleteThrottleMetadata(appId);\n      if (measurementId) {\n        logger.warn(\n          `Failed to fetch this Firebase app's measurement ID from the server.` +\n            ` Falling back to the measurement ID ${measurementId}` +\n            ` provided in the \"measurementId\" field in the local Firebase config. [${error?.message}]`\n        );\n        return { appId, measurementId };\n      } else {\n        throw e;\n      }\n    }\n\n    const backoffMillis =\n      Number(error?.customData?.httpStatus) === 503\n        ? calculateBackoffMillis(\n            backoffCount,\n            retryData.intervalMillis,\n            LONG_RETRY_FACTOR\n          )\n        : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\n\n    // Increments backoff state.\n    const throttleMetadata = {\n      throttleEndTimeMillis: Date.now() + backoffMillis,\n      backoffCount: backoffCount + 1\n    };\n\n    // Persists state.\n    retryData.setThrottleMetadata(appId, throttleMetadata);\n    logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\n\n    return attemptFetchDynamicConfigWithRetry(\n      appFields,\n      throttleMetadata,\n      signal,\n      retryData\n    );\n  }\n}\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nfunction setAbortableTimeout(\n  signal: AnalyticsAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(AnalyticsError.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Shims a minimal AbortSignal (copied from Remote Config).\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class AnalyticsAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnalyticsCallOptions,\n  CustomParams,\n  ControlParams,\n  EventParams,\n  ConsentSettings\n} from './public-types';\nimport { Gtag } from './types';\nimport { GtagCommand } from './constants';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\n\n/**\n * Event parameters to set on 'gtag' during initialization.\n */\nexport let defaultEventParametersForInit: CustomParams | undefined;\n\n/**\n * Logs an analytics event through the Firebase SDK.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\n * @param eventParams Analytics event parameters.\n */\nexport async function logEvent(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  eventName: string,\n  eventParams?: EventParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.EVENT, eventName, eventParams);\n    return;\n  } else {\n    const measurementId = await initializationPromise;\n    const params: EventParams | ControlParams = {\n      ...eventParams,\n      'send_to': measurementId\n    };\n    gtagFunction(GtagCommand.EVENT, eventName, params);\n  }\n}\n\n/**\n * Set screen_name parameter for this Google Analytics ID.\n *\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param screenName Screen name string to set.\n */\nexport async function setCurrentScreen(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  screenName: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'screen_name': screenName\n    });\n  }\n}\n\n/**\n * Set user_id parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param id User ID string to set\n */\nexport async function setUserId(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  id: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'user_id': id });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_id': id\n    });\n  }\n}\n\n/**\n * Set all other user properties other than user_id and screen_name.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param properties Map of user properties to set\n */\nexport async function setUserProperties(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  properties: CustomParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    const flatProperties: { [key: string]: unknown } = {};\n    for (const key of Object.keys(properties)) {\n      // use dot notation for merge behavior in gtag.js\n      flatProperties[`user_properties.${key}`] = properties[key];\n    }\n    gtagFunction(GtagCommand.SET, flatProperties);\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_properties': properties\n    });\n  }\n}\n\n/**\n * Retrieves a unique Google Analytics identifier for the web client.\n * See {@link https://developers.google.com/analytics/devguides/collection/ga4/reference/config#client_id | client_id}.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n */\nexport async function internalGetGoogleAnalyticsClientId(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>\n): Promise<string> {\n  const measurementId = await initializationPromise;\n  return new Promise((resolve, reject) => {\n    gtagFunction(\n      GtagCommand.GET,\n      measurementId,\n      'client_id',\n      (clientId: string) => {\n        if (!clientId) {\n          reject(ERROR_FACTORY.create(AnalyticsError.NO_CLIENT_ID));\n        }\n        resolve(clientId);\n      }\n    );\n  });\n}\n\n/**\n * Set whether collection is enabled for this ID.\n *\n * @param enabled If true, collection is enabled for this ID.\n */\nexport async function setAnalyticsCollectionEnabled(\n  initializationPromise: Promise<string>,\n  enabled: boolean\n): Promise<void> {\n  const measurementId = await initializationPromise;\n  window[`ga-disable-${measurementId}`] = !enabled;\n}\n\n/**\n * Consent parameters to default to during 'gtag' initialization.\n */\nexport let defaultConsentSettingsForInit: ConsentSettings | undefined;\n\n/**\n * Sets the variable {@link defaultConsentSettingsForInit} for use in the initialization of\n * analytics.\n *\n * @param consentSettings Maps the applicable end user consent state for gtag.js.\n */\nexport function _setConsentDefaultForInit(\n  consentSettings?: ConsentSettings\n): void {\n  defaultConsentSettingsForInit = consentSettings;\n}\n\n/**\n * Sets the variable `defaultEventParametersForInit` for use in the initialization of\n * analytics.\n *\n * @param customParams Any custom params the user may pass to gtag.js.\n */\nexport function _setDefaultEventParametersForInit(\n  customParams?: CustomParams\n): void {\n  defaultEventParametersForInit = customParams;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicConfig, Gtag, MinimalDynamicConfig } from './types';\nimport { GtagCommand, GA_FID_KEY, ORIGIN_KEY } from './constants';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { fetchDynamicConfigWithRetry } from './get-config';\nimport { logger } from './logger';\nimport { FirebaseApp } from '@firebase/app';\nimport {\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport { ERROR_FACTORY, AnalyticsError } from './errors';\nimport { findGtagScriptOnPage, insertScriptTag } from './helpers';\nimport { AnalyticsSettings } from './public-types';\nimport {\n  defaultConsentSettingsForInit,\n  _setConsentDefaultForInit,\n  defaultEventParametersForInit,\n  _setDefaultEventParametersForInit\n} from './functions';\n\nasync function validateIndexedDB(): Promise<boolean> {\n  if (!isIndexedDBAvailable()) {\n    logger.warn(\n      ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n        errorInfo: 'IndexedDB is not available in this environment.'\n      }).message\n    );\n    return false;\n  } else {\n    try {\n      await validateIndexedDBOpenable();\n    } catch (e) {\n      logger.warn(\n        ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n          errorInfo: (e as Error)?.toString()\n        }).message\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Initialize the analytics instance in gtag.js by calling config command with fid.\n *\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\n * part of the `page_view` event that's sent during the initialization\n * @param app Firebase app\n * @param gtagCore The gtag function that's not wrapped.\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\n * @param measurementIdToAppId Maps measurementID to appID.\n * @param installations _FirebaseInstallationsInternal instance.\n *\n * @returns Measurement ID.\n */\nexport async function _initializeAnalytics(\n  app: FirebaseApp,\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [key: string]: string },\n  installations: _FirebaseInstallationsInternal,\n  gtagCore: Gtag,\n  dataLayerName: string,\n  options?: AnalyticsSettings\n): Promise<string> {\n  const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\n  // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\n  dynamicConfigPromise\n    .then(config => {\n      measurementIdToAppId[config.measurementId] = config.appId;\n      if (\n        app.options.measurementId &&\n        config.measurementId !== app.options.measurementId\n      ) {\n        logger.warn(\n          `The measurement ID in the local Firebase config (${app.options.measurementId})` +\n            ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\n            ` To ensure analytics events are always sent to the correct Analytics property,` +\n            ` update the` +\n            ` measurement ID field in the local config or remove it from the local config.`\n        );\n      }\n    })\n    .catch(e => logger.error(e));\n  // Add to list to track state of all dynamic config promises.\n  dynamicConfigPromisesList.push(dynamicConfigPromise);\n\n  const fidPromise: Promise<string | undefined> = validateIndexedDB().then(\n    envIsValid => {\n      if (envIsValid) {\n        return installations.getId();\n      } else {\n        return undefined;\n      }\n    }\n  );\n\n  const [dynamicConfig, fid] = await Promise.all([\n    dynamicConfigPromise,\n    fidPromise\n  ]);\n\n  // Detect if user has already put the gtag <script> tag on this page with the passed in\n  // data layer name.\n  if (!findGtagScriptOnPage(dataLayerName)) {\n    insertScriptTag(dataLayerName, dynamicConfig.measurementId);\n  }\n\n  // Detects if there are consent settings that need to be configured.\n  if (defaultConsentSettingsForInit) {\n    gtagCore(GtagCommand.CONSENT, 'default', defaultConsentSettingsForInit);\n    _setConsentDefaultForInit(undefined);\n  }\n\n  // This command initializes gtag.js and only needs to be called once for the entire web app,\n  // but since it is idempotent, we can call it multiple times.\n  // We keep it together with other initialization logic for better code structure.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (gtagCore as any)('js', new Date());\n  // User config added first. We don't want users to accidentally overwrite\n  // base Firebase config properties.\n  const configProperties: Record<string, unknown> = options?.config ?? {};\n\n  // guard against developers accidentally setting properties with prefix `firebase_`\n  configProperties[ORIGIN_KEY] = 'firebase';\n  configProperties.update = true;\n\n  if (fid != null) {\n    configProperties[GA_FID_KEY] = fid;\n  }\n\n  // It should be the first config command called on this GA-ID\n  // Initialize this GA-ID and set FID on it using the gtag config API.\n  // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\n  // `configProperties`.\n  gtagCore(GtagCommand.CONFIG, dynamicConfig.measurementId, configProperties);\n\n  // Detects if there is data that will be set on every event logged from the SDK.\n  if (defaultEventParametersForInit) {\n    gtagCore(GtagCommand.SET, defaultEventParametersForInit);\n    _setDefaultEventParametersForInit(undefined);\n  }\n\n  return dynamicConfig.measurementId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsOptions, Analytics, AnalyticsSettings } from './public-types';\nimport { Gtag, DynamicConfig, MinimalDynamicConfig } from './types';\nimport { getOrCreateDataLayer, wrapOrCreateGtag } from './helpers';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { areCookiesEnabled, isBrowserExtension } from '@firebase/util';\nimport { _initializeAnalytics } from './initialize-analytics';\nimport { logger } from './logger';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\n\n/**\n * Analytics Service class.\n */\nexport class AnalyticsService implements Analytics, _FirebaseService {\n  constructor(public app: FirebaseApp) {}\n  _delete(): Promise<void> {\n    delete initializationPromisesMap[this.app.options.appId!];\n    return Promise.resolve();\n  }\n}\n\n/**\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\n * all or some of these, depending on the call's `send_to` param and the status\n * of the dynamic config fetches (see below).\n */\nexport let initializationPromisesMap: {\n  [appId: string]: Promise<string>; // Promise contains measurement ID string.\n} = {};\n\n/**\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\n * wait on all these to be complete in order to determine if it can selectively\n * wait for only certain initialization (FID) promises or if it must wait for all.\n */\nlet dynamicConfigPromisesList: Array<\n  Promise<DynamicConfig | MinimalDynamicConfig>\n> = [];\n\n/**\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\n * fetch completes. If already populated, gtag config calls can use this to\n * selectively wait for only this app's initialization promise (FID) instead of all\n * initialization promises.\n */\nconst measurementIdToAppId: { [measurementId: string]: string } = {};\n\n/**\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\n */\nlet dataLayerName: string = 'dataLayer';\n\n/**\n * Name for window global gtag function used by GA: defaults to 'gtag'.\n */\nlet gtagName: string = 'gtag';\n\n/**\n * Reproduction of standard gtag function or reference to existing\n * gtag function on window object.\n */\nlet gtagCoreFunction: Gtag;\n\n/**\n * Wrapper around gtag function that ensures FID is sent with all\n * relevant event and config calls.\n */\nexport let wrappedGtagFunction: Gtag;\n\n/**\n * Flag to ensure page initialization steps (creation or wrapping of\n * dataLayer and gtag script) are only run once per page load.\n */\nlet globalInitDone: boolean = false;\n\n/**\n * For testing\n * @internal\n */\nexport function resetGlobalVars(\n  newGlobalInitDone = false,\n  newInitializationPromisesMap = {},\n  newDynamicPromises = []\n): void {\n  globalInitDone = newGlobalInitDone;\n  initializationPromisesMap = newInitializationPromisesMap;\n  dynamicConfigPromisesList = newDynamicPromises;\n  dataLayerName = 'dataLayer';\n  gtagName = 'gtag';\n}\n\n/**\n * For testing\n * @internal\n */\nexport function getGlobalVars(): {\n  initializationPromisesMap: { [appId: string]: Promise<string> };\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >;\n} {\n  return {\n    initializationPromisesMap,\n    dynamicConfigPromisesList\n  };\n}\n\n/**\n * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.\n * Intended to be used if `gtag.js` script has been installed on\n * this page independently of Firebase Analytics, and is using non-default\n * names for either the `gtag` function or for `dataLayer`.\n * Must be called before calling `getAnalytics()` or it won't\n * have any effect.\n *\n * @public\n *\n * @param options - Custom gtag and dataLayer names.\n */\nexport function settings(options: SettingsOptions): void {\n  if (globalInitDone) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_INITIALIZED);\n  }\n  if (options.dataLayerName) {\n    dataLayerName = options.dataLayerName;\n  }\n  if (options.gtagName) {\n    gtagName = options.gtagName;\n  }\n}\n\n/**\n * Returns true if no environment mismatch is found.\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\n * error that also lists details for each mismatch found.\n */\nfunction warnOnBrowserContextMismatch(): void {\n  const mismatchedEnvMessages = [];\n  if (isBrowserExtension()) {\n    mismatchedEnvMessages.push('This is a browser extension environment.');\n  }\n  if (!areCookiesEnabled()) {\n    mismatchedEnvMessages.push('Cookies are not available.');\n  }\n  if (mismatchedEnvMessages.length > 0) {\n    const details = mismatchedEnvMessages\n      .map((message, index) => `(${index + 1}) ${message}`)\n      .join(' ');\n    const err = ERROR_FACTORY.create(AnalyticsError.INVALID_ANALYTICS_CONTEXT, {\n      errorInfo: details\n    });\n    logger.warn(err.message);\n  }\n}\n\n/**\n * Analytics instance factory.\n * @internal\n */\nexport function factory(\n  app: FirebaseApp,\n  installations: _FirebaseInstallationsInternal,\n  options?: AnalyticsSettings\n): AnalyticsService {\n  warnOnBrowserContextMismatch();\n  const appId = app.options.appId;\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n  if (!app.options.apiKey) {\n    if (app.options.measurementId) {\n      logger.warn(\n        `The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\n          ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config.`\n      );\n    } else {\n      throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n    }\n  }\n  if (initializationPromisesMap[appId] != null) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_EXISTS, {\n      id: appId\n    });\n  }\n\n  if (!globalInitDone) {\n    // Steps here should only be done once per page: creation or wrapping\n    // of dataLayer and global gtag function.\n\n    getOrCreateDataLayer(dataLayerName);\n\n    const { wrappedGtag, gtagCore } = wrapOrCreateGtag(\n      initializationPromisesMap,\n      dynamicConfigPromisesList,\n      measurementIdToAppId,\n      dataLayerName,\n      gtagName\n    );\n    wrappedGtagFunction = wrappedGtag;\n    gtagCoreFunction = gtagCore;\n\n    globalInitDone = true;\n  }\n  // Async but non-blocking.\n  // This map reflects the completion state of all promises for each appId.\n  initializationPromisesMap[appId] = _initializeAnalytics(\n    app,\n    dynamicConfigPromisesList,\n    measurementIdToAppId,\n    installations,\n    gtagCoreFunction,\n    dataLayerName,\n    options\n  );\n\n  const analyticsInstance: AnalyticsService = new AnalyticsService(app);\n\n  return analyticsInstance;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_CREDENTIAL = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_PASSWORD = 'missing-password',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized',\n  RECAPTCHA_NOT_ENABLED = 'recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN = 'missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN = 'invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION = 'invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE = 'missing-client-type',\n  MISSING_RECAPTCHA_VERSION = 'missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION = 'invalid-recaptcha-version',\n  INVALID_REQ_TYPE = 'invalid-req-type',\n  UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION = 'unsupported-password-policy-schema-version',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'password-does-not-meet-requirements'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_CREDENTIAL]:\n      'The supplied auth credential is incorrect, malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_PASSWORD]: 'A non-empty password must be provided',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.',\n    [AuthErrorCode.MISSING_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is invalid when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_ACTION]:\n      'The reCAPTCHA action is invalid when sending request to the backend.',\n    [AuthErrorCode.RECAPTCHA_NOT_ENABLED]:\n      'reCAPTCHA Enterprise integration is not enabled for this project.',\n    [AuthErrorCode.MISSING_CLIENT_TYPE]:\n      'The reCAPTCHA client type is missing when sending request to the backend.',\n    [AuthErrorCode.MISSING_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_REQ_TYPE]: 'Invalid request parameters.',\n    [AuthErrorCode.INVALID_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is invalid when sending request to the backend.',\n    [AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION]:\n      'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.',\n    [AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n      'The password does not meet the requirements.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized',\n  RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n  MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n  INVALID_REQ_TYPE: 'auth/invalid-req-type'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logWarn(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    logClient.warn(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams,\n  prodErrorMap,\n  ErrorMapRetriever\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _errorWithCustomMessage(\n  auth: Auth,\n  code: AuthErrorCode,\n  message: string\n): FirebaseError {\n  const errorMap = {\n    ...(prodErrorMap as ErrorMapRetriever)(),\n    [code]: message\n  };\n  const factory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n    'auth',\n    'Firebase',\n    errorMap\n  );\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\n\nexport function _serverAppCurrentUserOperationNotSupportedError(\n  auth: Auth\n): FirebaseError {\n  return _errorWithCustomMessage(\n    auth,\n    AuthErrorCode.OPERATION_NOT_SUPPORTED,\n    'Operations that alter the current user are not supported in conjunction with FirebaseServerApp'\n  );\n}\n\nexport function _assertInstanceOf(\n  auth: Auth,\n  object: object,\n  instance: unknown\n): void {\n  const constructorInstance = instance as { new (...args: unknown[]): unknown };\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    throw _errorWithCustomMessage(\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR,\n      `Type of ${object.constructor.name} does not match expected instance.` +\n        `Did you pass a reference from a different Auth SDK?`\n    );\n  }\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n      return globalThis.fetch;\n    }\n    if (typeof fetch !== 'undefined') {\n      return fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n      return globalThis.Headers;\n    }\n    if (typeof Headers !== 'undefined') {\n      return Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Response) {\n      return globalThis.Response;\n    }\n    if (typeof Response !== 'undefined') {\n      return Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_LOGIN_CREDENTIALS = 'INVALID_LOGIN_CREDENTIALS',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD',\n  RECAPTCHA_NOT_ENABLED = 'RECAPTCHA_NOT_ENABLED',\n  MISSING_RECAPTCHA_TOKEN = 'MISSING_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_TOKEN = 'INVALID_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_ACTION = 'INVALID_RECAPTCHA_ACTION',\n  MISSING_CLIENT_TYPE = 'MISSING_CLIENT_TYPE',\n  MISSING_RECAPTCHA_VERSION = 'MISSING_RECAPTCHA_VERSION',\n  INVALID_RECAPTCHA_VERSION = 'INVALID_RECAPTCHA_VERSION',\n  INVALID_REQ_TYPE = 'INVALID_REQ_TYPE',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'PASSWORD_DOES_NOT_MEET_REQUIREMENTS'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.MISSING_PASSWORD,\n  // Thrown if Email Enumeration Protection is enabled in the project and the email or password is\n  // invalid.\n  [ServerError.INVALID_LOGIN_CREDENTIALS]: AuthErrorCode.INVALID_CREDENTIAL,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n  [ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n    AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Recaptcha related errors.\n  [ServerError.RECAPTCHA_NOT_ENABLED]: AuthErrorCode.RECAPTCHA_NOT_ENABLED,\n  [ServerError.MISSING_RECAPTCHA_TOKEN]: AuthErrorCode.MISSING_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_TOKEN]: AuthErrorCode.INVALID_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_ACTION]:\n    AuthErrorCode.INVALID_RECAPTCHA_ACTION,\n  [ServerError.MISSING_CLIENT_TYPE]: AuthErrorCode.MISSING_CLIENT_TYPE,\n  [ServerError.MISSING_RECAPTCHA_VERSION]:\n    AuthErrorCode.MISSING_RECAPTCHA_VERSION,\n  [ServerError.INVALID_RECAPTCHA_VERSION]:\n    AuthErrorCode.INVALID_RECAPTCHA_VERSION,\n  [ServerError.INVALID_REQ_TYPE]: AuthErrorCode.INVALID_REQ_TYPE\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client',\n  X_FIREBASE_APP_CHECK = 'X-Firebase-AppCheck'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects',\n  GET_RECAPTCHA_CONFIG = '/v2/recaptchaConfig',\n  GET_PASSWORD_POLICY = '/v2/passwordPolicy',\n  TOKEN = '/v1/token',\n  REVOKE_TOKEN = '/v2/accounts:revokeToken'\n}\n\nexport const enum RecaptchaClientType {\n  WEB = 'CLIENT_TYPE_WEB',\n  ANDROID = 'CLIENT_TYPE_ANDROID',\n  IOS = 'CLIENT_TYPE_IOS'\n}\n\nexport const enum RecaptchaVersion {\n  ENTERPRISE = 'RECAPTCHA_ENTERPRISE'\n}\n\nexport const enum RecaptchaActionName {\n  SIGN_IN_WITH_PASSWORD = 'signInWithPassword',\n  GET_OOB_CODE = 'getOobCode',\n  SIGN_UP_PASSWORD = 'signUpPassword'\n}\n\nexport const enum EnforcementState {\n  ENFORCE = 'ENFORCE',\n  AUDIT = 'AUDIT',\n  OFF = 'OFF',\n  ENFORCEMENT_STATE_UNSPECIFIED = 'ENFORCEMENT_STATE_UNSPECIFIED'\n}\n\n// Providers that have reCAPTCHA Enterprise support.\nexport const enum RecaptchaProvider {\n  EMAIL_PASSWORD_PROVIDER = 'EMAIL_PASSWORD_PROVIDER'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    // Changing this to a different error code will log user out when there is a network error\n    // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\n    // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED, { 'message': String(e) });\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nexport function _parseEnforcementState(\n  enforcementStateStr: string\n): EnforcementState {\n  switch (enforcementStateStr) {\n    case 'ENFORCE':\n      return EnforcementState.ENFORCE;\n    case 'AUDIT':\n      return EnforcementState.AUDIT;\n    case 'OFF':\n      return EnforcementState.OFF;\n    default:\n      return EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED;\n  }\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RecaptchaParameters } from '../../model/public_types';\nimport {\n  GetRecaptchaConfigResponse,\n  RecaptchaEnforcementProviderState\n} from '../../api/authentication/recaptcha';\nimport { EnforcementState, _parseEnforcementState } from '../../api/index';\n\n// reCAPTCHA v2 interface\nexport interface Recaptcha {\n  render: (container: HTMLElement, parameters: RecaptchaParameters) => number;\n  getResponse: (id: number) => string;\n  execute: (id: number) => unknown;\n  reset: (id: number) => unknown;\n}\n\nexport function isV2(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is Recaptcha {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as Recaptcha).getResponse !== undefined\n  );\n}\n\n// reCAPTCHA Enterprise & v3 shared interface\nexport interface GreCAPTCHATopLevel extends GreCAPTCHA {\n  enterprise: GreCAPTCHA;\n}\n\n// reCAPTCHA Enterprise interface\nexport interface GreCAPTCHA {\n  ready: (callback: () => void) => void;\n  execute: (siteKey: string, options: { action: string }) => Promise<string>;\n  render: (\n    container: string | HTMLElement,\n    parameters: GreCAPTCHARenderOption\n  ) => string;\n}\n\nexport interface GreCAPTCHARenderOption {\n  sitekey: string;\n  size: 'invisible';\n}\n\nexport function isEnterprise(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is GreCAPTCHATopLevel {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as GreCAPTCHATopLevel).enterprise !== undefined\n  );\n}\n\n// TODO(chuanr): Replace this with the AuthWindow after resolving the dependency issue in Node.js env.\ndeclare global {\n  interface Window {\n    grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  }\n}\n\nexport class RecaptchaConfig {\n  /**\n   * The reCAPTCHA site key.\n   */\n  siteKey: string = '';\n\n  /**\n   * The list of providers and their enablement status for reCAPTCHA Enterprise.\n   */\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[] = [];\n\n  constructor(response: GetRecaptchaConfigResponse) {\n    if (response.recaptchaKey === undefined) {\n      throw new Error('recaptchaKey undefined');\n    }\n    // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\n    this.siteKey = response.recaptchaKey.split('/')[3];\n    this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n  }\n\n  /**\n   * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\n   *\n   * @param providerStr - The provider whose enforcement state is to be returned.\n   * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\n   */\n  getProviderEnforcementState(providerStr: string): EnforcementState | null {\n    if (\n      !this.recaptchaEnforcementState ||\n      this.recaptchaEnforcementState.length === 0\n    ) {\n      return null;\n    }\n\n    for (const recaptchaEnforcementState of this.recaptchaEnforcementState) {\n      if (\n        recaptchaEnforcementState.provider &&\n        recaptchaEnforcementState.provider === providerStr\n      ) {\n        return _parseEnforcementState(\n          recaptchaEnforcementState.enforcementState\n        );\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\n   *\n   * @param providerStr - The provider whose enablement state is to be returned.\n   * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\n   */\n  isProviderEnabled(providerStr: string): boolean {\n    return (\n      this.getProviderEnforcementState(providerStr) ===\n        EnforcementState.ENFORCE ||\n      this.getProviderEnforcementState(providerStr) === EnforcementState.AUDIT\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _performApiRequest,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\ninterface GetRecaptchaParamResponse {\n  recaptchaSiteKey?: string;\n}\n\nexport async function getRecaptchaParams(auth: Auth): Promise<string> {\n  return (\n    (\n      await _performApiRequest<void, GetRecaptchaParamResponse>(\n        auth,\n        HttpMethod.GET,\n        Endpoint.GET_RECAPTCHA_PARAM\n      )\n    ).recaptchaSiteKey || ''\n  );\n}\n\n// The following functions are for reCAPTCHA enterprise integration.\ninterface GetRecaptchaConfigRequest {\n  tenantId?: string;\n  clientType?: RecaptchaClientType;\n  version?: RecaptchaVersion;\n}\n\nexport interface RecaptchaEnforcementProviderState {\n  provider: string;\n  enforcementState: string;\n}\n\nexport interface GetRecaptchaConfigResponse {\n  recaptchaKey: string;\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[];\n}\n\nexport async function getRecaptchaConfig(\n  auth: Auth,\n  request: GetRecaptchaConfigRequest\n): Promise<GetRecaptchaConfigResponse> {\n  return _performApiRequest<\n    GetRecaptchaConfigRequest,\n    GetRecaptchaConfigResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_RECAPTCHA_CONFIG,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nexport function extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  _performApiRequest,\n  _addTidIfNecessary,\n  HttpMethod,\n  HttpHeader,\n  Endpoint\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum TokenType {\n  REFRESH_TOKEN = 'REFRESH_TOKEN',\n  ACCESS_TOKEN = 'ACCESS_TOKEN'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport interface RevokeTokenRequest {\n  providerId: string;\n  tokenType: TokenType;\n  token: string;\n  idToken: string;\n  tenantId?: string;\n}\n\nexport interface RevokeTokenResponse {}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n\nexport async function revokeToken(\n  auth: Auth,\n  request: RevokeTokenRequest\n): Promise<RevokeTokenResponse> {\n  return _performApiRequest<RevokeTokenRequest, RevokeTokenResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.REVOKE_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  updateFromIdToken(idToken: string): void {\n    _assert(idToken.length !== 0, AuthErrorCode.INTERNAL_ERROR);\n    const expiresIn = _tokenExpiresIn(idToken);\n    this.updateTokensAndExpiration(idToken, null, expiresIn);\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    _assert(this.refreshToken, auth, AuthErrorCode.TOKEN_EXPIRED);\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string | null,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, UserInfo } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\nimport {\n  APIUserInfo,\n  GetAccountInfoResponse,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { extractProviderData, _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    const newUser = new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n    newUser.metadata._copy(this.metadata);\n    return newUser;\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    if (_isFirebaseServerApp(this.auth.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this.auth)\n      );\n    }\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromGetAccountInfoResponse(\n    auth: AuthInternal,\n    response: GetAccountInfoResponse,\n    idToken: string\n  ): Promise<UserInternal> {\n    const coreAccount = response.users[0];\n    _assert(coreAccount.localId !== undefined, AuthErrorCode.INTERNAL_ERROR);\n\n    const providerData: UserInfo[] =\n      coreAccount.providerUserInfo !== undefined\n        ? extractProviderData(coreAccount.providerUserInfo)\n        : [];\n\n    const isAnonymous =\n      !(coreAccount.email && coreAccount.passwordHash) && !providerData?.length;\n\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromIdToken(idToken);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: coreAccount.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // update the user with data from the GetAccountInfo response.\n    const updates: Partial<UserInternal> = {\n      uid: coreAccount.localId,\n      displayName: coreAccount.displayName || null,\n      photoURL: coreAccount.photoUrl || null,\n      email: coreAccount.email || null,\n      emailVerified: coreAccount.emailVerified || false,\n      phoneNumber: coreAccount.phoneNumber || null,\n      tenantId: coreAccount.tenantId || null,\n      providerData,\n      metadata: new UserMetadata(\n        coreAccount.createdAt,\n        coreAccount.lastLoginAt\n      ),\n      isAnonymous:\n        !(coreAccount.email && coreAccount.passwordHash) &&\n        !providerData?.length\n    };\n\n    Object.assign(user, updates);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker',\n  WEB_EXTENSION = 'WebExtension'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\n/**\n * Request object for fetching the password policy.\n */\nexport interface GetPasswordPolicyRequest {\n  tenantId?: string;\n}\n\n/**\n * Response object for fetching the password policy.\n */\nexport interface GetPasswordPolicyResponse {\n  customStrengthOptions: {\n    minPasswordLength?: number;\n    maxPasswordLength?: number;\n    containsLowercaseCharacter?: boolean;\n    containsUppercaseCharacter?: boolean;\n    containsNumericCharacter?: boolean;\n    containsNonAlphanumericCharacter?: boolean;\n  };\n  allowedNonAlphanumericCharacters?: string[];\n  enforcementState: string;\n  forceUpgradeOnSignin?: boolean;\n  schemaVersion: number;\n}\n\n/**\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\n *\n * @param auth Auth object.\n * @param request Password policy request.\n * @returns Password policy response.\n */\nexport async function _getPasswordPolicy(\n  auth: Auth,\n  request: GetPasswordPolicyRequest = {}\n): Promise<GetPasswordPolicyResponse> {\n  return _performApiRequest<\n    GetPasswordPolicyRequest,\n    GetPasswordPolicyResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PASSWORD_POLICY,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetPasswordPolicyResponse } from '../../api/password_policy/get_password_policy';\nimport {\n  PasswordPolicyCustomStrengthOptions,\n  PasswordPolicyInternal,\n  PasswordValidationStatusInternal\n} from '../../model/password_policy';\nimport { PasswordValidationStatus } from '../../model/public_types';\n\n// Minimum min password length enforced by the backend, even if no minimum length is set.\nconst MINIMUM_MIN_PASSWORD_LENGTH = 6;\n\n/**\n * Stores password policy requirements and provides password validation against the policy.\n *\n * @internal\n */\nexport class PasswordPolicyImpl implements PasswordPolicyInternal {\n  readonly customStrengthOptions: PasswordPolicyCustomStrengthOptions;\n  readonly allowedNonAlphanumericCharacters: string;\n  readonly enforcementState: string;\n  readonly forceUpgradeOnSignin: boolean;\n  readonly schemaVersion: number;\n\n  constructor(response: GetPasswordPolicyResponse) {\n    // Only include custom strength options defined in the response.\n    const responseOptions = response.customStrengthOptions;\n    this.customStrengthOptions = {};\n    // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\n    this.customStrengthOptions.minPasswordLength =\n      responseOptions.minPasswordLength ?? MINIMUM_MIN_PASSWORD_LENGTH;\n    if (responseOptions.maxPasswordLength) {\n      this.customStrengthOptions.maxPasswordLength =\n        responseOptions.maxPasswordLength;\n    }\n    if (responseOptions.containsLowercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsLowercaseLetter =\n        responseOptions.containsLowercaseCharacter;\n    }\n    if (responseOptions.containsUppercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsUppercaseLetter =\n        responseOptions.containsUppercaseCharacter;\n    }\n    if (responseOptions.containsNumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNumericCharacter =\n        responseOptions.containsNumericCharacter;\n    }\n    if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNonAlphanumericCharacter =\n        responseOptions.containsNonAlphanumericCharacter;\n    }\n\n    this.enforcementState = response.enforcementState;\n    if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n      this.enforcementState = 'OFF';\n    }\n\n    // Use an empty string if no non-alphanumeric characters are specified in the response.\n    this.allowedNonAlphanumericCharacters =\n      response.allowedNonAlphanumericCharacters?.join('') ?? '';\n\n    this.forceUpgradeOnSignin = response.forceUpgradeOnSignin ?? false;\n    this.schemaVersion = response.schemaVersion;\n  }\n\n  validatePassword(password: string): PasswordValidationStatus {\n    const status: PasswordValidationStatusInternal = {\n      isValid: true,\n      passwordPolicy: this\n    };\n\n    // Check the password length and character options.\n    this.validatePasswordLengthOptions(password, status);\n    this.validatePasswordCharacterOptions(password, status);\n\n    // Combine the status into single isValid property.\n    status.isValid &&= status.meetsMinPasswordLength ?? true;\n    status.isValid &&= status.meetsMaxPasswordLength ?? true;\n    status.isValid &&= status.containsLowercaseLetter ?? true;\n    status.isValid &&= status.containsUppercaseLetter ?? true;\n    status.isValid &&= status.containsNumericCharacter ?? true;\n    status.isValid &&= status.containsNonAlphanumericCharacter ?? true;\n\n    return status;\n  }\n\n  /**\n   * Validates that the password meets the length options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordLengthOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    const minPasswordLength = this.customStrengthOptions.minPasswordLength;\n    const maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n    if (minPasswordLength) {\n      status.meetsMinPasswordLength = password.length >= minPasswordLength;\n    }\n    if (maxPasswordLength) {\n      status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n    }\n  }\n\n  /**\n   * Validates that the password meets the character options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordCharacterOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    // Assign statuses for requirements even if the password is an empty string.\n    this.updatePasswordCharacterOptionsStatuses(\n      status,\n      /* containsLowercaseCharacter= */ false,\n      /* containsUppercaseCharacter= */ false,\n      /* containsNumericCharacter= */ false,\n      /* containsNonAlphanumericCharacter= */ false\n    );\n\n    let passwordChar;\n    for (let i = 0; i < password.length; i++) {\n      passwordChar = password.charAt(i);\n      this.updatePasswordCharacterOptionsStatuses(\n        status,\n        /* containsLowercaseCharacter= */ passwordChar >= 'a' &&\n          passwordChar <= 'z',\n        /* containsUppercaseCharacter= */ passwordChar >= 'A' &&\n          passwordChar <= 'Z',\n        /* containsNumericCharacter= */ passwordChar >= '0' &&\n          passwordChar <= '9',\n        /* containsNonAlphanumericCharacter= */ this.allowedNonAlphanumericCharacters.includes(\n          passwordChar\n        )\n      );\n    }\n  }\n\n  /**\n   * Updates the running validation status with the statuses for the character options.\n   * Expected to be called each time a character is processed to update each option status\n   * based on the current character.\n   *\n   * @param status Validation status.\n   * @param containsLowercaseCharacter Whether the character is a lowercase letter.\n   * @param containsUppercaseCharacter Whether the character is an uppercase letter.\n   * @param containsNumericCharacter Whether the character is a numeric character.\n   * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\n   */\n  private updatePasswordCharacterOptionsStatuses(\n    status: PasswordValidationStatusInternal,\n    containsLowercaseCharacter: boolean,\n    containsUppercaseCharacter: boolean,\n    containsNumericCharacter: boolean,\n    containsNonAlphanumericCharacter: boolean\n  ): void {\n    if (this.customStrengthOptions.containsLowercaseLetter) {\n      status.containsLowercaseLetter ||= containsLowercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsUppercaseLetter) {\n      status.containsUppercaseLetter ||= containsUppercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsNumericCharacter) {\n      status.containsNumericCharacter ||= containsNumericCharacter;\n    }\n    if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n      status.containsNonAlphanumericCharacter ||=\n        containsNonAlphanumericCharacter;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _isFirebaseServerApp,\n  _FirebaseService,\n  FirebaseApp\n} from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport {\n  RevokeTokenRequest,\n  TokenType,\n  revokeToken\n} from '../../api/authentication/token';\nimport { AuthMiddlewareQueue } from './middleware';\nimport { RecaptchaConfig } from '../../platform_browser/recaptcha/recaptcha';\nimport { _logWarn } from '../util/log';\nimport { _getPasswordPolicy } from '../../api/password_policy/get_password_policy';\nimport { PasswordPolicyInternal } from '../../model/password_policy';\nimport { PasswordPolicyImpl } from './password_policy_impl';\nimport { getAccountInfo } from '../../api/account_management/account';\nimport { UserImpl } from '../user/user_impl';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n  private readonly EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION: number = 1;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  _agentRecaptchaConfig: RecaptchaConfig | null = null;\n  _tenantRecaptchaConfigs: Record<string, RecaptchaConfig> = {};\n  _projectPasswordPolicy: PasswordPolicyInternal | null = null;\n  _tenantPasswordPolicies: Record<string, PasswordPolicyInternal> = {};\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    private readonly appCheckServiceProvider: Provider<AppCheckInternalComponentName>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUserFromIdToken(\n    idToken: string\n  ): Promise<void> {\n    try {\n      const response = await getAccountInfo(this, { idToken });\n      const user = await UserImpl._fromGetAccountInfoResponse(\n        this,\n        response,\n        idToken\n      );\n      await this.directlySetCurrentUser(user);\n    } catch (err) {\n      console.warn(\n        'FirebaseServerApp could not login user with provided authIdToken: ',\n        err\n      );\n      await this.directlySetCurrentUser(null);\n    }\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      const idToken = this.app.settings.authIdToken;\n      if (idToken) {\n        // Start the auth operation in the next tick to allow a moment for the customer's app to\n        // attach an emulator, if desired.\n        return new Promise<void>(resolve => {\n          setTimeout(() =>\n            this.initializeCurrentUserFromIdToken(idToken).then(\n              resolve,\n              resolve\n            )\n          );\n        });\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getRecaptchaConfig(): RecaptchaConfig | null {\n    if (this.tenantId == null) {\n      return this._agentRecaptchaConfig;\n    } else {\n      return this._tenantRecaptchaConfigs[this.tenantId];\n    }\n  }\n\n  async validatePassword(password: string): Promise<PasswordValidationStatus> {\n    if (!this._getPasswordPolicyInternal()) {\n      await this._updatePasswordPolicy();\n    }\n\n    // Password policy will be defined after fetching.\n    const passwordPolicy: PasswordPolicyInternal =\n      this._getPasswordPolicyInternal()!;\n\n    // Check that the policy schema version is supported by the SDK.\n    // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\n    if (\n      passwordPolicy.schemaVersion !==\n      this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION\n    ) {\n      return Promise.reject(\n        this._errorFactory.create(\n          AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION,\n          {}\n        )\n      );\n    }\n\n    return passwordPolicy.validatePassword(password);\n  }\n\n  _getPasswordPolicyInternal(): PasswordPolicyInternal | null {\n    if (this.tenantId === null) {\n      return this._projectPasswordPolicy;\n    } else {\n      return this._tenantPasswordPolicies[this.tenantId];\n    }\n  }\n\n  async _updatePasswordPolicy(): Promise<void> {\n    const response = await _getPasswordPolicy(this);\n\n    const passwordPolicy: PasswordPolicyInternal = new PasswordPolicyImpl(\n      response\n    );\n\n    if (this.tenantId === null) {\n      this._projectPasswordPolicy = passwordPolicy;\n    } else {\n      this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n    }\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  authStateReady(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.currentUser) {\n        resolve();\n      } else {\n        const unsubscribe = this.onAuthStateChanged(() => {\n          unsubscribe();\n          resolve();\n        }, reject);\n      }\n    });\n  }\n\n  /**\n   * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n   */\n  async revokeAccessToken(token: string): Promise<void> {\n    if (this.currentUser) {\n      const idToken = await this.currentUser.getIdToken();\n      // Generalize this to accept other providers once supported.\n      const request: RevokeTokenRequest = {\n        providerId: 'apple.com',\n        tokenType: TokenType.ACCESS_TOKEN,\n        token,\n        idToken\n      };\n      if (this.tenantId != null) {\n        request.tenantId = this.tenantId;\n      }\n      await revokeToken(this, request);\n    }\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    let isUnsubscribed = false;\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => {\n      if (isUnsubscribed) {\n        return;\n      }\n      cb(this.currentUser);\n    });\n\n    if (typeof nextOrObserver === 'function') {\n      const unsubscribe = subscription.addObserver(\n        nextOrObserver,\n        error,\n        completed\n      );\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    } else {\n      const unsubscribe = subscription.addObserver(nextOrObserver);\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n\n    // If the App Check service exists, add the App Check token in the headers\n    const appCheckToken = await this._getAppCheckToken();\n    if (appCheckToken) {\n      headers[HttpHeader.X_FIREBASE_APP_CHECK] = appCheckToken;\n    }\n\n    return headers;\n  }\n\n  async _getAppCheckToken(): Promise<string | undefined> {\n    const appCheckTokenResult = await this.appCheckServiceProvider\n      .getImmediate({ optional: true })\n      ?.getToken();\n    if (appCheckTokenResult?.error) {\n      // Context: appCheck.getToken() will never throw even if an error happened.\n      // In the error case, a dummy token will be returned along with an error field describing\n      // the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      _logWarn(\n        `Error while retrieving App Check token: ${appCheckTokenResult.error}`\n      );\n    }\n    return appCheckTokenResult?.token;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface ExternalJSProvider {\n  loadJS(url: string): Promise<Event>;\n  recaptchaV2Script: string;\n  recaptchaEnterpriseScript: string;\n  gapiScript: string;\n}\n\nlet externalJSProvider: ExternalJSProvider = {\n  async loadJS() {\n    throw new Error('Unable to load external scripts');\n  },\n\n  recaptchaV2Script: '',\n  recaptchaEnterpriseScript: '',\n  gapiScript: ''\n};\n\nexport function _setExternalJSProvider(p: ExternalJSProvider): void {\n  externalJSProvider = p;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  return externalJSProvider.loadJS(url);\n}\n\nexport function _recaptchaV2ScriptUrl(): string {\n  return externalJSProvider.recaptchaV2Script;\n}\n\nexport function _recaptchaEnterpriseScriptUrl(): string {\n  return externalJSProvider.recaptchaEnterpriseScript;\n}\n\nexport function _gapiScriptUrl(): string {\n  return externalJSProvider.gapiScript;\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n","/* eslint-disable @typescript-eslint/no-require-imports */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEnterprise, RecaptchaConfig } from './recaptcha';\nimport { getRecaptchaConfig } from '../../api/authentication/recaptcha';\nimport {\n  RecaptchaClientType,\n  RecaptchaVersion,\n  RecaptchaActionName,\n  RecaptchaProvider\n} from '../../api';\n\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport * as jsHelpers from '../load_js';\nimport { AuthErrorCode } from '../../core/errors';\n\nexport const RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\nexport const FAKE_TOKEN = 'NO_RECAPTCHA';\n\nexport class RecaptchaEnterpriseVerifier {\n  /**\n   * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\n   */\n  readonly type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n\n  private readonly auth: AuthInternal;\n\n  /**\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   */\n  constructor(authExtern: Auth) {\n    this.auth = _castAuth(authExtern);\n  }\n\n  /**\n   * Executes the verification process.\n   *\n   * @returns A Promise for a token that can be used to assert the validity of a request.\n   */\n  async verify(\n    action: string = 'verify',\n    forceRefresh = false\n  ): Promise<string> {\n    async function retrieveSiteKey(auth: AuthInternal): Promise<string> {\n      if (!forceRefresh) {\n        if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n          return auth._agentRecaptchaConfig.siteKey;\n        }\n        if (\n          auth.tenantId != null &&\n          auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined\n        ) {\n          return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\n        }\n      }\n\n      return new Promise<string>(async (resolve, reject) => {\n        getRecaptchaConfig(auth, {\n          clientType: RecaptchaClientType.WEB,\n          version: RecaptchaVersion.ENTERPRISE\n        })\n          .then(response => {\n            if (response.recaptchaKey === undefined) {\n              reject(new Error('recaptcha Enterprise site key undefined'));\n            } else {\n              const config = new RecaptchaConfig(response);\n              if (auth.tenantId == null) {\n                auth._agentRecaptchaConfig = config;\n              } else {\n                auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n              }\n              return resolve(config.siteKey);\n            }\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n    }\n\n    function retrieveRecaptchaToken(\n      siteKey: string,\n      resolve: (value: string | PromiseLike<string>) => void,\n      reject: (reason?: unknown) => void\n    ): void {\n      const grecaptcha = window.grecaptcha;\n      if (isEnterprise(grecaptcha)) {\n        grecaptcha.enterprise.ready(() => {\n          grecaptcha.enterprise\n            .execute(siteKey, { action })\n            .then(token => {\n              resolve(token);\n            })\n            .catch(() => {\n              resolve(FAKE_TOKEN);\n            });\n        });\n      } else {\n        reject(Error('No reCAPTCHA enterprise script loaded.'));\n      }\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      retrieveSiteKey(this.auth)\n        .then(siteKey => {\n          if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n            retrieveRecaptchaToken(siteKey, resolve, reject);\n          } else {\n            if (typeof window === 'undefined') {\n              reject(\n                new Error('RecaptchaVerifier is only supported in browser')\n              );\n              return;\n            }\n            let url = jsHelpers._recaptchaEnterpriseScriptUrl();\n            if (url.length !== 0) {\n              url += siteKey;\n            }\n            jsHelpers\n              ._loadJS(url)\n              .then(() => {\n                retrieveRecaptchaToken(siteKey, resolve, reject);\n              })\n              .catch(error => {\n                reject(error);\n              });\n          }\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n}\n\nexport async function injectRecaptchaFields<T>(\n  auth: AuthInternal,\n  request: T,\n  action: RecaptchaActionName,\n  captchaResp = false\n): Promise<T> {\n  const verifier = new RecaptchaEnterpriseVerifier(auth);\n  let captchaResponse;\n  try {\n    captchaResponse = await verifier.verify(action);\n  } catch (error) {\n    captchaResponse = await verifier.verify(action, true);\n  }\n  const newRequest = { ...request };\n  if (!captchaResp) {\n    Object.assign(newRequest, { captchaResponse });\n  } else {\n    Object.assign(newRequest, { 'captchaResp': captchaResponse });\n  }\n  Object.assign(newRequest, { 'clientType': RecaptchaClientType.WEB });\n  Object.assign(newRequest, {\n    'recaptchaVersion': RecaptchaVersion.ENTERPRISE\n  });\n  return newRequest;\n}\n\ntype ActionMethod<TRequest, TResponse> = (\n  auth: Auth,\n  request: TRequest\n) => Promise<TResponse>;\n\nexport async function handleRecaptchaFlow<TRequest, TResponse>(\n  authInstance: AuthInternal,\n  request: TRequest,\n  actionName: RecaptchaActionName,\n  actionMethod: ActionMethod<TRequest, TResponse>\n): Promise<TResponse> {\n  if (\n    authInstance\n      ._getRecaptchaConfig()\n      ?.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)\n  ) {\n    const requestWithRecaptcha = await injectRecaptchaFields(\n      authInstance,\n      request,\n      actionName,\n      actionName === RecaptchaActionName.GET_OOB_CODE\n    );\n    return actionMethod(authInstance, requestWithRecaptcha);\n  } else {\n    return actionMethod(authInstance, request).catch(async error => {\n      if (error.code === `auth/${AuthErrorCode.MISSING_RECAPTCHA_TOKEN}`) {\n        console.log(\n          `${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`\n        );\n        const requestWithRecaptcha = await injectRecaptchaFields(\n          authInstance,\n          request,\n          actionName,\n          actionName === RecaptchaActionName.GET_OOB_CODE\n        );\n        return actionMethod(authInstance, requestWithRecaptcha);\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n}\n\nexport async function _initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n\n  const response = await getRecaptchaConfig(authInternal, {\n    clientType: RecaptchaClientType.WEB,\n    version: RecaptchaVersion.ENTERPRISE\n  });\n\n  const config = new RecaptchaConfig(response);\n  if (authInternal.tenantId == null) {\n    authInternal._agentRecaptchaConfig = config;\n  } else {\n    authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n  }\n\n  if (config.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)) {\n    const verifier = new RecaptchaEnterpriseVerifier(authInternal);\n    void verifier.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\nimport { SignUpRequest, SignUpResponse } from '../authentication/sign_up';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\n// Used for linking an email/password account to an existing idToken. Uses the same request/response\n// format as updateEmailPassword.\nexport async function linkEmailPassword(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performApiRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    request\n  );\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { linkEmailPassword } from '../../api/account_management/email_and_password';\nimport {\n  signInWithPassword,\n  SignInWithPasswordRequest\n} from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { SignUpRequest } from '../../api/authentication/sign_up';\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignInWithPasswordRequest = {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_IN_WITH_PASSWORD,\n          signInWithPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignUpRequest = {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_UP_PASSWORD,\n          linkEmailPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\n * or a `TOKEN_EXPIRED` error.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeInfo,\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as account from '../../api/account_management/email_and_password';\nimport * as authentication from '../../api/authentication/email_and_password';\nimport { signUp, SignUpRequest } from '../../api/authentication/sign_up';\nimport { MultiFactorInfoImpl } from '../../mfa/mfa_info';\nimport { EmailAuthProvider } from '../providers/email';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { _castAuth } from '../auth/auth_impl';\nimport { AuthErrorCode } from '../errors';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Updates the password policy cached in the {@link Auth} instance if a policy is already\n * cached for the project or tenant.\n *\n * @remarks\n * We only fetch the password policy if the password did not meet policy requirements and\n * there is an existing policy cached. A developer must call validatePassword at least\n * once for the cache to be automatically updated.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @private\n */\nasync function recachePasswordPolicy(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n  if (authInternal._getPasswordPolicyInternal()) {\n    await authInternal._updatePasswordPolicy();\n  }\n}\n\n/**\n * Sends a password reset email to the given email address. This method does not throw an error when\n * there's no user account with the given email address and\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings?: ActionCodeSettings\n): Promise<void> {\n  const authInternal = _castAuth(auth);\n  const request: authentication.PasswordResetRequest = {\n    requestType: ActionCodeOperation.PASSWORD_RESET,\n    email,\n    clientType: RecaptchaClientType.WEB\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n  }\n  await handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.GET_OOB_CODE,\n    authentication.sendPasswordResetEmail\n  );\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport async function confirmPasswordReset(\n  auth: Auth,\n  oobCode: string,\n  newPassword: string\n): Promise<void> {\n  await account\n    .resetPassword(getModularInstance(auth), {\n      oobCode,\n      newPassword\n    })\n    .catch(async error => {\n      if (\n        error.code ===\n        `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n      ) {\n        void recachePasswordPolicy(auth);\n      }\n\n      throw error;\n    });\n  // Do not return the email.\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function applyActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<void> {\n  await account.applyActionCode(getModularInstance(auth), { oobCode });\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function checkActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<ActionCodeInfo> {\n  const authModular = getModularInstance(auth);\n  const response = await account.resetPassword(authModular, { oobCode });\n\n  // Email could be empty only if the request type is EMAIL_SIGNIN or\n  // VERIFY_AND_CHANGE_EMAIL.\n  // New email should not be empty if the request type is\n  // VERIFY_AND_CHANGE_EMAIL.\n  // Multi-factor info could not be empty if the request type is\n  // REVERT_SECOND_FACTOR_ADDITION.\n  const operation = response.requestType;\n  _assert(operation, authModular, AuthErrorCode.INTERNAL_ERROR);\n  switch (operation) {\n    case ActionCodeOperation.EMAIL_SIGNIN:\n      break;\n    case ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL:\n      _assert(response.newEmail, authModular, AuthErrorCode.INTERNAL_ERROR);\n      break;\n    case ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION:\n      _assert(response.mfaInfo, authModular, AuthErrorCode.INTERNAL_ERROR);\n    // fall through\n    default:\n      _assert(response.email, authModular, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  // The multi-factor info for revert second factor addition\n  let multiFactorInfo: MultiFactorInfoImpl | null = null;\n  if (response.mfaInfo) {\n    multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(\n      _castAuth(authModular),\n      response.mfaInfo\n    );\n  }\n\n  return {\n    data: {\n      email:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.newEmail\n          : response.email) || null,\n      previousEmail:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.email\n          : response.newEmail) || null,\n      multiFactorInfo\n    },\n    operation\n  };\n}\n\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The {@link Auth} instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nexport async function verifyPasswordResetCode(\n  auth: Auth,\n  code: string\n): Promise<string> {\n  const { data } = await checkActionCode(getModularInstance(auth), code);\n  // Email should always be present since a code was sent to it\n  return data.email!;\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nexport async function createUserWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const request: SignUpRequest = {\n    returnSecureToken: true,\n    email,\n    password,\n    clientType: RecaptchaClientType.WEB\n  };\n  const signUpResponse: Promise<IdTokenResponse> = handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.SIGN_UP_PASSWORD,\n    signUp\n  );\n  const response = await signUpResponse.catch(error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match. When\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled, this method fails with \"auth/invalid-credential\" in case of an invalid\n * email/password.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nexport function signInWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  return signInWithCredential(\n    getModularInstance(auth),\n    EmailAuthProvider.credential(email, password)\n  ).catch(async error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../model/public_types';\nimport { _initializeRecaptchaConfig } from '../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { _castAuth } from '../core/auth/auth_impl';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n\n/**\n * Loads the reCAPTCHA configuration into the `Auth` instance.\n *\n * @remarks\n * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\n * verification flow should be triggered for each auth provider, into the\n * current Auth session.\n *\n * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\n * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\n * verification, the SDK will transparently load the reCAPTCHA config and restart the\n * auth flows.\n *\n * Thus, by calling this optional method, you will reduce the latency of future auth flows.\n * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * initializeRecaptchaConfig(auth);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  return _initializeRecaptchaConfig(auth);\n}\n\n/**\n * Validates the password against the password policy configured for the project or tenant.\n *\n * @remarks\n * If no tenant ID is set on the `Auth` instance, then this method will use the password\n * policy configured for the project. Otherwise, this method will use the policy configured\n * for the tenant. If a password policy has not been configured, then the default policy\n * configured for all projects will be used.\n *\n * If an auth flow fails because a submitted password does not meet the password policy\n * requirements and this method has previously been called, then this method will use the\n * most recent policy available when called again.\n *\n * @example\n * ```javascript\n * validatePassword(auth, 'some-password');\n * ```\n *\n * @param auth The {@link Auth} instance.\n * @param password The password to validate.\n *\n * @public\n */\nexport async function validatePassword(\n  auth: Auth,\n  password: string\n): Promise<PasswordValidationStatus> {\n  const authInternal = _castAuth(auth);\n  return authInternal.validatePassword(password);\n}\n\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @remarks\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\n/**\n * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n *\n * @param auth - The {@link Auth} instance.\n * @param token - The Apple OAuth access token.\n *\n * @public\n */\nexport function revokeAccessToken(auth: Auth, token: string): Promise<void> {\n  const authInternal = _castAuth(auth);\n  return authInternal.revokeAccessToken(token);\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API.\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification.\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * An MFA provided by TOTP (Time-based One Time Password).\n */\nexport interface TotpMfaEnrollment extends BaseMfaEnrollment {}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment and TotpMfaEnrollment are supported.\n */\nexport type MfaEnrollment = PhoneMfaEnrollment | TotpMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: StartPhoneMfaEnrollmentRequest\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: FinalizePhoneMfaEnrollmentRequest\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface StartTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpEnrollmentInfo: {};\n  tenantId?: string;\n}\n\nexport interface StartTotpMfaEnrollmentResponse {\n  totpSessionInfo: {\n    sharedSecretKey: string;\n    verificationCodeLength: number;\n    hashingAlgorithm: string;\n    periodSec: number;\n    sessionInfo: string;\n    finalizeEnrollmentTime: number;\n  };\n}\n\nexport function startEnrollTotpMfa(\n  auth: AuthInternal,\n  request: StartTotpMfaEnrollmentRequest\n): Promise<StartTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartTotpMfaEnrollmentRequest,\n    StartTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface TotpVerificationInfo {\n  sessionInfo: string;\n  verificationCode: string;\n}\nexport interface FinalizeTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpVerificationInfo: TotpVerificationInfo;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizeTotpMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollTotpMfa(\n  auth: AuthInternal,\n  request: FinalizeTotpMfaEnrollmentRequest\n): Promise<FinalizeTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaEnrollmentRequest,\n    FinalizeTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId?: string;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: WithdrawMfaRequest\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    try {\n      const idTokenResponse = await _logoutIfInvalidated(\n        this.user,\n        withdrawMfa(this.user.auth, {\n          idToken,\n          mfaEnrollmentId\n        })\n      );\n      // Remove the second factor from the user's list.\n      this.enrolledFactors = this.enrolledFactors.filter(\n        ({ uid }) => uid !== mfaEnrollmentId\n      );\n      // Depending on whether the backend decided to revoke the user's session,\n      // the tokenResponse may be empty. If the tokens were not updated (and they\n      // are now invalid), reloading the user will discover this and invalidate\n      // the user's state accordingly.\n      await this.user._updateTokensIfNecessary(idTokenResponse);\n      await this.user.reload();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(() => window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined =\n      this.handlersMap[eventType];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix = '', digits = 10): string {\n  let random = '';\n  for (let i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha, GreCAPTCHATopLevel } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return window as unknown as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? (self as unknown as ServiceWorker) : null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    if (result.length !== 0) {\n      for (const { fbase_key: key, value } of result) {\n        keysInResult.add(key);\n        if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n          this.notifyListeners(key, value as PersistenceValue);\n          keys.push(key);\n        }\n      }\n    }\n\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\n/**\n * @internal\n */\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: StartPhoneMfaSignInRequest\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId?: string;\n}\n\n// TOTP MFA Sign in only has a finalize phase. Phone MFA has a start phase to initiate sending an\n// SMS and a finalize phase to complete sign in. With TOTP, the user already has the OTP in the\n// TOTP/Authenticator app.\nexport interface FinalizeTotpMfaSignInRequest {\n  mfaPendingCredential: string;\n  totpVerificationInfo: { verificationCode: string };\n  tenantId?: string;\n  mfaEnrollmentId: string;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport interface FinalizeTotpMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: FinalizePhoneMfaSignInRequest\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport function finalizeSignInTotpMfa(\n  auth: Auth,\n  request: FinalizeTotpMfaSignInRequest\n): Promise<FinalizeTotpMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaSignInRequest,\n    FinalizeTotpMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha, isV2 } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\n      return Promise.resolve(_window().grecaptcha! as Recaptcha);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha as Recaptcha;\n\n        if (!recaptcha || !isV2(recaptcha)) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${jsHelpers._recaptchaV2ScriptUrl()}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @remarks\n * `RecaptchaVerifier` does not work in a Node.js environment.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   */\n  constructor(\n    authExtern: Auth,\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    }\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  await _link(userInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @remarks\n * `PhoneAuthProvider` does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer\n{\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    protected readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e as Error);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e as Error);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _assert,\n  debugAssert,\n  _createError,\n  _assertInstanceOf\n} from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay. Set this to 8s since\n * blocking functions can take upto 7s to complete sign in, as documented in:\n * https://cloud.google.com/identity-platform/docs/blocking-functions#understanding_blocking_functions\n * https://firebase.google.com/docs/auth/extend-with-blocking-functions#understanding_blocking_functions\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 8000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _createError(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _createError(userInternal.auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight. This is specifically true for\n        // Firefox or if the opener is in an iframe, in which case the oauth\n        // helper closes the popup.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    // If we're not bypassing auth state, the ready outcome should be set to\n    // null.\n    if (!this.bypassAuthState) {\n      redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const persistence = resolverPersistence(resolver);\n  if (!(await persistence._isAvailable())) {\n    return false;\n  }\n  const hasPendingRedirect = (await persistence._get(key)) === 'true';\n  await persistence._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nexport function _overrideRedirectResult(\n  auth: AuthInternal,\n  result: () => Promise<UserCredentialInternal | null>\n): void {\n  redirectOutcomeMap.set(auth._key(), result);\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport {\n  _assertInstanceOf,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link signInWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await authInternal._initializationPromise;\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link reauthenticateWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Reauthenticate using a redirect.\n * await reauthenticateWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link linkWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns `null`.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {\n  androidPackageName?: string;\n  iosBundleId?: string;\n}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth,\n  request: GetProjectConfigRequest = {}\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js\n        ._loadJS(`${js._gapiScriptUrl()}?onload=${cbName}`)\n        .catch(e => reject(e));\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n/**\n * Fragment name for the App Check token that gets passed to the widget\n *\n * @internal\n */\nconst FIREBASE_APP_CHECK_FRAGMENT_ID = encodeURIComponent('fac');\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport async function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): Promise<string> {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n\n  // Sets the App Check token to pass to the widget\n  const appCheckToken = await auth._getAppCheckToken();\n  const appCheckTokenFragment = appCheckToken\n    ? `#${FIREBASE_APP_CHECK_FRAGMENT_ID}=${encodeURIComponent(appCheckToken)}`\n    : '';\n\n  // Start at index 1 to skip the leading '&' in the query string\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(\n    1\n  )}${appCheckTokenFragment}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\nimport { _overrideRedirectResult } from '../core/strategies/redirect';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    _setWindowLocation(url);\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n\n    // If the promise is rejected, the key should be removed so that the\n    // operation can be retried later.\n    promise.catch(() => {\n      delete this.eventManagers[key];\n    });\n\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n\n  _overrideRedirectResult = _overrideRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver =\n  BrowserPopupRedirectResolver;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion\n{\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @remarks\n   * This method does not work in a Node.js environment.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n\n  /**\n   * The identifier of the phone second factor: `phone`.\n   */\n  static FACTOR_ID = 'phone';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  TotpMultiFactorAssertion,\n  MultiFactorSession,\n  FactorId\n} from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  finalizeEnrollTotpMfa,\n  startEnrollTotpMfa,\n  StartTotpMfaEnrollmentResponse,\n  TotpVerificationInfo\n} from '../../api/account_management/mfa';\nimport {\n  FinalizeMfaResponse,\n  finalizeSignInTotpMfa\n} from '../../api/authentication/mfa';\nimport { MultiFactorAssertionImpl } from '../../mfa/mfa_assertion';\nimport { MultiFactorSessionImpl } from '../mfa_session';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * @public\n */\nexport class TotpMultiFactorGenerator {\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\n   * the TOTP (time-based one-time password) second factor.\n   * This assertion is used to complete enrollment in TOTP second factor.\n   *\n   * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorUser.enroll}.\n   */\n  static assertionForEnrollment(\n    secret: TotpSecret,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n  }\n\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\n   * This assertion is used to complete signIn with TOTP as the second factor.\n   *\n   * @param enrollmentId identifies the enrolled TOTP second factor.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}.\n   */\n  static assertionForSignIn(\n    enrollmentId: string,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromEnrollmentId(\n      enrollmentId,\n      oneTimePassword\n    );\n  }\n\n  /**\n   * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\n   * Creates a TOTP secret as part of enrolling a TOTP second factor.\n   * Used for generating a QR code URL or inputting into a TOTP app.\n   * This method uses the auth instance corresponding to the user in the multiFactorSession.\n   *\n   * @param session The {@link MultiFactorSession} that the user is part of.\n   * @returns A promise to {@link TotpSecret}.\n   */\n  static async generateSecret(\n    session: MultiFactorSession\n  ): Promise<TotpSecret> {\n    const mfaSession = session as MultiFactorSessionImpl;\n    _assert(\n      typeof mfaSession.user?.auth !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const response = await startEnrollTotpMfa(mfaSession.user.auth, {\n      idToken: mfaSession.credential,\n      totpEnrollmentInfo: {}\n    });\n    return TotpSecret._fromStartTotpMfaEnrollmentResponse(\n      response,\n      mfaSession.user.auth\n    );\n  }\n\n  /**\n   * The identifier of the TOTP second factor: `totp`.\n   */\n  static FACTOR_ID: 'totp' = FactorId.TOTP;\n}\n\nexport class TotpMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements TotpMultiFactorAssertion\n{\n  constructor(\n    readonly otp: string,\n    readonly enrollmentId?: string,\n    readonly secret?: TotpSecret\n  ) {\n    super(FactorId.TOTP);\n  }\n\n  /** @internal */\n  static _fromSecret(\n    secret: TotpSecret,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n  }\n\n  /** @internal */\n  static _fromEnrollmentId(\n    enrollmentId: string,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n  }\n\n  /** @internal */\n  async _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      typeof this.secret !== 'undefined',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return finalizeEnrollTotpMfa(auth, {\n      idToken,\n      displayName,\n      totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n    });\n  }\n\n  /** @internal */\n  async _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      this.enrollmentId !== undefined && this.otp !== undefined,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    const totpVerificationInfo = { verificationCode: this.otp };\n    return finalizeSignInTotpMfa(auth, {\n      mfaPendingCredential,\n      mfaEnrollmentId: this.enrollmentId,\n      totpVerificationInfo\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * Stores the shared secret key and other parameters to generate time-based OTPs.\n * Implements methods to retrieve the shared secret key and generate a QR code URL.\n * @public\n */\nexport class TotpSecret {\n  /**\n   * Shared secret key/seed used for enrolling in TOTP MFA and generating OTPs.\n   */\n  readonly secretKey: string;\n  /**\n   * Hashing algorithm used.\n   */\n  readonly hashingAlgorithm: string;\n  /**\n   * Length of the one-time passwords to be generated.\n   */\n  readonly codeLength: number;\n  /**\n   * The interval (in seconds) when the OTP codes should change.\n   */\n  readonly codeIntervalSeconds: number;\n  /**\n   * The timestamp (UTC string) by which TOTP enrollment should be completed.\n   */\n  // This can be used by callers to show a countdown of when to enter OTP code by.\n  readonly enrollmentCompletionDeadline: string;\n\n  // The public members are declared outside the constructor so the docs can be generated.\n  private constructor(\n    secretKey: string,\n    hashingAlgorithm: string,\n    codeLength: number,\n    codeIntervalSeconds: number,\n    enrollmentCompletionDeadline: string,\n    private readonly sessionInfo: string,\n    private readonly auth: AuthInternal\n  ) {\n    this.secretKey = secretKey;\n    this.hashingAlgorithm = hashingAlgorithm;\n    this.codeLength = codeLength;\n    this.codeIntervalSeconds = codeIntervalSeconds;\n    this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n  }\n\n  /** @internal */\n  static _fromStartTotpMfaEnrollmentResponse(\n    response: StartTotpMfaEnrollmentResponse,\n    auth: AuthInternal\n  ): TotpSecret {\n    return new TotpSecret(\n      response.totpSessionInfo.sharedSecretKey,\n      response.totpSessionInfo.hashingAlgorithm,\n      response.totpSessionInfo.verificationCodeLength,\n      response.totpSessionInfo.periodSec,\n      new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(),\n      response.totpSessionInfo.sessionInfo,\n      auth\n    );\n  }\n\n  /** @internal */\n  _makeTotpVerificationInfo(otp: string): TotpVerificationInfo {\n    return { sessionInfo: this.sessionInfo, verificationCode: otp };\n  }\n\n  /**\n   * Returns a QR code URL as described in\n   * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n   * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\n   * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\n   *\n   * @param accountName the name of the account/app along with a user identifier.\n   * @param issuer issuer of the TOTP (likely the app name).\n   * @returns A QR code URL string.\n   */\n  generateQrCodeUrl(accountName?: string, issuer?: string): string {\n    let useDefaults = false;\n    if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n      useDefaults = true;\n    }\n    if (useDefaults) {\n      if (_isEmptyString(accountName)) {\n        accountName = this.auth.currentUser?.email || 'unknownuser';\n      }\n      if (_isEmptyString(issuer)) {\n        issuer = this.auth.name;\n      }\n    }\n    return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\n  }\n}\n\n/** @internal */\nfunction _isEmptyString(input?: string): boolean {\n  return typeof input === 'undefined' || input?.length === 0;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    case ClientPlatform.WEB_EXTENSION:\n      return 'web-extension';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const heartbeatServiceProvider =\n          container.getProvider<'heartbeat'>('heartbeat');\n        const appCheckServiceProvider =\n          container.getProvider<'app-check-internal'>('app-check-internal');\n        const { apiKey, authDomain } = app.options;\n\n        _assert(\n          apiKey && !apiKey.includes(':'),\n          AuthErrorCode.INVALID_API_KEY,\n          { appName: app.name }\n        );\n\n        const config: ConfigInternal = {\n          apiKey,\n          authDomain,\n          clientPlatform,\n          apiHost: DefaultConfig.API_HOST,\n          tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n          apiScheme: DefaultConfig.API_SCHEME,\n          sdkClientVersion: _getClientVersion(clientPlatform)\n        };\n\n        const authInstance = new AuthImpl(\n          app,\n          heartbeatServiceProvider,\n          appCheckServiceProvider,\n          config\n        );\n        _initializeAuthInstance(authInstance, deps);\n\n        return authInstance;\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\n\nimport {\n  initializeAuth,\n  beforeAuthStateChanged,\n  onIdTokenChanged,\n  connectAuthEmulator\n} from '..';\nimport { registerAuth } from '../core/auth/register';\nimport { ClientPlatform } from '../core/util/version';\nimport { browserLocalPersistence } from './persistence/local_storage';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { indexedDBLocalPersistence } from './persistence/indexed_db';\nimport { browserPopupRedirectResolver } from './popup_redirect';\nimport { Auth, User } from '../model/public_types';\nimport { getDefaultEmulatorHost, getExperimentalSetting } from '@firebase/util';\nimport { _setExternalJSProvider } from './load_js';\nimport { _createError } from '../core/util/assert';\nimport { AuthErrorCode } from '../core/errors';\n\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nconst authIdTokenMaxAge =\n  getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\n\nlet lastPostedIdToken: string | undefined | null = null;\n\nconst mintCookieFactory = (url: string) => async (user: User | null) => {\n  const idTokenResult = user && (await user.getIdTokenResult());\n  const idTokenAge =\n    idTokenResult &&\n    (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1_000;\n  if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n    return;\n  }\n  // Specifically trip null => undefined when logged out, to delete any existing cookie\n  const idToken = idTokenResult?.token;\n  if (lastPostedIdToken === idToken) {\n    return;\n  }\n  lastPostedIdToken = idToken;\n  await fetch(url, {\n    method: idToken ? 'POST' : 'DELETE',\n    headers: idToken\n      ? {\n          'Authorization': `Bearer ${idToken}`\n        }\n      : {}\n  });\n};\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [\n      indexedDBLocalPersistence,\n      browserLocalPersistence,\n      browserSessionPersistence\n    ]\n  });\n\n  const authTokenSyncPath = getExperimentalSetting('authTokenSyncURL');\n  // Only do the Cookie exchange in a secure context\n  if (\n    authTokenSyncPath &&\n    typeof isSecureContext === 'boolean' &&\n    isSecureContext\n  ) {\n    // Don't allow urls (XSS possibility), only paths on the same domain\n    const authTokenSyncUrl = new URL(authTokenSyncPath, location.origin);\n    if (location.origin === authTokenSyncUrl.origin) {\n      const mintCookie = mintCookieFactory(authTokenSyncUrl.toString());\n      beforeAuthStateChanged(auth, mintCookie, () =>\n        mintCookie(auth.currentUser)\n      );\n      onIdTokenChanged(auth, user => mintCookie(user));\n    }\n  }\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\n_setExternalJSProvider({\n  loadJS(url: string): Promise<Event> {\n    // TODO: consider adding timeout support & cancellation\n    return new Promise((resolve, reject) => {\n      const el = document.createElement('script');\n      el.setAttribute('src', url);\n      el.onload = resolve;\n      el.onerror = e => {\n        const error = _createError(AuthErrorCode.INTERNAL_ERROR);\n        error.customData = e as unknown as Record<string, unknown>;\n        reject(error);\n      };\n      el.type = 'text/javascript';\n      el.charset = 'UTF-8';\n      getScriptParentElement().appendChild(el);\n    });\n  },\n\n  gapiScript: 'https://apis.google.com/js/api.js',\n  recaptchaV2Script: 'https://www.google.com/recaptcha/api.js',\n  recaptchaEnterpriseScript:\n    'https://www.google.com/recaptcha/enterprise.js?render='\n});\n\nregisterAuth(ClientPlatform.BROWSER);\n","/** @license\nCopyright The Closure Library Authors.\nSPDX-License-Identifier: Apache-2.0\n*/\n(function() {'use strict';var h;/** @license\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nfunction k(f,a){function c(){}c.prototype=a.prototype;f.D=a.prototype;f.prototype=new c;f.prototype.constructor=f;f.C=function(d,e,g){for(var b=Array(arguments.length-2),r=2;r<arguments.length;r++)b[r-2]=arguments[r];return a.prototype[e].apply(d,b)}};function l(){this.blockSize=-1};function m(){this.blockSize=-1;this.blockSize=64;this.g=Array(4);this.B=Array(this.blockSize);this.o=this.h=0;this.s()}k(m,l);m.prototype.s=function(){this.g[0]=1732584193;this.g[1]=4023233417;this.g[2]=2562383102;this.g[3]=271733878;this.o=this.h=0};\nfunction n(f,a,c){c||(c=0);var d=Array(16);if(\"string\"===typeof a)for(var e=0;16>e;++e)d[e]=a.charCodeAt(c++)|a.charCodeAt(c++)<<8|a.charCodeAt(c++)<<16|a.charCodeAt(c++)<<24;else for(e=0;16>e;++e)d[e]=a[c++]|a[c++]<<8|a[c++]<<16|a[c++]<<24;a=f.g[0];c=f.g[1];e=f.g[2];var g=f.g[3];var b=a+(g^c&(e^g))+d[0]+3614090360&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[1]+3905402710&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[2]+606105819&4294967295;e=g+(b<<17&4294967295|b>>>15);\nb=c+(a^e&(g^a))+d[3]+3250441966&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[4]+4118548399&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[5]+1200080426&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[6]+2821735955&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[7]+4249261313&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[8]+1770035416&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[9]+2336552879&4294967295;g=a+(b<<12&4294967295|\nb>>>20);b=e+(c^g&(a^c))+d[10]+4294925233&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[11]+2304563134&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[12]+1804603682&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[13]+4254626195&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[14]+2792965006&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[15]+1236535329&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(e^g&(c^e))+d[1]+4129170786&4294967295;a=c+(b<<\n5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[6]+3225465664&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[11]+643717713&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[0]+3921069994&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[5]+3593408605&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[10]+38016083&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[15]+3634488961&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[4]+3889429448&4294967295;c=\ne+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[9]+568446438&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[14]+3275163606&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[3]+4107603335&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[8]+1163531501&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[13]+2850285829&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[2]+4243563512&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[7]+1735328473&4294967295;\ne=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[12]+2368359562&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(c^e^g)+d[5]+4294588738&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[8]+2272392833&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[11]+1839030562&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[14]+4259657740&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[1]+2763975236&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[4]+1272893353&4294967295;g=a+(b<<11&4294967295|\nb>>>21);b=e+(g^a^c)+d[7]+4139469664&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[10]+3200236656&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[13]+681279174&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[0]+3936430074&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[3]+3572445317&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[6]+76029189&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[9]+3654602809&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[12]+\n3873151461&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[15]+530742520&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[2]+3299628645&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(e^(c|~g))+d[0]+4096336452&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[7]+1126891415&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[14]+2878612391&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[5]+4237533241&4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[12]+1700485571&\n4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[3]+2399980690&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[10]+4293915773&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[1]+2240044497&4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[8]+1873313359&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[15]+4264355552&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[6]+2734768916&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[13]+1309151649&\n4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[4]+4149444226&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[11]+3174756917&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[2]+718787259&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[9]+3951481745&4294967295;f.g[0]=f.g[0]+a&4294967295;f.g[1]=f.g[1]+(e+(b<<21&4294967295|b>>>11))&4294967295;f.g[2]=f.g[2]+e&4294967295;f.g[3]=f.g[3]+g&4294967295}\nm.prototype.u=function(f,a){void 0===a&&(a=f.length);for(var c=a-this.blockSize,d=this.B,e=this.h,g=0;g<a;){if(0==e)for(;g<=c;)n(this,f,g),g+=this.blockSize;if(\"string\"===typeof f)for(;g<a;){if(d[e++]=f.charCodeAt(g++),e==this.blockSize){n(this,d);e=0;break}}else for(;g<a;)if(d[e++]=f[g++],e==this.blockSize){n(this,d);e=0;break}}this.h=e;this.o+=a};\nm.prototype.v=function(){var f=Array((56>this.h?this.blockSize:2*this.blockSize)-this.h);f[0]=128;for(var a=1;a<f.length-8;++a)f[a]=0;var c=8*this.o;for(a=f.length-8;a<f.length;++a)f[a]=c&255,c/=256;this.u(f);f=Array(16);for(a=c=0;4>a;++a)for(var d=0;32>d;d+=8)f[c++]=this.g[a]>>>d&255;return f};function p(f,a){var c=q;return Object.prototype.hasOwnProperty.call(c,f)?c[f]:c[f]=a(f)};function t(f,a){this.h=a;for(var c=[],d=!0,e=f.length-1;0<=e;e--){var g=f[e]|0;d&&g==a||(c[e]=g,d=!1)}this.g=c}var q={};function u(f){return-128<=f&&128>f?p(f,function(a){return new t([a|0],0>a?-1:0)}):new t([f|0],0>f?-1:0)}function v(f){if(isNaN(f)||!isFinite(f))return w;if(0>f)return x(v(-f));for(var a=[],c=1,d=0;f>=c;d++)a[d]=f/c|0,c*=4294967296;return new t(a,0)}\nfunction y(f,a){if(0==f.length)throw Error(\"number format error: empty string\");a=a||10;if(2>a||36<a)throw Error(\"radix out of range: \"+a);if(\"-\"==f.charAt(0))return x(y(f.substring(1),a));if(0<=f.indexOf(\"-\"))throw Error('number format error: interior \"-\" character');for(var c=v(Math.pow(a,8)),d=w,e=0;e<f.length;e+=8){var g=Math.min(8,f.length-e),b=parseInt(f.substring(e,e+g),a);8>g?(g=v(Math.pow(a,g)),d=d.j(g).add(v(b))):(d=d.j(c),d=d.add(v(b)))}return d}var w=u(0),z=u(1),A=u(16777216);h=t.prototype;\nh.m=function(){if(B(this))return-x(this).m();for(var f=0,a=1,c=0;c<this.g.length;c++){var d=this.i(c);f+=(0<=d?d:4294967296+d)*a;a*=4294967296}return f};h.toString=function(f){f=f||10;if(2>f||36<f)throw Error(\"radix out of range: \"+f);if(C(this))return\"0\";if(B(this))return\"-\"+x(this).toString(f);for(var a=v(Math.pow(f,6)),c=this,d=\"\";;){var e=D(c,a).g;c=F(c,e.j(a));var g=((0<c.g.length?c.g[0]:c.h)>>>0).toString(f);c=e;if(C(c))return g+d;for(;6>g.length;)g=\"0\"+g;d=g+d}};\nh.i=function(f){return 0>f?0:f<this.g.length?this.g[f]:this.h};function C(f){if(0!=f.h)return!1;for(var a=0;a<f.g.length;a++)if(0!=f.g[a])return!1;return!0}function B(f){return-1==f.h}h.l=function(f){f=F(this,f);return B(f)?-1:C(f)?0:1};function x(f){for(var a=f.g.length,c=[],d=0;d<a;d++)c[d]=~f.g[d];return(new t(c,~f.h)).add(z)}h.abs=function(){return B(this)?x(this):this};\nh.add=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0,e=0;e<=a;e++){var g=d+(this.i(e)&65535)+(f.i(e)&65535),b=(g>>>16)+(this.i(e)>>>16)+(f.i(e)>>>16);d=b>>>16;g&=65535;b&=65535;c[e]=b<<16|g}return new t(c,c[c.length-1]&-2147483648?-1:0)};function F(f,a){return f.add(x(a))}\nh.j=function(f){if(C(this)||C(f))return w;if(B(this))return B(f)?x(this).j(x(f)):x(x(this).j(f));if(B(f))return x(this.j(x(f)));if(0>this.l(A)&&0>f.l(A))return v(this.m()*f.m());for(var a=this.g.length+f.g.length,c=[],d=0;d<2*a;d++)c[d]=0;for(d=0;d<this.g.length;d++)for(var e=0;e<f.g.length;e++){var g=this.i(d)>>>16,b=this.i(d)&65535,r=f.i(e)>>>16,E=f.i(e)&65535;c[2*d+2*e]+=b*E;G(c,2*d+2*e);c[2*d+2*e+1]+=g*E;G(c,2*d+2*e+1);c[2*d+2*e+1]+=b*r;G(c,2*d+2*e+1);c[2*d+2*e+2]+=g*r;G(c,2*d+2*e+2)}for(d=0;d<\na;d++)c[d]=c[2*d+1]<<16|c[2*d];for(d=a;d<2*a;d++)c[d]=0;return new t(c,0)};function G(f,a){for(;(f[a]&65535)!=f[a];)f[a+1]+=f[a]>>>16,f[a]&=65535,a++}function H(f,a){this.g=f;this.h=a}\nfunction D(f,a){if(C(a))throw Error(\"division by zero\");if(C(f))return new H(w,w);if(B(f))return a=D(x(f),a),new H(x(a.g),x(a.h));if(B(a))return a=D(f,x(a)),new H(x(a.g),a.h);if(30<f.g.length){if(B(f)||B(a))throw Error(\"slowDivide_ only works with positive integers.\");for(var c=z,d=a;0>=d.l(f);)c=I(c),d=I(d);var e=J(c,1),g=J(d,1);d=J(d,2);for(c=J(c,2);!C(d);){var b=g.add(d);0>=b.l(f)&&(e=e.add(c),g=b);d=J(d,1);c=J(c,1)}a=F(f,e.j(a));return new H(e,a)}for(e=w;0<=f.l(a);){c=Math.max(1,Math.floor(f.m()/\na.m()));d=Math.ceil(Math.log(c)/Math.LN2);d=48>=d?1:Math.pow(2,d-48);g=v(c);for(b=g.j(a);B(b)||0<b.l(f);)c-=d,g=v(c),b=g.j(a);C(g)&&(g=z);e=e.add(g);f=F(f,b)}return new H(e,f)}h.A=function(f){return D(this,f).h};h.and=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)&f.i(d);return new t(c,this.h&f.h)};h.or=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)|f.i(d);return new t(c,this.h|f.h)};\nh.xor=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)^f.i(d);return new t(c,this.h^f.h)};function I(f){for(var a=f.g.length+1,c=[],d=0;d<a;d++)c[d]=f.i(d)<<1|f.i(d-1)>>>31;return new t(c,f.h)}function J(f,a){var c=a>>5;a%=32;for(var d=f.g.length-c,e=[],g=0;g<d;g++)e[g]=0<a?f.i(g+c)>>>a|f.i(g+c+1)<<32-a:f.i(g+c);return new t(e,f.h)};m.prototype.digest=m.prototype.v;m.prototype.reset=m.prototype.s;m.prototype.update=m.prototype.u;module.exports.Md5=m;t.prototype.add=t.prototype.add;t.prototype.multiply=t.prototype.j;t.prototype.modulo=t.prototype.A;t.prototype.compare=t.prototype.l;t.prototype.toNumber=t.prototype.m;t.prototype.toString=t.prototype.toString;t.prototype.getBits=t.prototype.i;t.fromNumber=v;t.fromString=y;module.exports.Integer=t;}).apply( typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self  : typeof window !== 'undefined' ? window  : {});\n","/** @license\nCopyright The Closure Library Authors.\nSPDX-License-Identifier: Apache-2.0\n*/\n(function() {'use strict';var h,aa=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};function ba(a){a=[\"object\"==typeof globalThis&&globalThis,a,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error(\"Cannot find global object\");}var ca=ba(this);\nfunction da(a,b){if(b)a:{var c=ca;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}function ea(a,b){a instanceof String&&(a+=\"\");var c=0,d=!1,e={next:function(){if(!d&&c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}d=!0;return{done:!0,value:void 0}}};e[Symbol.iterator]=function(){return e};return e}\nda(\"Array.prototype.values\",function(a){return a?a:function(){return ea(this,function(b,c){return c})}});/** @license\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar fa=fa||{},k=this||self;function ha(a){var b=typeof a;b=\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\";return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function n(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}function ia(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction ja(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?ia:ja;return p.apply(null,arguments)}\nfunction ka(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function r(a,b){function c(){}c.prototype=b.prototype;a.aa=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Qb=function(d,e,f){for(var g=Array(arguments.length-2),m=2;m<arguments.length;m++)g[m-2]=arguments[m];return b.prototype[e].apply(d,g)}};function la(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return[]}function ma(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(ha(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};class na{constructor(a,b){this.i=a;this.j=b;this.h=0;this.g=null}get(){let a;0<this.h?(this.h--,a=this.g,this.g=a.next,a.next=null):a=this.i();return a}};function t(a){return/^[\\s\\xa0]*$/.test(a)};function u(){var a=k.navigator;return a&&(a=a.userAgent)?a:\"\"};function oa(a){oa[\" \"](a);return a}oa[\" \"]=function(){};var pa=-1!=u().indexOf(\"Gecko\")&&!(-1!=u().toLowerCase().indexOf(\"webkit\")&&-1==u().indexOf(\"Edge\"))&&!(-1!=u().indexOf(\"Trident\")||-1!=u().indexOf(\"MSIE\"))&&-1==u().indexOf(\"Edge\");function qa(a,b,c){for(const d in a)b.call(c,a[d],d,a)}function ra(a,b){for(const c in a)b.call(void 0,a[c],c,a)}function sa(a){const b={};for(const c in a)b[c]=a[c];return b}const ta=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function ua(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<ta.length;f++)c=ta[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function va(a){var b=1;a=a.split(\":\");const c=[];for(;0<b&&a.length;)c.push(a.shift()),b--;a.length&&c.push(a.join(\":\"));return c};function wa(a){k.setTimeout(()=>{throw a;},0)};function xa(){var a=za;let b=null;a.g&&(b=a.g,a.g=a.g.next,a.g||(a.h=null),b.next=null);return b}class Aa{constructor(){this.h=this.g=null}add(a,b){const c=Ba.get();c.set(a,b);this.h?this.h.next=c:this.g=c;this.h=c}}var Ba=new na(()=>new Ca,a=>a.reset());class Ca{constructor(){this.next=this.g=this.h=null}set(a,b){this.h=a;this.g=b;this.next=null}reset(){this.next=this.g=this.h=null}};let x,y=!1,za=new Aa,Ea=()=>{const a=k.Promise.resolve(void 0);x=()=>{a.then(Da)}};var Da=()=>{for(var a;a=xa();){try{a.h.call(a.g)}catch(c){wa(c)}var b=Ba;b.j(a);100>b.h&&(b.h++,a.next=b.g,b.g=a)}y=!1};function z(){this.s=this.s;this.C=this.C}z.prototype.s=!1;z.prototype.ma=function(){this.s||(this.s=!0,this.N())};z.prototype.N=function(){if(this.C)for(;this.C.length;)this.C.shift()()};function A(a,b){this.type=a;this.g=this.target=b;this.defaultPrevented=!1}A.prototype.h=function(){this.defaultPrevented=!0};var Fa=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});try{const c=()=>{};k.addEventListener(\"test\",c,b);k.removeEventListener(\"test\",c,b)}catch(c){}return a}();function C(a,b){A.call(this,a?a.type:\"\");this.relatedTarget=this.g=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType=\"\";this.i=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.g=b;if(b=a.relatedTarget){if(pa){a:{try{oa(b.nodeName);var e=!0;break a}catch(f){}e=\n!1}e||(b=null)}}else\"mouseover\"==c?b=a.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=\na.shiftKey;this.metaKey=a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=\"string\"===typeof a.pointerType?a.pointerType:Ga[a.pointerType]||\"\";this.state=a.state;this.i=a;a.defaultPrevented&&C.aa.h.call(this)}}r(C,A);var Ga={2:\"touch\",3:\"pen\",4:\"mouse\"};C.prototype.h=function(){C.aa.h.call(this);var a=this.i;a.preventDefault?a.preventDefault():a.returnValue=!1};var D=\"closure_listenable_\"+(1E6*Math.random()|0);var Ha=0;function Ia(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.ha=e;this.key=++Ha;this.da=this.fa=!1}function Ja(a){a.da=!0;a.listener=null;a.proxy=null;a.src=null;a.ha=null};function Ka(a){this.src=a;this.g={};this.h=0}Ka.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.g[f];a||(a=this.g[f]=[],this.h++);var g=La(a,b,d,e);-1<g?(b=a[g],c||(b.fa=!1)):(b=new Ia(b,this.src,f,!!d,e),b.fa=c,a.push(b));return b};function Ma(a,b){var c=b.type;if(c in a.g){var d=a.g[c],e=Array.prototype.indexOf.call(d,b,void 0),f;(f=0<=e)&&Array.prototype.splice.call(d,e,1);f&&(Ja(b),0==a.g[c].length&&(delete a.g[c],a.h--))}}\nfunction La(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.da&&f.listener==b&&f.capture==!!c&&f.ha==d)return e}return-1};var Na=\"closure_lm_\"+(1E6*Math.random()|0),Oa={},Pa=0;function Qa(a,b,c,d,e){if(d&&d.once)return Ra(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)Qa(a,b[f],c,d,e);return null}c=Sa(c);return a&&a[D]?a.K(b,c,n(d)?!!d.capture:!!d,e):Ta(a,b,c,!1,d,e)}\nfunction Ta(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var g=n(e)?!!e.capture:!!e,m=Ua(a);m||(a[Na]=m=new Ka(a));c=m.add(b,c,d,g,f);if(c.proxy)return c;d=Va();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)Fa||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(Wa(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");Pa++;return c}\nfunction Va(){function a(c){return b.call(a.src,a.listener,c)}const b=Xa;return a}function Ra(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)Ra(a,b[f],c,d,e);return null}c=Sa(c);return a&&a[D]?a.L(b,c,n(d)?!!d.capture:!!d,e):Ta(a,b,c,!0,d,e)}\nfunction Ya(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)Ya(a,b[f],c,d,e);else(d=n(d)?!!d.capture:!!d,c=Sa(c),a&&a[D])?(a=a.i,b=String(b).toString(),b in a.g&&(f=a.g[b],c=La(f,c,d,e),-1<c&&(Ja(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.g[b],a.h--)))):a&&(a=Ua(a))&&(b=a.g[b.toString()],a=-1,b&&(a=La(b,c,d,e)),(c=-1<a?b[a]:null)&&Za(c))}\nfunction Za(a){if(\"number\"!==typeof a&&a&&!a.da){var b=a.src;if(b&&b[D])Ma(b.i,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(Wa(c),d):b.addListener&&b.removeListener&&b.removeListener(d);Pa--;(c=Ua(b))?(Ma(c,a),0==c.h&&(c.src=null,b[Na]=null)):Ja(a)}}}function Wa(a){return a in Oa?Oa[a]:Oa[a]=\"on\"+a}function Xa(a,b){if(a.da)a=!0;else{b=new C(b,this);var c=a.listener,d=a.ha||a.src;a.fa&&Za(a);a=c.call(d,b)}return a}\nfunction Ua(a){a=a[Na];return a instanceof Ka?a:null}var $a=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function Sa(a){if(\"function\"===typeof a)return a;a[$a]||(a[$a]=function(b){return a.handleEvent(b)});return a[$a]};function E(){z.call(this);this.i=new Ka(this);this.M=this;this.F=null}r(E,z);E.prototype[D]=!0;E.prototype.removeEventListener=function(a,b,c,d){Ya(this,a,b,c,d)};\nfunction F(a,b){var c,d=a.F;if(d)for(c=[];d;d=d.F)c.push(d);a=a.M;d=b.type||b;if(\"string\"===typeof b)b=new A(b,a);else if(b instanceof A)b.target=b.target||a;else{var e=b;b=new A(d,a);ua(b,e)}e=!0;if(c)for(var f=c.length-1;0<=f;f--){var g=b.g=c[f];e=ab(g,d,!0,b)&&e}g=b.g=a;e=ab(g,d,!0,b)&&e;e=ab(g,d,!1,b)&&e;if(c)for(f=0;f<c.length;f++)g=b.g=c[f],e=ab(g,d,!1,b)&&e}\nE.prototype.N=function(){E.aa.N.call(this);if(this.i){var a=this.i,b=0,c;for(c in a.g){for(var d=a.g[c],e=0;e<d.length;e++)++b,Ja(d[e]);delete a.g[c];a.h--}}this.F=null};E.prototype.K=function(a,b,c,d){return this.i.add(String(a),b,!1,c,d)};E.prototype.L=function(a,b,c,d){return this.i.add(String(a),b,!0,c,d)};\nfunction ab(a,b,c,d){b=a.i.g[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.da&&g.capture==c){var m=g.listener,q=g.ha||g.src;g.fa&&Ma(a.i,g);e=!1!==m.call(q,d)&&e}}return e&&!d.defaultPrevented};function bb(a,b,c){if(\"function\"===typeof a)c&&(a=p(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=p(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)};function cb(a){a.g=bb(()=>{a.g=null;a.i&&(a.i=!1,cb(a))},a.l);const b=a.h;a.h=null;a.m.apply(null,b)}class eb extends z{constructor(a,b){super();this.m=a;this.l=b;this.h=null;this.i=!1;this.g=null}j(a){this.h=arguments;this.g?this.i=!0:cb(this)}N(){super.N();this.g&&(k.clearTimeout(this.g),this.g=null,this.i=!1,this.h=null)}};function G(a){z.call(this);this.h=a;this.g={}}r(G,z);var fb=[];function gb(a){qa(a.g,function(b,c){this.g.hasOwnProperty(c)&&Za(b)},a);a.g={}}G.prototype.N=function(){G.aa.N.call(this);gb(this)};G.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\");};var hb=k.JSON.stringify;var ib=k.JSON.parse;var jb=class{stringify(a){return k.JSON.stringify(a,void 0)}parse(a){return k.JSON.parse(a,void 0)}};function kb(){}kb.prototype.h=null;function lb(a){return a.h||(a.h=a.i())};function mb(){}var H={OPEN:\"a\",kb:\"b\",Ja:\"c\",wb:\"d\"};function nb(){A.call(this,\"d\")}r(nb,A);function ob(){A.call(this,\"c\")}r(ob,A);var I={},pb=null;function qb(){return pb=pb||new E}I.La=\"serverreachability\";function rb(a){A.call(this,I.La,a)}r(rb,A);function J(a){const b=qb();F(b,new rb(b,a))}I.STAT_EVENT=\"statevent\";function sb(a,b){A.call(this,I.STAT_EVENT,a);this.stat=b}r(sb,A);function K(a){const b=qb();F(b,new sb(b,a))}I.Ma=\"timingevent\";function tb(a,b){A.call(this,I.Ma,a);this.size=b}r(tb,A);\nfunction ub(a,b){if(\"function\"!==typeof a)throw Error(\"Fn must not be null and must be a function\");return k.setTimeout(function(){a()},b)};function vb(){this.g=!0}vb.prototype.xa=function(){this.g=!1};function wb(a,b,c,d,e,f){a.info(function(){if(a.g)if(f){var g=\"\";for(var m=f.split(\"&\"),q=0;q<m.length;q++){var l=m[q].split(\"=\");if(1<l.length){var v=l[0];l=l[1];var w=v.split(\"_\");g=2<=w.length&&\"type\"==w[1]?g+(v+\"=\"+l+\"&\"):g+(v+\"=redacted&\")}}}else g=null;else g=f;return\"XMLHTTP REQ (\"+d+\") [attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+g})}\nfunction xb(a,b,c,d,e,f,g){a.info(function(){return\"XMLHTTP RESP (\"+d+\") [ attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+f+\" \"+g})}function L(a,b,c,d){a.info(function(){return\"XMLHTTP TEXT (\"+b+\"): \"+yb(a,c)+(d?\" \"+d:\"\")})}function zb(a,b){a.info(function(){return\"TIMEOUT: \"+b})}vb.prototype.info=function(){};\nfunction yb(a,b){if(!a.g)return b;if(!b)return null;try{var c=JSON.parse(b);if(c)for(a=0;a<c.length;a++)if(Array.isArray(c[a])){var d=c[a];if(!(2>d.length)){var e=d[1];if(Array.isArray(e)&&!(1>e.length)){var f=e[0];if(\"noop\"!=f&&\"stop\"!=f&&\"close\"!=f)for(var g=1;g<e.length;g++)e[g]=\"\"}}}return hb(c)}catch(m){return b}};var Ab={NO_ERROR:0,gb:1,tb:2,sb:3,nb:4,rb:5,ub:6,Ia:7,TIMEOUT:8,xb:9};var Bb={lb:\"complete\",Hb:\"success\",Ja:\"error\",Ia:\"abort\",zb:\"ready\",Ab:\"readystatechange\",TIMEOUT:\"timeout\",vb:\"incrementaldata\",yb:\"progress\",ob:\"downloadprogress\",Pb:\"uploadprogress\"};var Cb;function Db(){}r(Db,kb);Db.prototype.g=function(){return new XMLHttpRequest};Db.prototype.i=function(){return{}};Cb=new Db;function M(a,b,c,d){this.j=a;this.i=b;this.l=c;this.R=d||1;this.U=new G(this);this.I=45E3;this.H=null;this.o=!1;this.m=this.A=this.v=this.L=this.F=this.S=this.B=null;this.D=[];this.g=null;this.C=0;this.s=this.u=null;this.X=-1;this.J=!1;this.O=0;this.M=null;this.W=this.K=this.T=this.P=!1;this.h=new Eb}function Eb(){this.i=null;this.g=\"\";this.h=!1}var Fb={},Gb={};function Hb(a,b,c){a.L=1;a.v=Ib(N(b));a.m=c;a.P=!0;Jb(a,null)}\nfunction Jb(a,b){a.F=Date.now();Kb(a);a.A=N(a.v);var c=a.A,d=a.R;Array.isArray(d)||(d=[String(d)]);Lb(c.i,\"t\",d);a.C=0;c=a.j.J;a.h=new Eb;a.g=Mb(a.j,c?b:null,!a.m);0<a.O&&(a.M=new eb(p(a.Y,a,a.g),a.O));b=a.U;c=a.g;d=a.ca;var e=\"readystatechange\";Array.isArray(e)||(e&&(fb[0]=e.toString()),e=fb);for(var f=0;f<e.length;f++){var g=Qa(c,e[f],d||b.handleEvent,!1,b.h||b);if(!g)break;b.g[g.key]=g}b=a.H?sa(a.H):{};a.m?(a.u||(a.u=\"POST\"),b[\"Content-Type\"]=\"application/x-www-form-urlencoded\",a.g.ea(a.A,a.u,\na.m,b)):(a.u=\"GET\",a.g.ea(a.A,a.u,null,b));J(1);wb(a.i,a.u,a.A,a.l,a.R,a.m)}M.prototype.ca=function(a){a=a.target;const b=this.M;b&&3==P(a)?b.j():this.Y(a)};\nM.prototype.Y=function(a){try{if(a==this.g)a:{const w=P(this.g);var b=this.g.Ba();const O=this.g.Z();if(!(3>w)&&(3!=w||this.g&&(this.h.h||this.g.oa()||Nb(this.g)))){this.J||4!=w||7==b||(8==b||0>=O?J(3):J(2));Ob(this);var c=this.g.Z();this.X=c;b:if(Pb(this)){var d=Nb(this.g);a=\"\";var e=d.length,f=4==P(this.g);if(!this.h.i){if(\"undefined\"===typeof TextDecoder){Q(this);Qb(this);var g=\"\";break b}this.h.i=new k.TextDecoder}for(b=0;b<e;b++)this.h.h=!0,a+=this.h.i.decode(d[b],{stream:!(f&&b==e-1)});d.length=\n0;this.h.g+=a;this.C=0;g=this.h.g}else g=this.g.oa();this.o=200==c;xb(this.i,this.u,this.A,this.l,this.R,w,c);if(this.o){if(this.T&&!this.K){b:{if(this.g){var m,q=this.g;if((m=q.g?q.g.getResponseHeader(\"X-HTTP-Initial-Response\"):null)&&!t(m)){var l=m;break b}}l=null}if(c=l)L(this.i,this.l,c,\"Initial handshake response via X-HTTP-Initial-Response\"),this.K=!0,Rb(this,c);else{this.o=!1;this.s=3;K(12);Q(this);Qb(this);break a}}if(this.P){c=!0;let B;for(;!this.J&&this.C<g.length;)if(B=Sb(this,g),B==Gb){4==\nw&&(this.s=4,K(14),c=!1);L(this.i,this.l,null,\"[Incomplete Response]\");break}else if(B==Fb){this.s=4;K(15);L(this.i,this.l,g,\"[Invalid Chunk]\");c=!1;break}else L(this.i,this.l,B,null),Rb(this,B);Pb(this)&&0!=this.C&&(this.h.g=this.h.g.slice(this.C),this.C=0);4!=w||0!=g.length||this.h.h||(this.s=1,K(16),c=!1);this.o=this.o&&c;if(!c)L(this.i,this.l,g,\"[Invalid Chunked Response]\"),Q(this),Qb(this);else if(0<g.length&&!this.W){this.W=!0;var v=this.j;v.g==this&&v.ba&&!v.M&&(v.j.info(\"Great, no buffering proxy detected. Bytes received: \"+\ng.length),Tb(v),v.M=!0,K(11))}}else L(this.i,this.l,g,null),Rb(this,g);4==w&&Q(this);this.o&&!this.J&&(4==w?Ub(this.j,this):(this.o=!1,Kb(this)))}else Vb(this.g),400==c&&0<g.indexOf(\"Unknown SID\")?(this.s=3,K(12)):(this.s=0,K(13)),Q(this),Qb(this)}}}catch(w){}finally{}};function Pb(a){return a.g?\"GET\"==a.u&&2!=a.L&&a.j.Ca:!1}\nfunction Sb(a,b){var c=a.C,d=b.indexOf(\"\\n\",c);if(-1==d)return Gb;c=Number(b.substring(c,d));if(isNaN(c))return Fb;d+=1;if(d+c>b.length)return Gb;b=b.slice(d,d+c);a.C=d+c;return b}M.prototype.cancel=function(){this.J=!0;Q(this)};function Kb(a){a.S=Date.now()+a.I;Wb(a,a.I)}function Wb(a,b){if(null!=a.B)throw Error(\"WatchDog timer not null\");a.B=ub(p(a.ba,a),b)}function Ob(a){a.B&&(k.clearTimeout(a.B),a.B=null)}\nM.prototype.ba=function(){this.B=null;const a=Date.now();0<=a-this.S?(zb(this.i,this.A),2!=this.L&&(J(3),K(17)),Q(this),this.s=2,Qb(this)):Wb(this,this.S-a)};function Qb(a){0==a.j.G||a.J||Ub(a.j,a)}function Q(a){Ob(a);var b=a.M;b&&\"function\"==typeof b.ma&&b.ma();a.M=null;gb(a.U);a.g&&(b=a.g,a.g=null,b.abort(),b.ma())}\nfunction Rb(a,b){try{var c=a.j;if(0!=c.G&&(c.g==a||Xb(c.h,a)))if(!a.K&&Xb(c.h,a)&&3==c.G){try{var d=c.Da.g.parse(b)}catch(l){d=null}if(Array.isArray(d)&&3==d.length){var e=d;if(0==e[0])a:{if(!c.u){if(c.g)if(c.g.F+3E3<a.F)Yb(c),Zb(c);else break a;$b(c);K(18)}}else c.za=e[1],0<c.za-c.T&&37500>e[2]&&c.F&&0==c.v&&!c.C&&(c.C=ub(p(c.Za,c),6E3));if(1>=ac(c.h)&&c.ca){try{c.ca()}catch(l){}c.ca=void 0}}else R(c,11)}else if((a.K||c.g==a)&&Yb(c),!t(b))for(e=c.Da.g.parse(b),b=0;b<e.length;b++){let l=e[b];c.T=\nl[0];l=l[1];if(2==c.G)if(\"c\"==l[0]){c.K=l[1];c.ia=l[2];const v=l[3];null!=v&&(c.la=v,c.j.info(\"VER=\"+c.la));const w=l[4];null!=w&&(c.Aa=w,c.j.info(\"SVER=\"+c.Aa));const O=l[5];null!=O&&\"number\"===typeof O&&0<O&&(d=1.5*O,c.L=d,c.j.info(\"backChannelRequestTimeoutMs_=\"+d));d=c;const B=a.g;if(B){const ya=B.g?B.g.getResponseHeader(\"X-Client-Wire-Protocol\"):null;if(ya){var f=d.h;f.g||-1==ya.indexOf(\"spdy\")&&-1==ya.indexOf(\"quic\")&&-1==ya.indexOf(\"h2\")||(f.j=f.l,f.g=new Set,f.h&&(bc(f,f.h),f.h=null))}if(d.D){const db=\nB.g?B.g.getResponseHeader(\"X-HTTP-Session-Id\"):null;db&&(d.ya=db,S(d.I,d.D,db))}}c.G=3;c.l&&c.l.ua();c.ba&&(c.R=Date.now()-a.F,c.j.info(\"Handshake RTT: \"+c.R+\"ms\"));d=c;var g=a;d.qa=cc(d,d.J?d.ia:null,d.W);if(g.K){dc(d.h,g);var m=g,q=d.L;q&&(m.I=q);m.B&&(Ob(m),Kb(m));d.g=g}else ec(d);0<c.i.length&&fc(c)}else\"stop\"!=l[0]&&\"close\"!=l[0]||R(c,7);else 3==c.G&&(\"stop\"==l[0]||\"close\"==l[0]?\"stop\"==l[0]?R(c,7):gc(c):\"noop\"!=l[0]&&c.l&&c.l.ta(l),c.v=0)}J(4)}catch(l){}};var hc=class{constructor(a,b){this.g=a;this.map=b}};function ic(a){this.l=a||10;k.PerformanceNavigationTiming?(a=k.performance.getEntriesByType(\"navigation\"),a=0<a.length&&(\"hq\"==a[0].nextHopProtocol||\"h2\"==a[0].nextHopProtocol)):a=!!(k.chrome&&k.chrome.loadTimes&&k.chrome.loadTimes()&&k.chrome.loadTimes().wasFetchedViaSpdy);this.j=a?this.l:1;this.g=null;1<this.j&&(this.g=new Set);this.h=null;this.i=[]}function jc(a){return a.h?!0:a.g?a.g.size>=a.j:!1}function ac(a){return a.h?1:a.g?a.g.size:0}function Xb(a,b){return a.h?a.h==b:a.g?a.g.has(b):!1}\nfunction bc(a,b){a.g?a.g.add(b):a.h=b}function dc(a,b){a.h&&a.h==b?a.h=null:a.g&&a.g.has(b)&&a.g.delete(b)}ic.prototype.cancel=function(){this.i=kc(this);if(this.h)this.h.cancel(),this.h=null;else if(this.g&&0!==this.g.size){for(const a of this.g.values())a.cancel();this.g.clear()}};function kc(a){if(null!=a.h)return a.i.concat(a.h.D);if(null!=a.g&&0!==a.g.size){let b=a.i;for(const c of a.g.values())b=b.concat(c.D);return b}return la(a.i)};function lc(a){if(a.V&&\"function\"==typeof a.V)return a.V();if(\"undefined\"!==typeof Map&&a instanceof Map||\"undefined\"!==typeof Set&&a instanceof Set)return Array.from(a.values());if(\"string\"===typeof a)return a.split(\"\");if(ha(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}\nfunction mc(a){if(a.na&&\"function\"==typeof a.na)return a.na();if(!a.V||\"function\"!=typeof a.V){if(\"undefined\"!==typeof Map&&a instanceof Map)return Array.from(a.keys());if(!(\"undefined\"!==typeof Set&&a instanceof Set)){if(ha(a)||\"string\"===typeof a){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(const d in a)b[c++]=d;return b}}}\nfunction nc(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ha(a)||\"string\"===typeof a)Array.prototype.forEach.call(a,b,void 0);else for(var c=mc(a),d=lc(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};var oc=RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^\\\\\\\\/?#]*)@)?([^\\\\\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\\\\\/?#]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#([\\\\s\\\\S]*))?$\");function pc(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function T(a){this.g=this.o=this.j=\"\";this.s=null;this.m=this.l=\"\";this.h=!1;if(a instanceof T){this.h=a.h;qc(this,a.j);this.o=a.o;this.g=a.g;rc(this,a.s);this.l=a.l;var b=a.i;var c=new sc;c.i=b.i;b.g&&(c.g=new Map(b.g),c.h=b.h);tc(this,c);this.m=a.m}else a&&(b=String(a).match(oc))?(this.h=!1,qc(this,b[1]||\"\",!0),this.o=uc(b[2]||\"\"),this.g=uc(b[3]||\"\",!0),rc(this,b[4]),this.l=uc(b[5]||\"\",!0),tc(this,b[6]||\"\",!0),this.m=uc(b[7]||\"\")):(this.h=!1,this.i=new sc(null,this.h))}\nT.prototype.toString=function(){var a=[],b=this.j;b&&a.push(vc(b,wc,!0),\":\");var c=this.g;if(c||\"file\"==b)a.push(\"//\"),(b=this.o)&&a.push(vc(b,wc,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.s,null!=c&&a.push(\":\",String(c));if(c=this.l)this.g&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(vc(c,\"/\"==c.charAt(0)?xc:yc,!0));(c=this.i.toString())&&a.push(\"?\",c);(c=this.m)&&a.push(\"#\",vc(c,zc));return a.join(\"\")};function N(a){return new T(a)}\nfunction qc(a,b,c){a.j=c?uc(b,!0):b;a.j&&(a.j=a.j.replace(/:$/,\"\"))}function rc(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.s=b}else a.s=null}function tc(a,b,c){b instanceof sc?(a.i=b,Ac(a.i,a.h)):(c||(b=vc(b,Bc)),a.i=new sc(b,a.h))}function S(a,b,c){a.i.set(b,c)}function Ib(a){S(a,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^Date.now()).toString(36));return a}\nfunction uc(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function vc(a,b,c){return\"string\"===typeof a?(a=encodeURI(a).replace(b,Cc),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function Cc(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var wc=/[#\\/\\?@]/g,yc=/[#\\?:]/g,xc=/[#\\?]/g,Bc=/[#\\?@]/g,zc=/#/g;function sc(a,b){this.h=this.g=null;this.i=a||null;this.j=!!b}\nfunction U(a){a.g||(a.g=new Map,a.h=0,a.i&&pc(a.i,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}h=sc.prototype;h.add=function(a,b){U(this);this.i=null;a=V(this,a);var c=this.g.get(a);c||this.g.set(a,c=[]);c.push(b);this.h+=1;return this};function Dc(a,b){U(a);b=V(a,b);a.g.has(b)&&(a.i=null,a.h-=a.g.get(b).length,a.g.delete(b))}function Ec(a,b){U(a);b=V(a,b);return a.g.has(b)}\nh.forEach=function(a,b){U(this);this.g.forEach(function(c,d){c.forEach(function(e){a.call(b,e,d,this)},this)},this)};h.na=function(){U(this);const a=Array.from(this.g.values()),b=Array.from(this.g.keys()),c=[];for(let d=0;d<b.length;d++){const e=a[d];for(let f=0;f<e.length;f++)c.push(b[d])}return c};h.V=function(a){U(this);let b=[];if(\"string\"===typeof a)Ec(this,a)&&(b=b.concat(this.g.get(V(this,a))));else{a=Array.from(this.g.values());for(let c=0;c<a.length;c++)b=b.concat(a[c])}return b};\nh.set=function(a,b){U(this);this.i=null;a=V(this,a);Ec(this,a)&&(this.h-=this.g.get(a).length);this.g.set(a,[b]);this.h+=1;return this};h.get=function(a,b){if(!a)return b;a=this.V(a);return 0<a.length?String(a[0]):b};function Lb(a,b,c){Dc(a,b);0<c.length&&(a.i=null,a.g.set(V(a,b),la(c)),a.h+=c.length)}\nh.toString=function(){if(this.i)return this.i;if(!this.g)return\"\";const a=[],b=Array.from(this.g.keys());for(var c=0;c<b.length;c++){var d=b[c];const f=encodeURIComponent(String(d)),g=this.V(d);for(d=0;d<g.length;d++){var e=f;\"\"!==g[d]&&(e+=\"=\"+encodeURIComponent(String(g[d])));a.push(e)}}return this.i=a.join(\"&\")};function V(a,b){b=String(b);a.j&&(b=b.toLowerCase());return b}\nfunction Ac(a,b){b&&!a.j&&(U(a),a.i=null,a.g.forEach(function(c,d){var e=d.toLowerCase();d!=e&&(Dc(this,d),Lb(this,e,c))},a));a.j=b};function Fc(a,b){const c=new vb;if(k.Image){const d=new Image;d.onload=ka(W,c,\"TestLoadImage: loaded\",!0,b,d);d.onerror=ka(W,c,\"TestLoadImage: error\",!1,b,d);d.onabort=ka(W,c,\"TestLoadImage: abort\",!1,b,d);d.ontimeout=ka(W,c,\"TestLoadImage: timeout\",!1,b,d);k.setTimeout(function(){if(d.ontimeout)d.ontimeout()},1E4);d.src=a}else b(!1)}\nfunction Gc(a,b){const c=new vb,d=new AbortController,e=setTimeout(()=>{d.abort();W(c,\"TestPingServer: timeout\",!1,b)},1E4);fetch(a,{signal:d.signal}).then(f=>{clearTimeout(e);f.ok?W(c,\"TestPingServer: ok\",!0,b):W(c,\"TestPingServer: server error\",!1,b)}).catch(()=>{clearTimeout(e);W(c,\"TestPingServer: error\",!1,b)})}function W(a,b,c,d,e){try{e&&(e.onload=null,e.onerror=null,e.onabort=null,e.ontimeout=null),d(c)}catch(f){}};function Hc(){this.g=new jb}function Ic(a,b,c){const d=c||\"\";try{nc(a,function(e,f){let g=e;n(e)&&(g=hb(e));b.push(d+f+\"=\"+encodeURIComponent(g))})}catch(e){throw b.push(d+\"type=\"+encodeURIComponent(\"_badmap\")),e;}};function Jc(a){this.l=a.Ub||null;this.j=a.eb||!1}r(Jc,kb);Jc.prototype.g=function(){return new Kc(this.l,this.j)};Jc.prototype.i=function(a){return function(){return a}}({});function Kc(a,b){E.call(this);this.D=a;this.o=b;this.m=void 0;this.status=this.readyState=0;this.responseType=this.responseText=this.response=this.statusText=\"\";this.onreadystatechange=null;this.u=new Headers;this.h=null;this.B=\"GET\";this.A=\"\";this.g=!1;this.v=this.j=this.l=null}r(Kc,E);h=Kc.prototype;\nh.open=function(a,b){if(0!=this.readyState)throw this.abort(),Error(\"Error reopening a connection\");this.B=a;this.A=b;this.readyState=1;Lc(this)};h.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.g=!0;const b={headers:this.u,method:this.B,credentials:this.m,cache:void 0};a&&(b.body=a);(this.D||k).fetch(new Request(this.A,b)).then(this.Sa.bind(this),this.ga.bind(this))};\nh.abort=function(){this.response=this.responseText=\"\";this.u=new Headers;this.status=0;this.j&&this.j.cancel(\"Request was aborted.\").catch(()=>{});1<=this.readyState&&this.g&&4!=this.readyState&&(this.g=!1,Mc(this));this.readyState=0};\nh.Sa=function(a){if(this.g&&(this.l=a,this.h||(this.status=this.l.status,this.statusText=this.l.statusText,this.h=a.headers,this.readyState=2,Lc(this)),this.g&&(this.readyState=3,Lc(this),this.g)))if(\"arraybuffer\"===this.responseType)a.arrayBuffer().then(this.Qa.bind(this),this.ga.bind(this));else if(\"undefined\"!==typeof k.ReadableStream&&\"body\"in a){this.j=a.body.getReader();if(this.o){if(this.responseType)throw Error('responseType must be empty for \"streamBinaryChunks\" mode responses.');this.response=\n[]}else this.response=this.responseText=\"\",this.v=new TextDecoder;Nc(this)}else a.text().then(this.Ra.bind(this),this.ga.bind(this))};function Nc(a){a.j.read().then(a.Pa.bind(a)).catch(a.ga.bind(a))}h.Pa=function(a){if(this.g){if(this.o&&a.value)this.response.push(a.value);else if(!this.o){var b=a.value?a.value:new Uint8Array(0);if(b=this.v.decode(b,{stream:!a.done}))this.response=this.responseText+=b}a.done?Mc(this):Lc(this);3==this.readyState&&Nc(this)}};\nh.Ra=function(a){this.g&&(this.response=this.responseText=a,Mc(this))};h.Qa=function(a){this.g&&(this.response=a,Mc(this))};h.ga=function(){this.g&&Mc(this)};function Mc(a){a.readyState=4;a.l=null;a.j=null;a.v=null;Lc(a)}h.setRequestHeader=function(a,b){this.u.append(a,b)};h.getResponseHeader=function(a){return this.h?this.h.get(a.toLowerCase())||\"\":\"\"};\nh.getAllResponseHeaders=function(){if(!this.h)return\"\";const a=[],b=this.h.entries();for(var c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function Lc(a){a.onreadystatechange&&a.onreadystatechange.call(a)}Object.defineProperty(Kc.prototype,\"withCredentials\",{get:function(){return\"include\"===this.m},set:function(a){this.m=a?\"include\":\"same-origin\"}});function Oc(a){let b=\"\";qa(a,function(c,d){b+=d;b+=\":\";b+=c;b+=\"\\r\\n\"});return b}function Pc(a,b,c){a:{for(d in c){var d=!1;break a}d=!0}d||(c=Oc(c),\"string\"===typeof a?(encodeURIComponent(String(b)),null!=c&&encodeURIComponent(String(c))):S(a,b,c))};function X(a){E.call(this);this.headers=new Map;this.o=a||null;this.h=!1;this.v=this.g=null;this.D=\"\";this.m=0;this.l=\"\";this.j=this.B=this.u=this.A=!1;this.I=null;this.H=\"\";this.J=!1}r(X,E);var Qc=/^https?$/i,Rc=[\"POST\",\"PUT\"];h=X.prototype;h.Ha=function(a){this.J=a};\nh.ea=function(a,b,c,d){if(this.g)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.D+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.D=a;this.l=\"\";this.m=0;this.A=!1;this.h=!0;this.g=this.o?this.o.g():Cb.g();this.v=this.o?lb(this.o):lb(Cb);this.g.onreadystatechange=p(this.Ea,this);try{this.B=!0,this.g.open(b,String(a),!0),this.B=!1}catch(f){Sc(this,f);return}a=c||\"\";c=new Map(this.headers);if(d)if(Object.getPrototypeOf(d)===Object.prototype)for(var e in d)c.set(e,d[e]);else if(\"function\"===\ntypeof d.keys&&\"function\"===typeof d.get)for(const f of d.keys())c.set(f,d.get(f));else throw Error(\"Unknown input type for opt_headers: \"+String(d));d=Array.from(c.keys()).find(f=>\"content-type\"==f.toLowerCase());e=k.FormData&&a instanceof k.FormData;!(0<=Array.prototype.indexOf.call(Rc,b,void 0))||d||e||c.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");for(const [f,g]of c)this.g.setRequestHeader(f,g);this.H&&(this.g.responseType=this.H);\"withCredentials\"in this.g&&this.g.withCredentials!==\nthis.J&&(this.g.withCredentials=this.J);try{Tc(this),this.u=!0,this.g.send(a),this.u=!1}catch(f){Sc(this,f)}};function Sc(a,b){a.h=!1;a.g&&(a.j=!0,a.g.abort(),a.j=!1);a.l=b;a.m=5;Uc(a);Vc(a)}function Uc(a){a.A||(a.A=!0,F(a,\"complete\"),F(a,\"error\"))}h.abort=function(a){this.g&&this.h&&(this.h=!1,this.j=!0,this.g.abort(),this.j=!1,this.m=a||7,F(this,\"complete\"),F(this,\"abort\"),Vc(this))};h.N=function(){this.g&&(this.h&&(this.h=!1,this.j=!0,this.g.abort(),this.j=!1),Vc(this,!0));X.aa.N.call(this)};\nh.Ea=function(){this.s||(this.B||this.u||this.j?Wc(this):this.bb())};h.bb=function(){Wc(this)};\nfunction Wc(a){if(a.h&&\"undefined\"!=typeof fa&&(!a.v[1]||4!=P(a)||2!=a.Z()))if(a.u&&4==P(a))bb(a.Ea,0,a);else if(F(a,\"readystatechange\"),4==P(a)){a.h=!1;try{const g=a.Z();a:switch(g){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var b=!0;break a;default:b=!1}var c;if(!(c=b)){var d;if(d=0===g){var e=String(a.D).match(oc)[1]||null;!e&&k.self&&k.self.location&&(e=k.self.location.protocol.slice(0,-1));d=!Qc.test(e?e.toLowerCase():\"\")}c=d}if(c)F(a,\"complete\"),F(a,\"success\");else{a.m=\n6;try{var f=2<P(a)?a.g.statusText:\"\"}catch(m){f=\"\"}a.l=f+\" [\"+a.Z()+\"]\";Uc(a)}}finally{Vc(a)}}}function Vc(a,b){if(a.g){Tc(a);const c=a.g,d=a.v[0]?()=>{}:null;a.g=null;a.v=null;b||F(a,\"ready\");try{c.onreadystatechange=d}catch(e){}}}function Tc(a){a.I&&(k.clearTimeout(a.I),a.I=null)}h.isActive=function(){return!!this.g};function P(a){return a.g?a.g.readyState:0}h.Z=function(){try{return 2<P(this)?this.g.status:-1}catch(a){return-1}};h.oa=function(){try{return this.g?this.g.responseText:\"\"}catch(a){return\"\"}};\nh.Oa=function(a){if(this.g){var b=this.g.responseText;a&&0==b.indexOf(a)&&(b=b.substring(a.length));return ib(b)}};function Nb(a){try{if(!a.g)return null;if(\"response\"in a.g)return a.g.response;switch(a.H){case \"\":case \"text\":return a.g.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in a.g)return a.g.mozResponseArrayBuffer}return null}catch(b){return null}}\nfunction Vb(a){const b={};a=(a.g&&2<=P(a)?a.g.getAllResponseHeaders()||\"\":\"\").split(\"\\r\\n\");for(let d=0;d<a.length;d++){if(t(a[d]))continue;var c=va(a[d]);const e=c[0];c=c[1];if(\"string\"!==typeof c)continue;c=c.trim();const f=b[e]||[];b[e]=f;f.push(c)}ra(b,function(d){return d.join(\", \")})}h.Ba=function(){return this.m};h.Ka=function(){return\"string\"===typeof this.l?this.l:String(this.l)};function Xc(a,b,c){return c&&c.internalChannelParams?c.internalChannelParams[a]||b:b}\nfunction Yc(a){this.Aa=0;this.i=[];this.j=new vb;this.ia=this.qa=this.I=this.W=this.g=this.ya=this.D=this.H=this.m=this.S=this.o=null;this.Ya=this.U=0;this.Va=Xc(\"failFast\",!1,a);this.F=this.C=this.u=this.s=this.l=null;this.X=!0;this.za=this.T=-1;this.Y=this.v=this.B=0;this.Ta=Xc(\"baseRetryDelayMs\",5E3,a);this.cb=Xc(\"retryDelaySeedMs\",1E4,a);this.Wa=Xc(\"forwardChannelMaxRetries\",2,a);this.wa=Xc(\"forwardChannelRequestTimeoutMs\",2E4,a);this.pa=a&&a.xmlHttpFactory||void 0;this.Xa=a&&a.Tb||void 0;this.Ca=\na&&a.useFetchStreams||!1;this.L=void 0;this.J=a&&a.supportsCrossDomainXhr||!1;this.K=\"\";this.h=new ic(a&&a.concurrentRequestLimit);this.Da=new Hc;this.P=a&&a.fastHandshake||!1;this.O=a&&a.encodeInitMessageHeaders||!1;this.P&&this.O&&(this.O=!1);this.Ua=a&&a.Rb||!1;a&&a.xa&&this.j.xa();a&&a.forceLongPolling&&(this.X=!1);this.ba=!this.P&&this.X&&a&&a.detectBufferingProxy||!1;this.ja=void 0;a&&a.longPollingTimeout&&0<a.longPollingTimeout&&(this.ja=a.longPollingTimeout);this.ca=void 0;this.R=0;this.M=\n!1;this.ka=this.A=null}h=Yc.prototype;h.la=8;h.G=1;h.connect=function(a,b,c,d){K(0);this.W=a;this.H=b||{};c&&void 0!==d&&(this.H.OSID=c,this.H.OAID=d);this.F=this.X;this.I=cc(this,null,this.W);fc(this)};\nfunction gc(a){Zc(a);if(3==a.G){var b=a.U++,c=N(a.I);S(c,\"SID\",a.K);S(c,\"RID\",b);S(c,\"TYPE\",\"terminate\");$c(a,c);b=new M(a,a.j,b);b.L=2;b.v=Ib(N(c));c=!1;if(k.navigator&&k.navigator.sendBeacon)try{c=k.navigator.sendBeacon(b.v.toString(),\"\")}catch(d){}!c&&k.Image&&((new Image).src=b.v,c=!0);c||(b.g=Mb(b.j,null),b.g.ea(b.v));b.F=Date.now();Kb(b)}ad(a)}function Zb(a){a.g&&(Tb(a),a.g.cancel(),a.g=null)}\nfunction Zc(a){Zb(a);a.u&&(k.clearTimeout(a.u),a.u=null);Yb(a);a.h.cancel();a.s&&(\"number\"===typeof a.s&&k.clearTimeout(a.s),a.s=null)}function fc(a){if(!jc(a.h)&&!a.s){a.s=!0;var b=a.Ga;x||Ea();y||(x(),y=!0);za.add(b,a);a.B=0}}function bd(a,b){if(ac(a.h)>=a.h.j-(a.s?1:0))return!1;if(a.s)return a.i=b.D.concat(a.i),!0;if(1==a.G||2==a.G||a.B>=(a.Va?0:a.Wa))return!1;a.s=ub(p(a.Ga,a,b),cd(a,a.B));a.B++;return!0}\nh.Ga=function(a){if(this.s)if(this.s=null,1==this.G){if(!a){this.U=Math.floor(1E5*Math.random());a=this.U++;const e=new M(this,this.j,a);let f=this.o;this.S&&(f?(f=sa(f),ua(f,this.S)):f=this.S);null!==this.m||this.O||(e.H=f,f=null);if(this.P)a:{var b=0;for(var c=0;c<this.i.length;c++){b:{var d=this.i[c];if(\"__data__\"in d.map&&(d=d.map.__data__,\"string\"===typeof d)){d=d.length;break b}d=void 0}if(void 0===d)break;b+=d;if(4096<b){b=c;break a}if(4096===b||c===this.i.length-1){b=c+1;break a}}b=1E3}else b=\n1E3;b=dd(this,e,b);c=N(this.I);S(c,\"RID\",a);S(c,\"CVER\",22);this.D&&S(c,\"X-HTTP-Session-Id\",this.D);$c(this,c);f&&(this.O?b=\"headers=\"+encodeURIComponent(String(Oc(f)))+\"&\"+b:this.m&&Pc(c,this.m,f));bc(this.h,e);this.Ua&&S(c,\"TYPE\",\"init\");this.P?(S(c,\"$req\",b),S(c,\"SID\",\"null\"),e.T=!0,Hb(e,c,null)):Hb(e,c,b);this.G=2}}else 3==this.G&&(a?ed(this,a):0==this.i.length||jc(this.h)||ed(this))};\nfunction ed(a,b){var c;b?c=b.l:c=a.U++;const d=N(a.I);S(d,\"SID\",a.K);S(d,\"RID\",c);S(d,\"AID\",a.T);$c(a,d);a.m&&a.o&&Pc(d,a.m,a.o);c=new M(a,a.j,c,a.B+1);null===a.m&&(c.H=a.o);b&&(a.i=b.D.concat(a.i));b=dd(a,c,1E3);c.I=Math.round(.5*a.wa)+Math.round(.5*a.wa*Math.random());bc(a.h,c);Hb(c,d,b)}function $c(a,b){a.H&&qa(a.H,function(c,d){S(b,d,c)});a.l&&nc({},function(c,d){S(b,d,c)})}\nfunction dd(a,b,c){c=Math.min(a.i.length,c);var d=a.l?p(a.l.Na,a.l,a):null;a:{var e=a.i;let f=-1;for(;;){const g=[\"count=\"+c];-1==f?0<c?(f=e[0].g,g.push(\"ofs=\"+f)):f=0:g.push(\"ofs=\"+f);let m=!0;for(let q=0;q<c;q++){let l=e[q].g;const v=e[q].map;l-=f;if(0>l)f=Math.max(0,e[q].g-100),m=!1;else try{Ic(v,g,\"req\"+l+\"_\")}catch(w){d&&d(v)}}if(m){d=g.join(\"&\");break a}}}a=a.i.splice(0,c);b.D=a;return d}function ec(a){if(!a.g&&!a.u){a.Y=1;var b=a.Fa;x||Ea();y||(x(),y=!0);za.add(b,a);a.v=0}}\nfunction $b(a){if(a.g||a.u||3<=a.v)return!1;a.Y++;a.u=ub(p(a.Fa,a),cd(a,a.v));a.v++;return!0}h.Fa=function(){this.u=null;fd(this);if(this.ba&&!(this.M||null==this.g||0>=this.R)){var a=2*this.R;this.j.info(\"BP detection timer enabled: \"+a);this.A=ub(p(this.ab,this),a)}};h.ab=function(){this.A&&(this.A=null,this.j.info(\"BP detection timeout reached.\"),this.j.info(\"Buffering proxy detected and switch to long-polling!\"),this.F=!1,this.M=!0,K(10),Zb(this),fd(this))};\nfunction Tb(a){null!=a.A&&(k.clearTimeout(a.A),a.A=null)}function fd(a){a.g=new M(a,a.j,\"rpc\",a.Y);null===a.m&&(a.g.H=a.o);a.g.O=0;var b=N(a.qa);S(b,\"RID\",\"rpc\");S(b,\"SID\",a.K);S(b,\"AID\",a.T);S(b,\"CI\",a.F?\"0\":\"1\");!a.F&&a.ja&&S(b,\"TO\",a.ja);S(b,\"TYPE\",\"xmlhttp\");$c(a,b);a.m&&a.o&&Pc(b,a.m,a.o);a.L&&(a.g.I=a.L);var c=a.g;a=a.ia;c.L=1;c.v=Ib(N(b));c.m=null;c.P=!0;Jb(c,a)}h.Za=function(){null!=this.C&&(this.C=null,Zb(this),$b(this),K(19))};function Yb(a){null!=a.C&&(k.clearTimeout(a.C),a.C=null)}\nfunction Ub(a,b){var c=null;if(a.g==b){Yb(a);Tb(a);a.g=null;var d=2}else if(Xb(a.h,b))c=b.D,dc(a.h,b),d=1;else return;if(0!=a.G)if(b.o)if(1==d){c=b.m?b.m.length:0;b=Date.now()-b.F;var e=a.B;d=qb();F(d,new tb(d,c,b,e));fc(a)}else ec(a);else if(e=b.s,3==e||0==e&&0<b.X||!(1==d&&bd(a,b)||2==d&&$b(a)))switch(c&&0<c.length&&(b=a.h,b.i=b.i.concat(c)),e){case 1:R(a,5);break;case 4:R(a,10);break;case 3:R(a,6);break;default:R(a,2)}}\nfunction cd(a,b){let c=a.Ta+Math.floor(Math.random()*a.cb);a.isActive()||(c*=2);return c*b}function R(a,b){a.j.info(\"Error code \"+b);if(2==b){var c=p(a.fb,a),d=a.Xa;const e=!d;d=new T(d||\"//www.google.com/images/cleardot.gif\");k.location&&\"http\"==k.location.protocol||qc(d,\"https\");Ib(d);e?Fc(d.toString(),c):Gc(d.toString(),c)}else K(2);a.G=0;a.l&&a.l.sa(b);ad(a);Zc(a)}h.fb=function(a){a?(this.j.info(\"Successfully pinged google.com\"),K(2)):(this.j.info(\"Failed to ping google.com\"),K(1))};\nfunction ad(a){a.G=0;a.ka=[];if(a.l){const b=kc(a.h);if(0!=b.length||0!=a.i.length)ma(a.ka,b),ma(a.ka,a.i),a.h.i.length=0,la(a.i),a.i.length=0;a.l.ra()}}function cc(a,b,c){var d=c instanceof T?N(c):new T(c);if(\"\"!=d.g)b&&(d.g=b+\".\"+d.g),rc(d,d.s);else{var e=k.location;d=e.protocol;b=b?b+\".\"+e.hostname:e.hostname;e=+e.port;var f=new T(null);d&&qc(f,d);b&&(f.g=b);e&&rc(f,e);c&&(f.l=c);d=f}c=a.D;b=a.ya;c&&b&&S(d,c,b);S(d,\"VER\",a.la);$c(a,d);return d}\nfunction Mb(a,b,c){if(b&&!a.J)throw Error(\"Can't create secondary domain capable XhrIo object.\");b=a.Ca&&!a.pa?new X(new Jc({eb:c})):new X(a.pa);b.Ha(a.J);return b}h.isActive=function(){return!!this.l&&this.l.isActive(this)};function gd(){}h=gd.prototype;h.ua=function(){};h.ta=function(){};h.sa=function(){};h.ra=function(){};h.isActive=function(){return!0};h.Na=function(){};function hd(){}hd.prototype.g=function(a,b){return new Y(a,b)};\nfunction Y(a,b){E.call(this);this.g=new Yc(b);this.l=a;this.h=b&&b.messageUrlParams||null;a=b&&b.messageHeaders||null;b&&b.clientProtocolHeaderRequired&&(a?a[\"X-Client-Protocol\"]=\"webchannel\":a={\"X-Client-Protocol\":\"webchannel\"});this.g.o=a;a=b&&b.initMessageHeaders||null;b&&b.messageContentType&&(a?a[\"X-WebChannel-Content-Type\"]=b.messageContentType:a={\"X-WebChannel-Content-Type\":b.messageContentType});b&&b.va&&(a?a[\"X-WebChannel-Client-Profile\"]=b.va:a={\"X-WebChannel-Client-Profile\":b.va});this.g.S=\na;(a=b&&b.Sb)&&!t(a)&&(this.g.m=a);this.v=b&&b.supportsCrossDomainXhr||!1;this.u=b&&b.sendRawJson||!1;(b=b&&b.httpSessionIdParam)&&!t(b)&&(this.g.D=b,a=this.h,null!==a&&b in a&&(a=this.h,b in a&&delete a[b]));this.j=new Z(this)}r(Y,E);Y.prototype.m=function(){this.g.l=this.j;this.v&&(this.g.J=!0);this.g.connect(this.l,this.h||void 0)};Y.prototype.close=function(){gc(this.g)};\nY.prototype.o=function(a){var b=this.g;if(\"string\"===typeof a){var c={};c.__data__=a;a=c}else this.u&&(c={},c.__data__=hb(a),a=c);b.i.push(new hc(b.Ya++,a));3==b.G&&fc(b)};Y.prototype.N=function(){this.g.l=null;delete this.j;gc(this.g);delete this.g;Y.aa.N.call(this)};\nfunction id(a){nb.call(this);a.__headers__&&(this.headers=a.__headers__,this.statusCode=a.__status__,delete a.__headers__,delete a.__status__);var b=a.__sm__;if(b){a:{for(const c in b){a=c;break a}a=void 0}if(this.i=a)a=this.i,b=null!==b&&a in b?b[a]:void 0;this.data=b}else this.data=a}r(id,nb);function jd(){ob.call(this);this.status=1}r(jd,ob);function Z(a){this.g=a}r(Z,gd);Z.prototype.ua=function(){F(this.g,\"a\")};Z.prototype.ta=function(a){F(this.g,new id(a))};\nZ.prototype.sa=function(a){F(this.g,new jd(a))};Z.prototype.ra=function(){F(this.g,\"b\")};hd.prototype.createWebChannel=hd.prototype.g;Y.prototype.send=Y.prototype.o;Y.prototype.open=Y.prototype.m;Y.prototype.close=Y.prototype.close;module.exports.createWebChannelTransport=function(){return new hd};module.exports.getStatEventTarget=function(){return qb()};module.exports.Event=I;module.exports.Stat={mb:0,pb:1,qb:2,Jb:3,Ob:4,Lb:5,Mb:6,Kb:7,Ib:8,Nb:9,PROXY:10,NOPROXY:11,Gb:12,Cb:13,Db:14,Bb:15,Eb:16,Fb:17,ib:18,hb:19,jb:20};Ab.NO_ERROR=0;Ab.TIMEOUT=8;Ab.HTTP_ERROR=6;\nmodule.exports.ErrorCode=Ab;Bb.COMPLETE=\"complete\";module.exports.EventType=Bb;mb.EventType=H;H.OPEN=\"a\";H.CLOSE=\"b\";H.ERROR=\"c\";H.MESSAGE=\"d\";E.prototype.listen=E.prototype.K;module.exports.WebChannel=mb;module.exports.FetchXmlHttpFactory=Jc;X.prototype.listenOnce=X.prototype.L;X.prototype.getLastError=X.prototype.Ka;X.prototype.getLastErrorCode=X.prototype.Ba;X.prototype.getStatus=X.prototype.Z;X.prototype.getResponseJson=X.prototype.Oa;X.prototype.getResponseText=X.prototype.oa;\nX.prototype.send=X.prototype.ea;X.prototype.setWithCredentials=X.prototype.Ha;module.exports.XhrIo=X;}).apply( typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self  : typeof window !== 'undefined' ? window  : {});\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nexport class User {\n  /** A user with a null UID. */\n  static readonly UNAUTHENTICATED = new User(null);\n\n  // TODO(mikelehen): Look into getting a proper uid-equivalent for\n  // non-FirebaseAuth providers.\n  static readonly GOOGLE_CREDENTIALS = new User('google-credentials-uid');\n  static readonly FIRST_PARTY = new User('first-party-uid');\n  static readonly MOCK_USER = new User('mock-user');\n\n  constructor(readonly uid: string | null) {}\n\n  isAuthenticated(): boolean {\n    return this.uid != null;\n  }\n\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n  toKey(): string {\n    if (this.isAuthenticated()) {\n      return 'uid:' + this.uid;\n    } else {\n      return 'anonymous-user';\n    }\n  }\n\n  isEqual(otherUser: User): boolean {\n    return otherUser.uid === this.uid;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nimport { version } from '../../../firebase/package.json';\nexport let SDK_VERSION = version;\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel, LogLevelString } from '@firebase/logger';\n\nimport { SDK_VERSION } from '../core/version';\nimport { formatJSON } from '../platform/format_json';\n\nexport { LogLevel, LogLevelString };\n\nconst logClient = new Logger('@firebase/firestore');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  logClient.setLogLevel(logLevel);\n}\n\nexport function logDebug(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    const args = obj.map(argToString);\n    logClient.debug(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function logError(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    const args = obj.map(argToString);\n    logClient.error(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\n/**\n * @internal\n */\nexport function logWarn(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    const args = obj.map(argToString);\n    logClient.warn(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj: unknown): string | unknown {\n  if (typeof obj === 'string') {\n    return obj;\n  } else {\n    try {\n      return formatJSON(obj);\n    } catch (e) {\n      // Converting to JSON failed, just log the object directly\n      return obj;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Formats an object as a JSON string, suitable for logging. */\nexport function formatJSON(value: unknown): string {\n  return JSON.stringify(value);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '../core/version';\n\nimport { logError } from './log';\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nexport function fail(failure: string = 'Unexpected state'): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message =\n    `FIRESTORE (${SDK_VERSION}) INTERNAL ASSERTION FAILED: ` + failure;\n  logError(message);\n\n  // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\nexport function hardAssert(\n  assertion: boolean,\n  message?: string\n): asserts assertion {\n  if (!assertion) {\n    fail(message);\n  }\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */\nexport function debugAssert(\n  assertion: boolean,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    fail(message);\n  }\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nexport function debugCast<T>(\n  obj: object,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor: { new (...args: any[]): T }\n): T | never {\n  debugAssert(\n    obj instanceof constructor,\n    `Expected type '${constructor.name}', but was '${obj.constructor.name}'`\n  );\n  return obj as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * The set of Firestore status codes. The codes are the same at the ones\n * exposed by gRPC here:\n * https://github.com/grpc/grpc/blob/master/doc/statuscodes.md\n *\n * Possible values:\n * - 'cancelled': The operation was cancelled (typically by the caller).\n * - 'unknown': Unknown error or an error from a different error domain.\n * - 'invalid-argument': Client specified an invalid argument. Note that this\n *   differs from 'failed-precondition'. 'invalid-argument' indicates\n *   arguments that are problematic regardless of the state of the system\n *   (e.g. an invalid field name).\n * - 'deadline-exceeded': Deadline expired before operation could complete.\n *   For operations that change the state of the system, this error may be\n *   returned even if the operation has completed successfully. For example,\n *   a successful response from a server could have been delayed long enough\n *   for the deadline to expire.\n * - 'not-found': Some requested document was not found.\n * - 'already-exists': Some document that we attempted to create already\n *   exists.\n * - 'permission-denied': The caller does not have permission to execute the\n *   specified operation.\n * - 'resource-exhausted': Some resource has been exhausted, perhaps a\n *   per-user quota, or perhaps the entire file system is out of space.\n * - 'failed-precondition': Operation was rejected because the system is not\n *   in a state required for the operation's execution.\n * - 'aborted': The operation was aborted, typically due to a concurrency\n *   issue like transaction aborts, etc.\n * - 'out-of-range': Operation was attempted past the valid range.\n * - 'unimplemented': Operation is not implemented or not supported/enabled.\n * - 'internal': Internal errors. Means some invariants expected by\n *   underlying system has been broken. If you see one of these errors,\n *   something is very broken.\n * - 'unavailable': The service is currently unavailable. This is most likely\n *   a transient condition and may be corrected by retrying with a backoff.\n * - 'data-loss': Unrecoverable data loss or corruption.\n * - 'unauthenticated': The request does not have valid authentication\n *   credentials for the operation.\n */\nexport type FirestoreErrorCode =\n  | 'cancelled'\n  | 'unknown'\n  | 'invalid-argument'\n  | 'deadline-exceeded'\n  | 'not-found'\n  | 'already-exists'\n  | 'permission-denied'\n  | 'resource-exhausted'\n  | 'failed-precondition'\n  | 'aborted'\n  | 'out-of-range'\n  | 'unimplemented'\n  | 'internal'\n  | 'unavailable'\n  | 'data-loss'\n  | 'unauthenticated';\n\n/**\n * Error Codes describing the different ways Firestore can fail. These come\n * directly from GRPC.\n */\nexport type Code = FirestoreErrorCode;\n\nexport const Code = {\n  // Causes are copied from:\n  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n  /** Not an error; returned on success. */\n  OK: 'ok' as FirestoreErrorCode,\n\n  /** The operation was cancelled (typically by the caller). */\n  CANCELLED: 'cancelled' as FirestoreErrorCode,\n\n  /** Unknown error or an error from a different error domain. */\n  UNKNOWN: 'unknown' as FirestoreErrorCode,\n\n  /**\n   * Client specified an invalid argument. Note that this differs from\n   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n   * problematic regardless of the state of the system (e.g., a malformed file\n   * name).\n   */\n  INVALID_ARGUMENT: 'invalid-argument' as FirestoreErrorCode,\n\n  /**\n   * Deadline expired before operation could complete. For operations that\n   * change the state of the system, this error may be returned even if the\n   * operation has completed successfully. For example, a successful response\n   * from a server could have been delayed long enough for the deadline to\n   * expire.\n   */\n  DEADLINE_EXCEEDED: 'deadline-exceeded' as FirestoreErrorCode,\n\n  /** Some requested entity (e.g., file or directory) was not found. */\n  NOT_FOUND: 'not-found' as FirestoreErrorCode,\n\n  /**\n   * Some entity that we attempted to create (e.g., file or directory) already\n   * exists.\n   */\n  ALREADY_EXISTS: 'already-exists' as FirestoreErrorCode,\n\n  /**\n   * The caller does not have permission to execute the specified operation.\n   * PERMISSION_DENIED must not be used for rejections caused by exhausting\n   * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n   * PERMISSION_DENIED must not be used if the caller can not be identified\n   * (use UNAUTHENTICATED instead for those errors).\n   */\n  PERMISSION_DENIED: 'permission-denied' as FirestoreErrorCode,\n\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED: 'unauthenticated' as FirestoreErrorCode,\n\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n   * entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED: 'resource-exhausted' as FirestoreErrorCode,\n\n  /**\n   * Operation was rejected because the system is not in a state required for\n   * the operation's execution. For example, directory to be deleted may be\n   * non-empty, an rmdir operation is applied to a non-directory, etc.\n   *\n   * A litmus test that may help a service implementor in deciding\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n   *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n   *  (b) Use ABORTED if the client should retry at a higher-level\n   *      (e.g., restarting a read-modify-write sequence).\n   *  (c) Use FAILED_PRECONDITION if the client should not retry until\n   *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n   *      fails because the directory is non-empty, FAILED_PRECONDITION\n   *      should be returned since the client should not retry unless\n   *      they have first fixed up the directory by deleting files from it.\n   *  (d) Use FAILED_PRECONDITION if the client performs conditional\n   *      REST Get/Update/Delete on a resource and the resource on the\n   *      server does not match the condition. E.g., conflicting\n   *      read-modify-write on the same resource.\n   */\n  FAILED_PRECONDITION: 'failed-precondition' as FirestoreErrorCode,\n\n  /**\n   * The operation was aborted, typically due to a concurrency issue like\n   * sequencer check failures, transaction aborts, etc.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  ABORTED: 'aborted' as FirestoreErrorCode,\n\n  /**\n   * Operation was attempted past the valid range. E.g., seeking or reading\n   * past end of file.\n   *\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n   * if the system state changes. For example, a 32-bit file system will\n   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n   * an offset past the current file size.\n   *\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\n   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n   * when it applies so that callers who are iterating through a space can\n   * easily look for an OUT_OF_RANGE error to detect when they are done.\n   */\n  OUT_OF_RANGE: 'out-of-range' as FirestoreErrorCode,\n\n  /** Operation is not implemented or not supported/enabled in this service. */\n  UNIMPLEMENTED: 'unimplemented' as FirestoreErrorCode,\n\n  /**\n   * Internal errors. Means some invariants expected by underlying System has\n   * been broken. If you see one of these errors, Something is very broken.\n   */\n  INTERNAL: 'internal' as FirestoreErrorCode,\n\n  /**\n   * The service is currently unavailable. This is a most likely a transient\n   * condition and may be corrected by retrying with a backoff.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  UNAVAILABLE: 'unavailable' as FirestoreErrorCode,\n\n  /** Unrecoverable data loss or corruption. */\n  DATA_LOSS: 'data-loss' as FirestoreErrorCode\n};\n\n/** An error returned by a Firestore operation. */\nexport class FirestoreError extends FirebaseError {\n  /** The stack of the error. */\n  readonly stack?: string;\n\n  /** @hideconstructor */\n  constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    readonly code: FirestoreErrorCode,\n    /**\n     * A custom error description.\n     */\n    readonly message: string\n  ) {\n    super(code, message);\n\n    // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Resolver<R> {\n  (value: R | Promise<R>): void;\n}\n\nexport interface Rejecter {\n  (reason?: Error): void;\n}\n\nexport class Deferred<R = void> {\n  promise: Promise<R>;\n  // Assigned synchronously in constructor by Promise constructor callback.\n  resolve!: Resolver<R>;\n  reject!: Rejecter;\n\n  constructor() {\n    this.promise = new Promise((resolve: Resolver<R>, reject: Rejecter) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n\n/**\n * Takes an array of values and a function from a value to a Promise. The function is run on each\n * value sequentially, waiting for the previous promise to resolve before starting the next one.\n * The returned promise resolves once the function has been run on all values.\n */\nexport function sequence<T>(\n  values: T[],\n  fn: (value: T) => Promise<void>\n): Promise<void> {\n  let p = Promise.resolve();\n  for (const value of values) {\n    p = p.then(() => fn(value));\n  }\n  return p;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { User } from '../auth/user';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\nimport { Deferred } from '../util/promise';\n\n// TODO(mikelehen): This should be split into multiple files and probably\n// moved to an auth/ folder to match other platforms.\n\n/**\n * @internal\n */\nexport type AuthTokenFactory = () => string;\n\n/**\n * @internal\n */\nexport interface FirstPartyCredentialsSettings {\n  // These are external types. Prevent minification.\n  ['type']: 'firstParty';\n  ['sessionIndex']: string;\n  ['iamToken']: string | null;\n  ['authTokenFactory']: AuthTokenFactory | null;\n}\n\nexport interface ProviderCredentialsSettings {\n  // These are external types. Prevent minification.\n  ['type']: 'provider';\n  ['client']: CredentialsProvider<User>;\n}\n\n/** Settings for private credentials */\nexport type CredentialsSettings =\n  | FirstPartyCredentialsSettings\n  | ProviderCredentialsSettings;\n\nexport type TokenType = 'OAuth' | 'FirstParty' | 'AppCheck';\nexport interface Token {\n  /** Type of token. */\n  type: TokenType;\n\n  /**\n   * The user with which the token is associated (used for persisting user\n   * state on disk, etc.).\n   * This will be null for Tokens of the type 'AppCheck'.\n   */\n  user?: User;\n\n  /** Header values to set for this token */\n  headers: Map<string, string>;\n}\n\nexport class OAuthToken implements Token {\n  type = 'OAuth' as TokenType;\n  headers = new Map();\n\n  constructor(value: string, public user: User) {\n    this.headers.set('Authorization', `Bearer ${value}`);\n  }\n}\n\n/**\n * A Listener for credential change events. The listener should fetch a new\n * token and may need to invalidate other state if the current user has also\n * changed.\n */\nexport type CredentialChangeListener<T> = (credential: T) => Promise<void>;\n\n/**\n * Provides methods for getting the uid and token for the current user and\n * listening for changes.\n */\nexport interface CredentialsProvider<T> {\n  /**\n   * Starts the credentials provider and specifies a listener to be notified of\n   * credential changes (sign-in / sign-out, token changes). It is immediately\n   * called once with the initial user.\n   *\n   * The change listener is invoked on the provided AsyncQueue.\n   */\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<T>\n  ): void;\n\n  /** Requests a token for the current user. */\n  getToken(): Promise<Token | null>;\n\n  /**\n   * Marks the last retrieved token as invalid, making the next GetToken request\n   * force-refresh the token.\n   */\n  invalidateToken(): void;\n\n  shutdown(): void;\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nexport class EmptyAuthCredentialsProvider implements CredentialsProvider<User> {\n  getToken(): Promise<Token | null> {\n    return Promise.resolve<Token | null>(null);\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    // Fire with initial user.\n    asyncQueue.enqueueRetryable(() => changeListener(User.UNAUTHENTICATED));\n  }\n\n  shutdown(): void {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nexport class EmulatorAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  constructor(private token: Token) {}\n\n  /**\n   * Stores the listener registered with setChangeListener()\n   * This isn't actually necessary since the UID never changes, but we use this\n   * to verify the listen contract is adhered to in tests.\n   */\n  private changeListener: CredentialChangeListener<User> | null = null;\n\n  getToken(): Promise<Token | null> {\n    return Promise.resolve(this.token);\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    debugAssert(\n      !this.changeListener,\n      'Can only call setChangeListener() once.'\n    );\n    this.changeListener = changeListener;\n    // Fire with initial user.\n    asyncQueue.enqueueRetryable(() => changeListener(this.token.user!));\n  }\n\n  shutdown(): void {\n    this.changeListener = null;\n  }\n}\n\n/** Credential provider for the Lite SDK. */\nexport class LiteAuthCredentialsProvider implements CredentialsProvider<User> {\n  private auth: FirebaseAuthInternal | null = null;\n\n  constructor(authProvider: Provider<FirebaseAuthInternalName>) {\n    authProvider.onInit(auth => {\n      this.auth = auth;\n    });\n  }\n\n  getToken(): Promise<Token | null> {\n    if (!this.auth) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth.getToken().then(tokenData => {\n      if (tokenData) {\n        hardAssert(\n          typeof tokenData.accessToken === 'string',\n          'Invalid tokenData returned from getToken():' + tokenData\n        );\n        return new OAuthToken(\n          tokenData.accessToken,\n          new User(this.auth!.getUid())\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {}\n\n  shutdown(): void {}\n}\n\nexport class FirebaseAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  /**\n   * The auth token listener registered with FirebaseApp, retained here so we\n   * can unregister it.\n   */\n  private tokenListener!: () => void;\n\n  /** Tracks the current User. */\n  private currentUser: User = User.UNAUTHENTICATED;\n\n  /**\n   * Counter used to detect if the token changed while a getToken request was\n   * outstanding.\n   */\n  private tokenCounter = 0;\n\n  private forceRefresh = false;\n\n  private auth: FirebaseAuthInternal | null = null;\n\n  constructor(private authProvider: Provider<FirebaseAuthInternalName>) {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    let lastTokenId = this.tokenCounter;\n\n    // A change listener that prevents double-firing for the same token change.\n    const guardedChangeListener: (user: User) => Promise<void> = user => {\n      if (this.tokenCounter !== lastTokenId) {\n        lastTokenId = this.tokenCounter;\n        return changeListener(user);\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    // A promise that can be waited on to block on the next token change.\n    // This promise is re-created after each change.\n    let nextToken = new Deferred<void>();\n\n    this.tokenListener = () => {\n      this.tokenCounter++;\n      this.currentUser = this.getUser();\n      nextToken.resolve();\n      nextToken = new Deferred<void>();\n      asyncQueue.enqueueRetryable(() =>\n        guardedChangeListener(this.currentUser)\n      );\n    };\n\n    const awaitNextToken: () => void = () => {\n      const currentTokenAttempt = nextToken;\n      asyncQueue.enqueueRetryable(async () => {\n        await currentTokenAttempt.promise;\n        await guardedChangeListener(this.currentUser);\n      });\n    };\n\n    const registerAuth = (auth: FirebaseAuthInternal): void => {\n      logDebug('FirebaseAuthCredentialsProvider', 'Auth detected');\n      this.auth = auth;\n      this.auth.addAuthTokenListener(this.tokenListener);\n      awaitNextToken();\n    };\n\n    this.authProvider.onInit(auth => registerAuth(auth));\n\n    // Our users can initialize Auth right after Firestore, so we give it\n    // a chance to register itself with the component framework before we\n    // determine whether to start up in unauthenticated mode.\n    setTimeout(() => {\n      if (!this.auth) {\n        const auth = this.authProvider.getImmediate({ optional: true });\n        if (auth) {\n          registerAuth(auth);\n        } else {\n          // If auth is still not available, proceed with `null` user\n          logDebug('FirebaseAuthCredentialsProvider', 'Auth not yet detected');\n          nextToken.resolve();\n          nextToken = new Deferred<void>();\n        }\n      }\n    }, 0);\n\n    awaitNextToken();\n  }\n\n  getToken(): Promise<Token | null> {\n    debugAssert(\n      this.tokenListener != null,\n      'FirebaseAuthCredentialsProvider not started.'\n    );\n\n    // Take note of the current value of the tokenCounter so that this method\n    // can fail (with an ABORTED error) if there is a token change while the\n    // request is outstanding.\n    const initialTokenCounter = this.tokenCounter;\n    const forceRefresh = this.forceRefresh;\n    this.forceRefresh = false;\n\n    if (!this.auth) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth.getToken(forceRefresh).then(tokenData => {\n      // Cancel the request since the token changed while the request was\n      // outstanding so the response is potentially for a previous user (which\n      // user, we can't be sure).\n      if (this.tokenCounter !== initialTokenCounter) {\n        logDebug(\n          'FirebaseAuthCredentialsProvider',\n          'getToken aborted due to token change.'\n        );\n        return this.getToken();\n      } else {\n        if (tokenData) {\n          hardAssert(\n            typeof tokenData.accessToken === 'string',\n            'Invalid tokenData returned from getToken():' + tokenData\n          );\n          return new OAuthToken(tokenData.accessToken, this.currentUser);\n        } else {\n          return null;\n        }\n      }\n    });\n  }\n\n  invalidateToken(): void {\n    this.forceRefresh = true;\n  }\n\n  shutdown(): void {\n    if (this.auth) {\n      this.auth.removeAuthTokenListener(this.tokenListener!);\n    }\n  }\n\n  // Auth.getUid() can return null even with a user logged in. It is because\n  // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n  // This method should only be called in the AuthTokenListener callback\n  // to guarantee to get the actual user.\n  private getUser(): User {\n    const currentUid = this.auth && this.auth.getUid();\n    hardAssert(\n      currentUid === null || typeof currentUid === 'string',\n      'Received invalid UID: ' + currentUid\n    );\n    return new User(currentUid);\n  }\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nexport class FirstPartyToken implements Token {\n  type = 'FirstParty' as TokenType;\n  user = User.FIRST_PARTY;\n  private _headers = new Map();\n\n  constructor(\n    private readonly sessionIndex: string,\n    private readonly iamToken: string | null,\n    private readonly authTokenFactory: AuthTokenFactory | null\n  ) {}\n\n  /**\n   * Gets an authorization token, using a provided factory function, or return\n   * null.\n   */\n  private getAuthToken(): string | null {\n    if (this.authTokenFactory) {\n      return this.authTokenFactory();\n    } else {\n      return null;\n    }\n  }\n\n  get headers(): Map<string, string> {\n    this._headers.set('X-Goog-AuthUser', this.sessionIndex);\n    // Use array notation to prevent minification\n    const authHeaderTokenValue = this.getAuthToken();\n    if (authHeaderTokenValue) {\n      this._headers.set('Authorization', authHeaderTokenValue);\n    }\n    if (this.iamToken) {\n      this._headers.set('X-Goog-Iam-Authorization-Token', this.iamToken);\n    }\n\n    return this._headers;\n  }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nexport class FirstPartyAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  constructor(\n    private sessionIndex: string,\n    private iamToken: string | null,\n    private authTokenFactory: AuthTokenFactory | null\n  ) {}\n\n  getToken(): Promise<Token | null> {\n    return Promise.resolve(\n      new FirstPartyToken(\n        this.sessionIndex,\n        this.iamToken,\n        this.authTokenFactory\n      )\n    );\n  }\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    // Fire with initial uid.\n    asyncQueue.enqueueRetryable(() => changeListener(User.FIRST_PARTY));\n  }\n\n  shutdown(): void {}\n\n  invalidateToken(): void {}\n}\n\nexport class AppCheckToken implements Token {\n  type = 'AppCheck' as TokenType;\n  headers = new Map();\n\n  constructor(private value: string) {\n    if (value && value.length > 0) {\n      this.headers.set('x-firebase-appcheck', this.value);\n    }\n  }\n}\n\nexport class FirebaseAppCheckTokenProvider\n  implements CredentialsProvider<string>\n{\n  /**\n   * The AppCheck token listener registered with FirebaseApp, retained here so\n   * we can unregister it.\n   */\n  private tokenListener!: AppCheckTokenListener;\n  private forceRefresh = false;\n  private appCheck: FirebaseAppCheckInternal | null = null;\n  private latestAppCheckToken: string | null = null;\n\n  constructor(\n    private appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {\n    const onTokenChanged: (\n      tokenResult: AppCheckTokenResult\n    ) => Promise<void> = tokenResult => {\n      if (tokenResult.error != null) {\n        logDebug(\n          'FirebaseAppCheckTokenProvider',\n          `Error getting App Check token; using placeholder token instead. Error: ${tokenResult.error.message}`\n        );\n      }\n      const tokenUpdated = tokenResult.token !== this.latestAppCheckToken;\n      this.latestAppCheckToken = tokenResult.token;\n      logDebug(\n        'FirebaseAppCheckTokenProvider',\n        `Received ${tokenUpdated ? 'new' : 'existing'} token.`\n      );\n      return tokenUpdated\n        ? changeListener(tokenResult.token)\n        : Promise.resolve();\n    };\n\n    this.tokenListener = (tokenResult: AppCheckTokenResult) => {\n      asyncQueue.enqueueRetryable(() => onTokenChanged(tokenResult));\n    };\n\n    const registerAppCheck = (appCheck: FirebaseAppCheckInternal): void => {\n      logDebug('FirebaseAppCheckTokenProvider', 'AppCheck detected');\n      this.appCheck = appCheck;\n      this.appCheck.addTokenListener(this.tokenListener);\n    };\n\n    this.appCheckProvider.onInit(appCheck => registerAppCheck(appCheck));\n\n    // Our users can initialize AppCheck after Firestore, so we give it\n    // a chance to register itself with the component framework.\n    setTimeout(() => {\n      if (!this.appCheck) {\n        const appCheck = this.appCheckProvider.getImmediate({ optional: true });\n        if (appCheck) {\n          registerAppCheck(appCheck);\n        } else {\n          // If AppCheck is still not available, proceed without it.\n          logDebug(\n            'FirebaseAppCheckTokenProvider',\n            'AppCheck not yet detected'\n          );\n        }\n      }\n    }, 0);\n  }\n\n  getToken(): Promise<Token | null> {\n    debugAssert(\n      this.tokenListener != null,\n      'FirebaseAppCheckTokenProvider not started.'\n    );\n\n    const forceRefresh = this.forceRefresh;\n    this.forceRefresh = false;\n\n    if (!this.appCheck) {\n      return Promise.resolve(null);\n    }\n\n    return this.appCheck.getToken(forceRefresh).then(tokenResult => {\n      if (tokenResult) {\n        hardAssert(\n          typeof tokenResult.token === 'string',\n          'Invalid tokenResult returned from getToken():' + tokenResult\n        );\n        this.latestAppCheckToken = tokenResult.token;\n        return new AppCheckToken(tokenResult.token);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {\n    this.forceRefresh = true;\n  }\n\n  shutdown(): void {\n    if (this.appCheck) {\n      this.appCheck.removeTokenListener(this.tokenListener!);\n    }\n  }\n}\n\n/**\n * An AppCheck token provider that always yields an empty token.\n * @internal\n */\nexport class EmptyAppCheckTokenProvider implements CredentialsProvider<string> {\n  getToken(): Promise<Token | null> {\n    return Promise.resolve<Token | null>(new AppCheckToken(''));\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {}\n\n  shutdown(): void {}\n}\n\n/** AppCheck token provider for the Lite SDK. */\nexport class LiteAppCheckTokenProvider implements CredentialsProvider<string> {\n  private appCheck: FirebaseAppCheckInternal | null = null;\n\n  constructor(\n    private appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {\n    appCheckProvider.onInit(appCheck => {\n      this.appCheck = appCheck;\n    });\n  }\n\n  getToken(): Promise<Token | null> {\n    if (!this.appCheck) {\n      return Promise.resolve(null);\n    }\n\n    return this.appCheck.getToken().then(tokenResult => {\n      if (tokenResult) {\n        hardAssert(\n          typeof tokenResult.token === 'string',\n          'Invalid tokenResult returned from getToken():' + tokenResult\n        );\n        return new AppCheckToken(tokenResult.token);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {}\n\n  shutdown(): void {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\nexport function makeAuthCredentialsProvider(\n  credentials?: CredentialsSettings\n): CredentialsProvider<User> {\n  if (!credentials) {\n    return new EmptyAuthCredentialsProvider();\n  }\n  switch (credentials['type']) {\n    case 'firstParty':\n      return new FirstPartyAuthCredentialsProvider(\n        credentials['sessionIndex'] || '0',\n        credentials['iamToken'] || null,\n        credentials['authTokenFactory'] || null\n      );\n\n    case 'provider':\n      return credentials['client'];\n\n    default:\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'makeAuthCredentialsProvider failed due to invalid credential type'\n      );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../../util/assert';\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nexport function randomBytes(nBytes: number): Uint8Array {\n  debugAssert(nBytes >= 0, `Expecting non-negative nBytes, got: ${nBytes}`);\n\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const crypto =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof self !== 'undefined' && (self.crypto || (self as any)['msCrypto']);\n  const bytes = new Uint8Array(nBytes);\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    crypto.getRandomValues(bytes);\n  } else {\n    // Falls back to Math.random\n    for (let i = 0; i < nBytes; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n  }\n  return bytes;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { randomBytes } from '../platform/random_bytes';\n\nimport { debugAssert } from './assert';\n\nexport type EventHandler<E> = (value: E) => void;\nexport interface Indexable {\n  [k: string]: unknown;\n}\n\n/**\n * A utility class for generating unique alphanumeric IDs of a specified length.\n *\n * @internal\n * Exported internally for testing purposes.\n */\nexport class AutoId {\n  static newId(): string {\n    // Alphanumeric characters\n    const chars =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    // The largest byte value that is a multiple of `char.length`.\n    const maxMultiple = Math.floor(256 / chars.length) * chars.length;\n    debugAssert(\n      0 < maxMultiple && maxMultiple < 256,\n      `Expect maxMultiple to be (0, 256), but got ${maxMultiple}`\n    );\n\n    let autoId = '';\n    const targetLength = 20;\n    while (autoId.length < targetLength) {\n      const bytes = randomBytes(40);\n      for (let i = 0; i < bytes.length; ++i) {\n        // Only accept values that are [0, maxMultiple), this ensures they can\n        // be evenly mapped to indices of `chars` via a modulo operation.\n        if (autoId.length < targetLength && bytes[i] < maxMultiple) {\n          autoId += chars.charAt(bytes[i] % chars.length);\n        }\n      }\n    }\n    debugAssert(autoId.length === targetLength, 'Invalid auto ID: ' + autoId);\n\n    return autoId;\n  }\n}\n\nexport function primitiveComparator<T>(left: T, right: T): number {\n  if (left < right) {\n    return -1;\n  }\n  if (left > right) {\n    return 1;\n  }\n  return 0;\n}\n\nexport interface Equatable<T> {\n  isEqual(other: T): boolean;\n}\n\nexport interface Iterable<V> {\n  forEach: (cb: (v: V) => void) => void;\n}\n\n/** Helper to compare arrays using isEqual(). */\nexport function arrayEquals<T>(\n  left: T[],\n  right: T[],\n  comparator: (l: T, r: T) => boolean\n): boolean {\n  if (left.length !== right.length) {\n    return false;\n  }\n  return left.every((value, index) => comparator(value, right[index]));\n}\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */\nexport function immediateSuccessor(s: string): string {\n  // Return the input string, with an additional NUL byte appended.\n  return s + '\\0';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\n\nexport const DOCUMENT_KEY_NAME = '__name__';\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nabstract class BasePath<B extends BasePath<B>> {\n  private segments: string[];\n  private offset: number;\n  private len: number;\n\n  constructor(segments: string[], offset?: number, length?: number) {\n    if (offset === undefined) {\n      offset = 0;\n    } else if (offset > segments.length) {\n      fail('offset ' + offset + ' out of range ' + segments.length);\n    }\n\n    if (length === undefined) {\n      length = segments.length - offset;\n    } else if (length > segments.length - offset) {\n      fail('length ' + length + ' out of range ' + (segments.length - offset));\n    }\n    this.segments = segments;\n    this.offset = offset;\n    this.len = length;\n  }\n\n  /**\n   * Abstract constructor method to construct an instance of B with the given\n   * parameters.\n   */\n  protected abstract construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): B;\n\n  /**\n   * Returns a String representation.\n   *\n   * Implementing classes are required to provide deterministic implementations as\n   * the String representation is used to obtain canonical Query IDs.\n   */\n  abstract toString(): string;\n\n  get length(): number {\n    return this.len;\n  }\n\n  isEqual(other: B): boolean {\n    return BasePath.comparator(this, other) === 0;\n  }\n\n  child(nameOrPath: string | B): B {\n    const segments = this.segments.slice(this.offset, this.limit());\n    if (nameOrPath instanceof BasePath) {\n      nameOrPath.forEach(segment => {\n        segments.push(segment);\n      });\n    } else {\n      segments.push(nameOrPath);\n    }\n    return this.construct(segments);\n  }\n\n  /** The index of one past the last segment of the path. */\n  private limit(): number {\n    return this.offset + this.length;\n  }\n\n  popFirst(size?: number): B {\n    size = size === undefined ? 1 : size;\n    debugAssert(\n      this.length >= size,\n      \"Can't call popFirst() with less segments\"\n    );\n    return this.construct(\n      this.segments,\n      this.offset + size,\n      this.length - size\n    );\n  }\n\n  popLast(): B {\n    debugAssert(!this.isEmpty(), \"Can't call popLast() on empty path\");\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n\n  firstSegment(): string {\n    debugAssert(!this.isEmpty(), \"Can't call firstSegment() on empty path\");\n    return this.segments[this.offset];\n  }\n\n  lastSegment(): string {\n    debugAssert(!this.isEmpty(), \"Can't call lastSegment() on empty path\");\n    return this.get(this.length - 1);\n  }\n\n  get(index: number): string {\n    debugAssert(index < this.length, 'Index out of range');\n    return this.segments[this.offset + index];\n  }\n\n  isEmpty(): boolean {\n    return this.length === 0;\n  }\n\n  isPrefixOf(other: this): boolean {\n    if (other.length < this.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.length; i++) {\n      if (this.get(i) !== other.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isImmediateParentOf(potentialChild: this): boolean {\n    if (this.length + 1 !== potentialChild.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.length; i++) {\n      if (this.get(i) !== potentialChild.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  forEach(fn: (segment: string) => void): void {\n    for (let i = this.offset, end = this.limit(); i < end; i++) {\n      fn(this.segments[i]);\n    }\n  }\n\n  toArray(): string[] {\n    return this.segments.slice(this.offset, this.limit());\n  }\n\n  static comparator<T extends BasePath<T>>(\n    p1: BasePath<T>,\n    p2: BasePath<T>\n  ): number {\n    const len = Math.min(p1.length, p2.length);\n    for (let i = 0; i < len; i++) {\n      const left = p1.get(i);\n      const right = p2.get(i);\n      if (left < right) {\n        return -1;\n      }\n      if (left > right) {\n        return 1;\n      }\n    }\n    if (p1.length < p2.length) {\n      return -1;\n    }\n    if (p1.length > p2.length) {\n      return 1;\n    }\n    return 0;\n  }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nexport class ResourcePath extends BasePath<ResourcePath> {\n  protected construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): ResourcePath {\n    return new ResourcePath(segments, offset, length);\n  }\n\n  canonicalString(): string {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n\n    return this.toArray().join('/');\n  }\n\n  toString(): string {\n    return this.canonicalString();\n  }\n\n  /**\n   * Returns a string representation of this path\n   * where each path segment has been encoded with\n   * `encodeURIComponent`.\n   */\n  toUriEncodedString(): string {\n    return this.toArray().map(encodeURIComponent).join('/');\n  }\n\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n  static fromString(...pathComponents: string[]): ResourcePath {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n\n    const segments: string[] = [];\n    for (const path of pathComponents) {\n      if (path.indexOf('//') >= 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid segment (${path}). Paths must not contain // in them.`\n        );\n      }\n      // Strip leading and traling slashed.\n      segments.push(...path.split('/').filter(segment => segment.length > 0));\n    }\n\n    return new ResourcePath(segments);\n  }\n\n  static emptyPath(): ResourcePath {\n    return new ResourcePath([]);\n  }\n}\n\nconst identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nexport class FieldPath extends BasePath<FieldPath> {\n  protected construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): FieldPath {\n    return new FieldPath(segments, offset, length);\n  }\n\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n  private static isValidIdentifier(segment: string): boolean {\n    return identifierRegExp.test(segment);\n  }\n\n  canonicalString(): string {\n    return this.toArray()\n      .map(str => {\n        str = str.replace(/\\\\/g, '\\\\\\\\').replace(/`/g, '\\\\`');\n        if (!FieldPath.isValidIdentifier(str)) {\n          str = '`' + str + '`';\n        }\n        return str;\n      })\n      .join('.');\n  }\n\n  toString(): string {\n    return this.canonicalString();\n  }\n\n  /**\n   * Returns true if this field references the key of a document.\n   */\n  isKeyField(): boolean {\n    return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\n  }\n\n  /**\n   * The field designating the key of a document.\n   */\n  static keyField(): FieldPath {\n    return new FieldPath([DOCUMENT_KEY_NAME]);\n  }\n\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n  static fromServerFormat(path: string): FieldPath {\n    const segments: string[] = [];\n    let current = '';\n    let i = 0;\n\n    const addCurrentSegment = (): void => {\n      if (current.length === 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid field path (${path}). Paths must not be empty, begin ` +\n            `with '.', end with '.', or contain '..'`\n        );\n      }\n      segments.push(current);\n      current = '';\n    };\n\n    let inBackticks = false;\n\n    while (i < path.length) {\n      const c = path[i];\n      if (c === '\\\\') {\n        if (i + 1 === path.length) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Path has trailing escape character: ' + path\n          );\n        }\n        const next = path[i + 1];\n        if (!(next === '\\\\' || next === '.' || next === '`')) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Path has invalid escape sequence: ' + path\n          );\n        }\n        current += next;\n        i += 2;\n      } else if (c === '`') {\n        inBackticks = !inBackticks;\n        i++;\n      } else if (c === '.' && !inBackticks) {\n        addCurrentSegment();\n        i++;\n      } else {\n        current += c;\n        i++;\n      }\n    }\n    addCurrentSegment();\n\n    if (inBackticks) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Unterminated ` in path: ' + path\n      );\n    }\n\n    return new FieldPath(segments);\n  }\n\n  static emptyPath(): FieldPath {\n    return new FieldPath([]);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../util/assert';\n\nimport { ResourcePath } from './path';\n\n/**\n * @internal\n */\nexport class DocumentKey {\n  constructor(readonly path: ResourcePath) {\n    debugAssert(\n      DocumentKey.isDocumentKey(path),\n      'Invalid DocumentKey with an odd number of segments: ' +\n        path.toArray().join('/')\n    );\n  }\n\n  static fromPath(path: string): DocumentKey {\n    return new DocumentKey(ResourcePath.fromString(path));\n  }\n\n  static fromName(name: string): DocumentKey {\n    return new DocumentKey(ResourcePath.fromString(name).popFirst(5));\n  }\n\n  static empty(): DocumentKey {\n    return new DocumentKey(ResourcePath.emptyPath());\n  }\n\n  get collectionGroup(): string {\n    debugAssert(\n      !this.path.isEmpty(),\n      'Cannot get collection group for empty key'\n    );\n    return this.path.popLast().lastSegment();\n  }\n\n  /** Returns true if the document is in the specified collectionId. */\n  hasCollectionId(collectionId: string): boolean {\n    return (\n      this.path.length >= 2 &&\n      this.path.get(this.path.length - 2) === collectionId\n    );\n  }\n\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n  getCollectionGroup(): string {\n    debugAssert(\n      !this.path.isEmpty(),\n      'Cannot get collection group for empty key'\n    );\n    return this.path.get(this.path.length - 2);\n  }\n\n  /** Returns the fully qualified path to the parent collection. */\n  getCollectionPath(): ResourcePath {\n    return this.path.popLast();\n  }\n\n  isEqual(other: DocumentKey | null): boolean {\n    return (\n      other !== null && ResourcePath.comparator(this.path, other.path) === 0\n    );\n  }\n\n  toString(): string {\n    return this.path.toString();\n  }\n\n  static comparator(k1: DocumentKey, k2: DocumentKey): number {\n    return ResourcePath.comparator(k1.path, k2.path);\n  }\n\n  static isDocumentKey(path: ResourcePath): boolean {\n    return path.length % 2 === 0;\n  }\n\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n  static fromSegments(segments: string[]): DocumentKey {\n    return new DocumentKey(new ResourcePath(segments.slice()));\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { primitiveComparator } from '../util/misc';\n\nimport { Document } from './document';\nimport { DocumentKey } from './document_key';\nimport { FieldPath } from './path';\n\n/**\n * The initial mutation batch id for each index. Gets updated during index\n * backfill.\n */\nexport const INITIAL_LARGEST_BATCH_ID = -1;\n\n/**\n * The initial sequence number for each index. Gets updated during index\n * backfill.\n */\nexport const INITIAL_SEQUENCE_NUMBER = 0;\n\n/**\n * An index definition for field indexes in Firestore.\n *\n * Every index is associated with a collection. The definition contains a list\n * of fields and their index kind (which can be `ASCENDING`, `DESCENDING` or\n * `CONTAINS` for ArrayContains/ArrayContainsAny queries).\n *\n * Unlike the backend, the SDK does not differentiate between collection or\n * collection group-scoped indices. Every index can be used for both single\n * collection and collection group queries.\n */\nexport class FieldIndex {\n  /** An ID for an index that has not yet been added to persistence.  */\n  static UNKNOWN_ID = -1;\n\n  constructor(\n    /**\n     * The index ID. Returns -1 if the index ID is not available (e.g. the index\n     * has not yet been persisted).\n     */\n    readonly indexId: number,\n    /** The collection ID this index applies to. */\n    readonly collectionGroup: string,\n    /** The field segments for this index. */\n    readonly fields: IndexSegment[],\n    /** Shows how up-to-date the index is for the current user. */\n    readonly indexState: IndexState\n  ) {}\n}\n\n/** Returns the ArrayContains/ArrayContainsAny segment for this index. */\nexport function fieldIndexGetArraySegment(\n  fieldIndex: FieldIndex\n): IndexSegment | undefined {\n  return fieldIndex.fields.find(s => s.kind === IndexKind.CONTAINS);\n}\n\n/** Returns all directional (ascending/descending) segments for this index. */\nexport function fieldIndexGetDirectionalSegments(\n  fieldIndex: FieldIndex\n): IndexSegment[] {\n  return fieldIndex.fields.filter(s => s.kind !== IndexKind.CONTAINS);\n}\n\n/**\n * Returns the order of the document key component for the given index.\n *\n * PORTING NOTE: This is only used in the Web IndexedDb implementation.\n */\nexport function fieldIndexGetKeyOrder(fieldIndex: FieldIndex): IndexKind {\n  const directionalSegments = fieldIndexGetDirectionalSegments(fieldIndex);\n  return directionalSegments.length === 0\n    ? IndexKind.ASCENDING\n    : directionalSegments[directionalSegments.length - 1].kind;\n}\n\n/**\n * Compares indexes by collection group and segments. Ignores update time and\n * index ID.\n */\nexport function fieldIndexSemanticComparator(\n  left: FieldIndex,\n  right: FieldIndex\n): number {\n  let cmp = primitiveComparator(left.collectionGroup, right.collectionGroup);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  for (let i = 0; i < Math.min(left.fields.length, right.fields.length); ++i) {\n    cmp = indexSegmentComparator(left.fields[i], right.fields[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  return primitiveComparator(left.fields.length, right.fields.length);\n}\n\n/** Returns a debug representation of the field index */\nexport function fieldIndexToString(fieldIndex: FieldIndex): string {\n  return `id=${fieldIndex.indexId}|cg=${\n    fieldIndex.collectionGroup\n  }|f=${fieldIndex.fields.map(f => `${f.fieldPath}:${f.kind}`).join(',')}`;\n}\n\n/** The type of the index, e.g. for which type of query it can be used. */\nexport const enum IndexKind {\n  // Note: The order of these values cannot be changed as the enum values are\n  // stored in IndexedDb.\n  /**\n   * Ordered index. Can be used for <, <=, ==, >=, >, !=, IN and NOT IN queries.\n   */\n  ASCENDING,\n  /**\n   * Ordered index. Can be used for <, <=, ==, >=, >, !=, IN and NOT IN queries.\n   */\n  DESCENDING,\n  /** Contains index. Can be used for ArrayContains and ArrayContainsAny. */\n  CONTAINS\n}\n\n/** An index component consisting of field path and index type.  */\nexport class IndexSegment {\n  constructor(\n    /** The field path of the component. */\n    readonly fieldPath: FieldPath,\n    /** The fields sorting order. */\n    readonly kind: IndexKind\n  ) {}\n}\n\nfunction indexSegmentComparator(\n  left: IndexSegment,\n  right: IndexSegment\n): number {\n  const cmp = FieldPath.comparator(left.fieldPath, right.fieldPath);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  return primitiveComparator(left.kind, right.kind);\n}\n\n/**\n * Stores the \"high water mark\" that indicates how updated the Index is for the\n * current user.\n */\nexport class IndexState {\n  constructor(\n    /**\n     * Indicates when the index was last updated (relative to other indexes).\n     */\n    readonly sequenceNumber: number,\n    /** The the latest indexed read time, document and batch id. */\n    readonly offset: IndexOffset\n  ) {}\n\n  /** The state of an index that has not yet been backfilled. */\n  static empty(): IndexState {\n    return new IndexState(INITIAL_SEQUENCE_NUMBER, IndexOffset.min());\n  }\n}\n\n/**\n * Creates an offset that matches all documents with a read time higher than\n * `readTime`.\n */\nexport function newIndexOffsetSuccessorFromReadTime(\n  readTime: SnapshotVersion,\n  largestBatchId: number\n): IndexOffset {\n  // We want to create an offset that matches all documents with a read time\n  // greater than the provided read time. To do so, we technically need to\n  // create an offset for `(readTime, MAX_DOCUMENT_KEY)`. While we could use\n  // Unicode codepoints to generate MAX_DOCUMENT_KEY, it is much easier to use\n  // `(readTime + 1, DocumentKey.empty())` since `> DocumentKey.empty()` matches\n  // all valid document IDs.\n  const successorSeconds = readTime.toTimestamp().seconds;\n  const successorNanos = readTime.toTimestamp().nanoseconds + 1;\n  const successor = SnapshotVersion.fromTimestamp(\n    successorNanos === 1e9\n      ? new Timestamp(successorSeconds + 1, 0)\n      : new Timestamp(successorSeconds, successorNanos)\n  );\n  return new IndexOffset(successor, DocumentKey.empty(), largestBatchId);\n}\n\n/** Creates a new offset based on the provided document. */\nexport function newIndexOffsetFromDocument(document: Document): IndexOffset {\n  return new IndexOffset(\n    document.readTime,\n    document.key,\n    INITIAL_LARGEST_BATCH_ID\n  );\n}\n\n/**\n * Stores the latest read time, document and batch ID that were processed for an\n * index.\n */\nexport class IndexOffset {\n  constructor(\n    /**\n     * The latest read time version that has been indexed by Firestore for this\n     * field index.\n     */\n    readonly readTime: SnapshotVersion,\n\n    /**\n     * The key of the last document that was indexed for this query. Use\n     * `DocumentKey.empty()` if no document has been indexed.\n     */\n    readonly documentKey: DocumentKey,\n\n    /*\n     * The largest mutation batch id that's been processed by Firestore.\n     */\n    readonly largestBatchId: number\n  ) {}\n\n  /** Returns an offset that sorts before all regular offsets. */\n  static min(): IndexOffset {\n    return new IndexOffset(\n      SnapshotVersion.min(),\n      DocumentKey.empty(),\n      INITIAL_LARGEST_BATCH_ID\n    );\n  }\n\n  /** Returns an offset that sorts after all regular offsets. */\n  static max(): IndexOffset {\n    return new IndexOffset(\n      SnapshotVersion.max(),\n      DocumentKey.empty(),\n      INITIAL_LARGEST_BATCH_ID\n    );\n  }\n}\n\nexport function indexOffsetComparator(\n  left: IndexOffset,\n  right: IndexOffset\n): number {\n  let cmp = left.readTime.compareTo(right.readTime);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  cmp = DocumentKey.comparator(left.documentKey, right.documentKey);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  return primitiveComparator(left.largestBatchId, right.largestBatchId);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA, isIndexedDBAvailable } from '@firebase/util';\n\nimport { debugAssert } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logError } from '../util/log';\nimport { Deferred } from '../util/promise';\n\nimport { PersistencePromise } from './persistence_promise';\n\n// References to `window` are guarded by SimpleDb.isAvailable()\n/* eslint-disable no-restricted-globals */\n\nconst LOG_TAG = 'SimpleDb';\n\n/**\n * The maximum number of retry attempts for an IndexedDb transaction that fails\n * with a DOMException.\n */\nconst TRANSACTION_RETRY_COUNT = 3;\n\n// The different modes supported by `SimpleDb.runTransaction()`\ntype SimpleDbTransactionMode = 'readonly' | 'readwrite';\n\nexport interface SimpleDbSchemaConverter {\n  createOrUpgrade(\n    db: IDBDatabase,\n    txn: IDBTransaction,\n    fromVersion: number,\n    toVersion: number\n  ): PersistencePromise<void>;\n}\n\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nexport class SimpleDbTransaction {\n  private aborted = false;\n\n  /**\n   * A `Promise` that resolves with the result of the IndexedDb transaction.\n   */\n  private readonly completionDeferred = new Deferred<void>();\n\n  static open(\n    db: IDBDatabase,\n    action: string,\n    mode: IDBTransactionMode,\n    objectStoreNames: string[]\n  ): SimpleDbTransaction {\n    try {\n      return new SimpleDbTransaction(\n        action,\n        db.transaction(objectStoreNames, mode)\n      );\n    } catch (e) {\n      throw new IndexedDbTransactionError(action, e as Error);\n    }\n  }\n\n  constructor(\n    private readonly action: string,\n    private readonly transaction: IDBTransaction\n  ) {\n    this.transaction.oncomplete = () => {\n      this.completionDeferred.resolve();\n    };\n    this.transaction.onabort = () => {\n      if (transaction.error) {\n        this.completionDeferred.reject(\n          new IndexedDbTransactionError(action, transaction.error)\n        );\n      } else {\n        this.completionDeferred.resolve();\n      }\n    };\n    this.transaction.onerror = (event: Event) => {\n      const error = checkForAndReportiOSError(\n        (event.target as IDBRequest).error!\n      );\n      this.completionDeferred.reject(\n        new IndexedDbTransactionError(action, error)\n      );\n    };\n  }\n\n  get completionPromise(): Promise<void> {\n    return this.completionDeferred.promise;\n  }\n\n  abort(error?: Error): void {\n    if (error) {\n      this.completionDeferred.reject(error);\n    }\n\n    if (!this.aborted) {\n      logDebug(\n        LOG_TAG,\n        'Aborting transaction:',\n        error ? error.message : 'Client-initiated abort'\n      );\n      this.aborted = true;\n      this.transaction.abort();\n    }\n  }\n\n  maybeCommit(): void {\n    // If the browser supports V3 IndexedDB, we invoke commit() explicitly to\n    // speed up index DB processing if the event loop remains blocks.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const maybeV3IndexedDb = this.transaction as any;\n    if (!this.aborted && typeof maybeV3IndexedDb.commit === 'function') {\n      maybeV3IndexedDb.commit();\n    }\n  }\n\n  /**\n   * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n   * operations performed on the SimpleDbStore happen within the context of this\n   * transaction and it cannot be used anymore once the transaction is\n   * completed.\n   *\n   * Note that we can't actually enforce that the KeyType and ValueType are\n   * correct, but they allow type safety through the rest of the consuming code.\n   */\n  store<KeyType extends IDBValidKey, ValueType extends unknown>(\n    storeName: string\n  ): SimpleDbStore<KeyType, ValueType> {\n    const store = this.transaction.objectStore(storeName);\n    debugAssert(!!store, 'Object store not part of transaction: ' + storeName);\n    return new SimpleDbStore<KeyType, ValueType>(store);\n  }\n}\n\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */\nexport class SimpleDb {\n  private db?: IDBDatabase;\n  private versionchangelistener?: (event: IDBVersionChangeEvent) => void;\n\n  /** Deletes the specified database. */\n  static delete(name: string): Promise<void> {\n    logDebug(LOG_TAG, 'Removing database:', name);\n    return wrapRequest<void>(window.indexedDB.deleteDatabase(name)).toPromise();\n  }\n\n  /** Returns true if IndexedDB is available in the current environment. */\n  static isAvailable(): boolean {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    }\n\n    if (SimpleDb.isMockPersistence()) {\n      return true;\n    }\n\n    // We extensively use indexed array values and compound keys,\n    // which IE and Edge do not support. However, they still have indexedDB\n    // defined on the window, so we need to check for them here and make sure\n    // to return that persistence is not enabled for those browsers.\n    // For tracking support of this feature, see here:\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n\n    // Check the UA string to find out the browser.\n    const ua = getUA();\n\n    // IE 10\n    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n\n    // IE 11\n    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n\n    // Edge\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n    // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n\n    // iOS Safari: Disable for users running iOS version < 10.\n    const iOSVersion = SimpleDb.getIOSVersion(ua);\n    const isUnsupportedIOS = 0 < iOSVersion && iOSVersion < 10;\n\n    // Android browser: Disable for userse running version < 4.5.\n    const androidVersion = getAndroidVersion(ua);\n    const isUnsupportedAndroid = 0 < androidVersion && androidVersion < 4.5;\n\n    if (\n      ua.indexOf('MSIE ') > 0 ||\n      ua.indexOf('Trident/') > 0 ||\n      ua.indexOf('Edge/') > 0 ||\n      isUnsupportedIOS ||\n      isUnsupportedAndroid\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n   * (see https://github.com/axemclion/IndexedDBShim).\n   */\n  static isMockPersistence(): boolean {\n    return (\n      typeof process !== 'undefined' &&\n      process.env?.USE_MOCK_PERSISTENCE === 'YES'\n    );\n  }\n\n  /** Helper to get a typed SimpleDbStore from a transaction. */\n  static getStore<KeyType extends IDBValidKey, ValueType extends unknown>(\n    txn: SimpleDbTransaction,\n    store: string\n  ): SimpleDbStore<KeyType, ValueType> {\n    return txn.store<KeyType, ValueType>(store);\n  }\n\n  // visible for testing\n  /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n  static getIOSVersion(ua: string): number {\n    const iOSVersionRegex = ua.match(/i(?:phone|pad|pod) os ([\\d_]+)/i);\n    const version = iOSVersionRegex\n      ? iOSVersionRegex[1].split('_').slice(0, 2).join('.')\n      : '-1';\n    return Number(version);\n  }\n\n  /*\n   * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n   *\n   * Note that `version` must not be a downgrade. IndexedDB does not support\n   * downgrading the schema version. We currently do not support any way to do\n   * versioning outside of IndexedDB's versioning mechanism, as only\n   * version-upgrade transactions are allowed to do things like create\n   * objectstores.\n   */\n  constructor(\n    private readonly name: string,\n    private readonly version: number,\n    private readonly schemaConverter: SimpleDbSchemaConverter\n  ) {\n    debugAssert(\n      SimpleDb.isAvailable(),\n      'IndexedDB not supported in current environment.'\n    );\n\n    const iOSVersion = SimpleDb.getIOSVersion(getUA());\n    // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n    // whatever reason it's much harder to hit after 12.2 so we only proactively\n    // log on 12.2.\n    if (iOSVersion === 12.2) {\n      logError(\n        'Firestore persistence suffers from a bug in iOS 12.2 ' +\n          'Safari that may cause your app to stop working. See ' +\n          'https://stackoverflow.com/q/56496296/110915 for details ' +\n          'and a potential workaround.'\n      );\n    }\n  }\n\n  /**\n   * Opens the specified database, creating or upgrading it if necessary.\n   */\n  async ensureDb(action: string): Promise<IDBDatabase> {\n    if (!this.db) {\n      logDebug(LOG_TAG, 'Opening database:', this.name);\n      this.db = await new Promise<IDBDatabase>((resolve, reject) => {\n        // TODO(mikelehen): Investigate browser compatibility.\n        // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n        // suggests IE9 and older WebKit browsers handle upgrade\n        // differently. They expect setVersion, as described here:\n        // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n        const request = indexedDB.open(this.name, this.version);\n\n        request.onsuccess = (event: Event) => {\n          const db = (event.target as IDBOpenDBRequest).result;\n          resolve(db);\n        };\n\n        request.onblocked = () => {\n          reject(\n            new IndexedDbTransactionError(\n              action,\n              'Cannot upgrade IndexedDB schema while another tab is open. ' +\n                'Close all tabs that access Firestore and reload this page to proceed.'\n            )\n          );\n        };\n\n        request.onerror = (event: Event) => {\n          const error: DOMException = (event.target as IDBOpenDBRequest).error!;\n          if (error.name === 'VersionError') {\n            reject(\n              new FirestoreError(\n                Code.FAILED_PRECONDITION,\n                'A newer version of the Firestore SDK was previously used and so the persisted ' +\n                  'data is not compatible with the version of the SDK you are now using. The SDK ' +\n                  'will operate with persistence disabled. If you need persistence, please ' +\n                  're-upgrade to a newer version of the SDK or else clear the persisted IndexedDB ' +\n                  'data for your app to start fresh.'\n              )\n            );\n          } else if (error.name === 'InvalidStateError') {\n            reject(\n              new FirestoreError(\n                Code.FAILED_PRECONDITION,\n                'Unable to open an IndexedDB connection. This could be due to running in a ' +\n                  'private browsing session on a browser whose private browsing sessions do not ' +\n                  'support IndexedDB: ' +\n                  error\n              )\n            );\n          } else {\n            reject(new IndexedDbTransactionError(action, error));\n          }\n        };\n\n        request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n          logDebug(\n            LOG_TAG,\n            'Database \"' + this.name + '\" requires upgrade from version:',\n            event.oldVersion\n          );\n          const db = (event.target as IDBOpenDBRequest).result;\n          this.schemaConverter\n            .createOrUpgrade(\n              db,\n              request.transaction!,\n              event.oldVersion,\n              this.version\n            )\n            .next(() => {\n              logDebug(\n                LOG_TAG,\n                'Database upgrade to version ' + this.version + ' complete'\n              );\n            });\n        };\n      });\n    }\n\n    if (this.versionchangelistener) {\n      this.db.onversionchange = event => this.versionchangelistener!(event);\n    }\n    return this.db;\n  }\n\n  setVersionChangeListener(\n    versionChangeListener: (event: IDBVersionChangeEvent) => void\n  ): void {\n    this.versionchangelistener = versionChangeListener;\n    if (this.db) {\n      this.db.onversionchange = (event: IDBVersionChangeEvent) => {\n        return versionChangeListener(event);\n      };\n    }\n  }\n\n  async runTransaction<T>(\n    action: string,\n    mode: SimpleDbTransactionMode,\n    objectStores: string[],\n    transactionFn: (transaction: SimpleDbTransaction) => PersistencePromise<T>\n  ): Promise<T> {\n    const readonly = mode === 'readonly';\n    let attemptNumber = 0;\n\n    while (true) {\n      ++attemptNumber;\n\n      try {\n        this.db = await this.ensureDb(action);\n\n        const transaction = SimpleDbTransaction.open(\n          this.db,\n          action,\n          readonly ? 'readonly' : 'readwrite',\n          objectStores\n        );\n        const transactionFnResult = transactionFn(transaction)\n          .next(result => {\n            transaction.maybeCommit();\n            return result;\n          })\n          .catch(error => {\n            // Abort the transaction if there was an error.\n            transaction.abort(error);\n            // We cannot actually recover, and calling `abort()` will cause the transaction's\n            // completion promise to be rejected. This in turn means that we won't use\n            // `transactionFnResult` below. We return a rejection here so that we don't add the\n            // possibility of returning `void` to the type of `transactionFnResult`.\n            return PersistencePromise.reject<T>(error);\n          })\n          .toPromise();\n\n        // As noted above, errors are propagated by aborting the transaction. So\n        // we swallow any error here to avoid the browser logging it as unhandled.\n        transactionFnResult.catch(() => {});\n\n        // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n        // fire), but still return the original transactionFnResult back to the\n        // caller.\n        await transaction.completionPromise;\n        return transactionFnResult;\n      } catch (e) {\n        const error = e as Error;\n        // TODO(schmidt-sebastian): We could probably be smarter about this and\n        // not retry exceptions that are likely unrecoverable (such as quota\n        // exceeded errors).\n\n        // Note: We cannot use an instanceof check for FirestoreException, since the\n        // exception is wrapped in a generic error by our async/await handling.\n        const retryable =\n          error.name !== 'FirebaseError' &&\n          attemptNumber < TRANSACTION_RETRY_COUNT;\n        logDebug(\n          LOG_TAG,\n          'Transaction failed with error:',\n          error.message,\n          'Retrying:',\n          retryable\n        );\n\n        this.close();\n\n        if (!retryable) {\n          return Promise.reject(error);\n        }\n      }\n    }\n  }\n\n  close(): void {\n    if (this.db) {\n      this.db.close();\n    }\n    this.db = undefined;\n  }\n}\n\n/** Parse User Agent to determine Android version. Returns -1 if not found. */\nexport function getAndroidVersion(ua: string): number {\n  const androidVersionRegex = ua.match(/Android ([\\d.]+)/i);\n  const version = androidVersionRegex\n    ? androidVersionRegex[1].split('.').slice(0, 2).join('.')\n    : '-1';\n  return Number(version);\n}\n\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */\nexport class IterationController {\n  private shouldStop = false;\n  private nextKey: IDBValidKey | null = null;\n\n  constructor(private dbCursor: IDBCursorWithValue) {}\n\n  get isDone(): boolean {\n    return this.shouldStop;\n  }\n\n  get skipToKey(): IDBValidKey | null {\n    return this.nextKey;\n  }\n\n  set cursor(value: IDBCursorWithValue) {\n    this.dbCursor = value;\n  }\n\n  /**\n   * This function can be called to stop iteration at any point.\n   */\n  done(): void {\n    this.shouldStop = true;\n  }\n\n  /**\n   * This function can be called to skip to that next key, which could be\n   * an index or a primary key.\n   */\n  skip(key: IDBValidKey): void {\n    this.nextKey = key;\n  }\n\n  /**\n   * Delete the current cursor value from the object store.\n   *\n   * NOTE: You CANNOT do this with a keysOnly query.\n   */\n  delete(): PersistencePromise<void> {\n    return wrapRequest<void>(this.dbCursor.delete());\n  }\n}\n\n/**\n * Callback used with iterate() method.\n */\nexport type IterateCallback<KeyType, ValueType> = (\n  key: KeyType,\n  value: ValueType,\n  control: IterationController\n) => void | PersistencePromise<void>;\n\n/** Options available to the iterate() method. */\nexport interface IterateOptions {\n  /** Index to iterate over (else primary keys will be iterated) */\n  index?: string;\n\n  /** IndxedDB Range to iterate over (else entire store will be iterated) */\n  range?: IDBKeyRange;\n\n  /** If true, values aren't read while iterating. */\n  keysOnly?: boolean;\n\n  /** If true, iterate over the store in reverse. */\n  reverse?: boolean;\n}\n\n/** An error that wraps exceptions that thrown during IndexedDB execution. */\nexport class IndexedDbTransactionError extends FirestoreError {\n  name = 'IndexedDbTransactionError';\n\n  constructor(actionName: string, cause: Error | string) {\n    super(\n      Code.UNAVAILABLE,\n      `IndexedDB transaction '${actionName}' failed: ${cause}`\n    );\n  }\n}\n\n/** Verifies whether `e` is an IndexedDbTransactionError. */\nexport function isIndexedDbTransactionError(e: Error): boolean {\n  // Use name equality, as instanceof checks on errors don't work with errors\n  // that wrap other errors.\n  return e.name === 'IndexedDbTransactionError';\n}\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */\nexport class SimpleDbStore<\n  KeyType extends IDBValidKey,\n  ValueType extends unknown\n> {\n  constructor(private store: IDBObjectStore) {}\n\n  /**\n   * Writes a value into the Object Store.\n   *\n   * @param key - Optional explicit key to use when writing the object, else the\n   * key will be auto-assigned (e.g. via the defined keyPath for the store).\n   * @param value - The object to write.\n   */\n  put(value: ValueType): PersistencePromise<void>;\n  put(key: KeyType, value: ValueType): PersistencePromise<void>;\n  put(\n    keyOrValue: KeyType | ValueType,\n    value?: ValueType\n  ): PersistencePromise<void> {\n    let request;\n    if (value !== undefined) {\n      logDebug(LOG_TAG, 'PUT', this.store.name, keyOrValue, value);\n      request = this.store.put(value, keyOrValue as KeyType);\n    } else {\n      logDebug(LOG_TAG, 'PUT', this.store.name, '<auto-key>', keyOrValue);\n      request = this.store.put(keyOrValue as ValueType);\n    }\n    return wrapRequest<void>(request);\n  }\n\n  /**\n   * Adds a new value into an Object Store and returns the new key. Similar to\n   * IndexedDb's `add()`, this method will fail on primary key collisions.\n   *\n   * @param value - The object to write.\n   * @returns The key of the value to add.\n   */\n  add(value: ValueType): PersistencePromise<KeyType> {\n    logDebug(LOG_TAG, 'ADD', this.store.name, value, value);\n    const request = this.store.add(value as ValueType);\n    return wrapRequest<KeyType>(request);\n  }\n\n  /**\n   * Gets the object with the specified key from the specified store, or null\n   * if no object exists with the specified key.\n   *\n   * @key The key of the object to get.\n   * @returns The object with the specified key or null if no object exists.\n   */\n  get(key: KeyType): PersistencePromise<ValueType | null> {\n    const request = this.store.get(key);\n    // We're doing an unsafe cast to ValueType.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return wrapRequest<any>(request).next(result => {\n      // Normalize nonexistence to null.\n      if (result === undefined) {\n        result = null;\n      }\n      logDebug(LOG_TAG, 'GET', this.store.name, key, result);\n      return result;\n    });\n  }\n\n  delete(key: KeyType | IDBKeyRange): PersistencePromise<void> {\n    logDebug(LOG_TAG, 'DELETE', this.store.name, key);\n    const request = this.store.delete(key);\n    return wrapRequest<void>(request);\n  }\n\n  /**\n   * If we ever need more of the count variants, we can add overloads. For now,\n   * all we need is to count everything in a store.\n   *\n   * Returns the number of rows in the store.\n   */\n  count(): PersistencePromise<number> {\n    logDebug(LOG_TAG, 'COUNT', this.store.name);\n    const request = this.store.count();\n    return wrapRequest<number>(request);\n  }\n\n  /** Loads all elements from the object store. */\n  loadAll(): PersistencePromise<ValueType[]>;\n  /** Loads all elements for the index range from the object store. */\n  loadAll(range: IDBKeyRange): PersistencePromise<ValueType[]>;\n  /** Loads all elements ordered by the given index. */\n  loadAll(index: string): PersistencePromise<ValueType[]>;\n  /**\n   * Loads all elements from the object store that fall into the provided in the\n   * index range for the given index.\n   */\n  loadAll(index: string, range: IDBKeyRange): PersistencePromise<ValueType[]>;\n  loadAll(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): PersistencePromise<ValueType[]> {\n    const iterateOptions = this.options(indexOrRange, range);\n    // Use `getAll()` if the browser supports IndexedDB v3, as it is roughly\n    // 20% faster.\n    const store = iterateOptions.index\n      ? this.store.index(iterateOptions.index)\n      : this.store;\n    if (typeof store.getAll === 'function') {\n      const request = store.getAll(iterateOptions.range);\n      return new PersistencePromise((resolve, reject) => {\n        request.onerror = (event: Event) => {\n          reject((event.target as IDBRequest).error!);\n        };\n        request.onsuccess = (event: Event) => {\n          resolve((event.target as IDBRequest).result);\n        };\n      });\n    } else {\n      const cursor = this.cursor(iterateOptions);\n      const results: ValueType[] = [];\n      return this.iterateCursor(cursor, (key, value) => {\n        results.push(value);\n      }).next(() => {\n        return results;\n      });\n    }\n  }\n\n  /**\n   * Loads the first `count` elements from the provided index range. Loads all\n   * elements if no limit is provided.\n   */\n  loadFirst(\n    range: IDBKeyRange,\n    count: number | null\n  ): PersistencePromise<ValueType[]> {\n    const request = this.store.getAll(\n      range,\n      count === null ? undefined : count\n    );\n    return new PersistencePromise((resolve, reject) => {\n      request.onerror = (event: Event) => {\n        reject((event.target as IDBRequest).error!);\n      };\n      request.onsuccess = (event: Event) => {\n        resolve((event.target as IDBRequest).result);\n      };\n    });\n  }\n\n  deleteAll(): PersistencePromise<void>;\n  deleteAll(range: IDBKeyRange): PersistencePromise<void>;\n  deleteAll(index: string, range: IDBKeyRange): PersistencePromise<void>;\n  deleteAll(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): PersistencePromise<void> {\n    logDebug(LOG_TAG, 'DELETE ALL', this.store.name);\n    const options = this.options(indexOrRange, range);\n    options.keysOnly = false;\n    const cursor = this.cursor(options);\n    return this.iterateCursor(cursor, (key, value, control) => {\n      // NOTE: Calling delete() on a cursor is documented as more efficient than\n      // calling delete() on an object store with a single key\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\n      // however, this requires us *not* to use a keysOnly cursor\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\n      // may want to compare the performance of each method.\n      return control.delete();\n    });\n  }\n\n  /**\n   * Iterates over keys and values in an object store.\n   *\n   * @param options - Options specifying how to iterate the objects in the\n   * store.\n   * @param callback - will be called for each iterated object. Iteration can be\n   * canceled at any point by calling the doneFn passed to the callback.\n   * The callback can return a PersistencePromise if it performs async\n   * operations but note that iteration will continue without waiting for them\n   * to complete.\n   * @returns A PersistencePromise that resolves once all PersistencePromises\n   * returned by callbacks resolve.\n   */\n  iterate(\n    callback: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void>;\n  iterate(\n    options: IterateOptions,\n    callback: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void>;\n  iterate(\n    optionsOrCallback: IterateOptions | IterateCallback<KeyType, ValueType>,\n    callback?: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void> {\n    let options;\n    if (!callback) {\n      options = {};\n      callback = optionsOrCallback as IterateCallback<KeyType, ValueType>;\n    } else {\n      options = optionsOrCallback as IterateOptions;\n    }\n    const cursor = this.cursor(options);\n    return this.iterateCursor(cursor, callback);\n  }\n\n  /**\n   * Iterates over a store, but waits for the given callback to complete for\n   * each entry before iterating the next entry. This allows the callback to do\n   * asynchronous work to determine if this iteration should continue.\n   *\n   * The provided callback should return `true` to continue iteration, and\n   * `false` otherwise.\n   */\n  iterateSerial(\n    callback: (k: KeyType, v: ValueType) => PersistencePromise<boolean>\n  ): PersistencePromise<void> {\n    const cursorRequest = this.cursor({});\n    return new PersistencePromise((resolve, reject) => {\n      cursorRequest.onerror = (event: Event) => {\n        const error = checkForAndReportiOSError(\n          (event.target as IDBRequest).error!\n        );\n        reject(error);\n      };\n      cursorRequest.onsuccess = (event: Event) => {\n        const cursor: IDBCursorWithValue = (event.target as IDBRequest).result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n\n        callback(cursor.primaryKey as KeyType, cursor.value).next(\n          shouldContinue => {\n            if (shouldContinue) {\n              cursor.continue();\n            } else {\n              resolve();\n            }\n          }\n        );\n      };\n    });\n  }\n\n  private iterateCursor(\n    cursorRequest: IDBRequest,\n    fn: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void> {\n    const results: Array<PersistencePromise<void>> = [];\n    return new PersistencePromise((resolve, reject) => {\n      cursorRequest.onerror = (event: Event) => {\n        reject((event.target as IDBRequest).error!);\n      };\n      cursorRequest.onsuccess = (event: Event) => {\n        const cursor: IDBCursorWithValue = (event.target as IDBRequest).result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n        const controller = new IterationController(cursor);\n        const userResult = fn(\n          cursor.primaryKey as KeyType,\n          cursor.value,\n          controller\n        );\n        if (userResult instanceof PersistencePromise) {\n          const userPromise: PersistencePromise<void> = userResult.catch(\n            err => {\n              controller.done();\n              return PersistencePromise.reject(err);\n            }\n          );\n          results.push(userPromise);\n        }\n        if (controller.isDone) {\n          resolve();\n        } else if (controller.skipToKey === null) {\n          cursor.continue();\n        } else {\n          cursor.continue(controller.skipToKey);\n        }\n      };\n    }).next(() => PersistencePromise.waitFor(results));\n  }\n\n  private options(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): IterateOptions {\n    let indexName: string | undefined = undefined;\n    if (indexOrRange !== undefined) {\n      if (typeof indexOrRange === 'string') {\n        indexName = indexOrRange;\n      } else {\n        debugAssert(\n          range === undefined,\n          '3rd argument must not be defined if 2nd is a range.'\n        );\n        range = indexOrRange;\n      }\n    }\n    return { index: indexName, range };\n  }\n\n  private cursor(options: IterateOptions): IDBRequest {\n    let direction: IDBCursorDirection = 'next';\n    if (options.reverse) {\n      direction = 'prev';\n    }\n    if (options.index) {\n      const index = this.store.index(options.index);\n      if (options.keysOnly) {\n        return index.openKeyCursor(options.range, direction);\n      } else {\n        return index.openCursor(options.range, direction);\n      }\n    } else {\n      return this.store.openCursor(options.range, direction);\n    }\n  }\n}\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */\nfunction wrapRequest<R>(request: IDBRequest): PersistencePromise<R> {\n  return new PersistencePromise<R>((resolve, reject) => {\n    request.onsuccess = (event: Event) => {\n      const result = (event.target as IDBRequest).result;\n      resolve(result);\n    };\n\n    request.onerror = (event: Event) => {\n      const error = checkForAndReportiOSError(\n        (event.target as IDBRequest).error!\n      );\n      reject(error);\n    };\n  });\n}\n\n// Guard so we only report the error once.\nlet reportedIOSError = false;\nfunction checkForAndReportiOSError(error: DOMException): Error {\n  const iOSVersion = SimpleDb.getIOSVersion(getUA());\n  if (iOSVersion >= 12.2 && iOSVersion < 13) {\n    const IOS_ERROR =\n      'An internal error was encountered in the Indexed Database server';\n    if (error.message.indexOf(IOS_ERROR) >= 0) {\n      // Wrap error in a more descriptive one.\n      const newError = new FirestoreError(\n        'internal',\n        `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${IOS_ERROR}'. This is likely ` +\n          `due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 ` +\n          `for details and a potential workaround.`\n      );\n      if (!reportedIOSError) {\n        reportedIOSError = true;\n        // Throw a global exception outside of this promise chain, for the user to\n        // potentially catch.\n        setTimeout(() => {\n          throw newError;\n        }, 0);\n      }\n      return newError;\n    }\n  }\n  return error;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber } from './types';\n\n/**\n * `SequenceNumberSyncer` defines the methods required to keep multiple instances of a\n * `ListenSequence` in sync.\n */\nexport interface SequenceNumberSyncer {\n  // Notify the syncer that a new sequence number has been used.\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void;\n  // Setting this property allows the syncer to notify when a sequence number has been used, and\n  // and lets the ListenSequence adjust its internal previous value accordingly.\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null;\n}\n\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */\nexport class ListenSequence {\n  static readonly INVALID: ListenSequenceNumber = -1;\n\n  private writeNewSequenceNumber?: (\n    newSequenceNumber: ListenSequenceNumber\n  ) => void;\n\n  constructor(\n    private previousValue: ListenSequenceNumber,\n    sequenceNumberSyncer?: SequenceNumberSyncer\n  ) {\n    if (sequenceNumberSyncer) {\n      sequenceNumberSyncer.sequenceNumberHandler = sequenceNumber =>\n        this.setPreviousValue(sequenceNumber);\n      this.writeNewSequenceNumber = sequenceNumber =>\n        sequenceNumberSyncer.writeSequenceNumber(sequenceNumber);\n    }\n  }\n\n  private setPreviousValue(\n    externalPreviousValue: ListenSequenceNumber\n  ): ListenSequenceNumber {\n    this.previousValue = Math.max(externalPreviousValue, this.previousValue);\n    return this.previousValue;\n  }\n\n  next(): ListenSequenceNumber {\n    const nextValue = ++this.previousValue;\n    if (this.writeNewSequenceNumber) {\n      this.writeNewSequenceNumber(nextValue);\n    }\n    return nextValue;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Sentinel value that sorts before any Mutation Batch ID. */\nexport const BATCHID_UNKNOWN = -1;\n\n// An Object whose keys and values are strings.\nexport interface StringMap {\n  [key: string]: string;\n}\n\n/**\n * Returns whether a variable is either undefined or null.\n */\nexport function isNullOrUndefined(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/** Returns whether the value represents -0. */\nexport function isNegativeZero(value: number): boolean {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return value === 0 && 1 / value === 1 / -0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\nexport function isSafeInteger(value: unknown): boolean {\n  return (\n    typeof value === 'number' &&\n    Number.isInteger(value) &&\n    !isNegativeZero(value) &&\n    value <= Number.MAX_SAFE_INTEGER &&\n    value >= Number.MIN_SAFE_INTEGER\n  );\n}\n\n/** The subset of the browser's Window interface used by the SDK. */\nexport interface WindowLike {\n  readonly localStorage: Storage;\n  readonly indexedDB: IDBFactory | null;\n  addEventListener(type: string, listener: EventListener): void;\n  removeEventListener(type: string, listener: EventListener): void;\n}\n\n/** The subset of the browser's Document interface used by the SDK. */\nexport interface DocumentLike {\n  readonly visibilityState: DocumentVisibilityState;\n  addEventListener(type: string, listener: EventListener): void;\n  removeEventListener(type: string, listener: EventListener): void;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchId, TargetId } from '../core/types';\nimport { ResourcePath } from '../model/path';\nimport { fail } from '../util/assert';\n\nimport {\n  EncodedResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport { DbDocumentMutation } from './indexeddb_schema';\nimport { DbRemoteDocumentStore as DbRemoteDocumentStoreLegacy } from './indexeddb_schema_legacy';\n\n// This file contains static constants and helper functions for IndexedDB.\n// It is split from indexeddb_schema to allow for minification.\n\n/** A timestamp type that can be used in IndexedDb keys. */\nexport type DbTimestampKey = [/* seconds */ number, /* nanos */ number];\n\n// The key for the singleton object in the DbPrimaryClient is a single string.\nexport type DbPrimaryClientKey = typeof DbPrimaryClientKey;\n\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\nexport const DbPrimaryClientStore = 'owner';\n\n/**\n * The key string used for the single object that exists in the\n * DbPrimaryClient store.\n */\n\nexport const DbPrimaryClientKey = 'owner';\n\n/** Object keys in the 'mutationQueues' store are userId strings. */\nexport type DbMutationQueueKey = string;\n\n/** Name of the IndexedDb object store.  */\nexport const DbMutationQueueStore = 'mutationQueues';\n\n/** Keys are automatically assigned via the userId property. */\nexport const DbMutationQueueKeyPath = 'userId';\n\n/** The 'mutations' store  is keyed by batch ID. */\nexport type DbMutationBatchKey = BatchId;\n\n/** Name of the IndexedDb object store.  */\nexport const DbMutationBatchStore = 'mutations';\n\n/** Keys are automatically assigned via the userId, batchId properties. */\nexport const DbMutationBatchKeyPath = 'batchId';\n\n/** The index name for lookup of mutations by user. */\n\nexport const DbMutationBatchUserMutationsIndex = 'userMutationsIndex';\n\n/** The user mutations index is keyed by [userId, batchId] pairs. */\nexport const DbMutationBatchUserMutationsKeyPath = ['userId', 'batchId'];\n\n/**\n * The key for a db document mutation, which is made up of a userID, path, and\n * batchId. Note that the path must be serialized into a form that indexedDB can\n * sort.\n */\nexport type DbDocumentMutationKey = [string, EncodedResourcePath, BatchId];\n\n/**\n * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n * over all of a user's document mutations.\n */\nexport function newDbDocumentMutationPrefixForUser(userId: string): [string] {\n  return [userId];\n}\n\n/**\n * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n * index to iterate over all at document mutations for a given path or lower.\n */\nexport function newDbDocumentMutationPrefixForPath(\n  userId: string,\n  path: ResourcePath\n): [string, EncodedResourcePath] {\n  return [userId, encodeResourcePath(path)];\n}\n\n/**\n * Creates a full index key of [userId, encodedPath, batchId] for inserting\n * and deleting into the DbDocumentMutations index.\n */\nexport function newDbDocumentMutationKey(\n  userId: string,\n  path: ResourcePath,\n  batchId: BatchId\n): DbDocumentMutationKey {\n  return [userId, encodeResourcePath(path), batchId];\n}\n\n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */\nexport const DbDocumentMutationPlaceholder: DbDocumentMutation = {};\n\nexport const DbDocumentMutationStore = 'documentMutations';\n\nexport const DbRemoteDocumentStore = 'remoteDocumentsV14';\n\n/**\n * A key in the 'remoteDocumentsV14' object store is an array containing the\n * collection path, the collection group, the read time and the document id.\n */\nexport type DbRemoteDocumentKey = [\n  /** path to collection */ string[],\n  /** collection group */ string,\n  /** read time */ DbTimestampKey,\n  /** document ID */ string\n];\n\n/**\n * The primary key of the remote documents store, which allows for efficient\n * access by collection path and read time.\n */\nexport const DbRemoteDocumentKeyPath = [\n  'prefixPath',\n  'collectionGroup',\n  'readTime',\n  'documentId'\n];\n\n/** An index that provides access to documents by key. */\nexport const DbRemoteDocumentDocumentKeyIndex = 'documentKeyIndex';\n\nexport const DbRemoteDocumentDocumentKeyIndexPath = [\n  'prefixPath',\n  'collectionGroup',\n  'documentId'\n];\n\n/**\n * An index that provides access to documents by collection group and read\n * time.\n *\n * This index is used by the index backfiller.\n */\nexport const DbRemoteDocumentCollectionGroupIndex = 'collectionGroupIndex';\n\nexport const DbRemoteDocumentCollectionGroupIndexPath = [\n  'collectionGroup',\n  'readTime',\n  'prefixPath',\n  'documentId'\n];\n\nexport const DbRemoteDocumentGlobalStore = 'remoteDocumentGlobal';\n\nexport const DbRemoteDocumentGlobalKey = 'remoteDocumentGlobalKey';\n\nexport type DbRemoteDocumentGlobalKey = typeof DbRemoteDocumentGlobalKey;\n\n/**\n * A key in the 'targets' object store is a targetId of the query.\n */\nexport type DbTargetKey = TargetId;\n\nexport const DbTargetStore = 'targets';\n\n/** Keys are automatically assigned via the targetId property. */\nexport const DbTargetKeyPath = 'targetId';\n\n/** The name of the queryTargets index. */\nexport const DbTargetQueryTargetsIndexName = 'queryTargetsIndex';\n\n/**\n * The index of all canonicalIds to the targets that they match. This is not\n * a unique mapping because canonicalId does not promise a unique name for all\n * possible queries, so we append the targetId to make the mapping unique.\n */\nexport const DbTargetQueryTargetsKeyPath = ['canonicalId', 'targetId'];\n\n/**\n * The key for a DbTargetDocument, containing a targetId and an encoded resource\n * path.\n */\nexport type DbTargetDocumentKey = [TargetId, EncodedResourcePath];\n\n/** Name of the IndexedDb object store.  */\nexport const DbTargetDocumentStore = 'targetDocuments';\n\n/** Keys are automatically assigned via the targetId, path properties. */\nexport const DbTargetDocumentKeyPath = ['targetId', 'path'];\n\n/** The index name for the reverse index. */\nexport const DbTargetDocumentDocumentTargetsIndex = 'documentTargetsIndex';\n\n/** We also need to create the reverse index for these properties. */\nexport const DbTargetDocumentDocumentTargetsKeyPath = ['path', 'targetId'];\n\n/**\n * The type to represent the single allowed key for the DbTargetGlobal store.\n */\nexport type DbTargetGlobalKey = typeof DbTargetGlobalKey;\n/**\n * The key string used for the single object that exists in the\n * DbTargetGlobal store.\n */\nexport const DbTargetGlobalKey = 'targetGlobalKey';\n\nexport const DbTargetGlobalStore = 'targetGlobal';\n\n/**\n * The key for a DbCollectionParent entry, containing the collection ID\n * and the parent path that contains it. Note that the parent path will be an\n * empty path in the case of root-level collections.\n */\nexport type DbCollectionParentKey = [string, EncodedResourcePath];\n\n/** Name of the IndexedDb object store. */\nexport const DbCollectionParentStore = 'collectionParents';\n\n/** Keys are automatically assigned via the collectionId, parent properties. */\nexport const DbCollectionParentKeyPath = ['collectionId', 'parent'];\n\n/** Name of the IndexedDb object store. */\nexport const DbClientMetadataStore = 'clientMetadata';\n\n/** Keys are automatically assigned via the clientId properties. */\nexport const DbClientMetadataKeyPath = 'clientId';\n\n/** Object keys in the 'clientMetadata' store are clientId strings. */\nexport type DbClientMetadataKey = string;\n\nexport type DbBundlesKey = string;\n\n/** Name of the IndexedDb object store. */\nexport const DbBundleStore = 'bundles';\n\nexport const DbBundleKeyPath = 'bundleId';\n\nexport type DbNamedQueriesKey = string;\n\n/** Name of the IndexedDb object store. */\nexport const DbNamedQueryStore = 'namedQueries';\n\nexport const DbNamedQueryKeyPath = 'name';\n\n/** The key for each index consisting of just the index id. */\nexport type DbIndexConfigurationKey = number;\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexConfigurationStore = 'indexConfiguration';\n\nexport const DbIndexConfigurationKeyPath = 'indexId';\n\n/**\n * An index that provides access to the index configurations by collection\n * group.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nexport const DbIndexConfigurationCollectionGroupIndex = 'collectionGroupIndex';\n\nexport const DbIndexConfigurationCollectionGroupIndexPath = 'collectionGroup';\n\n/** The key for each index state consisting of the index id and its user id. */\nexport type DbIndexStateKey = [number, string];\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexStateStore = 'indexState';\n\nexport const DbIndexStateKeyPath = ['indexId', 'uid'];\n\n/**\n * An index that provides access to documents in a collection sorted by last\n * update time. Used by the backfiller.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nexport const DbIndexStateSequenceNumberIndex = 'sequenceNumberIndex';\n\nexport const DbIndexStateSequenceNumberIndexPath = ['uid', 'sequenceNumber'];\n\n/**\n * The key for each index entry consists of the index id and its user id,\n * the encoded array and directional value for the indexed fields as well as\n * an ordered and an encoded document path for the indexed document.\n */\nexport type DbIndexEntryKey = [\n  number,\n  string,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  string[]\n];\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexEntryStore = 'indexEntries';\n\nexport const DbIndexEntryKeyPath = [\n  'indexId',\n  'uid',\n  'arrayValue',\n  'directionalValue',\n  'orderedDocumentKey',\n  'documentKey'\n];\n\nexport const DbIndexEntryDocumentKeyIndex = 'documentKeyIndex';\n\nexport const DbIndexEntryDocumentKeyIndexPath = [\n  'indexId',\n  'uid',\n  'orderedDocumentKey'\n];\n\nexport type DbDocumentOverlayKey = [\n  /* userId */ string,\n  /* collectionPath */ string,\n  /* documentId */ string\n];\n\n/** Name of the IndexedDb object store. */\nexport const DbDocumentOverlayStore = 'documentOverlays';\n\nexport const DbDocumentOverlayKeyPath = [\n  'userId',\n  'collectionPath',\n  'documentId'\n];\n\nexport const DbDocumentOverlayCollectionPathOverlayIndex =\n  'collectionPathOverlayIndex';\n\nexport const DbDocumentOverlayCollectionPathOverlayIndexPath = [\n  'userId',\n  'collectionPath',\n  'largestBatchId'\n];\n\nexport const DbDocumentOverlayCollectionGroupOverlayIndex =\n  'collectionGroupOverlayIndex';\n\nexport const DbDocumentOverlayCollectionGroupOverlayIndexPath = [\n  'userId',\n  'collectionGroup',\n  'largestBatchId'\n];\n\n// Visible for testing\nexport const V1_STORES = [\n  DbMutationQueueStore,\n  DbMutationBatchStore,\n  DbDocumentMutationStore,\n  DbRemoteDocumentStoreLegacy,\n  DbTargetStore,\n  DbPrimaryClientStore,\n  DbTargetGlobalStore,\n  DbTargetDocumentStore\n];\n\n// Visible for testing\nexport const V3_STORES = V1_STORES;\n// Note: DbRemoteDocumentChanges is no longer used and dropped with v9.\nexport const V4_STORES = [...V3_STORES, DbClientMetadataStore];\nexport const V6_STORES = [...V4_STORES, DbRemoteDocumentGlobalStore];\nexport const V8_STORES = [...V6_STORES, DbCollectionParentStore];\nexport const V11_STORES = [...V8_STORES, DbBundleStore, DbNamedQueryStore];\nexport const V12_STORES = [...V11_STORES, DbDocumentOverlayStore];\nexport const V13_STORES = [\n  DbMutationQueueStore,\n  DbMutationBatchStore,\n  DbDocumentMutationStore,\n  DbRemoteDocumentStore,\n  DbTargetStore,\n  DbPrimaryClientStore,\n  DbTargetGlobalStore,\n  DbTargetDocumentStore,\n  DbClientMetadataStore,\n  DbRemoteDocumentGlobalStore,\n  DbCollectionParentStore,\n  DbBundleStore,\n  DbNamedQueryStore,\n  DbDocumentOverlayStore\n];\nexport const V14_STORES = V13_STORES;\nexport const V15_STORES = [\n  ...V14_STORES,\n  DbIndexConfigurationStore,\n  DbIndexStateStore,\n  DbIndexEntryStore\n];\nexport const V16_STORES = V15_STORES;\n\n/**\n * The list of all default IndexedDB stores used throughout the SDK. This is\n * used when creating transactions so that access across all stores is done\n * atomically.\n */\nexport const ALL_STORES = V12_STORES;\n\n/** Returns the object stores for the provided schema. */\nexport function getObjectStores(schemaVersion: number): string[] {\n  if (schemaVersion === 16) {\n    return V16_STORES;\n  } else if (schemaVersion === 15) {\n    return V15_STORES;\n  } else if (schemaVersion === 14) {\n    return V14_STORES;\n  } else if (schemaVersion === 13) {\n    return V13_STORES;\n  } else if (schemaVersion === 12) {\n    return V12_STORES;\n  } else if (schemaVersion === 11) {\n    return V11_STORES;\n  } else {\n    fail('Only schema version 11 and 12 and 13 are supported');\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document as ProtoDocument } from '../protos/firestore_proto_api';\n\nimport { DbNoDocument, DbUnknownDocument } from './indexeddb_schema';\nimport { DbTimestampKey } from './indexeddb_sentinels';\n\n// This file contains older schema definitions for object stores that were\n// migrated to newer schema versions. These object stores should only be used\n// during schema migrations.\n\nexport interface DbRemoteDocument {\n  unknownDocument?: DbUnknownDocument;\n  noDocument?: DbNoDocument;\n  document?: ProtoDocument;\n  hasCommittedMutations?: boolean;\n  readTime?: DbTimestampKey;\n  parentPath?: string[];\n}\n\nexport type DbRemoteDocumentKey = string[];\nexport const DbRemoteDocumentStore = 'remoteDocuments';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, fail } from './assert';\n\n/*\n * Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\nexport interface Entry<K, V> {\n  key: K;\n  value: V;\n}\n\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nexport class SortedMap<K, V> {\n  // visible for testing\n  root: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  constructor(\n    public comparator: Comparator<K>,\n    root?: LLRBNode<K, V> | LLRBEmptyNode<K, V>\n  ) {\n    this.root = root ? root : LLRBNode.EMPTY;\n  }\n\n  // Returns a copy of the map, with the specified key/value added or replaced.\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap<K, V>(\n      this.comparator,\n      this.root\n        .insert(key, value, this.comparator)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  // Returns a copy of the map, with the specified key removed.\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap<K, V>(\n      this.comparator,\n      this.root\n        .remove(key, this.comparator)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  // Returns the value of the node with the given key, or null.\n  get(key: K): V | null {\n    let node = this.root;\n    while (!node.isEmpty()) {\n      const cmp = this.comparator(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n  indexOf(key: K): number {\n    // Number of nodes that were pruned when descending right\n    let prunedNodes = 0;\n    let node = this.root;\n    while (!node.isEmpty()) {\n      const cmp = this.comparator(key, node.key);\n      if (cmp === 0) {\n        return prunedNodes + node.left.size;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else {\n        // Count all nodes left of the node plus the node itself\n        prunedNodes += node.left.size + 1;\n        node = node.right;\n      }\n    }\n    // Node not found\n    return -1;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  // Returns the total number of nodes in the map.\n  get size(): number {\n    return this.root.size;\n  }\n\n  // Returns the minimum key in the map.\n  minKey(): K | null {\n    return this.root.minKey();\n  }\n\n  // Returns the maximum key in the map.\n  maxKey(): K | null {\n    return this.root.maxKey();\n  }\n\n  // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal<T>(action: (k: K, v: V) => T): T {\n    return (this.root as LLRBNode<K, V>).inorderTraversal(action);\n  }\n\n  forEach(fn: (k: K, v: V) => void): void {\n    this.inorderTraversal((k, v) => {\n      fn(k, v);\n      return false;\n    });\n  }\n\n  toString(): string {\n    const descriptions: string[] = [];\n    this.inorderTraversal((k, v) => {\n      descriptions.push(`${k}:${v}`);\n      return false;\n    });\n    return `{${descriptions.join(', ')}}`;\n  }\n\n  // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal<T>(action: (k: K, v: V) => T): T {\n    return (this.root as LLRBNode<K, V>).reverseTraversal(action);\n  }\n\n  // Returns an iterator over the SortedMap.\n  getIterator(): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, null, this.comparator, false);\n  }\n\n  getIteratorFrom(key: K): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, key, this.comparator, false);\n  }\n\n  getReverseIterator(): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, null, this.comparator, true);\n  }\n\n  getReverseIteratorFrom(key: K): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, key, this.comparator, true);\n  }\n} // end SortedMap\n\n// An iterator over an LLRBNode.\nexport class SortedMapIterator<K, V> {\n  private isReverse: boolean;\n  private nodeStack: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>>;\n\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    isReverse: boolean\n  ) {\n    this.isReverse = isReverse;\n    this.nodeStack = [];\n\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (startKey && isReverse) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move\n        // to the next one\n        this.nodeStack.push(node);\n        if (this.isReverse) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): Entry<K, V> {\n    debugAssert(\n      this.nodeStack.length > 0,\n      'getNext() called on iterator when hasNext() is false.'\n    );\n\n    let node = this.nodeStack.pop()!;\n    const result = { key: node.key, value: node.value };\n\n    if (this.isReverse) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack.length > 0;\n  }\n\n  peek(): Entry<K, V> | null {\n    if (this.nodeStack.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack[this.nodeStack.length - 1];\n    return { key: node.key, value: node.value };\n  }\n} // end SortedMapIterator\n\n// Represents a node in a Left-leaning Red-Black tree.\nexport class LLRBNode<K, V> {\n  readonly color: boolean;\n  readonly left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  readonly right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  readonly size: number;\n\n  // Empty node is shared between all LLRB trees.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static EMPTY: LLRBEmptyNode<any, any> = null as any;\n\n  static RED = true;\n  static BLACK = false;\n\n  constructor(\n    public key: K,\n    public value: V,\n    color?: boolean,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V>\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : LLRBNode.EMPTY;\n    this.right = right != null ? right : LLRBNode.EMPTY;\n    this.size = this.left.size + 1 + this.right.size;\n  }\n\n  // Returns a copy of the current node, optionally replacing pieces of it.\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode<K, V>(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal<T>(action: (k: K, v: V) => T): T {\n    return (\n      (this.left as LLRBNode<K, V>).inorderTraversal(action) ||\n      action(this.key, this.value) ||\n      (this.right as LLRBNode<K, V>).inorderTraversal(action)\n    );\n  }\n\n  // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal<T>(action: (k: K, v: V) => T): T {\n    return (\n      (this.right as LLRBNode<K, V>).reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      (this.left as LLRBNode<K, V>).reverseTraversal(action)\n    );\n  }\n\n  // Returns the minimum node in the tree.\n  private min(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min();\n    }\n  }\n\n  // Returns the maximum key in the tree.\n  minKey(): K | null {\n    return this.min().key;\n  }\n\n  // Returns the maximum key in the tree.\n  maxKey(): K | null {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  // Returns new tree, with the key/value added.\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp();\n  }\n\n  private removeMin(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return LLRBNode.EMPTY;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed() && !n.left.left.isRed()) {\n      n = n.moveRedLeft();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin(), null);\n    return n.fixUp();\n  }\n\n  // Returns new tree, with the specified item removed.\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let smallest: LLRBNode<K, V>;\n    let n: LLRBNode<K, V> = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\n        n = n.moveRedLeft();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed()) {\n        n = n.rotateRight();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\n        n = n.moveRedRight();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return LLRBNode.EMPTY;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp();\n  }\n\n  isRed(): boolean {\n    return this.color;\n  }\n\n  // Returns new tree after performing any needed rotations.\n  private fixUp(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed() && !n.left.isRed()) {\n      n = n.rotateLeft();\n    }\n    if (n.left.isRed() && n.left.left.isRed()) {\n      n = n.rotateRight();\n    }\n    if (n.left.isRed() && n.right.isRed()) {\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private moveRedLeft(): LLRBNode<K, V> {\n    let n = this.colorFlip();\n    if (n.right.left.isRed()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight()\n      );\n      n = n.rotateLeft();\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private moveRedRight(): LLRBNode<K, V> {\n    let n = this.colorFlip();\n    if (n.left.left.isRed()) {\n      n = n.rotateRight();\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private rotateLeft(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return (this.right as LLRBNode<K, V>).copy(\n      null,\n      null,\n      this.color,\n      nl,\n      null\n    );\n  }\n\n  private rotateRight(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return (this.left as LLRBNode<K, V>).copy(null, null, this.color, null, nr);\n  }\n\n  private colorFlip(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  // For testing.\n  checkMaxDepth(): boolean {\n    const blackDepth = this.check();\n    if (Math.pow(2.0, blackDepth) <= this.size + 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n  protected check(): number {\n    if (this.isRed() && this.left.isRed()) {\n      throw fail('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n    if (this.right.isRed()) {\n      throw fail('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n    const blackDepth = (this.left as LLRBNode<K, V>).check();\n    if (blackDepth !== (this.right as LLRBNode<K, V>).check()) {\n      throw fail('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed() ? 0 : 1);\n    }\n  }\n} // end LLRBNode\n\n// Represents an empty node (a leaf node in the Red-Black Tree).\nexport class LLRBEmptyNode<K, V> {\n  get key(): never {\n    throw fail('LLRBEmptyNode has no key.');\n  }\n  get value(): never {\n    throw fail('LLRBEmptyNode has no value.');\n  }\n  get color(): never {\n    throw fail('LLRBEmptyNode has no color.');\n  }\n  get left(): never {\n    throw fail('LLRBEmptyNode has no left child.');\n  }\n  get right(): never {\n    throw fail('LLRBEmptyNode has no right child.');\n  }\n  size = 0;\n\n  // Returns a copy of the current node.\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  // Returns a copy of the tree, with the specified key/value added.\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode<K, V>(key, value);\n  }\n\n  // Returns a copy of the tree, with the specified key removed.\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  inorderTraversal(action: (k: K, v: V) => boolean): boolean {\n    return false;\n  }\n\n  reverseTraversal(action: (k: K, v: V) => boolean): boolean {\n    return false;\n  }\n\n  minKey(): K | null {\n    return null;\n  }\n\n  maxKey(): K | null {\n    return null;\n  }\n\n  isRed(): boolean {\n    return false;\n  }\n\n  // For testing.\n  checkMaxDepth(): boolean {\n    return true;\n  }\n\n  protected check(): 0 {\n    return 0;\n  }\n} // end LLRBEmptyNode\n\nLLRBNode.EMPTY = new LLRBEmptyNode<unknown, unknown>();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap, SortedMapIterator } from './sorted_map';\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nexport class SortedSet<T> {\n  private data: SortedMap<T, boolean>;\n\n  constructor(private comparator: (left: T, right: T) => number) {\n    this.data = new SortedMap<T, boolean>(this.comparator);\n  }\n\n  has(elem: T): boolean {\n    return this.data.get(elem) !== null;\n  }\n\n  first(): T | null {\n    return this.data.minKey();\n  }\n\n  last(): T | null {\n    return this.data.maxKey();\n  }\n\n  get size(): number {\n    return this.data.size;\n  }\n\n  indexOf(elem: T): number {\n    return this.data.indexOf(elem);\n  }\n\n  /** Iterates elements in order defined by \"comparator\" */\n  forEach(cb: (elem: T) => void): void {\n    this.data.inorderTraversal((k: T, v: boolean) => {\n      cb(k);\n      return false;\n    });\n  }\n\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n  forEachInRange(range: [T, T], cb: (elem: T) => void): void {\n    const iter = this.data.getIteratorFrom(range[0]);\n    while (iter.hasNext()) {\n      const elem = iter.getNext();\n      if (this.comparator(elem.key, range[1]) >= 0) {\n        return;\n      }\n      cb(elem.key);\n    }\n  }\n\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n  forEachWhile(cb: (elem: T) => boolean, start?: T): void {\n    let iter: SortedMapIterator<T, boolean>;\n    if (start !== undefined) {\n      iter = this.data.getIteratorFrom(start);\n    } else {\n      iter = this.data.getIterator();\n    }\n    while (iter.hasNext()) {\n      const elem = iter.getNext();\n      const result = cb(elem.key);\n      if (!result) {\n        return;\n      }\n    }\n  }\n\n  /** Finds the least element greater than or equal to `elem`. */\n  firstAfterOrEqual(elem: T): T | null {\n    const iter = this.data.getIteratorFrom(elem);\n    return iter.hasNext() ? iter.getNext().key : null;\n  }\n\n  getIterator(): SortedSetIterator<T> {\n    return new SortedSetIterator<T>(this.data.getIterator());\n  }\n\n  getIteratorFrom(key: T): SortedSetIterator<T> {\n    return new SortedSetIterator<T>(this.data.getIteratorFrom(key));\n  }\n\n  /** Inserts or updates an element */\n  add(elem: T): SortedSet<T> {\n    return this.copy(this.data.remove(elem).insert(elem, true));\n  }\n\n  /** Deletes an element */\n  delete(elem: T): SortedSet<T> {\n    if (!this.has(elem)) {\n      return this;\n    }\n    return this.copy(this.data.remove(elem));\n  }\n\n  isEmpty(): boolean {\n    return this.data.isEmpty();\n  }\n\n  unionWith(other: SortedSet<T>): SortedSet<T> {\n    let result: SortedSet<T> = this;\n\n    // Make sure `result` always refers to the larger one of the two sets.\n    if (result.size < other.size) {\n      result = other;\n      other = this;\n    }\n\n    other.forEach(elem => {\n      result = result.add(elem);\n    });\n    return result;\n  }\n\n  isEqual(other: SortedSet<T>): boolean {\n    if (!(other instanceof SortedSet)) {\n      return false;\n    }\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    const thisIt = this.data.getIterator();\n    const otherIt = other.data.getIterator();\n    while (thisIt.hasNext()) {\n      const thisElem = thisIt.getNext().key;\n      const otherElem = otherIt.getNext().key;\n      if (this.comparator(thisElem, otherElem) !== 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toArray(): T[] {\n    const res: T[] = [];\n    this.forEach(targetId => {\n      res.push(targetId);\n    });\n    return res;\n  }\n\n  toString(): string {\n    const result: T[] = [];\n    this.forEach(elem => result.push(elem));\n    return 'SortedSet(' + result.toString() + ')';\n  }\n\n  private copy(data: SortedMap<T, boolean>): SortedSet<T> {\n    const result = new SortedSet(this.comparator);\n    result.data = data;\n    return result;\n  }\n}\n\nexport class SortedSetIterator<T> {\n  constructor(private iter: SortedMapIterator<T, boolean>) {}\n\n  getNext(): T {\n    return this.iter.getNext().key;\n  }\n\n  hasNext(): boolean {\n    return this.iter.hasNext();\n  }\n}\n\n/**\n * Compares two sorted sets for equality using their natural ordering. The\n * method computes the intersection and invokes `onAdd` for every element that\n * is in `after` but not `before`. `onRemove` is invoked for every element in\n * `before` but missing from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original set.\n * @param after - The elements to diff against the original set.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\nexport function diffSortedSets<T>(\n  before: SortedSet<T>,\n  after: SortedSet<T>,\n  comparator: (l: T, r: T) => number,\n  onAdd: (entry: T) => void,\n  onRemove: (entry: T) => void\n): void {\n  const beforeIt = before.getIterator();\n  const afterIt = after.getIterator();\n\n  let beforeValue = advanceIterator(beforeIt);\n  let afterValue = advanceIterator(afterIt);\n\n  // Walk through the two sets at the same time, using the ordering defined by\n  // `comparator`.\n  while (beforeValue || afterValue) {\n    let added = false;\n    let removed = false;\n\n    if (beforeValue && afterValue) {\n      const cmp = comparator(beforeValue, afterValue);\n      if (cmp < 0) {\n        // The element was removed if the next element in our ordered\n        // walkthrough is only in `before`.\n        removed = true;\n      } else if (cmp > 0) {\n        // The element was added if the next element in our ordered walkthrough\n        // is only in `after`.\n        added = true;\n      }\n    } else if (beforeValue != null) {\n      removed = true;\n    } else {\n      added = true;\n    }\n\n    if (added) {\n      onAdd(afterValue!);\n      afterValue = advanceIterator(afterIt);\n    } else if (removed) {\n      onRemove(beforeValue!);\n      beforeValue = advanceIterator(beforeIt);\n    } else {\n      beforeValue = advanceIterator(beforeIt);\n      afterValue = advanceIterator(afterIt);\n    }\n  }\n}\n\n/**\n * Returns the next element from the iterator or `undefined` if none available.\n */\nfunction advanceIterator<T>(it: SortedSetIterator<T>): T | undefined {\n  return it.hasNext() ? it.getNext() : undefined;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class Base64DecodeError extends Error {\n  readonly name = 'Base64DecodeError';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBase64, encodeBase64 } from '../platform/base64';\n\nimport { primitiveComparator } from './misc';\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nexport class ByteString {\n  static readonly EMPTY_BYTE_STRING = new ByteString('');\n\n  private constructor(private readonly binaryString: string) {}\n\n  static fromBase64String(base64: string): ByteString {\n    const binaryString = decodeBase64(base64);\n    return new ByteString(binaryString);\n  }\n\n  static fromUint8Array(array: Uint8Array): ByteString {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const binaryString = binaryStringFromUint8Array(array);\n    return new ByteString(binaryString);\n  }\n\n  [Symbol.iterator](): Iterator<number> {\n    let i = 0;\n    return {\n      next: () => {\n        if (i < this.binaryString.length) {\n          return { value: this.binaryString.charCodeAt(i++), done: false };\n        } else {\n          return { value: undefined, done: true };\n        }\n      }\n    };\n  }\n\n  toBase64(): string {\n    return encodeBase64(this.binaryString);\n  }\n\n  toUint8Array(): Uint8Array {\n    return uint8ArrayFromBinaryString(this.binaryString);\n  }\n\n  approximateByteSize(): number {\n    return this.binaryString.length * 2;\n  }\n\n  compareTo(other: ByteString): number {\n    return primitiveComparator(this.binaryString, other.binaryString);\n  }\n\n  isEqual(other: ByteString): boolean {\n    return this.binaryString === other.binaryString;\n  }\n}\n\n/**\n * Helper function to convert an Uint8array to a binary string.\n */\nexport function binaryStringFromUint8Array(array: Uint8Array): string {\n  let binaryString = '';\n  for (let i = 0; i < array.length; ++i) {\n    binaryString += String.fromCharCode(array[i]);\n  }\n  return binaryString;\n}\n\n/**\n * Helper function to convert a binary string to an Uint8Array.\n */\nexport function uint8ArrayFromBinaryString(binaryString: string): Uint8Array {\n  const buffer = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    buffer[i] = binaryString.charCodeAt(i);\n  }\n  return buffer;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Base64DecodeError } from '../../util/base64_decode_error';\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  try {\n    return atob(encoded);\n  } catch (e) {\n    // Check that `DOMException` is defined before using it to avoid\n    // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n    // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n    if (typeof DOMException !== 'undefined' && e instanceof DOMException) {\n      throw new Base64DecodeError('Invalid base64 string: ' + e);\n    } else {\n      throw e;\n    }\n  }\n}\n\n/** Converts a binary string to a Base64 encoded string. */\nexport function encodeBase64(raw: string): string {\n  return btoa(raw);\n}\n\n/** True if and only if the Base64 conversion functions are available. */\nexport function isBase64Available(): boolean {\n  return typeof atob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../protos/firestore_proto_api';\nimport { hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\n\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\nconst ISO_TIMESTAMP_REG_EXP = new RegExp(\n  /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/\n);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nexport function normalizeTimestamp(date: Timestamp): {\n  seconds: number;\n  nanos: number;\n} {\n  hardAssert(!!date, 'Cannot normalize null or undefined timestamp.');\n\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (typeof date === 'string') {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n\n    // Parse the nanos right out of the string.\n    let nanos = 0;\n    const fraction = ISO_TIMESTAMP_REG_EXP.exec(date);\n    hardAssert(!!fraction, 'invalid timestamp: ' + date);\n    if (fraction[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let nanoStr = fraction[1];\n      nanoStr = (nanoStr + '000000000').substr(0, 9);\n      nanos = Number(nanoStr);\n    }\n\n    // Parse the date to get the seconds.\n    const parsedDate = new Date(date);\n    const seconds = Math.floor(parsedDate.getTime() / 1000);\n\n    return { seconds, nanos };\n  } else {\n    // TODO(b/37282237): Use strings for Proto3 timestamps\n    // assert(!this.options.useProto3Json,\n    //   'The timestamp instance format requires Proto JS.');\n    const seconds = normalizeNumber(date.seconds);\n    const nanos = normalizeNumber(date.nanos);\n    return { seconds, nanos };\n  }\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nexport function normalizeNumber(value: number | string | undefined): number {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return Number(value);\n  } else {\n    return 0;\n  }\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */\nexport function normalizeByteString(blob: string | Uint8Array): ByteString {\n  if (typeof blob === 'string') {\n    return ByteString.fromBase64String(blob);\n  } else {\n    return ByteString.fromUint8Array(blob);\n  }\n}\n","import { FirebaseApp } from '@firebase/app';\n\nimport { ExperimentalLongPollingOptions } from '../api/long_polling_options';\nimport { Code, FirestoreError } from '../util/error';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DatabaseInfo {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param longPollingOptions Options that configure long-polling.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(\n    readonly databaseId: DatabaseId,\n    readonly appId: string,\n    readonly persistenceKey: string,\n    readonly host: string,\n    readonly ssl: boolean,\n    readonly forceLongPolling: boolean,\n    readonly autoDetectLongPolling: boolean,\n    readonly longPollingOptions: ExperimentalLongPollingOptions,\n    readonly useFetchStreams: boolean\n  ) {}\n}\n\n/** The default database name for a project. */\nexport const DEFAULT_DATABASE_NAME = '(default)';\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nexport class DatabaseId {\n  readonly database: string;\n  constructor(readonly projectId: string, database?: string) {\n    this.database = database ? database : DEFAULT_DATABASE_NAME;\n  }\n\n  static empty(): DatabaseId {\n    return new DatabaseId('', '');\n  }\n\n  get isDefaultDatabase(): boolean {\n    return this.database === DEFAULT_DATABASE_NAME;\n  }\n\n  isEqual(other: {}): boolean {\n    return (\n      other instanceof DatabaseId &&\n      other.projectId === this.projectId &&\n      other.database === this.database\n    );\n  }\n}\n\nexport function databaseIdFromApp(\n  app: FirebaseApp,\n  database?: string\n): DatabaseId {\n  if (!Object.prototype.hasOwnProperty.apply(app.options, ['projectId'])) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      '\"projectId\" not provided in firebase.initializeApp.'\n    );\n  }\n\n  return new DatabaseId(app.options.projectId!, database);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId } from '../core/database_info';\nimport {\n  ArrayValue,\n  LatLng,\n  MapValue,\n  Timestamp,\n  Value\n} from '../protos/firestore_proto_api';\nimport { fail } from '../util/assert';\nimport { arrayEquals, primitiveComparator } from '../util/misc';\nimport { forEach, objectSize } from '../util/obj';\nimport { isNegativeZero } from '../util/types';\n\nimport { DocumentKey } from './document_key';\nimport {\n  normalizeByteString,\n  normalizeNumber,\n  normalizeTimestamp\n} from './normalize';\nimport {\n  getLocalWriteTime,\n  getPreviousValue,\n  isServerTimestamp\n} from './server_timestamps';\nimport { TypeOrder } from './type_order';\n\nconst MAX_VALUE_TYPE = '__max__';\nexport const MAX_VALUE: Value = {\n  mapValue: {\n    fields: {\n      '__type__': { stringValue: MAX_VALUE_TYPE }\n    }\n  }\n};\n\nexport const MIN_VALUE: Value = {\n  nullValue: 'NULL_VALUE'\n};\n\n/** Extracts the backend's type order for the provided value. */\nexport function typeOrder(value: Value): TypeOrder {\n  if ('nullValue' in value) {\n    return TypeOrder.NullValue;\n  } else if ('booleanValue' in value) {\n    return TypeOrder.BooleanValue;\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return TypeOrder.NumberValue;\n  } else if ('timestampValue' in value) {\n    return TypeOrder.TimestampValue;\n  } else if ('stringValue' in value) {\n    return TypeOrder.StringValue;\n  } else if ('bytesValue' in value) {\n    return TypeOrder.BlobValue;\n  } else if ('referenceValue' in value) {\n    return TypeOrder.RefValue;\n  } else if ('geoPointValue' in value) {\n    return TypeOrder.GeoPointValue;\n  } else if ('arrayValue' in value) {\n    return TypeOrder.ArrayValue;\n  } else if ('mapValue' in value) {\n    if (isServerTimestamp(value)) {\n      return TypeOrder.ServerTimestampValue;\n    } else if (isMaxValue(value)) {\n      return TypeOrder.MaxValue;\n    }\n    return TypeOrder.ObjectValue;\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */\nexport function valueEquals(left: Value, right: Value): boolean {\n  if (left === right) {\n    return true;\n  }\n\n  const leftType = typeOrder(left);\n  const rightType = typeOrder(right);\n  if (leftType !== rightType) {\n    return false;\n  }\n\n  switch (leftType) {\n    case TypeOrder.NullValue:\n      return true;\n    case TypeOrder.BooleanValue:\n      return left.booleanValue === right.booleanValue;\n    case TypeOrder.ServerTimestampValue:\n      return getLocalWriteTime(left).isEqual(getLocalWriteTime(right));\n    case TypeOrder.TimestampValue:\n      return timestampEquals(left, right);\n    case TypeOrder.StringValue:\n      return left.stringValue === right.stringValue;\n    case TypeOrder.BlobValue:\n      return blobEquals(left, right);\n    case TypeOrder.RefValue:\n      return left.referenceValue === right.referenceValue;\n    case TypeOrder.GeoPointValue:\n      return geoPointEquals(left, right);\n    case TypeOrder.NumberValue:\n      return numberEquals(left, right);\n    case TypeOrder.ArrayValue:\n      return arrayEquals(\n        left.arrayValue!.values || [],\n        right.arrayValue!.values || [],\n        valueEquals\n      );\n    case TypeOrder.ObjectValue:\n      return objectEquals(left, right);\n    case TypeOrder.MaxValue:\n      return true;\n    default:\n      return fail('Unexpected value type: ' + JSON.stringify(left));\n  }\n}\n\nfunction timestampEquals(left: Value, right: Value): boolean {\n  if (\n    typeof left.timestampValue === 'string' &&\n    typeof right.timestampValue === 'string' &&\n    left.timestampValue.length === right.timestampValue.length\n  ) {\n    // Use string equality for ISO 8601 timestamps\n    return left.timestampValue === right.timestampValue;\n  }\n\n  const leftTimestamp = normalizeTimestamp(left.timestampValue!);\n  const rightTimestamp = normalizeTimestamp(right.timestampValue!);\n  return (\n    leftTimestamp.seconds === rightTimestamp.seconds &&\n    leftTimestamp.nanos === rightTimestamp.nanos\n  );\n}\n\nfunction geoPointEquals(left: Value, right: Value): boolean {\n  return (\n    normalizeNumber(left.geoPointValue!.latitude) ===\n      normalizeNumber(right.geoPointValue!.latitude) &&\n    normalizeNumber(left.geoPointValue!.longitude) ===\n      normalizeNumber(right.geoPointValue!.longitude)\n  );\n}\n\nfunction blobEquals(left: Value, right: Value): boolean {\n  return normalizeByteString(left.bytesValue!).isEqual(\n    normalizeByteString(right.bytesValue!)\n  );\n}\n\nexport function numberEquals(left: Value, right: Value): boolean {\n  if ('integerValue' in left && 'integerValue' in right) {\n    return (\n      normalizeNumber(left.integerValue) === normalizeNumber(right.integerValue)\n    );\n  } else if ('doubleValue' in left && 'doubleValue' in right) {\n    const n1 = normalizeNumber(left.doubleValue!);\n    const n2 = normalizeNumber(right.doubleValue!);\n\n    if (n1 === n2) {\n      return isNegativeZero(n1) === isNegativeZero(n2);\n    } else {\n      return isNaN(n1) && isNaN(n2);\n    }\n  }\n\n  return false;\n}\n\nfunction objectEquals(left: Value, right: Value): boolean {\n  const leftMap = left.mapValue!.fields || {};\n  const rightMap = right.mapValue!.fields || {};\n\n  if (objectSize(leftMap) !== objectSize(rightMap)) {\n    return false;\n  }\n\n  for (const key in leftMap) {\n    if (leftMap.hasOwnProperty(key)) {\n      if (\n        rightMap[key] === undefined ||\n        !valueEquals(leftMap[key], rightMap[key])\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/** Returns true if the ArrayValue contains the specified element. */\nexport function arrayValueContains(\n  haystack: ArrayValue,\n  needle: Value\n): boolean {\n  return (\n    (haystack.values || []).find(v => valueEquals(v, needle)) !== undefined\n  );\n}\n\nexport function valueCompare(left: Value, right: Value): number {\n  if (left === right) {\n    return 0;\n  }\n\n  const leftType = typeOrder(left);\n  const rightType = typeOrder(right);\n\n  if (leftType !== rightType) {\n    return primitiveComparator(leftType, rightType);\n  }\n\n  switch (leftType) {\n    case TypeOrder.NullValue:\n    case TypeOrder.MaxValue:\n      return 0;\n    case TypeOrder.BooleanValue:\n      return primitiveComparator(left.booleanValue!, right.booleanValue!);\n    case TypeOrder.NumberValue:\n      return compareNumbers(left, right);\n    case TypeOrder.TimestampValue:\n      return compareTimestamps(left.timestampValue!, right.timestampValue!);\n    case TypeOrder.ServerTimestampValue:\n      return compareTimestamps(\n        getLocalWriteTime(left),\n        getLocalWriteTime(right)\n      );\n    case TypeOrder.StringValue:\n      return primitiveComparator(left.stringValue!, right.stringValue!);\n    case TypeOrder.BlobValue:\n      return compareBlobs(left.bytesValue!, right.bytesValue!);\n    case TypeOrder.RefValue:\n      return compareReferences(left.referenceValue!, right.referenceValue!);\n    case TypeOrder.GeoPointValue:\n      return compareGeoPoints(left.geoPointValue!, right.geoPointValue!);\n    case TypeOrder.ArrayValue:\n      return compareArrays(left.arrayValue!, right.arrayValue!);\n    case TypeOrder.ObjectValue:\n      return compareMaps(left.mapValue!, right.mapValue!);\n    default:\n      throw fail('Invalid value type: ' + leftType);\n  }\n}\n\nfunction compareNumbers(left: Value, right: Value): number {\n  const leftNumber = normalizeNumber(left.integerValue || left.doubleValue);\n  const rightNumber = normalizeNumber(right.integerValue || right.doubleValue);\n\n  if (leftNumber < rightNumber) {\n    return -1;\n  } else if (leftNumber > rightNumber) {\n    return 1;\n  } else if (leftNumber === rightNumber) {\n    return 0;\n  } else {\n    // one or both are NaN.\n    if (isNaN(leftNumber)) {\n      return isNaN(rightNumber) ? 0 : -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\nfunction compareTimestamps(left: Timestamp, right: Timestamp): number {\n  if (\n    typeof left === 'string' &&\n    typeof right === 'string' &&\n    left.length === right.length\n  ) {\n    return primitiveComparator(left, right);\n  }\n\n  const leftTimestamp = normalizeTimestamp(left);\n  const rightTimestamp = normalizeTimestamp(right);\n\n  const comparison = primitiveComparator(\n    leftTimestamp.seconds,\n    rightTimestamp.seconds\n  );\n  if (comparison !== 0) {\n    return comparison;\n  }\n  return primitiveComparator(leftTimestamp.nanos, rightTimestamp.nanos);\n}\n\nfunction compareReferences(leftPath: string, rightPath: string): number {\n  const leftSegments = leftPath.split('/');\n  const rightSegments = rightPath.split('/');\n  for (let i = 0; i < leftSegments.length && i < rightSegments.length; i++) {\n    const comparison = primitiveComparator(leftSegments[i], rightSegments[i]);\n    if (comparison !== 0) {\n      return comparison;\n    }\n  }\n  return primitiveComparator(leftSegments.length, rightSegments.length);\n}\n\nfunction compareGeoPoints(left: LatLng, right: LatLng): number {\n  const comparison = primitiveComparator(\n    normalizeNumber(left.latitude),\n    normalizeNumber(right.latitude)\n  );\n  if (comparison !== 0) {\n    return comparison;\n  }\n  return primitiveComparator(\n    normalizeNumber(left.longitude),\n    normalizeNumber(right.longitude)\n  );\n}\n\nfunction compareBlobs(\n  left: string | Uint8Array,\n  right: string | Uint8Array\n): number {\n  const leftBytes = normalizeByteString(left);\n  const rightBytes = normalizeByteString(right);\n  return leftBytes.compareTo(rightBytes);\n}\n\nfunction compareArrays(left: ArrayValue, right: ArrayValue): number {\n  const leftArray = left.values || [];\n  const rightArray = right.values || [];\n\n  for (let i = 0; i < leftArray.length && i < rightArray.length; ++i) {\n    const compare = valueCompare(leftArray[i], rightArray[i]);\n    if (compare) {\n      return compare;\n    }\n  }\n  return primitiveComparator(leftArray.length, rightArray.length);\n}\n\nfunction compareMaps(left: MapValue, right: MapValue): number {\n  if (left === MAX_VALUE.mapValue && right === MAX_VALUE.mapValue) {\n    return 0;\n  } else if (left === MAX_VALUE.mapValue) {\n    return 1;\n  } else if (right === MAX_VALUE.mapValue) {\n    return -1;\n  }\n\n  const leftMap = left.fields || {};\n  const leftKeys = Object.keys(leftMap);\n  const rightMap = right.fields || {};\n  const rightKeys = Object.keys(rightMap);\n\n  // Even though MapValues are likely sorted correctly based on their insertion\n  // order (e.g. when received from the backend), local modifications can bring\n  // elements out of order. We need to re-sort the elements to ensure that\n  // canonical IDs are independent of insertion order.\n  leftKeys.sort();\n  rightKeys.sort();\n\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; ++i) {\n    const keyCompare = primitiveComparator(leftKeys[i], rightKeys[i]);\n    if (keyCompare !== 0) {\n      return keyCompare;\n    }\n    const compare = valueCompare(leftMap[leftKeys[i]], rightMap[rightKeys[i]]);\n    if (compare !== 0) {\n      return compare;\n    }\n  }\n\n  return primitiveComparator(leftKeys.length, rightKeys.length);\n}\n\n/**\n * Generates the canonical ID for the provided field value (as used in Target\n * serialization).\n */\nexport function canonicalId(value: Value): string {\n  return canonifyValue(value);\n}\n\nfunction canonifyValue(value: Value): string {\n  if ('nullValue' in value) {\n    return 'null';\n  } else if ('booleanValue' in value) {\n    return '' + value.booleanValue!;\n  } else if ('integerValue' in value) {\n    return '' + value.integerValue!;\n  } else if ('doubleValue' in value) {\n    return '' + value.doubleValue!;\n  } else if ('timestampValue' in value) {\n    return canonifyTimestamp(value.timestampValue!);\n  } else if ('stringValue' in value) {\n    return value.stringValue!;\n  } else if ('bytesValue' in value) {\n    return canonifyByteString(value.bytesValue!);\n  } else if ('referenceValue' in value) {\n    return canonifyReference(value.referenceValue!);\n  } else if ('geoPointValue' in value) {\n    return canonifyGeoPoint(value.geoPointValue!);\n  } else if ('arrayValue' in value) {\n    return canonifyArray(value.arrayValue!);\n  } else if ('mapValue' in value) {\n    return canonifyMap(value.mapValue!);\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nfunction canonifyByteString(byteString: string | Uint8Array): string {\n  return normalizeByteString(byteString).toBase64();\n}\n\nfunction canonifyTimestamp(timestamp: Timestamp): string {\n  const normalizedTimestamp = normalizeTimestamp(timestamp);\n  return `time(${normalizedTimestamp.seconds},${normalizedTimestamp.nanos})`;\n}\n\nfunction canonifyGeoPoint(geoPoint: LatLng): string {\n  return `geo(${geoPoint.latitude},${geoPoint.longitude})`;\n}\n\nfunction canonifyReference(referenceValue: string): string {\n  return DocumentKey.fromName(referenceValue).toString();\n}\n\nfunction canonifyMap(mapValue: MapValue): string {\n  // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n  // matching canonical IDs for identical maps, we need to sort the keys.\n  const sortedKeys = Object.keys(mapValue.fields || {}).sort();\n\n  let result = '{';\n  let first = true;\n  for (const key of sortedKeys) {\n    if (!first) {\n      result += ',';\n    } else {\n      first = false;\n    }\n    result += `${key}:${canonifyValue(mapValue.fields![key])}`;\n  }\n  return result + '}';\n}\n\nfunction canonifyArray(arrayValue: ArrayValue): string {\n  let result = '[';\n  let first = true;\n  for (const value of arrayValue.values || []) {\n    if (!first) {\n      result += ',';\n    } else {\n      first = false;\n    }\n    result += canonifyValue(value);\n  }\n  return result + ']';\n}\n\n/**\n * Returns an approximate (and wildly inaccurate) in-memory size for the field\n * value.\n *\n * The memory size takes into account only the actual user data as it resides\n * in memory and ignores object overhead.\n */\nexport function estimateByteSize(value: Value): number {\n  switch (typeOrder(value)) {\n    case TypeOrder.NullValue:\n      return 4;\n    case TypeOrder.BooleanValue:\n      return 4;\n    case TypeOrder.NumberValue:\n      return 8;\n    case TypeOrder.TimestampValue:\n      // Timestamps are made up of two distinct numbers (seconds + nanoseconds)\n      return 16;\n    case TypeOrder.ServerTimestampValue:\n      const previousValue = getPreviousValue(value);\n      return previousValue ? 16 + estimateByteSize(previousValue) : 16;\n    case TypeOrder.StringValue:\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures:\n      // \"JavaScript's String type is [...] a set of elements of 16-bit unsigned\n      // integer values\"\n      return value.stringValue!.length * 2;\n    case TypeOrder.BlobValue:\n      return normalizeByteString(value.bytesValue!).approximateByteSize();\n    case TypeOrder.RefValue:\n      return value.referenceValue!.length;\n    case TypeOrder.GeoPointValue:\n      // GeoPoints are made up of two distinct numbers (latitude + longitude)\n      return 16;\n    case TypeOrder.ArrayValue:\n      return estimateArrayByteSize(value.arrayValue!);\n    case TypeOrder.ObjectValue:\n      return estimateMapByteSize(value.mapValue!);\n    default:\n      throw fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nfunction estimateMapByteSize(mapValue: MapValue): number {\n  let size = 0;\n  forEach(mapValue.fields, (key, val) => {\n    size += key.length + estimateByteSize(val);\n  });\n  return size;\n}\n\nfunction estimateArrayByteSize(arrayValue: ArrayValue): number {\n  return (arrayValue.values || []).reduce(\n    (previousSize, value) => previousSize + estimateByteSize(value),\n    0\n  );\n}\n\n/** Returns a reference value for the provided database and key. */\nexport function refValue(databaseId: DatabaseId, key: DocumentKey): Value {\n  return {\n    referenceValue: `projects/${databaseId.projectId}/databases/${\n      databaseId.database\n    }/documents/${key.path.canonicalString()}`\n  };\n}\n\n/** Returns true if `value` is an IntegerValue . */\nexport function isInteger(\n  value?: Value | null\n): value is { integerValue: string | number } {\n  return !!value && 'integerValue' in value;\n}\n\n/** Returns true if `value` is a DoubleValue. */\nexport function isDouble(\n  value?: Value | null\n): value is { doubleValue: string | number } {\n  return !!value && 'doubleValue' in value;\n}\n\n/** Returns true if `value` is either an IntegerValue or a DoubleValue. */\nexport function isNumber(value?: Value | null): boolean {\n  return isInteger(value) || isDouble(value);\n}\n\n/** Returns true if `value` is an ArrayValue. */\nexport function isArray(\n  value?: Value | null\n): value is { arrayValue: ArrayValue } {\n  return !!value && 'arrayValue' in value;\n}\n\n/** Returns true if `value` is a ReferenceValue. */\nexport function isReferenceValue(\n  value?: Value | null\n): value is { referenceValue: string } {\n  return !!value && 'referenceValue' in value;\n}\n\n/** Returns true if `value` is a NullValue. */\nexport function isNullValue(\n  value?: Value | null\n): value is { nullValue: 'NULL_VALUE' } {\n  return !!value && 'nullValue' in value;\n}\n\n/** Returns true if `value` is NaN. */\nexport function isNanValue(\n  value?: Value | null\n): value is { doubleValue: 'NaN' | number } {\n  return !!value && 'doubleValue' in value && isNaN(Number(value.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */\nexport function isMapValue(\n  value?: Value | null\n): value is { mapValue: MapValue } {\n  return !!value && 'mapValue' in value;\n}\n\n/** Creates a deep copy of `source`. */\nexport function deepClone(source: Value): Value {\n  if (source.geoPointValue) {\n    return { geoPointValue: { ...source.geoPointValue } };\n  } else if (\n    source.timestampValue &&\n    typeof source.timestampValue === 'object'\n  ) {\n    return { timestampValue: { ...source.timestampValue } };\n  } else if (source.mapValue) {\n    const target: Value = { mapValue: { fields: {} } };\n    forEach(\n      source.mapValue.fields,\n      (key, val) => (target.mapValue!.fields![key] = deepClone(val))\n    );\n    return target;\n  } else if (source.arrayValue) {\n    const target: Value = { arrayValue: { values: [] } };\n    for (let i = 0; i < (source.arrayValue.values || []).length; ++i) {\n      target.arrayValue!.values![i] = deepClone(source.arrayValue.values![i]);\n    }\n    return target;\n  } else {\n    return { ...source };\n  }\n}\n\n/** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\nexport function isMaxValue(value: Value): boolean {\n  return (\n    (((value.mapValue || {}).fields || {})['__type__'] || {}).stringValue ===\n    MAX_VALUE_TYPE\n  );\n}\n\n/** Returns the lowest value for the given value type (inclusive). */\nexport function valuesGetLowerBound(value: Value): Value {\n  if ('nullValue' in value) {\n    return MIN_VALUE;\n  } else if ('booleanValue' in value) {\n    return { booleanValue: false };\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return { doubleValue: NaN };\n  } else if ('timestampValue' in value) {\n    return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n  } else if ('stringValue' in value) {\n    return { stringValue: '' };\n  } else if ('bytesValue' in value) {\n    return { bytesValue: '' };\n  } else if ('referenceValue' in value) {\n    return refValue(DatabaseId.empty(), DocumentKey.empty());\n  } else if ('geoPointValue' in value) {\n    return { geoPointValue: { latitude: -90, longitude: -180 } };\n  } else if ('arrayValue' in value) {\n    return { arrayValue: {} };\n  } else if ('mapValue' in value) {\n    return { mapValue: {} };\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\n/** Returns the largest value for the given value type (exclusive). */\nexport function valuesGetUpperBound(value: Value): Value {\n  if ('nullValue' in value) {\n    return { booleanValue: false };\n  } else if ('booleanValue' in value) {\n    return { doubleValue: NaN };\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n  } else if ('timestampValue' in value) {\n    return { stringValue: '' };\n  } else if ('stringValue' in value) {\n    return { bytesValue: '' };\n  } else if ('bytesValue' in value) {\n    return refValue(DatabaseId.empty(), DocumentKey.empty());\n  } else if ('referenceValue' in value) {\n    return { geoPointValue: { latitude: -90, longitude: -180 } };\n  } else if ('geoPointValue' in value) {\n    return { arrayValue: {} };\n  } else if ('arrayValue' in value) {\n    return { mapValue: {} };\n  } else if ('mapValue' in value) {\n    return MAX_VALUE;\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nexport function lowerBoundCompare(\n  left: { value: Value; inclusive: boolean },\n  right: { value: Value; inclusive: boolean }\n): number {\n  const cmp = valueCompare(left.value, right.value);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  if (left.inclusive && !right.inclusive) {\n    return -1;\n  } else if (!left.inclusive && right.inclusive) {\n    return 1;\n  }\n\n  return 0;\n}\n\nexport function upperBoundCompare(\n  left: { value: Value; inclusive: boolean },\n  right: { value: Value; inclusive: boolean }\n): number {\n  const cmp = valueCompare(left.value, right.value);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  if (left.inclusive && !right.inclusive) {\n    return 1;\n  } else if (!left.inclusive && right.inclusive) {\n    return -1;\n  }\n\n  return 0;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetId } from '../core/types';\nimport { OverlayedDocument } from '../local/overlayed_document';\nimport { primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { Document, MutableDocument } from './document';\nimport { DocumentKey } from './document_key';\nimport { Mutation } from './mutation';\nimport { Overlay } from './overlay';\n\n/** Miscellaneous collection types / constants. */\n\nexport type MutableDocumentMap = SortedMap<DocumentKey, MutableDocument>;\nconst EMPTY_MUTABLE_DOCUMENT_MAP = new SortedMap<DocumentKey, MutableDocument>(\n  DocumentKey.comparator\n);\nexport function mutableDocumentMap(): MutableDocumentMap {\n  return EMPTY_MUTABLE_DOCUMENT_MAP;\n}\n\nexport interface DocumentSizeEntries {\n  documents: MutableDocumentMap;\n  sizeMap: SortedMap<DocumentKey, number>;\n}\n\nexport type DocumentMap = SortedMap<DocumentKey, Document>;\nconst EMPTY_DOCUMENT_MAP = new SortedMap<DocumentKey, Document>(\n  DocumentKey.comparator\n);\nexport function documentMap(...docs: Document[]): DocumentMap {\n  let map = EMPTY_DOCUMENT_MAP;\n  for (const doc of docs) {\n    map = map.insert(doc.key, doc);\n  }\n  return map;\n}\n\nexport type OverlayedDocumentMap = DocumentKeyMap<OverlayedDocument>;\nexport function newOverlayedDocumentMap(): OverlayedDocumentMap {\n  return newDocumentKeyMap<OverlayedDocument>();\n}\n\nexport function convertOverlayedDocumentMapToDocumentMap(\n  collection: OverlayedDocumentMap\n): DocumentMap {\n  let documents = EMPTY_DOCUMENT_MAP;\n  collection.forEach(\n    (k, v) => (documents = documents.insert(k, v.overlayedDocument))\n  );\n  return documents;\n}\n\nexport type OverlayMap = DocumentKeyMap<Overlay>;\nexport function newOverlayMap(): OverlayMap {\n  return newDocumentKeyMap<Overlay>();\n}\n\nexport type MutationMap = DocumentKeyMap<Mutation>;\nexport function newMutationMap(): MutationMap {\n  return newDocumentKeyMap<Mutation>();\n}\n\nexport type DocumentKeyMap<T> = ObjectMap<DocumentKey, T>;\nexport function newDocumentKeyMap<T>(): DocumentKeyMap<T> {\n  return new ObjectMap<DocumentKey, T>(\n    key => key.toString(),\n    (l, r) => l.isEqual(r)\n  );\n}\n\nexport type DocumentVersionMap = SortedMap<DocumentKey, SnapshotVersion>;\nconst EMPTY_DOCUMENT_VERSION_MAP = new SortedMap<DocumentKey, SnapshotVersion>(\n  DocumentKey.comparator\n);\nexport function documentVersionMap(): DocumentVersionMap {\n  return EMPTY_DOCUMENT_VERSION_MAP;\n}\n\nexport type DocumentKeySet = SortedSet<DocumentKey>;\nconst EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\nexport function documentKeySet(...keys: DocumentKey[]): DocumentKeySet {\n  let set = EMPTY_DOCUMENT_KEY_SET;\n  for (const key of keys) {\n    set = set.add(key);\n  }\n  return set;\n}\n\nexport type TargetIdSet = SortedSet<TargetId>;\nconst EMPTY_TARGET_ID_SET = new SortedSet<TargetId>(primitiveComparator);\nexport function targetIdSet(): SortedSet<TargetId> {\n  return EMPTY_TARGET_ID_SET;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fail } from '../util/assert';\nimport { Code } from '../util/error';\nimport { logError } from '../util/log';\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nenum RpcCode {\n  OK = 0,\n  CANCELLED = 1,\n  UNKNOWN = 2,\n  INVALID_ARGUMENT = 3,\n  DEADLINE_EXCEEDED = 4,\n  NOT_FOUND = 5,\n  ALREADY_EXISTS = 6,\n  PERMISSION_DENIED = 7,\n  UNAUTHENTICATED = 16,\n  RESOURCE_EXHAUSTED = 8,\n  FAILED_PRECONDITION = 9,\n  ABORTED = 10,\n  OUT_OF_RANGE = 11,\n  UNIMPLEMENTED = 12,\n  INTERNAL = 13,\n  UNAVAILABLE = 14,\n  DATA_LOSS = 15\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nexport function isPermanentError(code: Code): boolean {\n  switch (code) {\n    case Code.OK:\n      return fail('Treated status OK as error');\n    case Code.CANCELLED:\n    case Code.UNKNOWN:\n    case Code.DEADLINE_EXCEEDED:\n    case Code.RESOURCE_EXHAUSTED:\n    case Code.INTERNAL:\n    case Code.UNAVAILABLE:\n    // Unauthenticated means something went wrong with our token and we need\n    // to retry with new credentials which will happen automatically.\n    case Code.UNAUTHENTICATED:\n      return false;\n    case Code.INVALID_ARGUMENT:\n    case Code.NOT_FOUND:\n    case Code.ALREADY_EXISTS:\n    case Code.PERMISSION_DENIED:\n    case Code.FAILED_PRECONDITION:\n    // Aborted might be retried in some scenarios, but that is dependant on\n    // the context and should handled individually by the calling code.\n    // See https://cloud.google.com/apis/design/errors.\n    case Code.ABORTED:\n    case Code.OUT_OF_RANGE:\n    case Code.UNIMPLEMENTED:\n    case Code.DATA_LOSS:\n      return true;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\nexport function isPermanentWriteError(code: Code): boolean {\n  return isPermanentError(code) && code !== Code.ABORTED;\n}\n\n/**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\nexport function mapCodeFromRpcStatus(status: string): Code | undefined {\n  // lookup by string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const code: RpcCode = RpcCode[status as any] as any;\n  if (code === undefined) {\n    return undefined;\n  }\n\n  return mapCodeFromRpcCode(code);\n}\n\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nexport function mapCodeFromRpcCode(code: number | undefined): Code {\n  if (code === undefined) {\n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    logError('GRPC error has no .code');\n    return Code.UNKNOWN;\n  }\n\n  switch (code) {\n    case RpcCode.OK:\n      return Code.OK;\n    case RpcCode.CANCELLED:\n      return Code.CANCELLED;\n    case RpcCode.UNKNOWN:\n      return Code.UNKNOWN;\n    case RpcCode.DEADLINE_EXCEEDED:\n      return Code.DEADLINE_EXCEEDED;\n    case RpcCode.RESOURCE_EXHAUSTED:\n      return Code.RESOURCE_EXHAUSTED;\n    case RpcCode.INTERNAL:\n      return Code.INTERNAL;\n    case RpcCode.UNAVAILABLE:\n      return Code.UNAVAILABLE;\n    case RpcCode.UNAUTHENTICATED:\n      return Code.UNAUTHENTICATED;\n    case RpcCode.INVALID_ARGUMENT:\n      return Code.INVALID_ARGUMENT;\n    case RpcCode.NOT_FOUND:\n      return Code.NOT_FOUND;\n    case RpcCode.ALREADY_EXISTS:\n      return Code.ALREADY_EXISTS;\n    case RpcCode.PERMISSION_DENIED:\n      return Code.PERMISSION_DENIED;\n    case RpcCode.FAILED_PRECONDITION:\n      return Code.FAILED_PRECONDITION;\n    case RpcCode.ABORTED:\n      return Code.ABORTED;\n    case RpcCode.OUT_OF_RANGE:\n      return Code.OUT_OF_RANGE;\n    case RpcCode.UNIMPLEMENTED:\n      return Code.UNIMPLEMENTED;\n    case RpcCode.DATA_LOSS:\n      return Code.DATA_LOSS;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Maps an RPC code from a Code. This is the reverse operation from\n * mapCodeFromRpcCode and should really only be used in tests.\n */\nexport function mapRpcCodeFromCode(code: Code | undefined): number {\n  if (code === undefined) {\n    return RpcCode.OK;\n  }\n\n  switch (code) {\n    case Code.OK:\n      return RpcCode.OK;\n    case Code.CANCELLED:\n      return RpcCode.CANCELLED;\n    case Code.UNKNOWN:\n      return RpcCode.UNKNOWN;\n    case Code.DEADLINE_EXCEEDED:\n      return RpcCode.DEADLINE_EXCEEDED;\n    case Code.RESOURCE_EXHAUSTED:\n      return RpcCode.RESOURCE_EXHAUSTED;\n    case Code.INTERNAL:\n      return RpcCode.INTERNAL;\n    case Code.UNAVAILABLE:\n      return RpcCode.UNAVAILABLE;\n    case Code.UNAUTHENTICATED:\n      return RpcCode.UNAUTHENTICATED;\n    case Code.INVALID_ARGUMENT:\n      return RpcCode.INVALID_ARGUMENT;\n    case Code.NOT_FOUND:\n      return RpcCode.NOT_FOUND;\n    case Code.ALREADY_EXISTS:\n      return RpcCode.ALREADY_EXISTS;\n    case Code.PERMISSION_DENIED:\n      return RpcCode.PERMISSION_DENIED;\n    case Code.FAILED_PRECONDITION:\n      return RpcCode.FAILED_PRECONDITION;\n    case Code.ABORTED:\n      return RpcCode.ABORTED;\n    case Code.OUT_OF_RANGE:\n      return RpcCode.OUT_OF_RANGE;\n    case Code.UNIMPLEMENTED:\n      return RpcCode.UNIMPLEMENTED;\n    case Code.DATA_LOSS:\n      return RpcCode.DATA_LOSS;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nexport function mapCodeFromHttpStatus(status?: number): Code {\n  if (status === undefined) {\n    logError('RPC_ERROR', 'HTTP error has no status');\n    return Code.UNKNOWN;\n  }\n\n  // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  //\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n  switch (status) {\n    case 200: // OK\n      return Code.OK;\n\n    case 400: // Bad Request\n      return Code.FAILED_PRECONDITION;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401: // Unauthorized\n      return Code.UNAUTHENTICATED;\n\n    case 403: // Forbidden\n      return Code.PERMISSION_DENIED;\n\n    case 404: // Not Found\n      return Code.NOT_FOUND;\n\n    case 409: // Conflict\n      return Code.ABORTED;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416: // Range Not Satisfiable\n      return Code.OUT_OF_RANGE;\n\n    case 429: // Too Many Requests\n      return Code.RESOURCE_EXHAUSTED;\n\n    case 499: // Client Closed Request\n      return Code.CANCELLED;\n\n    case 500: // Internal Server Error\n      return Code.UNKNOWN;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501: // Unimplemented\n      return Code.UNIMPLEMENTED;\n\n    case 503: // Service Unavailable\n      return Code.UNAVAILABLE;\n\n    case 504: // Gateway Timeout\n      return Code.DEADLINE_EXCEEDED;\n\n    default:\n      if (status >= 200 && status < 300) {\n        return Code.OK;\n      }\n      if (status >= 400 && status < 500) {\n        return Code.FAILED_PRECONDITION;\n      }\n      if (status >= 500 && status < 600) {\n        return Code.INTERNAL;\n      }\n      return Code.UNKNOWN;\n  }\n}\n\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */\nexport function mapCodeFromHttpResponseErrorStatus(status: string): Code {\n  const serverError = status.toLowerCase().replace(/_/g, '-');\n  return Object.values(Code).indexOf(serverError as Code) >= 0\n    ? (serverError as Code)\n    : Code.UNKNOWN;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Md5, Integer } from '@firebase/webchannel-wrapper/bloom-blob';\n\nimport { newTextEncoder } from '../platform/text_serializer';\n\nconst MAX_64_BIT_UNSIGNED_INTEGER = new Integer([0xffffffff, 0xffffffff], 0);\n\n// Hash a string using md5 hashing algorithm.\nfunction getMd5HashValue(value: string): Uint8Array {\n  const encodedValue = newTextEncoder().encode(value);\n  const md5 = new Md5();\n  md5.update(encodedValue);\n  return new Uint8Array(md5.digest());\n}\n\n// Interpret the 16 bytes array as two 64-bit unsigned integers, encoded using\n// 2’s complement using little endian.\nfunction get64BitUints(Bytes: Uint8Array): [Integer, Integer] {\n  const dataView = new DataView(Bytes.buffer);\n  const chunk1 = dataView.getUint32(0, /* littleEndian= */ true);\n  const chunk2 = dataView.getUint32(4, /* littleEndian= */ true);\n  const chunk3 = dataView.getUint32(8, /* littleEndian= */ true);\n  const chunk4 = dataView.getUint32(12, /* littleEndian= */ true);\n  const integer1 = new Integer([chunk1, chunk2], 0);\n  const integer2 = new Integer([chunk3, chunk4], 0);\n  return [integer1, integer2];\n}\n\nexport class BloomFilter {\n  readonly bitCount: number;\n  private readonly bitCountInInteger: Integer;\n\n  constructor(\n    readonly bitmap: Uint8Array,\n    readonly padding: number,\n    readonly hashCount: number\n  ) {\n    if (padding < 0 || padding >= 8) {\n      throw new BloomFilterError(`Invalid padding: ${padding}`);\n    }\n\n    if (hashCount < 0) {\n      throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n    }\n\n    if (bitmap.length > 0 && this.hashCount === 0) {\n      // Only empty bloom filter can have 0 hash count.\n      throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n    }\n\n    if (bitmap.length === 0 && padding !== 0) {\n      // Empty bloom filter should have 0 padding.\n      throw new BloomFilterError(\n        `Invalid padding when bitmap length is 0: ${padding}`\n      );\n    }\n\n    this.bitCount = bitmap.length * 8 - padding;\n    // Set the bit count in Integer to avoid repetition in mightContain().\n    this.bitCountInInteger = Integer.fromNumber(this.bitCount);\n  }\n\n  // Calculate the ith hash value based on the hashed 64bit integers,\n  // and calculate its corresponding bit index in the bitmap to be checked.\n  private getBitIndex(num1: Integer, num2: Integer, hashIndex: number): number {\n    // Calculate hashed value h(i) = h1 + (i * h2).\n    let hashValue = num1.add(num2.multiply(Integer.fromNumber(hashIndex)));\n    // Wrap if hash value overflow 64bit.\n    if (hashValue.compare(MAX_64_BIT_UNSIGNED_INTEGER) === 1) {\n      hashValue = new Integer([hashValue.getBits(0), hashValue.getBits(1)], 0);\n    }\n    return hashValue.modulo(this.bitCountInInteger).toNumber();\n  }\n\n  // Return whether the bit on the given index in the bitmap is set to 1.\n  private isBitSet(index: number): boolean {\n    // To retrieve bit n, calculate: (bitmap[n / 8] & (0x01 << (n % 8))).\n    const byte = this.bitmap[Math.floor(index / 8)];\n    const offset = index % 8;\n    return (byte & (0x01 << offset)) !== 0;\n  }\n\n  mightContain(value: string): boolean {\n    // Empty bitmap should always return false on membership check.\n    if (this.bitCount === 0) {\n      return false;\n    }\n    const md5HashedValue = getMd5HashValue(value);\n    const [hash1, hash2] = get64BitUints(md5HashedValue);\n    for (let i = 0; i < this.hashCount; i++) {\n      const index = this.getBitIndex(hash1, hash2, i);\n      if (!this.isBitSet(index)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** Create bloom filter for testing purposes only. */\n  static create(\n    bitCount: number,\n    hashCount: number,\n    contains: string[]\n  ): BloomFilter {\n    const padding = bitCount % 8 === 0 ? 0 : 8 - (bitCount % 8);\n    const bitmap = new Uint8Array(Math.ceil(bitCount / 8));\n    const bloomFilter = new BloomFilter(bitmap, padding, hashCount);\n    contains.forEach(item => bloomFilter.insert(item));\n    return bloomFilter;\n  }\n\n  private insert(value: string): void {\n    if (this.bitCount === 0) {\n      return;\n    }\n\n    const md5HashedValue = getMd5HashValue(value);\n    const [hash1, hash2] = get64BitUints(md5HashedValue);\n    for (let i = 0; i < this.hashCount; i++) {\n      const index = this.getBitIndex(hash1, hash2, i);\n      this.setBit(index);\n    }\n  }\n\n  private setBit(index: number): void {\n    const indexOfByte = Math.floor(index / 8);\n    const offset = index % 8;\n    this.bitmap[indexOfByte] |= 0x01 << offset;\n  }\n}\n\nexport class BloomFilterError extends Error {\n  readonly name = 'BloomFilterError';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Aggregate } from '../core/aggregate';\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  compositeFilterIsFlatConjunction,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport { Direction, OrderBy } from '../core/order_by';\nimport {\n  LimitType,\n  newQuery,\n  newQueryForPath,\n  Query,\n  queryToTarget\n} from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { targetIsDocumentTarget, Target } from '../core/target';\nimport { TargetId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { TargetData, TargetPurpose } from '../local/target_data';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  DeleteMutation,\n  FieldTransform,\n  Mutation,\n  MutationResult,\n  PatchMutation,\n  Precondition,\n  SetMutation,\n  VerifyMutation\n} from '../model/mutation';\nimport { normalizeTimestamp } from '../model/normalize';\nimport { ObjectValue } from '../model/object_value';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport {\n  ArrayRemoveTransformOperation,\n  ArrayUnionTransformOperation,\n  NumericIncrementTransformOperation,\n  ServerTimestampTransform,\n  TransformOperation\n} from '../model/transform_operation';\nimport { isNanValue, isNullValue } from '../model/values';\nimport {\n  ApiClientObjectMap as ProtoApiClientObjectMap,\n  BatchGetDocumentsResponse as ProtoBatchGetDocumentsResponse,\n  CompositeFilterOp as ProtoCompositeFilterOp,\n  Cursor as ProtoCursor,\n  Document as ProtoDocument,\n  DocumentMask as ProtoDocumentMask,\n  DocumentsTarget as ProtoDocumentsTarget,\n  FieldFilterOp as ProtoFieldFilterOp,\n  FieldReference as ProtoFieldReference,\n  FieldTransform as ProtoFieldTransform,\n  Filter as ProtoFilter,\n  ListenResponse as ProtoListenResponse,\n  Order as ProtoOrder,\n  OrderDirection as ProtoOrderDirection,\n  Precondition as ProtoPrecondition,\n  QueryTarget as ProtoQueryTarget,\n  RunAggregationQueryRequest as ProtoRunAggregationQueryRequest,\n  Aggregation as ProtoAggregation,\n  Status as ProtoStatus,\n  Target as ProtoTarget,\n  TargetChangeTargetChangeType as ProtoTargetChangeTargetChangeType,\n  Timestamp as ProtoTimestamp,\n  Write as ProtoWrite,\n  WriteResult as ProtoWriteResult\n} from '../protos/firestore_proto_api';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { Code, FirestoreError } from '../util/error';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { ExistenceFilter } from './existence_filter';\nimport { Serializer } from './number_serializer';\nimport { mapCodeFromRpcCode } from './rpc_error';\nimport {\n  DocumentWatchChange,\n  ExistenceFilterChange,\n  WatchChange,\n  WatchTargetChange,\n  WatchTargetChangeState\n} from './watch_change';\n\nconst DIRECTIONS = (() => {\n  const dirs: { [dir: string]: ProtoOrderDirection } = {};\n  dirs[Direction.ASCENDING] = 'ASCENDING';\n  dirs[Direction.DESCENDING] = 'DESCENDING';\n  return dirs;\n})();\n\nconst OPERATORS = (() => {\n  const ops: { [op: string]: ProtoFieldFilterOp } = {};\n  ops[Operator.LESS_THAN] = 'LESS_THAN';\n  ops[Operator.LESS_THAN_OR_EQUAL] = 'LESS_THAN_OR_EQUAL';\n  ops[Operator.GREATER_THAN] = 'GREATER_THAN';\n  ops[Operator.GREATER_THAN_OR_EQUAL] = 'GREATER_THAN_OR_EQUAL';\n  ops[Operator.EQUAL] = 'EQUAL';\n  ops[Operator.NOT_EQUAL] = 'NOT_EQUAL';\n  ops[Operator.ARRAY_CONTAINS] = 'ARRAY_CONTAINS';\n  ops[Operator.IN] = 'IN';\n  ops[Operator.NOT_IN] = 'NOT_IN';\n  ops[Operator.ARRAY_CONTAINS_ANY] = 'ARRAY_CONTAINS_ANY';\n  return ops;\n})();\n\nconst COMPOSITE_OPERATORS = (() => {\n  const ops: { [op: string]: ProtoCompositeFilterOp } = {};\n  ops[CompositeOperator.AND] = 'AND';\n  ops[CompositeOperator.OR] = 'OR';\n  return ops;\n})();\n\nfunction assertPresent(value: unknown, description: string): asserts value {\n  debugAssert(!isNullOrUndefined(value), description + ' is missing');\n}\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nexport class JsonProtoSerializer implements Serializer {\n  constructor(\n    readonly databaseId: DatabaseId,\n    readonly useProto3Json: boolean\n  ) {}\n}\n\nfunction fromRpcStatus(status: ProtoStatus): FirestoreError {\n  const code =\n    status.code === undefined ? Code.UNKNOWN : mapCodeFromRpcCode(status.code);\n  return new FirestoreError(code, status.message || '');\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\nfunction toInt32Proto(\n  serializer: JsonProtoSerializer,\n  val: number | null\n): number | { value: number } | null {\n  if (serializer.useProto3Json || isNullOrUndefined(val)) {\n    return val;\n  } else {\n    return { value: val };\n  }\n}\n\n/**\n * Returns a number (or null) from a google.protobuf.Int32Value proto.\n */\nfunction fromInt32Proto(\n  val: number | { value: number } | undefined\n): number | null {\n  let result;\n  if (typeof val === 'object') {\n    result = val.value;\n  } else {\n    result = val;\n  }\n  return isNullOrUndefined(result) ? null : result;\n}\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nexport function toTimestamp(\n  serializer: JsonProtoSerializer,\n  timestamp: Timestamp\n): ProtoTimestamp {\n  if (serializer.useProto3Json) {\n    // Serialize to ISO-8601 date format, but with full nano resolution.\n    // Since JS Date has only millis, let's only use it for the seconds and\n    // then manually add the fractions to the end.\n    const jsDateStr = new Date(timestamp.seconds * 1000).toISOString();\n    // Remove .xxx frac part and Z in the end.\n    const strUntilSeconds = jsDateStr.replace(/\\.\\d*/, '').replace('Z', '');\n    // Pad the fraction out to 9 digits (nanos).\n    const nanoStr = ('000000000' + timestamp.nanoseconds).slice(-9);\n\n    return `${strUntilSeconds}.${nanoStr}Z`;\n  } else {\n    return {\n      seconds: '' + timestamp.seconds,\n      nanos: timestamp.nanoseconds\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  }\n}\n\nfunction fromTimestamp(date: ProtoTimestamp): Timestamp {\n  const timestamp = normalizeTimestamp(date);\n  return new Timestamp(timestamp.seconds, timestamp.nanos);\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nexport function toBytes(\n  serializer: JsonProtoSerializer,\n  bytes: ByteString\n): string | Uint8Array {\n  if (serializer.useProto3Json) {\n    return bytes.toBase64();\n  } else {\n    return bytes.toUint8Array();\n  }\n}\n\n/**\n * Returns a ByteString based on the proto string value.\n */\nexport function fromBytes(\n  serializer: JsonProtoSerializer,\n  value: string | Uint8Array | undefined\n): ByteString {\n  if (serializer.useProto3Json) {\n    hardAssert(\n      value === undefined || typeof value === 'string',\n      'value must be undefined or a string when using proto3 Json'\n    );\n    return ByteString.fromBase64String(value ? value : '');\n  } else {\n    hardAssert(\n      value === undefined ||\n        // Check if the value is an instance of both Buffer and Uint8Array,\n        // despite the fact that Buffer extends Uint8Array. In some\n        // environments, such as jsdom, the prototype chain of Buffer\n        // does not indicate that it extends Uint8Array.\n        value instanceof Buffer ||\n        value instanceof Uint8Array,\n      'value must be undefined, Buffer, or Uint8Array'\n    );\n    return ByteString.fromUint8Array(value ? value : new Uint8Array());\n  }\n}\n\nexport function toVersion(\n  serializer: JsonProtoSerializer,\n  version: SnapshotVersion\n): ProtoTimestamp {\n  return toTimestamp(serializer, version.toTimestamp());\n}\n\nexport function fromVersion(version: ProtoTimestamp): SnapshotVersion {\n  hardAssert(!!version, \"Trying to deserialize version that isn't set\");\n  return SnapshotVersion.fromTimestamp(fromTimestamp(version));\n}\n\nexport function toResourceName(\n  databaseId: DatabaseId,\n  path: ResourcePath\n): string {\n  return toResourcePath(databaseId, path).canonicalString();\n}\n\nexport function toResourcePath(\n  databaseId: DatabaseId,\n  path?: ResourcePath\n): ResourcePath {\n  const resourcePath = fullyQualifiedPrefixPath(databaseId).child('documents');\n  return path === undefined ? resourcePath : resourcePath.child(path);\n}\n\nfunction fromResourceName(name: string): ResourcePath {\n  const resource = ResourcePath.fromString(name);\n  hardAssert(\n    isValidResourceName(resource),\n    'Tried to deserialize invalid key ' + resource.toString()\n  );\n  return resource;\n}\n\nexport function toName(\n  serializer: JsonProtoSerializer,\n  key: DocumentKey\n): string {\n  return toResourceName(serializer.databaseId, key.path);\n}\n\nexport function fromName(\n  serializer: JsonProtoSerializer,\n  name: string\n): DocumentKey {\n  const resource = fromResourceName(name);\n\n  if (resource.get(1) !== serializer.databaseId.projectId) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Tried to deserialize key from different project: ' +\n        resource.get(1) +\n        ' vs ' +\n        serializer.databaseId.projectId\n    );\n  }\n\n  if (resource.get(3) !== serializer.databaseId.database) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Tried to deserialize key from different database: ' +\n        resource.get(3) +\n        ' vs ' +\n        serializer.databaseId.database\n    );\n  }\n  return new DocumentKey(extractLocalPathFromResourceName(resource));\n}\n\nfunction toQueryPath(\n  serializer: JsonProtoSerializer,\n  path: ResourcePath\n): string {\n  return toResourceName(serializer.databaseId, path);\n}\n\nfunction fromQueryPath(name: string): ResourcePath {\n  const resourceName = fromResourceName(name);\n  // In v1beta1 queries for collections at the root did not have a trailing\n  // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n  // ability to read the v1beta1 form for compatibility with queries persisted\n  // in the local target cache.\n  if (resourceName.length === 4) {\n    return ResourcePath.emptyPath();\n  }\n  return extractLocalPathFromResourceName(resourceName);\n}\n\nexport function getEncodedDatabaseId(serializer: JsonProtoSerializer): string {\n  const path = new ResourcePath([\n    'projects',\n    serializer.databaseId.projectId,\n    'databases',\n    serializer.databaseId.database\n  ]);\n  return path.canonicalString();\n}\n\nfunction fullyQualifiedPrefixPath(databaseId: DatabaseId): ResourcePath {\n  return new ResourcePath([\n    'projects',\n    databaseId.projectId,\n    'databases',\n    databaseId.database\n  ]);\n}\n\nfunction extractLocalPathFromResourceName(\n  resourceName: ResourcePath\n): ResourcePath {\n  hardAssert(\n    resourceName.length > 4 && resourceName.get(4) === 'documents',\n    'tried to deserialize invalid key ' + resourceName.toString()\n  );\n  return resourceName.popFirst(5);\n}\n\n/** Creates a Document proto from key and fields (but no create/update time) */\nexport function toMutationDocument(\n  serializer: JsonProtoSerializer,\n  key: DocumentKey,\n  fields: ObjectValue\n): ProtoDocument {\n  return {\n    name: toName(serializer, key),\n    fields: fields.value.mapValue.fields\n  };\n}\n\nexport function toDocument(\n  serializer: JsonProtoSerializer,\n  document: MutableDocument\n): ProtoDocument {\n  debugAssert(\n    !document.hasLocalMutations,\n    \"Can't serialize documents with mutations.\"\n  );\n  return {\n    name: toName(serializer, document.key),\n    fields: document.data.value.mapValue.fields,\n    updateTime: toTimestamp(serializer, document.version.toTimestamp()),\n    createTime: toTimestamp(serializer, document.createTime.toTimestamp())\n  };\n}\n\nexport function fromDocument(\n  serializer: JsonProtoSerializer,\n  document: ProtoDocument,\n  hasCommittedMutations?: boolean\n): MutableDocument {\n  const key = fromName(serializer, document.name!);\n  const version = fromVersion(document.updateTime!);\n  // If we read a document from persistence that is missing createTime, it's due\n  // to older SDK versions not storing this information. In such cases, we'll\n  // set the createTime to zero. This can be removed in the long term.\n  const createTime = document.createTime\n    ? fromVersion(document.createTime)\n    : SnapshotVersion.min();\n  const data = new ObjectValue({ mapValue: { fields: document.fields } });\n  const result = MutableDocument.newFoundDocument(\n    key,\n    version,\n    createTime,\n    data\n  );\n  if (hasCommittedMutations) {\n    result.setHasCommittedMutations();\n  }\n  return hasCommittedMutations ? result.setHasCommittedMutations() : result;\n}\n\nfunction fromFound(\n  serializer: JsonProtoSerializer,\n  doc: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  hardAssert(\n    !!doc.found,\n    'Tried to deserialize a found document from a missing document.'\n  );\n  assertPresent(doc.found.name, 'doc.found.name');\n  assertPresent(doc.found.updateTime, 'doc.found.updateTime');\n  const key = fromName(serializer, doc.found.name);\n  const version = fromVersion(doc.found.updateTime);\n  const createTime = doc.found.createTime\n    ? fromVersion(doc.found.createTime)\n    : SnapshotVersion.min();\n  const data = new ObjectValue({ mapValue: { fields: doc.found.fields } });\n  return MutableDocument.newFoundDocument(key, version, createTime, data);\n}\n\nfunction fromMissing(\n  serializer: JsonProtoSerializer,\n  result: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  hardAssert(\n    !!result.missing,\n    'Tried to deserialize a missing document from a found document.'\n  );\n  hardAssert(\n    !!result.readTime,\n    'Tried to deserialize a missing document without a read time.'\n  );\n  const key = fromName(serializer, result.missing);\n  const version = fromVersion(result.readTime);\n  return MutableDocument.newNoDocument(key, version);\n}\n\nexport function fromBatchGetDocumentsResponse(\n  serializer: JsonProtoSerializer,\n  result: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  if ('found' in result) {\n    return fromFound(serializer, result);\n  } else if ('missing' in result) {\n    return fromMissing(serializer, result);\n  }\n  return fail('invalid batch get response: ' + JSON.stringify(result));\n}\n\nexport function fromWatchChange(\n  serializer: JsonProtoSerializer,\n  change: ProtoListenResponse\n): WatchChange {\n  let watchChange: WatchChange;\n  if ('targetChange' in change) {\n    assertPresent(change.targetChange, 'targetChange');\n    // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n    // if unset\n    const state = fromWatchTargetChangeState(\n      change.targetChange.targetChangeType || 'NO_CHANGE'\n    );\n    const targetIds: TargetId[] = change.targetChange.targetIds || [];\n\n    const resumeToken = fromBytes(serializer, change.targetChange.resumeToken);\n    const causeProto = change.targetChange!.cause;\n    const cause = causeProto && fromRpcStatus(causeProto);\n    watchChange = new WatchTargetChange(\n      state,\n      targetIds,\n      resumeToken,\n      cause || null\n    );\n  } else if ('documentChange' in change) {\n    assertPresent(change.documentChange, 'documentChange');\n    const entityChange = change.documentChange;\n    assertPresent(entityChange.document, 'documentChange.name');\n    assertPresent(entityChange.document.name, 'documentChange.document.name');\n    assertPresent(\n      entityChange.document.updateTime,\n      'documentChange.document.updateTime'\n    );\n    const key = fromName(serializer, entityChange.document.name);\n    const version = fromVersion(entityChange.document.updateTime);\n    const createTime = entityChange.document.createTime\n      ? fromVersion(entityChange.document.createTime)\n      : SnapshotVersion.min();\n    const data = new ObjectValue({\n      mapValue: { fields: entityChange.document.fields }\n    });\n    const doc = MutableDocument.newFoundDocument(\n      key,\n      version,\n      createTime,\n      data\n    );\n    const updatedTargetIds = entityChange.targetIds || [];\n    const removedTargetIds = entityChange.removedTargetIds || [];\n    watchChange = new DocumentWatchChange(\n      updatedTargetIds,\n      removedTargetIds,\n      doc.key,\n      doc\n    );\n  } else if ('documentDelete' in change) {\n    assertPresent(change.documentDelete, 'documentDelete');\n    const docDelete = change.documentDelete;\n    assertPresent(docDelete.document, 'documentDelete.document');\n    const key = fromName(serializer, docDelete.document);\n    const version = docDelete.readTime\n      ? fromVersion(docDelete.readTime)\n      : SnapshotVersion.min();\n    const doc = MutableDocument.newNoDocument(key, version);\n    const removedTargetIds = docDelete.removedTargetIds || [];\n    watchChange = new DocumentWatchChange([], removedTargetIds, doc.key, doc);\n  } else if ('documentRemove' in change) {\n    assertPresent(change.documentRemove, 'documentRemove');\n    const docRemove = change.documentRemove;\n    assertPresent(docRemove.document, 'documentRemove');\n    const key = fromName(serializer, docRemove.document);\n    const removedTargetIds = docRemove.removedTargetIds || [];\n    watchChange = new DocumentWatchChange([], removedTargetIds, key, null);\n  } else if ('filter' in change) {\n    // TODO(dimond): implement existence filter parsing with strategy.\n    assertPresent(change.filter, 'filter');\n    const filter = change.filter;\n    assertPresent(filter.targetId, 'filter.targetId');\n    const { count = 0, unchangedNames } = filter;\n    const existenceFilter = new ExistenceFilter(count, unchangedNames);\n    const targetId = filter.targetId;\n    watchChange = new ExistenceFilterChange(targetId, existenceFilter);\n  } else {\n    return fail('Unknown change type ' + JSON.stringify(change));\n  }\n  return watchChange;\n}\n\nfunction fromWatchTargetChangeState(\n  state: ProtoTargetChangeTargetChangeType\n): WatchTargetChangeState {\n  if (state === 'NO_CHANGE') {\n    return WatchTargetChangeState.NoChange;\n  } else if (state === 'ADD') {\n    return WatchTargetChangeState.Added;\n  } else if (state === 'REMOVE') {\n    return WatchTargetChangeState.Removed;\n  } else if (state === 'CURRENT') {\n    return WatchTargetChangeState.Current;\n  } else if (state === 'RESET') {\n    return WatchTargetChangeState.Reset;\n  } else {\n    return fail('Got unexpected TargetChange.state: ' + state);\n  }\n}\n\nexport function versionFromListenResponse(\n  change: ProtoListenResponse\n): SnapshotVersion {\n  // We have only reached a consistent snapshot for the entire stream if there\n  // is a read_time set and it applies to all targets (i.e. the list of\n  // targets is empty). The backend is guaranteed to send such responses.\n  if (!('targetChange' in change)) {\n    return SnapshotVersion.min();\n  }\n  const targetChange = change.targetChange!;\n  if (targetChange.targetIds && targetChange.targetIds.length) {\n    return SnapshotVersion.min();\n  }\n  if (!targetChange.readTime) {\n    return SnapshotVersion.min();\n  }\n  return fromVersion(targetChange.readTime);\n}\n\nexport function toMutation(\n  serializer: JsonProtoSerializer,\n  mutation: Mutation\n): ProtoWrite {\n  let result: ProtoWrite;\n  if (mutation instanceof SetMutation) {\n    result = {\n      update: toMutationDocument(serializer, mutation.key, mutation.value)\n    };\n  } else if (mutation instanceof DeleteMutation) {\n    result = { delete: toName(serializer, mutation.key) };\n  } else if (mutation instanceof PatchMutation) {\n    result = {\n      update: toMutationDocument(serializer, mutation.key, mutation.data),\n      updateMask: toDocumentMask(mutation.fieldMask)\n    };\n  } else if (mutation instanceof VerifyMutation) {\n    result = {\n      verify: toName(serializer, mutation.key)\n    };\n  } else {\n    return fail('Unknown mutation type ' + mutation.type);\n  }\n\n  if (mutation.fieldTransforms.length > 0) {\n    result.updateTransforms = mutation.fieldTransforms.map(transform =>\n      toFieldTransform(serializer, transform)\n    );\n  }\n\n  if (!mutation.precondition.isNone) {\n    result.currentDocument = toPrecondition(serializer, mutation.precondition);\n  }\n\n  return result;\n}\n\nexport function fromMutation(\n  serializer: JsonProtoSerializer,\n  proto: ProtoWrite\n): Mutation {\n  const precondition = proto.currentDocument\n    ? fromPrecondition(proto.currentDocument)\n    : Precondition.none();\n\n  const fieldTransforms = proto.updateTransforms\n    ? proto.updateTransforms.map(transform =>\n        fromFieldTransform(serializer, transform)\n      )\n    : [];\n\n  if (proto.update) {\n    assertPresent(proto.update.name, 'name');\n    const key = fromName(serializer, proto.update.name);\n    const value = new ObjectValue({\n      mapValue: { fields: proto.update.fields }\n    });\n\n    if (proto.updateMask) {\n      const fieldMask = fromDocumentMask(proto.updateMask);\n      return new PatchMutation(\n        key,\n        value,\n        fieldMask,\n        precondition,\n        fieldTransforms\n      );\n    } else {\n      return new SetMutation(key, value, precondition, fieldTransforms);\n    }\n  } else if (proto.delete) {\n    const key = fromName(serializer, proto.delete);\n    return new DeleteMutation(key, precondition);\n  } else if (proto.verify) {\n    const key = fromName(serializer, proto.verify);\n    return new VerifyMutation(key, precondition);\n  } else {\n    return fail('unknown mutation proto: ' + JSON.stringify(proto));\n  }\n}\n\nfunction toPrecondition(\n  serializer: JsonProtoSerializer,\n  precondition: Precondition\n): ProtoPrecondition {\n  debugAssert(!precondition.isNone, \"Can't serialize an empty precondition\");\n  if (precondition.updateTime !== undefined) {\n    return {\n      updateTime: toVersion(serializer, precondition.updateTime)\n    };\n  } else if (precondition.exists !== undefined) {\n    return { exists: precondition.exists };\n  } else {\n    return fail('Unknown precondition');\n  }\n}\n\nfunction fromPrecondition(precondition: ProtoPrecondition): Precondition {\n  if (precondition.updateTime !== undefined) {\n    return Precondition.updateTime(fromVersion(precondition.updateTime));\n  } else if (precondition.exists !== undefined) {\n    return Precondition.exists(precondition.exists);\n  } else {\n    return Precondition.none();\n  }\n}\n\nfunction fromWriteResult(\n  proto: ProtoWriteResult,\n  commitTime: ProtoTimestamp\n): MutationResult {\n  // NOTE: Deletes don't have an updateTime.\n  let version = proto.updateTime\n    ? fromVersion(proto.updateTime)\n    : fromVersion(commitTime);\n\n  if (version.isEqual(SnapshotVersion.min())) {\n    // The Firestore Emulator currently returns an update time of 0 for\n    // deletes of non-existing documents (rather than null). This breaks the\n    // test \"get deleted doc while offline with source=cache\" as NoDocuments\n    // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n    // TODO(#2149): Remove this when Emulator is fixed\n    version = fromVersion(commitTime);\n  }\n\n  return new MutationResult(version, proto.transformResults || []);\n}\n\nexport function fromWriteResults(\n  protos: ProtoWriteResult[] | undefined,\n  commitTime?: ProtoTimestamp\n): MutationResult[] {\n  if (protos && protos.length > 0) {\n    hardAssert(\n      commitTime !== undefined,\n      'Received a write result without a commit time'\n    );\n    return protos.map(proto => fromWriteResult(proto, commitTime));\n  } else {\n    return [];\n  }\n}\n\nfunction toFieldTransform(\n  serializer: JsonProtoSerializer,\n  fieldTransform: FieldTransform\n): ProtoFieldTransform {\n  const transform = fieldTransform.transform;\n  if (transform instanceof ServerTimestampTransform) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      setToServerValue: 'REQUEST_TIME'\n    };\n  } else if (transform instanceof ArrayUnionTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      appendMissingElements: {\n        values: transform.elements\n      }\n    };\n  } else if (transform instanceof ArrayRemoveTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      removeAllFromArray: {\n        values: transform.elements\n      }\n    };\n  } else if (transform instanceof NumericIncrementTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      increment: transform.operand\n    };\n  } else {\n    throw fail('Unknown transform: ' + fieldTransform.transform);\n  }\n}\n\nfunction fromFieldTransform(\n  serializer: JsonProtoSerializer,\n  proto: ProtoFieldTransform\n): FieldTransform {\n  let transform: TransformOperation | null = null;\n  if ('setToServerValue' in proto) {\n    hardAssert(\n      proto.setToServerValue === 'REQUEST_TIME',\n      'Unknown server value transform proto: ' + JSON.stringify(proto)\n    );\n    transform = new ServerTimestampTransform();\n  } else if ('appendMissingElements' in proto) {\n    const values = proto.appendMissingElements!.values || [];\n    transform = new ArrayUnionTransformOperation(values);\n  } else if ('removeAllFromArray' in proto) {\n    const values = proto.removeAllFromArray!.values || [];\n    transform = new ArrayRemoveTransformOperation(values);\n  } else if ('increment' in proto) {\n    transform = new NumericIncrementTransformOperation(\n      serializer,\n      proto.increment!\n    );\n  } else {\n    fail('Unknown transform proto: ' + JSON.stringify(proto));\n  }\n  const fieldPath = FieldPath.fromServerFormat(proto.fieldPath!);\n  return new FieldTransform(fieldPath, transform!);\n}\n\nexport function toDocumentsTarget(\n  serializer: JsonProtoSerializer,\n  target: Target\n): ProtoDocumentsTarget {\n  return { documents: [toQueryPath(serializer, target.path)] };\n}\n\nexport function fromDocumentsTarget(\n  documentsTarget: ProtoDocumentsTarget\n): Target {\n  const count = documentsTarget.documents!.length;\n  hardAssert(\n    count === 1,\n    'DocumentsTarget contained other than 1 document: ' + count\n  );\n  const name = documentsTarget.documents![0];\n  return queryToTarget(newQueryForPath(fromQueryPath(name)));\n}\n\nexport function toQueryTarget(\n  serializer: JsonProtoSerializer,\n  target: Target\n): { queryTarget: ProtoQueryTarget; parent: ResourcePath } {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const queryTarget: ProtoQueryTarget = { structuredQuery: {} };\n  const path = target.path;\n  let parent: ResourcePath;\n  if (target.collectionGroup !== null) {\n    debugAssert(\n      path.length % 2 === 0,\n      'Collection Group queries should be within a document path or root.'\n    );\n    parent = path;\n    queryTarget.structuredQuery!.from = [\n      {\n        collectionId: target.collectionGroup,\n        allDescendants: true\n      }\n    ];\n  } else {\n    debugAssert(\n      path.length % 2 !== 0,\n      'Document queries with filters are not supported.'\n    );\n    parent = path.popLast();\n    queryTarget.structuredQuery!.from = [{ collectionId: path.lastSegment() }];\n  }\n  queryTarget.parent = toQueryPath(serializer, parent);\n\n  const where = toFilters(target.filters);\n  if (where) {\n    queryTarget.structuredQuery!.where = where;\n  }\n\n  const orderBy = toOrder(target.orderBy);\n  if (orderBy) {\n    queryTarget.structuredQuery!.orderBy = orderBy;\n  }\n\n  const limit = toInt32Proto(serializer, target.limit);\n  if (limit !== null) {\n    queryTarget.structuredQuery!.limit = limit;\n  }\n\n  if (target.startAt) {\n    queryTarget.structuredQuery!.startAt = toStartAtCursor(target.startAt);\n  }\n  if (target.endAt) {\n    queryTarget.structuredQuery!.endAt = toEndAtCursor(target.endAt);\n  }\n\n  return { queryTarget, parent };\n}\n\nexport function toRunAggregationQueryRequest(\n  serializer: JsonProtoSerializer,\n  target: Target,\n  aggregates: Aggregate[],\n  skipAliasing?: boolean\n): {\n  request: ProtoRunAggregationQueryRequest;\n  aliasMap: Record<string, string>;\n  parent: ResourcePath;\n} {\n  const { queryTarget, parent } = toQueryTarget(serializer, target);\n  const aliasMap: Record<string, string> = {};\n\n  const aggregations: ProtoAggregation[] = [];\n  let aggregationNum = 0;\n\n  aggregates.forEach(aggregate => {\n    // Map all client-side aliases to a unique short-form\n    // alias. This avoids issues with client-side aliases that\n    // exceed the 1500-byte string size limit.\n    const serverAlias = skipAliasing\n      ? aggregate.alias\n      : `aggregate_${aggregationNum++}`;\n    aliasMap[serverAlias] = aggregate.alias;\n\n    if (aggregate.aggregateType === 'count') {\n      aggregations.push({\n        alias: serverAlias,\n        count: {}\n      });\n    } else if (aggregate.aggregateType === 'avg') {\n      aggregations.push({\n        alias: serverAlias,\n        avg: {\n          field: toFieldPathReference(aggregate.fieldPath!)\n        }\n      });\n    } else if (aggregate.aggregateType === 'sum') {\n      aggregations.push({\n        alias: serverAlias,\n        sum: {\n          field: toFieldPathReference(aggregate.fieldPath!)\n        }\n      });\n    }\n  });\n\n  return {\n    request: {\n      structuredAggregationQuery: {\n        aggregations,\n        structuredQuery: queryTarget.structuredQuery\n      },\n      parent: queryTarget.parent\n    },\n    aliasMap,\n    parent\n  };\n}\n\nexport function convertQueryTargetToQuery(target: ProtoQueryTarget): Query {\n  let path = fromQueryPath(target.parent!);\n\n  const query = target.structuredQuery!;\n  const fromCount = query.from ? query.from.length : 0;\n  let collectionGroup: string | null = null;\n  if (fromCount > 0) {\n    hardAssert(\n      fromCount === 1,\n      'StructuredQuery.from with more than one collection is not supported.'\n    );\n    const from = query.from![0];\n    if (from.allDescendants) {\n      collectionGroup = from.collectionId!;\n    } else {\n      path = path.child(from.collectionId!);\n    }\n  }\n\n  let filterBy: Filter[] = [];\n  if (query.where) {\n    filterBy = fromFilters(query.where);\n  }\n\n  let orderBy: OrderBy[] = [];\n  if (query.orderBy) {\n    orderBy = fromOrder(query.orderBy);\n  }\n\n  let limit: number | null = null;\n  if (query.limit) {\n    limit = fromInt32Proto(query.limit);\n  }\n\n  let startAt: Bound | null = null;\n  if (query.startAt) {\n    startAt = fromStartAtCursor(query.startAt);\n  }\n\n  let endAt: Bound | null = null;\n  if (query.endAt) {\n    endAt = fromEndAtCursor(query.endAt);\n  }\n\n  return newQuery(\n    path,\n    collectionGroup,\n    orderBy,\n    filterBy,\n    limit,\n    LimitType.First,\n    startAt,\n    endAt\n  );\n}\n\nexport function fromQueryTarget(target: ProtoQueryTarget): Target {\n  return queryToTarget(convertQueryTargetToQuery(target));\n}\n\nexport function toListenRequestLabels(\n  serializer: JsonProtoSerializer,\n  targetData: TargetData\n): ProtoApiClientObjectMap<string> | null {\n  const value = toLabel(targetData.purpose);\n  if (value == null) {\n    return null;\n  } else {\n    return {\n      'goog-listen-tags': value\n    };\n  }\n}\n\nexport function toLabel(purpose: TargetPurpose): string | null {\n  switch (purpose) {\n    case TargetPurpose.Listen:\n      return null;\n    case TargetPurpose.ExistenceFilterMismatch:\n      return 'existence-filter-mismatch';\n    case TargetPurpose.ExistenceFilterMismatchBloom:\n      return 'existence-filter-mismatch-bloom';\n    case TargetPurpose.LimboResolution:\n      return 'limbo-document';\n    default:\n      return fail('Unrecognized query purpose: ' + purpose);\n  }\n}\n\nexport function toTarget(\n  serializer: JsonProtoSerializer,\n  targetData: TargetData\n): ProtoTarget {\n  let result: ProtoTarget;\n  const target = targetData.target;\n\n  if (targetIsDocumentTarget(target)) {\n    result = { documents: toDocumentsTarget(serializer, target) };\n  } else {\n    result = { query: toQueryTarget(serializer, target).queryTarget };\n  }\n\n  result.targetId = targetData.targetId;\n\n  if (targetData.resumeToken.approximateByteSize() > 0) {\n    result.resumeToken = toBytes(serializer, targetData.resumeToken);\n    const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n    if (expectedCount !== null) {\n      result.expectedCount = expectedCount;\n    }\n  } else if (targetData.snapshotVersion.compareTo(SnapshotVersion.min()) > 0) {\n    // TODO(wuandy): Consider removing above check because it is most likely true.\n    // Right now, many tests depend on this behaviour though (leaving min() out\n    // of serialization).\n    result.readTime = toTimestamp(\n      serializer,\n      targetData.snapshotVersion.toTimestamp()\n    );\n    const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n    if (expectedCount !== null) {\n      result.expectedCount = expectedCount;\n    }\n  }\n\n  return result;\n}\n\nfunction toFilters(filters: Filter[]): ProtoFilter | undefined {\n  if (filters.length === 0) {\n    return;\n  }\n\n  return toFilter(CompositeFilter.create(filters, CompositeOperator.AND));\n}\n\nfunction fromFilters(filter: ProtoFilter): Filter[] {\n  const result = fromFilter(filter);\n\n  if (\n    result instanceof CompositeFilter &&\n    compositeFilterIsFlatConjunction(result)\n  ) {\n    return result.getFilters();\n  }\n\n  return [result];\n}\n\nfunction fromFilter(filter: ProtoFilter): Filter {\n  if (filter.unaryFilter !== undefined) {\n    return fromUnaryFilter(filter);\n  } else if (filter.fieldFilter !== undefined) {\n    return fromFieldFilter(filter);\n  } else if (filter.compositeFilter !== undefined) {\n    return fromCompositeFilter(filter);\n  } else {\n    return fail('Unknown filter: ' + JSON.stringify(filter));\n  }\n}\n\nfunction toOrder(orderBys: OrderBy[]): ProtoOrder[] | undefined {\n  if (orderBys.length === 0) {\n    return;\n  }\n  return orderBys.map(order => toPropertyOrder(order));\n}\n\nfunction fromOrder(orderBys: ProtoOrder[]): OrderBy[] {\n  return orderBys.map(order => fromPropertyOrder(order));\n}\n\nfunction toStartAtCursor(cursor: Bound): ProtoCursor {\n  return {\n    before: cursor.inclusive,\n    values: cursor.position\n  };\n}\n\nfunction toEndAtCursor(cursor: Bound): ProtoCursor {\n  return {\n    before: !cursor.inclusive,\n    values: cursor.position\n  };\n}\n\nfunction fromStartAtCursor(cursor: ProtoCursor): Bound {\n  const inclusive = !!cursor.before;\n  const position = cursor.values || [];\n  return new Bound(position, inclusive);\n}\n\nfunction fromEndAtCursor(cursor: ProtoCursor): Bound {\n  const inclusive = !cursor.before;\n  const position = cursor.values || [];\n  return new Bound(position, inclusive);\n}\n\n// visible for testing\nexport function toDirection(dir: Direction): ProtoOrderDirection {\n  return DIRECTIONS[dir];\n}\n\n// visible for testing\nexport function fromDirection(\n  dir: ProtoOrderDirection | undefined\n): Direction | undefined {\n  switch (dir) {\n    case 'ASCENDING':\n      return Direction.ASCENDING;\n    case 'DESCENDING':\n      return Direction.DESCENDING;\n    default:\n      return undefined;\n  }\n}\n\n// visible for testing\nexport function toOperatorName(op: Operator): ProtoFieldFilterOp {\n  return OPERATORS[op];\n}\n\nexport function toCompositeOperatorName(\n  op: CompositeOperator\n): ProtoCompositeFilterOp {\n  return COMPOSITE_OPERATORS[op];\n}\n\nexport function fromOperatorName(op: ProtoFieldFilterOp): Operator {\n  switch (op) {\n    case 'EQUAL':\n      return Operator.EQUAL;\n    case 'NOT_EQUAL':\n      return Operator.NOT_EQUAL;\n    case 'GREATER_THAN':\n      return Operator.GREATER_THAN;\n    case 'GREATER_THAN_OR_EQUAL':\n      return Operator.GREATER_THAN_OR_EQUAL;\n    case 'LESS_THAN':\n      return Operator.LESS_THAN;\n    case 'LESS_THAN_OR_EQUAL':\n      return Operator.LESS_THAN_OR_EQUAL;\n    case 'ARRAY_CONTAINS':\n      return Operator.ARRAY_CONTAINS;\n    case 'IN':\n      return Operator.IN;\n    case 'NOT_IN':\n      return Operator.NOT_IN;\n    case 'ARRAY_CONTAINS_ANY':\n      return Operator.ARRAY_CONTAINS_ANY;\n    case 'OPERATOR_UNSPECIFIED':\n      return fail('Unspecified operator');\n    default:\n      return fail('Unknown operator');\n  }\n}\n\nexport function fromCompositeOperatorName(\n  op: ProtoCompositeFilterOp\n): CompositeOperator {\n  switch (op) {\n    case 'AND':\n      return CompositeOperator.AND;\n    case 'OR':\n      return CompositeOperator.OR;\n    default:\n      return fail('Unknown operator');\n  }\n}\n\nexport function toFieldPathReference(path: FieldPath): ProtoFieldReference {\n  return { fieldPath: path.canonicalString() };\n}\n\nexport function fromFieldPathReference(\n  fieldReference: ProtoFieldReference\n): FieldPath {\n  return FieldPath.fromServerFormat(fieldReference.fieldPath!);\n}\n\n// visible for testing\nexport function toPropertyOrder(orderBy: OrderBy): ProtoOrder {\n  return {\n    field: toFieldPathReference(orderBy.field),\n    direction: toDirection(orderBy.dir)\n  };\n}\n\nexport function fromPropertyOrder(orderBy: ProtoOrder): OrderBy {\n  return new OrderBy(\n    fromFieldPathReference(orderBy.field!),\n    fromDirection(orderBy.direction)\n  );\n}\n\n// visible for testing\nexport function toFilter(filter: Filter): ProtoFilter {\n  if (filter instanceof FieldFilter) {\n    return toUnaryOrFieldFilter(filter);\n  } else if (filter instanceof CompositeFilter) {\n    return toCompositeFilter(filter);\n  } else {\n    return fail('Unrecognized filter type ' + JSON.stringify(filter));\n  }\n}\n\nexport function toCompositeFilter(filter: CompositeFilter): ProtoFilter {\n  const protos = filter.getFilters().map(filter => toFilter(filter));\n\n  if (protos.length === 1) {\n    return protos[0];\n  }\n\n  return {\n    compositeFilter: {\n      op: toCompositeOperatorName(filter.op),\n      filters: protos\n    }\n  };\n}\n\nexport function toUnaryOrFieldFilter(filter: FieldFilter): ProtoFilter {\n  if (filter.op === Operator.EQUAL) {\n    if (isNanValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NAN'\n        }\n      };\n    } else if (isNullValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NULL'\n        }\n      };\n    }\n  } else if (filter.op === Operator.NOT_EQUAL) {\n    if (isNanValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NOT_NAN'\n        }\n      };\n    } else if (isNullValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NOT_NULL'\n        }\n      };\n    }\n  }\n  return {\n    fieldFilter: {\n      field: toFieldPathReference(filter.field),\n      op: toOperatorName(filter.op),\n      value: filter.value\n    }\n  };\n}\n\nexport function fromUnaryFilter(filter: ProtoFilter): Filter {\n  switch (filter.unaryFilter!.op!) {\n    case 'IS_NAN':\n      const nanField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(nanField, Operator.EQUAL, {\n        doubleValue: NaN\n      });\n    case 'IS_NULL':\n      const nullField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(nullField, Operator.EQUAL, {\n        nullValue: 'NULL_VALUE'\n      });\n    case 'IS_NOT_NAN':\n      const notNanField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(notNanField, Operator.NOT_EQUAL, {\n        doubleValue: NaN\n      });\n    case 'IS_NOT_NULL':\n      const notNullField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(notNullField, Operator.NOT_EQUAL, {\n        nullValue: 'NULL_VALUE'\n      });\n    case 'OPERATOR_UNSPECIFIED':\n      return fail('Unspecified filter');\n    default:\n      return fail('Unknown filter');\n  }\n}\n\nexport function fromFieldFilter(filter: ProtoFilter): FieldFilter {\n  return FieldFilter.create(\n    fromFieldPathReference(filter.fieldFilter!.field!),\n    fromOperatorName(filter.fieldFilter!.op!),\n    filter.fieldFilter!.value!\n  );\n}\n\nexport function fromCompositeFilter(filter: ProtoFilter): CompositeFilter {\n  return CompositeFilter.create(\n    filter.compositeFilter!.filters!.map(filter => fromFilter(filter)),\n    fromCompositeOperatorName(filter.compositeFilter!.op!)\n  );\n}\n\nexport function toDocumentMask(fieldMask: FieldMask): ProtoDocumentMask {\n  const canonicalFields: string[] = [];\n  fieldMask.fields.forEach(field =>\n    canonicalFields.push(field.canonicalString())\n  );\n  return {\n    fieldPaths: canonicalFields\n  };\n}\n\nexport function fromDocumentMask(proto: ProtoDocumentMask): FieldMask {\n  const paths = proto.fieldPaths || [];\n  return new FieldMask(paths.map(path => FieldPath.fromServerFormat(path)));\n}\n\nexport function isValidResourceName(path: ResourcePath): boolean {\n  // Resource names have at least 4 components (project ID, database ID)\n  return (\n    path.length >= 4 &&\n    path.get(0) === 'projects' &&\n    path.get(2) === 'databases'\n  );\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport {\n  normalizeByteString,\n  normalizeNumber,\n  normalizeTimestamp\n} from '../model/normalize';\nimport { isMaxValue } from '../model/values';\nimport { ArrayValue, MapValue, Value } from '../protos/firestore_proto_api';\nimport { fail } from '../util/assert';\nimport { isNegativeZero } from '../util/types';\n\nimport { DirectionalIndexByteEncoder } from './directional_index_byte_encoder';\n\n// Note: This code is copied from the backend. Code that is not used by\n// Firestore was removed.\n\nconst INDEX_TYPE_NULL = 5;\nconst INDEX_TYPE_BOOLEAN = 10;\nconst INDEX_TYPE_NAN = 13;\nconst INDEX_TYPE_NUMBER = 15;\nconst INDEX_TYPE_TIMESTAMP = 20;\nconst INDEX_TYPE_STRING = 25;\nconst INDEX_TYPE_BLOB = 30;\nconst INDEX_TYPE_REFERENCE = 37;\nconst INDEX_TYPE_GEOPOINT = 45;\nconst INDEX_TYPE_ARRAY = 50;\nconst INDEX_TYPE_MAP = 55;\nconst INDEX_TYPE_REFERENCE_SEGMENT = 60;\n\n// A terminator that indicates that a truncatable value was not truncated.\n// This must be smaller than all other type labels.\nconst NOT_TRUNCATED = 2;\n\n/** Firestore index value writer.  */\nexport class FirestoreIndexValueWriter {\n  static INSTANCE = new FirestoreIndexValueWriter();\n\n  private constructor() {}\n\n  // The write methods below short-circuit writing terminators for values\n  // containing a (terminating) truncated value.\n  //\n  // As an example, consider the resulting encoding for:\n  //\n  // [\"bar\", [2, \"foo\"]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TERM, TERM, TERM)\n  // [\"bar\", [2, truncated(\"foo\")]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TRUNC)\n  // [\"bar\", truncated([\"foo\"])] -> (STRING, \"bar\", TERM, ARRAY. STRING, \"foo\", TERM, TRUNC)\n\n  /** Writes an index value.  */\n  writeIndexValue(value: Value, encoder: DirectionalIndexByteEncoder): void {\n    this.writeIndexValueAux(value, encoder);\n    // Write separator to split index values\n    // (see go/firestore-storage-format#encodings).\n    encoder.writeInfinity();\n  }\n\n  private writeIndexValueAux(\n    indexValue: Value,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    if ('nullValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_NULL);\n    } else if ('booleanValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_BOOLEAN);\n      encoder.writeNumber(indexValue.booleanValue ? 1 : 0);\n    } else if ('integerValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n      encoder.writeNumber(normalizeNumber(indexValue.integerValue));\n    } else if ('doubleValue' in indexValue) {\n      const n = normalizeNumber(indexValue.doubleValue);\n      if (isNaN(n)) {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_NAN);\n      } else {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n        if (isNegativeZero(n)) {\n          // -0.0, 0 and 0.0 are all considered the same\n          encoder.writeNumber(0.0);\n        } else {\n          encoder.writeNumber(n);\n        }\n      }\n    } else if ('timestampValue' in indexValue) {\n      let timestamp = indexValue.timestampValue!;\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_TIMESTAMP);\n      if (typeof timestamp === 'string') {\n        timestamp = normalizeTimestamp(timestamp);\n      }\n      encoder.writeString(`${timestamp.seconds || ''}`);\n      encoder.writeNumber(timestamp.nanos || 0);\n    } else if ('stringValue' in indexValue) {\n      this.writeIndexString(indexValue.stringValue!, encoder);\n      this.writeTruncationMarker(encoder);\n    } else if ('bytesValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_BLOB);\n      encoder.writeBytes(normalizeByteString(indexValue.bytesValue!));\n      this.writeTruncationMarker(encoder);\n    } else if ('referenceValue' in indexValue) {\n      this.writeIndexEntityRef(indexValue.referenceValue!, encoder);\n    } else if ('geoPointValue' in indexValue) {\n      const geoPoint = indexValue.geoPointValue!;\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_GEOPOINT);\n      encoder.writeNumber(geoPoint.latitude || 0);\n      encoder.writeNumber(geoPoint.longitude || 0);\n    } else if ('mapValue' in indexValue) {\n      if (isMaxValue(indexValue)) {\n        this.writeValueTypeLabel(encoder, Number.MAX_SAFE_INTEGER);\n      } else {\n        this.writeIndexMap(indexValue.mapValue!, encoder);\n        this.writeTruncationMarker(encoder);\n      }\n    } else if ('arrayValue' in indexValue) {\n      this.writeIndexArray(indexValue.arrayValue!, encoder);\n      this.writeTruncationMarker(encoder);\n    } else {\n      fail('unknown index value type ' + indexValue);\n    }\n  }\n\n  private writeIndexString(\n    stringIndexValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_STRING);\n    this.writeUnlabeledIndexString(stringIndexValue, encoder);\n  }\n\n  private writeUnlabeledIndexString(\n    stringIndexValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    encoder.writeString(stringIndexValue);\n  }\n\n  private writeIndexMap(\n    mapIndexValue: MapValue,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    const map = mapIndexValue.fields || {};\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_MAP);\n    for (const key of Object.keys(map)) {\n      this.writeIndexString(key, encoder);\n      this.writeIndexValueAux(map[key], encoder);\n    }\n  }\n\n  private writeIndexArray(\n    arrayIndexValue: ArrayValue,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    const values = arrayIndexValue.values || [];\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_ARRAY);\n    for (const element of values) {\n      this.writeIndexValueAux(element, encoder);\n    }\n  }\n\n  private writeIndexEntityRef(\n    referenceValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE);\n    const path = DocumentKey.fromName(referenceValue).path;\n    path.forEach(segment => {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE_SEGMENT);\n      this.writeUnlabeledIndexString(segment, encoder);\n    });\n  }\n\n  private writeValueTypeLabel(\n    encoder: DirectionalIndexByteEncoder,\n    typeOrder: number\n  ): void {\n    encoder.writeNumber(typeOrder);\n  }\n\n  private writeTruncationMarker(encoder: DirectionalIndexByteEncoder): void {\n    // While the SDK does not implement truncation, the truncation marker is\n    // used to terminate all variable length values (which are strings, bytes,\n    // references, arrays and maps).\n    encoder.writeNumber(NOT_TRUNCATED);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport {\n  canonifyTarget,\n  newTarget,\n  Target,\n  targetEquals,\n  targetGetArrayValues,\n  targetGetLowerBound,\n  targetGetNotInValues,\n  targetGetSegmentCount,\n  targetGetUpperBound,\n  targetHasLimit\n} from '../core/target';\nimport { FirestoreIndexValueWriter } from '../index/firestore_index_value_writer';\nimport { IndexByteEncoder } from '../index/index_byte_encoder';\nimport { IndexEntry, indexEntryComparator } from '../index/index_entry';\nimport { documentKeySet, DocumentMap } from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  fieldIndexGetArraySegment,\n  fieldIndexGetDirectionalSegments,\n  fieldIndexGetKeyOrder,\n  fieldIndexToString,\n  IndexKind,\n  IndexOffset,\n  indexOffsetComparator,\n  IndexSegment\n} from '../model/field_index';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport { TargetIndexMatcher } from '../model/target_index_matcher';\nimport { isArray, refValue } from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { logDebug } from '../util/log';\nimport { getDnfTerms } from '../util/logic_utils';\nimport { immediateSuccessor, primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { diffSortedSets, SortedSet } from '../util/sorted_set';\n\nimport {\n  decodeResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport { IndexManager, IndexType } from './index_manager';\nimport {\n  DbCollectionParent,\n  DbIndexConfiguration,\n  DbIndexEntry,\n  DbIndexState\n} from './indexeddb_schema';\nimport {\n  DbCollectionParentKey,\n  DbCollectionParentStore,\n  DbIndexConfigurationCollectionGroupIndex,\n  DbIndexConfigurationKey,\n  DbIndexConfigurationStore,\n  DbIndexEntryDocumentKeyIndex,\n  DbIndexEntryKey,\n  DbIndexEntryStore,\n  DbIndexStateKey,\n  DbIndexStateSequenceNumberIndex,\n  DbIndexStateStore\n} from './indexeddb_sentinels';\nimport { getStore } from './indexeddb_transaction';\nimport {\n  fromDbIndexConfiguration,\n  toDbIndexConfiguration,\n  toDbIndexState\n} from './local_serializer';\nimport { MemoryCollectionParentIndex } from './memory_index_manager';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { SimpleDbStore } from './simple_db';\n\nconst LOG_TAG = 'IndexedDbIndexManager';\n\nconst EMPTY_VALUE = new Uint8Array(0);\n\n/**\n * A persisted implementation of IndexManager.\n *\n * PORTING NOTE: Unlike iOS and Android, the Web SDK does not memoize index\n * data as it supports multi-tab access.\n */\nexport class IndexedDbIndexManager implements IndexManager {\n  /**\n   * An in-memory copy of the index entries we've already written since the SDK\n   * launched. Used to avoid re-writing the same entry repeatedly.\n   *\n   * This is *NOT* a complete cache of what's in persistence and so can never be\n   * used to satisfy reads.\n   */\n  private collectionParentsCache = new MemoryCollectionParentIndex();\n\n  private readonly uid: string;\n\n  /**\n   * Maps from a target to its equivalent list of sub-targets. Each sub-target\n   * contains only one term from the target's disjunctive normal form (DNF).\n   */\n  private targetToDnfSubTargets = new ObjectMap<Target, Target[]>(\n    t => canonifyTarget(t),\n    (l, r) => targetEquals(l, r)\n  );\n\n  constructor(user: User, private readonly databaseId: DatabaseId) {\n    this.uid = user.uid || '';\n  }\n\n  /**\n   * Adds a new entry to the collection parent index.\n   *\n   * Repeated calls for the same collectionPath should be avoided within a\n   * transaction as IndexedDbIndexManager only caches writes once a transaction\n   * has been committed.\n   */\n  addToCollectionParentIndex(\n    transaction: PersistenceTransaction,\n    collectionPath: ResourcePath\n  ): PersistencePromise<void> {\n    debugAssert(collectionPath.length % 2 === 1, 'Expected a collection path.');\n    if (!this.collectionParentsCache.has(collectionPath)) {\n      const collectionId = collectionPath.lastSegment();\n      const parentPath = collectionPath.popLast();\n\n      transaction.addOnCommittedListener(() => {\n        // Add the collection to the in memory cache only if the transaction was\n        // successfully committed.\n        this.collectionParentsCache.add(collectionPath);\n      });\n\n      const collectionParent: DbCollectionParent = {\n        collectionId,\n        parent: encodeResourcePath(parentPath)\n      };\n      return collectionParentsStore(transaction).put(collectionParent);\n    }\n    return PersistencePromise.resolve();\n  }\n\n  getCollectionParents(\n    transaction: PersistenceTransaction,\n    collectionId: string\n  ): PersistencePromise<ResourcePath[]> {\n    const parentPaths = [] as ResourcePath[];\n    const range = IDBKeyRange.bound(\n      [collectionId, ''],\n      [immediateSuccessor(collectionId), ''],\n      /*lowerOpen=*/ false,\n      /*upperOpen=*/ true\n    );\n    return collectionParentsStore(transaction)\n      .loadAll(range)\n      .next(entries => {\n        for (const entry of entries) {\n          // This collectionId guard shouldn't be necessary (and isn't as long\n          // as we're running in a real browser), but there's a bug in\n          // indexeddbshim that breaks our range in our tests running in node:\n          // https://github.com/axemclion/IndexedDBShim/issues/334\n          if (entry.collectionId !== collectionId) {\n            break;\n          }\n          parentPaths.push(decodeResourcePath(entry.parent));\n        }\n        return parentPaths;\n      });\n  }\n\n  addFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    // TODO(indexing): Verify that the auto-incrementing index ID works in\n    // Safari & Firefox.\n    const indexes = indexConfigurationStore(transaction);\n    const dbIndex = toDbIndexConfiguration(index);\n    delete dbIndex.indexId; // `indexId` is auto-populated by IndexedDb\n    const result = indexes.add(dbIndex);\n    if (index.indexState) {\n      const states = indexStateStore(transaction);\n      return result.next(indexId => {\n        states.put(\n          toDbIndexState(\n            indexId,\n            this.uid,\n            index.indexState.sequenceNumber,\n            index.indexState.offset\n          )\n        );\n      });\n    } else {\n      return result.next();\n    }\n  }\n\n  deleteFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n    const entries = indexEntriesStore(transaction);\n    return indexes\n      .delete(index.indexId)\n      .next(() =>\n        states.delete(\n          IDBKeyRange.bound(\n            [index.indexId],\n            [index.indexId + 1],\n            /*lowerOpen=*/ false,\n            /*upperOpen=*/ true\n          )\n        )\n      )\n      .next(() =>\n        entries.delete(\n          IDBKeyRange.bound(\n            [index.indexId],\n            [index.indexId + 1],\n            /*lowerOpen=*/ false,\n            /*upperOpen=*/ true\n          )\n        )\n      );\n  }\n\n  deleteAllFieldIndexes(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const entries = indexEntriesStore(transaction);\n    const states = indexStateStore(transaction);\n\n    return indexes\n      .deleteAll()\n      .next(() => entries.deleteAll())\n      .next(() => states.deleteAll());\n  }\n\n  createTargetIndexes(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<void> {\n    return PersistencePromise.forEach(\n      this.getSubTargets(target),\n      (subTarget: Target) => {\n        return this.getIndexType(transaction, subTarget).next(type => {\n          if (type === IndexType.NONE || type === IndexType.PARTIAL) {\n            const targetIndexMatcher = new TargetIndexMatcher(subTarget);\n            const fieldIndex = targetIndexMatcher.buildTargetIndex();\n            if (fieldIndex != null) {\n              return this.addFieldIndex(transaction, fieldIndex);\n            }\n          }\n        });\n      }\n    );\n  }\n\n  getDocumentsMatchingTarget(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<DocumentKey[] | null> {\n    const indexEntries = indexEntriesStore(transaction);\n\n    let canServeTarget = true;\n    const indexes = new Map<Target, FieldIndex | null>();\n\n    return PersistencePromise.forEach(\n      this.getSubTargets(target),\n      (subTarget: Target) => {\n        return this.getFieldIndex(transaction, subTarget).next(index => {\n          canServeTarget &&= !!index;\n          indexes.set(subTarget, index);\n        });\n      }\n    ).next(() => {\n      if (!canServeTarget) {\n        return PersistencePromise.resolve(null as DocumentKey[] | null);\n      } else {\n        let existingKeys = documentKeySet();\n        const result: DocumentKey[] = [];\n        return PersistencePromise.forEach(indexes, (index, subTarget) => {\n          logDebug(\n            LOG_TAG,\n            `Using index ${fieldIndexToString(\n              index!\n            )} to execute ${canonifyTarget(target)}`\n          );\n\n          const arrayValues = targetGetArrayValues(subTarget, index!);\n          const notInValues = targetGetNotInValues(subTarget, index!);\n          const lowerBound = targetGetLowerBound(subTarget, index!);\n          const upperBound = targetGetUpperBound(subTarget, index!);\n\n          const lowerBoundEncoded = this.encodeBound(\n            index!,\n            subTarget,\n            lowerBound\n          );\n          const upperBoundEncoded = this.encodeBound(\n            index!,\n            subTarget,\n            upperBound\n          );\n          const notInEncoded = this.encodeValues(\n            index!,\n            subTarget,\n            notInValues\n          );\n\n          const indexRanges = this.generateIndexRanges(\n            index!.indexId,\n            arrayValues,\n            lowerBoundEncoded,\n            lowerBound.inclusive,\n            upperBoundEncoded,\n            upperBound.inclusive,\n            notInEncoded\n          );\n          return PersistencePromise.forEach(\n            indexRanges,\n            (indexRange: IDBKeyRange) => {\n              return indexEntries\n                .loadFirst(indexRange, target.limit)\n                .next(entries => {\n                  entries.forEach(entry => {\n                    const documentKey = DocumentKey.fromSegments(\n                      entry.documentKey\n                    );\n                    if (!existingKeys.has(documentKey)) {\n                      existingKeys = existingKeys.add(documentKey);\n                      result.push(documentKey);\n                    }\n                  });\n                });\n            }\n          );\n        }).next(() => result as DocumentKey[] | null);\n      }\n    });\n  }\n\n  private getSubTargets(target: Target): Target[] {\n    let subTargets = this.targetToDnfSubTargets.get(target);\n    if (subTargets) {\n      return subTargets;\n    }\n\n    if (target.filters.length === 0) {\n      subTargets = [target];\n    } else {\n      // There is an implicit AND operation between all the filters stored in the target\n      const dnf: Filter[] = getDnfTerms(\n        CompositeFilter.create(target.filters, CompositeOperator.AND)\n      );\n\n      subTargets = dnf.map(term =>\n        newTarget(\n          target.path,\n          target.collectionGroup,\n          target.orderBy,\n          term.getFilters(),\n          target.limit,\n          target.startAt,\n          target.endAt\n        )\n      );\n    }\n\n    this.targetToDnfSubTargets.set(target, subTargets);\n    return subTargets;\n  }\n\n  /**\n   * Constructs a key range query on `DbIndexEntryStore` that unions all\n   * bounds.\n   */\n  private generateIndexRanges(\n    indexId: number,\n    arrayValues: ProtoValue[] | null,\n    lowerBounds: Uint8Array[],\n    lowerBoundInclusive: boolean,\n    upperBounds: Uint8Array[],\n    upperBoundInclusive: boolean,\n    notInValues: Uint8Array[]\n  ): IDBKeyRange[] {\n    // The number of total index scans we union together. This is similar to a\n    // distributed normal form, but adapted for array values. We create a single\n    // index range per value in an ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filter\n    // combined with the values from the query bounds.\n    const totalScans =\n      (arrayValues != null ? arrayValues.length : 1) *\n      Math.max(lowerBounds.length, upperBounds.length);\n    const scansPerArrayElement =\n      totalScans / (arrayValues != null ? arrayValues.length : 1);\n\n    const indexRanges: IDBKeyRange[] = [];\n    for (let i = 0; i < totalScans; ++i) {\n      const arrayValue = arrayValues\n        ? this.encodeSingleElement(arrayValues[i / scansPerArrayElement])\n        : EMPTY_VALUE;\n\n      const lowerBound = this.generateLowerBound(\n        indexId,\n        arrayValue,\n        lowerBounds[i % scansPerArrayElement],\n        lowerBoundInclusive\n      );\n      const upperBound = this.generateUpperBound(\n        indexId,\n        arrayValue,\n        upperBounds[i % scansPerArrayElement],\n        upperBoundInclusive\n      );\n\n      const notInBound = notInValues.map(notIn =>\n        this.generateLowerBound(\n          indexId,\n          arrayValue,\n          notIn,\n          /* inclusive= */ true\n        )\n      );\n\n      indexRanges.push(...this.createRange(lowerBound, upperBound, notInBound));\n    }\n\n    return indexRanges;\n  }\n\n  /** Generates the lower bound for `arrayValue` and `directionalValue`. */\n  private generateLowerBound(\n    indexId: number,\n    arrayValue: Uint8Array,\n    directionalValue: Uint8Array,\n    inclusive: boolean\n  ): IndexEntry {\n    const entry = new IndexEntry(\n      indexId,\n      DocumentKey.empty(),\n      arrayValue,\n      directionalValue\n    );\n    return inclusive ? entry : entry.successor();\n  }\n\n  /** Generates the upper bound for `arrayValue` and `directionalValue`. */\n  private generateUpperBound(\n    indexId: number,\n    arrayValue: Uint8Array,\n    directionalValue: Uint8Array,\n    inclusive: boolean\n  ): IndexEntry {\n    const entry = new IndexEntry(\n      indexId,\n      DocumentKey.empty(),\n      arrayValue,\n      directionalValue\n    );\n    return inclusive ? entry.successor() : entry;\n  }\n\n  private getFieldIndex(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<FieldIndex | null> {\n    const targetIndexMatcher = new TargetIndexMatcher(target);\n    const collectionGroup =\n      target.collectionGroup != null\n        ? target.collectionGroup\n        : target.path.lastSegment();\n\n    return this.getFieldIndexes(transaction, collectionGroup).next(indexes => {\n      // Return the index with the most number of segments.\n      let index: FieldIndex | null = null;\n      for (const candidate of indexes) {\n        const matches = targetIndexMatcher.servedByIndex(candidate);\n        if (\n          matches &&\n          (!index || candidate.fields.length > index.fields.length)\n        ) {\n          index = candidate;\n        }\n      }\n      return index;\n    });\n  }\n\n  getIndexType(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexType> {\n    let indexType = IndexType.FULL;\n    const subTargets = this.getSubTargets(target);\n    return PersistencePromise.forEach(subTargets, (target: Target) => {\n      return this.getFieldIndex(transaction, target).next(index => {\n        if (!index) {\n          indexType = IndexType.NONE;\n        } else if (\n          indexType !== IndexType.NONE &&\n          index.fields.length < targetGetSegmentCount(target)\n        ) {\n          indexType = IndexType.PARTIAL;\n        }\n      });\n    }).next(() => {\n      // OR queries have more than one sub-target (one sub-target per DNF term). We currently consider\n      // OR queries that have a `limit` to have a partial index. For such queries we perform sorting\n      // and apply the limit in memory as a post-processing step.\n      if (\n        targetHasLimit(target) &&\n        subTargets.length > 1 &&\n        indexType === IndexType.FULL\n      ) {\n        return IndexType.PARTIAL;\n      }\n\n      return indexType;\n    });\n  }\n\n  /**\n   * Returns the byte encoded form of the directional values in the field index.\n   * Returns `null` if the document does not have all fields specified in the\n   * index.\n   */\n  private encodeDirectionalElements(\n    fieldIndex: FieldIndex,\n    document: Document\n  ): Uint8Array | null {\n    const encoder = new IndexByteEncoder();\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n      const field = document.data.field(segment.fieldPath);\n      if (field == null) {\n        return null;\n      }\n      const directionalEncoder = encoder.forKind(segment.kind);\n      FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n        field,\n        directionalEncoder\n      );\n    }\n    return encoder.encodedBytes();\n  }\n\n  /** Encodes a single value to the ascending index format. */\n  private encodeSingleElement(value: ProtoValue): Uint8Array {\n    const encoder = new IndexByteEncoder();\n    FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n      value,\n      encoder.forKind(IndexKind.ASCENDING)\n    );\n    return encoder.encodedBytes();\n  }\n\n  /**\n   * Returns an encoded form of the document key that sorts based on the key\n   * ordering of the field index.\n   */\n  private encodeDirectionalKey(\n    fieldIndex: FieldIndex,\n    documentKey: DocumentKey\n  ): Uint8Array {\n    const encoder = new IndexByteEncoder();\n    FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n      refValue(this.databaseId, documentKey),\n      encoder.forKind(fieldIndexGetKeyOrder(fieldIndex))\n    );\n    return encoder.encodedBytes();\n  }\n\n  /**\n   * Encodes the given field values according to the specification in `target`.\n   * For IN queries, a list of possible values is returned.\n   */\n  private encodeValues(\n    fieldIndex: FieldIndex,\n    target: Target,\n    values: ProtoValue[] | null\n  ): Uint8Array[] {\n    if (values === null) {\n      return [];\n    }\n\n    let encoders: IndexByteEncoder[] = [];\n    encoders.push(new IndexByteEncoder());\n\n    let valueIdx = 0;\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n      const value = values[valueIdx++];\n      for (const encoder of encoders) {\n        if (this.isInFilter(target, segment.fieldPath) && isArray(value)) {\n          encoders = this.expandIndexValues(encoders, segment, value);\n        } else {\n          const directionalEncoder = encoder.forKind(segment.kind);\n          FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n            value,\n            directionalEncoder\n          );\n        }\n      }\n    }\n    return this.getEncodedBytes(encoders);\n  }\n\n  /**\n   * Encodes the given bounds according to the specification in `target`. For IN\n   * queries, a list of possible values is returned.\n   */\n  private encodeBound(\n    fieldIndex: FieldIndex,\n    target: Target,\n    bound: Bound\n  ): Uint8Array[] {\n    return this.encodeValues(fieldIndex, target, bound.position);\n  }\n\n  /** Returns the byte representation for the provided encoders. */\n  private getEncodedBytes(encoders: IndexByteEncoder[]): Uint8Array[] {\n    const result: Uint8Array[] = [];\n    for (let i = 0; i < encoders.length; ++i) {\n      result[i] = encoders[i].encodedBytes();\n    }\n    return result;\n  }\n\n  /**\n   * Creates a separate encoder for each element of an array.\n   *\n   * The method appends each value to all existing encoders (e.g. filter(\"a\",\n   * \"==\", \"a1\").filter(\"b\", \"in\", [\"b1\", \"b2\"]) becomes [\"a1,b1\", \"a1,b2\"]). A\n   * list of new encoders is returned.\n   */\n  private expandIndexValues(\n    encoders: IndexByteEncoder[],\n    segment: IndexSegment,\n    value: ProtoValue\n  ): IndexByteEncoder[] {\n    const prefixes = [...encoders];\n    const results: IndexByteEncoder[] = [];\n    for (const arrayElement of value.arrayValue!.values || []) {\n      for (const prefix of prefixes) {\n        const clonedEncoder = new IndexByteEncoder();\n        clonedEncoder.seed(prefix.encodedBytes());\n        FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n          arrayElement,\n          clonedEncoder.forKind(segment.kind)\n        );\n        results.push(clonedEncoder);\n      }\n    }\n    return results;\n  }\n\n  private isInFilter(target: Target, fieldPath: FieldPath): boolean {\n    return !!target.filters.find(\n      f =>\n        f instanceof FieldFilter &&\n        f.field.isEqual(fieldPath) &&\n        (f.op === Operator.IN || f.op === Operator.NOT_IN)\n    );\n  }\n\n  getFieldIndexes(\n    transaction: PersistenceTransaction,\n    collectionGroup?: string\n  ): PersistencePromise<FieldIndex[]> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n\n    return (\n      collectionGroup\n        ? indexes.loadAll(\n            DbIndexConfigurationCollectionGroupIndex,\n            IDBKeyRange.bound(collectionGroup, collectionGroup)\n          )\n        : indexes.loadAll()\n    ).next(indexConfigs => {\n      const result: FieldIndex[] = [];\n      return PersistencePromise.forEach(\n        indexConfigs,\n        (indexConfig: DbIndexConfiguration) => {\n          return states\n            .get([indexConfig.indexId!, this.uid])\n            .next(indexState => {\n              result.push(fromDbIndexConfiguration(indexConfig, indexState));\n            });\n        }\n      ).next(() => result);\n    });\n  }\n\n  getNextCollectionGroupToUpdate(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<string | null> {\n    return this.getFieldIndexes(transaction).next(indexes => {\n      if (indexes.length === 0) {\n        return null;\n      }\n      indexes.sort((l, r) => {\n        const cmp = l.indexState.sequenceNumber - r.indexState.sequenceNumber;\n        return cmp !== 0\n          ? cmp\n          : primitiveComparator(l.collectionGroup, r.collectionGroup);\n      });\n      return indexes[0].collectionGroup;\n    });\n  }\n\n  updateCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n    return this.getNextSequenceNumber(transaction).next(nextSequenceNumber =>\n      indexes\n        .loadAll(\n          DbIndexConfigurationCollectionGroupIndex,\n          IDBKeyRange.bound(collectionGroup, collectionGroup)\n        )\n        .next(configs =>\n          PersistencePromise.forEach(configs, (config: DbIndexConfiguration) =>\n            states.put(\n              toDbIndexState(\n                config.indexId!,\n                this.uid,\n                nextSequenceNumber,\n                offset\n              )\n            )\n          )\n        )\n    );\n  }\n\n  updateIndexEntries(\n    transaction: PersistenceTransaction,\n    documents: DocumentMap\n  ): PersistencePromise<void> {\n    // Porting Note: `getFieldIndexes()` on Web does not cache index lookups as\n    // it could be used across different IndexedDB transactions. As any cached\n    // data might be invalidated by other multi-tab clients, we can only trust\n    // data within a single IndexedDB transaction. We therefore add a cache\n    // here.\n    const memoizedIndexes = new Map<string, FieldIndex[]>();\n    return PersistencePromise.forEach(documents, (key, doc) => {\n      const memoizedCollectionIndexes = memoizedIndexes.get(\n        key.collectionGroup\n      );\n      const fieldIndexes = memoizedCollectionIndexes\n        ? PersistencePromise.resolve(memoizedCollectionIndexes)\n        : this.getFieldIndexes(transaction, key.collectionGroup);\n\n      return fieldIndexes.next(fieldIndexes => {\n        memoizedIndexes.set(key.collectionGroup, fieldIndexes);\n        return PersistencePromise.forEach(\n          fieldIndexes,\n          (fieldIndex: FieldIndex) => {\n            return this.getExistingIndexEntries(\n              transaction,\n              key,\n              fieldIndex\n            ).next(existingEntries => {\n              const newEntries = this.computeIndexEntries(doc, fieldIndex);\n              if (!existingEntries.isEqual(newEntries)) {\n                return this.updateEntries(\n                  transaction,\n                  doc,\n                  fieldIndex,\n                  existingEntries,\n                  newEntries\n                );\n              }\n              return PersistencePromise.resolve();\n            });\n          }\n        );\n      });\n    });\n  }\n\n  private addIndexEntry(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    indexEntry: IndexEntry\n  ): PersistencePromise<void> {\n    const indexEntries = indexEntriesStore(transaction);\n    return indexEntries.put({\n      indexId: indexEntry.indexId,\n      uid: this.uid,\n      arrayValue: indexEntry.arrayValue,\n      directionalValue: indexEntry.directionalValue,\n      orderedDocumentKey: this.encodeDirectionalKey(fieldIndex, document.key),\n      documentKey: document.key.path.toArray()\n    });\n  }\n\n  private deleteIndexEntry(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    indexEntry: IndexEntry\n  ): PersistencePromise<void> {\n    const indexEntries = indexEntriesStore(transaction);\n    return indexEntries.delete([\n      indexEntry.indexId,\n      this.uid,\n      indexEntry.arrayValue,\n      indexEntry.directionalValue,\n      this.encodeDirectionalKey(fieldIndex, document.key),\n      document.key.path.toArray()\n    ]);\n  }\n\n  private getExistingIndexEntries(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey,\n    fieldIndex: FieldIndex\n  ): PersistencePromise<SortedSet<IndexEntry>> {\n    const indexEntries = indexEntriesStore(transaction);\n    let results = new SortedSet<IndexEntry>(indexEntryComparator);\n    return indexEntries\n      .iterate(\n        {\n          index: DbIndexEntryDocumentKeyIndex,\n          range: IDBKeyRange.only([\n            fieldIndex.indexId,\n            this.uid,\n            this.encodeDirectionalKey(fieldIndex, documentKey)\n          ])\n        },\n        (_, entry) => {\n          results = results.add(\n            new IndexEntry(\n              fieldIndex.indexId,\n              documentKey,\n              entry.arrayValue,\n              entry.directionalValue\n            )\n          );\n        }\n      )\n      .next(() => results);\n  }\n\n  /** Creates the index entries for the given document. */\n  private computeIndexEntries(\n    document: Document,\n    fieldIndex: FieldIndex\n  ): SortedSet<IndexEntry> {\n    let results = new SortedSet<IndexEntry>(indexEntryComparator);\n\n    const directionalValue = this.encodeDirectionalElements(\n      fieldIndex,\n      document\n    );\n    if (directionalValue == null) {\n      return results;\n    }\n\n    const arraySegment = fieldIndexGetArraySegment(fieldIndex);\n    if (arraySegment != null) {\n      const value = document.data.field(arraySegment.fieldPath);\n      if (isArray(value)) {\n        for (const arrayValue of value.arrayValue!.values || []) {\n          results = results.add(\n            new IndexEntry(\n              fieldIndex.indexId,\n              document.key,\n              this.encodeSingleElement(arrayValue),\n              directionalValue\n            )\n          );\n        }\n      }\n    } else {\n      results = results.add(\n        new IndexEntry(\n          fieldIndex.indexId,\n          document.key,\n          EMPTY_VALUE,\n          directionalValue\n        )\n      );\n    }\n\n    return results;\n  }\n\n  /**\n   * Updates the index entries for the provided document by deleting entries\n   * that are no longer referenced in `newEntries` and adding all newly added\n   * entries.\n   */\n  private updateEntries(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    existingEntries: SortedSet<IndexEntry>,\n    newEntries: SortedSet<IndexEntry>\n  ): PersistencePromise<void> {\n    logDebug(LOG_TAG, \"Updating index entries for document '%s'\", document.key);\n\n    const promises: Array<PersistencePromise<void>> = [];\n    diffSortedSets(\n      existingEntries,\n      newEntries,\n      indexEntryComparator,\n      /* onAdd= */ entry => {\n        promises.push(\n          this.addIndexEntry(transaction, document, fieldIndex, entry)\n        );\n      },\n      /* onRemove= */ entry => {\n        promises.push(\n          this.deleteIndexEntry(transaction, document, fieldIndex, entry)\n        );\n      }\n    );\n\n    return PersistencePromise.waitFor(promises);\n  }\n\n  private getNextSequenceNumber(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<number> {\n    let nextSequenceNumber = 1;\n    const states = indexStateStore(transaction);\n    return states\n      .iterate(\n        {\n          index: DbIndexStateSequenceNumberIndex,\n          reverse: true,\n          range: IDBKeyRange.upperBound([this.uid, Number.MAX_SAFE_INTEGER])\n        },\n        (_, state, controller) => {\n          controller.done();\n          nextSequenceNumber = state.sequenceNumber + 1;\n        }\n      )\n      .next(() => nextSequenceNumber);\n  }\n\n  /**\n   * Returns a new set of IDB ranges that splits the existing range and excludes\n   * any values that match the `notInValue` from these ranges. As an example,\n   * '[foo > 2 && foo != 3]` becomes  `[foo > 2 && < 3, foo > 3]`.\n   */\n  private createRange(\n    lower: IndexEntry,\n    upper: IndexEntry,\n    notInValues: IndexEntry[]\n  ): IDBKeyRange[] {\n    // The notIn values need to be sorted and unique so that we can return a\n    // sorted set of non-overlapping ranges.\n    notInValues = notInValues\n      .sort((l, r) => indexEntryComparator(l, r))\n      .filter(\n        (el, i, values) => !i || indexEntryComparator(el, values[i - 1]) !== 0\n      );\n\n    const bounds: IndexEntry[] = [];\n    bounds.push(lower);\n    for (const notInValue of notInValues) {\n      const cmpToLower = indexEntryComparator(notInValue, lower);\n      const cmpToUpper = indexEntryComparator(notInValue, upper);\n\n      if (cmpToLower === 0) {\n        // `notInValue` is the lower bound. We therefore need to raise the bound\n        // to the next value.\n        bounds[0] = lower.successor();\n      } else if (cmpToLower > 0 && cmpToUpper < 0) {\n        // `notInValue` is in the middle of the range\n        bounds.push(notInValue);\n        bounds.push(notInValue.successor());\n      } else if (cmpToUpper > 0) {\n        // `notInValue` (and all following values) are out of the range\n        break;\n      }\n    }\n    bounds.push(upper);\n\n    const ranges: IDBKeyRange[] = [];\n    for (let i = 0; i < bounds.length; i += 2) {\n      // If we encounter two bounds that will create an unmatchable key range,\n      // then we return an empty set of key ranges.\n      if (this.isRangeMatchable(bounds[i], bounds[i + 1])) {\n        return [];\n      }\n\n      const lowerBound = [\n        bounds[i].indexId,\n        this.uid,\n        bounds[i].arrayValue,\n        bounds[i].directionalValue,\n        EMPTY_VALUE,\n        []\n      ] as DbIndexEntryKey;\n\n      const upperBound = [\n        bounds[i + 1].indexId,\n        this.uid,\n        bounds[i + 1].arrayValue,\n        bounds[i + 1].directionalValue,\n        EMPTY_VALUE,\n        []\n      ] as DbIndexEntryKey;\n\n      ranges.push(IDBKeyRange.bound(lowerBound, upperBound));\n    }\n    return ranges;\n  }\n\n  isRangeMatchable(lowerBound: IndexEntry, upperBound: IndexEntry): boolean {\n    // If lower bound is greater than the upper bound, then the key\n    // range can never be matched.\n    return indexEntryComparator(lowerBound, upperBound) > 0;\n  }\n\n  getMinOffsetFromCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string\n  ): PersistencePromise<IndexOffset> {\n    return this.getFieldIndexes(transaction, collectionGroup).next(\n      getMinOffsetFromFieldIndexes\n    );\n  }\n\n  getMinOffset(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexOffset> {\n    return PersistencePromise.mapArray(\n      this.getSubTargets(target),\n      (subTarget: Target) =>\n        this.getFieldIndex(transaction, subTarget).next(index =>\n          index ? index : fail('Target cannot be served from index')\n        )\n    ).next(getMinOffsetFromFieldIndexes);\n  }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */\nfunction collectionParentsStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbCollectionParentKey, DbCollectionParent> {\n  return getStore<DbCollectionParentKey, DbCollectionParent>(\n    txn,\n    DbCollectionParentStore\n  );\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index entry object store.\n */\nfunction indexEntriesStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexEntryKey, DbIndexEntry> {\n  return getStore<DbIndexEntryKey, DbIndexEntry>(txn, DbIndexEntryStore);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index configuration object store.\n */\nfunction indexConfigurationStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexConfigurationKey, DbIndexConfiguration> {\n  return getStore<DbIndexConfigurationKey, DbIndexConfiguration>(\n    txn,\n    DbIndexConfigurationStore\n  );\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index state object store.\n */\nfunction indexStateStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexStateKey, DbIndexState> {\n  return getStore<DbIndexStateKey, DbIndexState>(txn, DbIndexStateStore);\n}\n\nfunction getMinOffsetFromFieldIndexes(fieldIndexes: FieldIndex[]): IndexOffset {\n  hardAssert(\n    fieldIndexes.length !== 0,\n    'Found empty index group when looking for least recent index offset.'\n  );\n\n  let minOffset: IndexOffset = fieldIndexes[0].indexState.offset;\n  let maxBatchId: number = minOffset.largestBatchId;\n  for (let i = 1; i < fieldIndexes.length; i++) {\n    const newOffset: IndexOffset = fieldIndexes[i].indexState.offset;\n    if (indexOffsetComparator(newOffset, minOffset) < 0) {\n      minOffset = newOffset;\n    }\n    if (maxBatchId < newOffset.largestBatchId) {\n      maxBatchId = newOffset.largestBatchId;\n    }\n  }\n  return new IndexOffset(minOffset.readTime, minOffset.documentKey, maxBatchId);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { TargetData } from './target_data';\n\n/**\n * Describes a map whose keys are active target ids. We do not care about the type of the\n * values.\n */\nexport type ActiveTargets = SortedMap<TargetId, unknown>;\n\nexport const GC_DID_NOT_RUN: LruResults = {\n  didRun: false,\n  sequenceNumbersCollected: 0,\n  targetsRemoved: 0,\n  documentsRemoved: 0\n};\n\nexport const LRU_COLLECTION_DISABLED = -1;\nexport const LRU_DEFAULT_CACHE_SIZE_BYTES = 40 * 1024 * 1024;\n\nexport class LruParams {\n  private static readonly DEFAULT_COLLECTION_PERCENTILE = 10;\n  private static readonly DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1000;\n\n  static withCacheSize(cacheSize: number): LruParams {\n    return new LruParams(\n      cacheSize,\n      LruParams.DEFAULT_COLLECTION_PERCENTILE,\n      LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\n    );\n  }\n\n  static readonly DEFAULT: LruParams = new LruParams(\n    LRU_DEFAULT_CACHE_SIZE_BYTES,\n    LruParams.DEFAULT_COLLECTION_PERCENTILE,\n    LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\n  );\n\n  static readonly DISABLED: LruParams = new LruParams(\n    LRU_COLLECTION_DISABLED,\n    0,\n    0\n  );\n\n  constructor(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    readonly cacheSizeCollectionThreshold: number,\n    // The percentage of sequence numbers that we will attempt to collect\n    readonly percentileToCollect: number,\n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    readonly maximumSequenceNumbersToCollect: number\n  ) {}\n}\n\nexport interface LruGarbageCollector {\n  readonly params: LruParams;\n\n  collect(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults>;\n\n  /** Given a percentile of target to collect, returns the number of targets to collect. */\n  calculateTargetCount(\n    txn: PersistenceTransaction,\n    percentile: number\n  ): PersistencePromise<number>;\n\n  /** Returns the nth sequence number, counting in order from the smallest. */\n  nthSequenceNumber(\n    txn: PersistenceTransaction,\n    n: number\n  ): PersistencePromise<number>;\n\n  /**\n   * Removes documents that have a sequence number equal to or less than the\n   * upper bound and are not otherwise pinned.\n   */\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number>;\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number>;\n\n  /**\n   * Removes targets with a sequence number equal to or less than the given\n   * upper bound, and removes document associations with those targets.\n   */\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number>;\n}\n\n/**\n * Describes the results of a garbage collection run. `didRun` will be set to\n * `false` if collection was skipped (either it is disabled or the cache size\n * has not hit the threshold). If collection ran, the other fields will be\n * filled in with the details of the results.\n */\nexport interface LruResults {\n  readonly didRun: boolean;\n  readonly sequenceNumbersCollected: number;\n  readonly targetsRemoved: number;\n  readonly documentsRemoved: number;\n}\n\n/**\n * Persistence layers intending to use LRU Garbage collection should have\n * reference delegates that implement this interface. This interface defines the\n * operations that the LRU garbage collector needs from the persistence layer.\n */\nexport interface LruDelegate {\n  readonly garbageCollector: LruGarbageCollector;\n\n  /** Enumerates all the targets in the TargetCache. */\n  forEachTarget(\n    txn: PersistenceTransaction,\n    f: (target: TargetData) => void\n  ): PersistencePromise<void>;\n\n  getSequenceNumberCount(\n    txn: PersistenceTransaction\n  ): PersistencePromise<number>;\n\n  /**\n   * Enumerates sequence numbers for documents not associated with a target.\n   * Note that this may include duplicate sequence numbers.\n   */\n  forEachOrphanedDocumentSequenceNumber(\n    txn: PersistenceTransaction,\n    f: (sequenceNumber: ListenSequenceNumber) => void\n  ): PersistencePromise<void>;\n\n  /**\n   * Removes all targets that have a sequence number less than or equal to\n   * `upperBound`, and are not present in the `activeTargetIds` set.\n   *\n   * @returns the number of targets removed.\n   */\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number>;\n\n  /**\n   * Removes all unreferenced documents from the cache that have a sequence\n   * number less than or equal to the given `upperBound`.\n   *\n   * @returns the number of documents removed.\n   */\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number>;\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'window' implementation or null if not available. */\nexport function getWindow(): Window | null {\n  // `window` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' ? window : null;\n}\n\n/** The Platform's 'document' implementation or null if not available. */\nexport function getDocument(): Document | null {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return typeof document !== 'undefined' ? document : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { logDebug } from '../util/log';\n\nconst LOG_TAG = 'ExponentialBackoff';\n\n/**\n * Initial backoff time in milliseconds after an error.\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\n */\nconst DEFAULT_BACKOFF_INITIAL_DELAY_MS = 1000;\n\nconst DEFAULT_BACKOFF_FACTOR = 1.5;\n\n/** Maximum backoff time in milliseconds */\nconst DEFAULT_BACKOFF_MAX_DELAY_MS = 60 * 1000;\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nexport class ExponentialBackoff {\n  private currentBaseMs: number = 0;\n  private timerPromise: DelayedOperation<void> | null = null;\n  /** The last backoff attempt, as epoch milliseconds. */\n  private lastAttemptTime = Date.now();\n\n  constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    private readonly queue: AsyncQueue,\n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    private readonly timerId: TimerId,\n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    private readonly initialDelayMs: number = DEFAULT_BACKOFF_INITIAL_DELAY_MS,\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */\n    private readonly backoffFactor: number = DEFAULT_BACKOFF_FACTOR,\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */\n    private readonly maxDelayMs: number = DEFAULT_BACKOFF_MAX_DELAY_MS\n  ) {\n    this.reset();\n  }\n\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n  reset(): void {\n    this.currentBaseMs = 0;\n  }\n\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n  resetToMax(): void {\n    this.currentBaseMs = this.maxDelayMs;\n  }\n\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n  backoffAndRun(op: () => Promise<void>): void {\n    // Cancel any pending backoff operation.\n    this.cancel();\n\n    // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n    const desiredDelayWithJitterMs = Math.floor(\n      this.currentBaseMs + this.jitterDelayMs()\n    );\n\n    // Guard against lastAttemptTime being in the future due to a clock change.\n    const delaySoFarMs = Math.max(0, Date.now() - this.lastAttemptTime);\n\n    // Guard against the backoff delay already being past.\n    const remainingDelayMs = Math.max(\n      0,\n      desiredDelayWithJitterMs - delaySoFarMs\n    );\n\n    if (remainingDelayMs > 0) {\n      logDebug(\n        LOG_TAG,\n        `Backing off for ${remainingDelayMs} ms ` +\n          `(base delay: ${this.currentBaseMs} ms, ` +\n          `delay with jitter: ${desiredDelayWithJitterMs} ms, ` +\n          `last attempt: ${delaySoFarMs} ms ago)`\n      );\n    }\n\n    this.timerPromise = this.queue.enqueueAfterDelay(\n      this.timerId,\n      remainingDelayMs,\n      () => {\n        this.lastAttemptTime = Date.now();\n        return op();\n      }\n    );\n\n    // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.currentBaseMs *= this.backoffFactor;\n    if (this.currentBaseMs < this.initialDelayMs) {\n      this.currentBaseMs = this.initialDelayMs;\n    }\n    if (this.currentBaseMs > this.maxDelayMs) {\n      this.currentBaseMs = this.maxDelayMs;\n    }\n  }\n\n  skipBackoff(): void {\n    if (this.timerPromise !== null) {\n      this.timerPromise.skipDelay();\n      this.timerPromise = null;\n    }\n  }\n\n  cancel(): void {\n    if (this.timerPromise !== null) {\n      this.timerPromise.cancel();\n      this.timerPromise = null;\n    }\n  }\n\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n  private jitterDelayMs(): number {\n    return (Math.random() - 0.5) * this.currentBaseMs;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIndexedDbTransactionError } from '../local/simple_db';\n\nimport { Code, FirestoreError } from './error';\nimport { logError } from './log';\nimport { Deferred } from './promise';\n\nconst LOG_TAG = 'AsyncQueue';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TimerHandle = any;\n\n/**\n * Wellknown \"timer\" IDs used when scheduling delayed operations on the\n * AsyncQueue. These IDs can then be used from tests to check for the presence\n * of operations or to run them early.\n *\n * The string values are used when encoding these timer IDs in JSON spec tests.\n */\nexport const enum TimerId {\n  /** All can be used with runDelayedOperationsEarly() to run all timers. */\n  All = 'all',\n\n  /**\n   * The following 5 timers are used in persistent_stream.ts for the listen and\n   * write streams. The \"Idle\" timer is used to close the stream due to\n   * inactivity. The \"ConnectionBackoff\" timer is used to restart a stream once\n   * the appropriate backoff delay has elapsed. The health check is used to mark\n   * a stream healthy if it has not received an error during its initial setup.\n   */\n  ListenStreamIdle = 'listen_stream_idle',\n  ListenStreamConnectionBackoff = 'listen_stream_connection_backoff',\n  WriteStreamIdle = 'write_stream_idle',\n  WriteStreamConnectionBackoff = 'write_stream_connection_backoff',\n  HealthCheckTimeout = 'health_check_timeout',\n\n  /**\n   * A timer used in online_state_tracker.ts to transition from\n   * OnlineState.Unknown to Offline after a set timeout, rather than waiting\n   * indefinitely for success or failure.\n   */\n  OnlineStateTimeout = 'online_state_timeout',\n\n  /**\n   * A timer used to update the client metadata in IndexedDb, which is used\n   * to determine the primary leaseholder.\n   */\n  ClientMetadataRefresh = 'client_metadata_refresh',\n\n  /** A timer used to periodically attempt LRU Garbage collection */\n  LruGarbageCollection = 'lru_garbage_collection',\n\n  /**\n   * A timer used to retry transactions. Since there can be multiple concurrent\n   * transactions, multiple of these may be in the queue at a given time.\n   */\n  TransactionRetry = 'transaction_retry',\n\n  /**\n   * A timer used to retry operations scheduled via retryable AsyncQueue\n   * operations.\n   */\n  AsyncQueueRetry = 'async_queue_retry',\n\n  /**\n   *  A timer used to periodically attempt index backfill.\n   */\n  IndexBackfill = 'index_backfill'\n}\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nexport class DelayedOperation<T extends unknown> implements PromiseLike<T> {\n  // handle for use with clearTimeout(), or null if the operation has been\n  // executed or canceled already.\n  private timerHandle: TimerHandle | null;\n\n  private readonly deferred = new Deferred<T>();\n\n  private constructor(\n    private readonly asyncQueue: AsyncQueue,\n    readonly timerId: TimerId,\n    readonly targetTimeMs: number,\n    private readonly op: () => Promise<T>,\n    private readonly removalCallback: (op: DelayedOperation<T>) => void\n  ) {\n    // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(err => {});\n  }\n\n  get promise(): Promise<T> {\n    return this.deferred.promise;\n  }\n\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n  static createAndSchedule<R extends unknown>(\n    asyncQueue: AsyncQueue,\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<R>,\n    removalCallback: (op: DelayedOperation<R>) => void\n  ): DelayedOperation<R> {\n    const targetTime = Date.now() + delayMs;\n    const delayedOp = new DelayedOperation(\n      asyncQueue,\n      timerId,\n      targetTime,\n      op,\n      removalCallback\n    );\n    delayedOp.start(delayMs);\n    return delayedOp;\n  }\n\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n  private start(delayMs: number): void {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), delayMs);\n  }\n\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n  skipDelay(): void {\n    return this.handleDelayElapsed();\n  }\n\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n  cancel(reason?: string): void {\n    if (this.timerHandle !== null) {\n      this.clearTimeout();\n      this.deferred.reject(\n        new FirestoreError(\n          Code.CANCELLED,\n          'Operation cancelled' + (reason ? ': ' + reason : '')\n        )\n      );\n    }\n  }\n\n  then = this.deferred.promise.then.bind(this.deferred.promise);\n\n  private handleDelayElapsed(): void {\n    this.asyncQueue.enqueueAndForget(() => {\n      if (this.timerHandle !== null) {\n        this.clearTimeout();\n        return this.op().then(result => {\n          return this.deferred.resolve(result);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  }\n\n  private clearTimeout(): void {\n    if (this.timerHandle !== null) {\n      this.removalCallback(this);\n      clearTimeout(this.timerHandle);\n      this.timerHandle = null;\n    }\n  }\n}\n\nexport interface AsyncQueue {\n  // Is this AsyncQueue being shut down? If true, this instance will not enqueue\n  // any new operations, Promises from enqueue requests will not resolve.\n  readonly isShuttingDown: boolean;\n\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget<T extends unknown>(op: () => Promise<T>): void;\n\n  /**\n   * Regardless if the queue has initialized shutdown, adds a new operation to the\n   * queue without waiting for it to complete (i.e. we ignore the Promise result).\n   */\n  enqueueAndForgetEvenWhileRestricted<T extends unknown>(\n    op: () => Promise<T>\n  ): void;\n\n  /**\n   * Initialize the shutdown of this queue. Once this method is called, the\n   * only possible way to request running an operation is through\n   * `enqueueEvenWhileRestricted()`.\n   *\n   * @param purgeExistingTasks Whether already enqueued tasked should be\n   * rejected (unless enqueued wih `enqueueEvenWhileRestricted()`). Defaults\n   * to false.\n   */\n  enterRestrictedMode(purgeExistingTasks?: boolean): void;\n\n  /**\n   * Adds a new operation to the queue. Returns a promise that will be resolved\n   * when the promise returned by the new operation is (with its value).\n   */\n  enqueue<T extends unknown>(op: () => Promise<T>): Promise<T>;\n\n  /**\n   * Enqueue a retryable operation.\n   *\n   * A retryable operation is rescheduled with backoff if it fails with a\n   * IndexedDbTransactionError (the error type used by SimpleDb). All\n   * retryable operations are executed in order and only run if all prior\n   * operations were retried successfully.\n   */\n  enqueueRetryable(op: () => Promise<void>): void;\n\n  /**\n   * Schedules an operation to be queued on the AsyncQueue once the specified\n   * `delayMs` has elapsed. The returned DelayedOperation can be used to cancel\n   * or fast-forward the operation prior to its running.\n   */\n  enqueueAfterDelay<T extends unknown>(\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<T>\n  ): DelayedOperation<T>;\n\n  /**\n   * Verifies there's an operation currently in-progress on the AsyncQueue.\n   * Unfortunately we can't verify that the running code is in the promise chain\n   * of that operation, so this isn't a foolproof check, but it should be enough\n   * to catch some bugs.\n   */\n  verifyOperationInProgress(): void;\n}\n\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */\nexport function wrapInUserErrorIfRecoverable(\n  e: Error,\n  msg: string\n): FirestoreError {\n  logError(LOG_TAG, `${msg}: ${e}`);\n  if (isIndexedDbTransactionError(e)) {\n    return new FirestoreError(Code.UNAVAILABLE, `${msg}: ${e}`);\n  } else {\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, debugCast } from '../util/assert';\nimport { wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { FirestoreError } from '../util/error';\nimport { EventHandler } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { canonifyQuery, Query, queryEquals, stringifyQuery } from './query';\nimport { OnlineState } from './types';\nimport { ChangeType, DocumentViewChange, ViewSnapshot } from './view_snapshot';\n\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */\nclass QueryListenersInfo {\n  viewSnap: ViewSnapshot | undefined = undefined;\n  listeners: QueryListener[] = [];\n\n  // Helper methods that checks if the query has listeners that listening to remote store\n  hasRemoteListeners(): boolean {\n    return this.listeners.some(listener => listener.listensToRemoteStore());\n  }\n}\n\n/**\n * Interface for handling events from the EventManager.\n */\nexport interface Observer<T> {\n  next: EventHandler<T>;\n  error: EventHandler<FirestoreError>;\n}\n\n/**\n * EventManager is responsible for mapping queries to query event emitters.\n * It handles \"fan-out\". -- Identical queries will re-use the same watch on the\n * backend.\n *\n * PORTING NOTE: On Web, EventManager `onListen` and `onUnlisten` need to be\n * assigned to SyncEngine's `listen()` and `unlisten()` API before usage. This\n * allows users to tree-shake the Watch logic.\n */\nexport interface EventManager {\n  onListen?: (\n    query: Query,\n    enableRemoteListen: boolean\n  ) => Promise<ViewSnapshot>;\n  onUnlisten?: (query: Query, disableRemoteListen: boolean) => Promise<void>;\n  onFirstRemoteStoreListen?: (query: Query) => Promise<void>;\n  onLastRemoteStoreUnlisten?: (query: Query) => Promise<void>;\n}\n\nexport function newEventManager(): EventManager {\n  return new EventManagerImpl();\n}\n\nexport class EventManagerImpl implements EventManager {\n  queries = new ObjectMap<Query, QueryListenersInfo>(\n    q => canonifyQuery(q),\n    queryEquals\n  );\n\n  onlineState = OnlineState.Unknown;\n\n  snapshotsInSyncListeners: Set<Observer<void>> = new Set();\n\n  /** Callback invoked when a Query is first listen to. */\n  onListen?: (\n    query: Query,\n    enableRemoteListen: boolean\n  ) => Promise<ViewSnapshot>;\n  /** Callback invoked once all listeners to a Query are removed. */\n  onUnlisten?: (query: Query, disableRemoteListen: boolean) => Promise<void>;\n\n  /**\n   * Callback invoked when a Query starts listening to the remote store, while\n   * already listening to the cache.\n   */\n  onFirstRemoteStoreListen?: (query: Query) => Promise<void>;\n  /**\n   * Callback invoked when a Query stops listening to the remote store, while\n   * still listening to the cache.\n   */\n  onLastRemoteStoreUnlisten?: (query: Query) => Promise<void>;\n}\n\nfunction validateEventManager(eventManagerImpl: EventManagerImpl): void {\n  debugAssert(!!eventManagerImpl.onListen, 'onListen not set');\n  debugAssert(\n    !!eventManagerImpl.onFirstRemoteStoreListen,\n    'onFirstRemoteStoreListen not set'\n  );\n  debugAssert(!!eventManagerImpl.onUnlisten, 'onUnlisten not set');\n  debugAssert(\n    !!eventManagerImpl.onLastRemoteStoreUnlisten,\n    'onLastRemoteStoreUnlisten not set'\n  );\n}\n\nconst enum ListenerSetupAction {\n  InitializeLocalListenAndRequireWatchConnection,\n  InitializeLocalListenOnly,\n  RequireWatchConnectionOnly,\n  NoActionRequired\n}\n\nconst enum ListenerRemovalAction {\n  TerminateLocalListenAndRequireWatchDisconnection,\n  TerminateLocalListenOnly,\n  RequireWatchDisconnectionOnly,\n  NoActionRequired\n}\n\nexport async function eventManagerListen(\n  eventManager: EventManager,\n  listener: QueryListener\n): Promise<void> {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n  validateEventManager(eventManagerImpl);\n\n  let listenerAction = ListenerSetupAction.NoActionRequired;\n\n  const query = listener.query;\n\n  let queryInfo = eventManagerImpl.queries.get(query);\n  if (!queryInfo) {\n    queryInfo = new QueryListenersInfo();\n    listenerAction = listener.listensToRemoteStore()\n      ? ListenerSetupAction.InitializeLocalListenAndRequireWatchConnection\n      : ListenerSetupAction.InitializeLocalListenOnly;\n  } else if (\n    !queryInfo.hasRemoteListeners() &&\n    listener.listensToRemoteStore()\n  ) {\n    // Query has been listening to local cache, and tries to add a new listener sourced from watch.\n    listenerAction = ListenerSetupAction.RequireWatchConnectionOnly;\n  }\n\n  try {\n    switch (listenerAction) {\n      case ListenerSetupAction.InitializeLocalListenAndRequireWatchConnection:\n        queryInfo.viewSnap = await eventManagerImpl.onListen!(\n          query,\n          /** enableRemoteListen= */ true\n        );\n        break;\n      case ListenerSetupAction.InitializeLocalListenOnly:\n        queryInfo.viewSnap = await eventManagerImpl.onListen!(\n          query,\n          /** enableRemoteListen= */ false\n        );\n        break;\n      case ListenerSetupAction.RequireWatchConnectionOnly:\n        await eventManagerImpl.onFirstRemoteStoreListen!(query);\n        break;\n      default:\n        break;\n    }\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Initialization of query '${stringifyQuery(listener.query)}' failed`\n    );\n    listener.onError(firestoreError);\n    return;\n  }\n\n  eventManagerImpl.queries.set(query, queryInfo);\n  queryInfo.listeners.push(listener);\n\n  // Run global snapshot listeners if a consistent snapshot has been emitted.\n  const raisedEvent = listener.applyOnlineStateChange(\n    eventManagerImpl.onlineState\n  );\n  debugAssert(\n    !raisedEvent,\n    \"applyOnlineStateChange() shouldn't raise an event for brand-new listeners.\"\n  );\n\n  if (queryInfo.viewSnap) {\n    const raisedEvent = listener.onViewSnapshot(queryInfo.viewSnap);\n    if (raisedEvent) {\n      raiseSnapshotsInSyncEvent(eventManagerImpl);\n    }\n  }\n}\n\nexport async function eventManagerUnlisten(\n  eventManager: EventManager,\n  listener: QueryListener\n): Promise<void> {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n  validateEventManager(eventManagerImpl);\n\n  const query = listener.query;\n  let listenerAction = ListenerRemovalAction.NoActionRequired;\n\n  const queryInfo = eventManagerImpl.queries.get(query);\n  if (queryInfo) {\n    const i = queryInfo.listeners.indexOf(listener);\n    if (i >= 0) {\n      queryInfo.listeners.splice(i, 1);\n\n      if (queryInfo.listeners.length === 0) {\n        listenerAction = listener.listensToRemoteStore()\n          ? ListenerRemovalAction.TerminateLocalListenAndRequireWatchDisconnection\n          : ListenerRemovalAction.TerminateLocalListenOnly;\n      } else if (\n        !queryInfo.hasRemoteListeners() &&\n        listener.listensToRemoteStore()\n      ) {\n        // The removed listener is the last one that sourced from watch.\n        listenerAction = ListenerRemovalAction.RequireWatchDisconnectionOnly;\n      }\n    }\n  }\n  switch (listenerAction) {\n    case ListenerRemovalAction.TerminateLocalListenAndRequireWatchDisconnection:\n      eventManagerImpl.queries.delete(query);\n      return eventManagerImpl.onUnlisten!(\n        query,\n        /** disableRemoteListen= */ true\n      );\n    case ListenerRemovalAction.TerminateLocalListenOnly:\n      eventManagerImpl.queries.delete(query);\n      return eventManagerImpl.onUnlisten!(\n        query,\n        /** disableRemoteListen= */ false\n      );\n    case ListenerRemovalAction.RequireWatchDisconnectionOnly:\n      return eventManagerImpl.onLastRemoteStoreUnlisten!(query);\n    default:\n      return;\n  }\n}\n\nexport function eventManagerOnWatchChange(\n  eventManager: EventManager,\n  viewSnaps: ViewSnapshot[]\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  let raisedEvent = false;\n  for (const viewSnap of viewSnaps) {\n    const query = viewSnap.query;\n    const queryInfo = eventManagerImpl.queries.get(query);\n    if (queryInfo) {\n      for (const listener of queryInfo.listeners) {\n        if (listener.onViewSnapshot(viewSnap)) {\n          raisedEvent = true;\n        }\n      }\n      queryInfo.viewSnap = viewSnap;\n    }\n  }\n  if (raisedEvent) {\n    raiseSnapshotsInSyncEvent(eventManagerImpl);\n  }\n}\n\nexport function eventManagerOnWatchError(\n  eventManager: EventManager,\n  query: Query,\n  error: FirestoreError\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  const queryInfo = eventManagerImpl.queries.get(query);\n  if (queryInfo) {\n    for (const listener of queryInfo.listeners) {\n      listener.onError(error);\n    }\n  }\n\n  // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n  // after an error.\n  eventManagerImpl.queries.delete(query);\n}\n\nexport function eventManagerOnOnlineStateChange(\n  eventManager: EventManager,\n  onlineState: OnlineState\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  eventManagerImpl.onlineState = onlineState;\n  let raisedEvent = false;\n  eventManagerImpl.queries.forEach((_, queryInfo) => {\n    for (const listener of queryInfo.listeners) {\n      // Run global snapshot listeners if a consistent snapshot has been emitted.\n      if (listener.applyOnlineStateChange(onlineState)) {\n        raisedEvent = true;\n      }\n    }\n  });\n  if (raisedEvent) {\n    raiseSnapshotsInSyncEvent(eventManagerImpl);\n  }\n}\n\nexport function addSnapshotsInSyncListener(\n  eventManager: EventManager,\n  observer: Observer<void>\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  eventManagerImpl.snapshotsInSyncListeners.add(observer);\n  // Immediately fire an initial event, indicating all existing listeners\n  // are in-sync.\n  observer.next();\n}\n\nexport function removeSnapshotsInSyncListener(\n  eventManager: EventManager,\n  observer: Observer<void>\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n  eventManagerImpl.snapshotsInSyncListeners.delete(observer);\n}\n\n// Call all global snapshot listeners that have been set.\nfunction raiseSnapshotsInSyncEvent(eventManagerImpl: EventManagerImpl): void {\n  eventManagerImpl.snapshotsInSyncListeners.forEach(observer => {\n    observer.next();\n  });\n}\n\nexport enum ListenerDataSource {\n  /** Listen to both cache and server changes */\n  Default = 'default',\n\n  /** Listen to changes in cache only */\n  Cache = 'cache'\n}\n\nexport interface ListenOptions {\n  /** Raise events even when only the metadata changes */\n  readonly includeMetadataChanges?: boolean;\n\n  /**\n   * Wait for a sync with the server when online, but still raise events while\n   * offline.\n   */\n  readonly waitForSyncWhenOnline?: boolean;\n\n  /** Set the source events raised from. */\n  readonly source?: ListenerDataSource;\n}\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */\nexport class QueryListener {\n  /**\n   * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n   * observer. This flag is set to true once we've actually raised an event.\n   */\n  private raisedInitialEvent = false;\n\n  private options: ListenOptions;\n\n  private snap: ViewSnapshot | null = null;\n\n  private onlineState = OnlineState.Unknown;\n\n  constructor(\n    readonly query: Query,\n    private queryObserver: Observer<ViewSnapshot>,\n    options?: ListenOptions\n  ) {\n    this.options = options || {};\n  }\n\n  /**\n   * Applies the new ViewSnapshot to this listener, raising a user-facing event\n   * if applicable (depending on what changed, whether the user has opted into\n   * metadata-only changes, etc.). Returns true if a user-facing event was\n   * indeed raised.\n   */\n  onViewSnapshot(snap: ViewSnapshot): boolean {\n    debugAssert(\n      snap.docChanges.length > 0 || snap.syncStateChanged,\n      'We got a new snapshot with no changes?'\n    );\n\n    if (!this.options.includeMetadataChanges) {\n      // Remove the metadata only changes.\n      const docChanges: DocumentViewChange[] = [];\n      for (const docChange of snap.docChanges) {\n        if (docChange.type !== ChangeType.Metadata) {\n          docChanges.push(docChange);\n        }\n      }\n      snap = new ViewSnapshot(\n        snap.query,\n        snap.docs,\n        snap.oldDocs,\n        docChanges,\n        snap.mutatedKeys,\n        snap.fromCache,\n        snap.syncStateChanged,\n        /* excludesMetadataChanges= */ true,\n        snap.hasCachedResults\n      );\n    }\n    let raisedEvent = false;\n    if (!this.raisedInitialEvent) {\n      if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\n        this.raiseInitialEvent(snap);\n        raisedEvent = true;\n      }\n    } else if (this.shouldRaiseEvent(snap)) {\n      this.queryObserver.next(snap);\n      raisedEvent = true;\n    }\n\n    this.snap = snap;\n    return raisedEvent;\n  }\n\n  onError(error: FirestoreError): void {\n    this.queryObserver.error(error);\n  }\n\n  /** Returns whether a snapshot was raised. */\n  applyOnlineStateChange(onlineState: OnlineState): boolean {\n    this.onlineState = onlineState;\n    let raisedEvent = false;\n    if (\n      this.snap &&\n      !this.raisedInitialEvent &&\n      this.shouldRaiseInitialEvent(this.snap, onlineState)\n    ) {\n      this.raiseInitialEvent(this.snap);\n      raisedEvent = true;\n    }\n    return raisedEvent;\n  }\n\n  private shouldRaiseInitialEvent(\n    snap: ViewSnapshot,\n    onlineState: OnlineState\n  ): boolean {\n    debugAssert(\n      !this.raisedInitialEvent,\n      'Determining whether to raise first event but already had first event'\n    );\n\n    // Always raise the first event when we're synced\n    if (!snap.fromCache) {\n      return true;\n    }\n\n    // Always raise event if listening to cache\n    if (!this.listensToRemoteStore()) {\n      return true;\n    }\n\n    // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n    // or Online if we wait long enough).\n    const maybeOnline = onlineState !== OnlineState.Offline;\n    // Don't raise the event if we're online, aren't synced yet (checked\n    // above) and are waiting for a sync.\n    if (this.options.waitForSyncWhenOnline && maybeOnline) {\n      debugAssert(\n        snap.fromCache,\n        'Waiting for sync, but snapshot is not from cache'\n      );\n      return false;\n    }\n\n    // Raise data from cache if we have any documents, have cached results before,\n    // or we are offline.\n    return (\n      !snap.docs.isEmpty() ||\n      snap.hasCachedResults ||\n      onlineState === OnlineState.Offline\n    );\n  }\n\n  private shouldRaiseEvent(snap: ViewSnapshot): boolean {\n    // We don't need to handle includeDocumentMetadataChanges here because\n    // the Metadata only changes have already been stripped out if needed.\n    // At this point the only changes we will see are the ones we should\n    // propagate.\n    if (snap.docChanges.length > 0) {\n      return true;\n    }\n\n    const hasPendingWritesChanged =\n      this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\n    if (snap.syncStateChanged || hasPendingWritesChanged) {\n      return this.options.includeMetadataChanges === true;\n    }\n\n    // Generally we should have hit one of the cases above, but it's possible\n    // to get here if there were only metadata docChanges and they got\n    // stripped out.\n    return false;\n  }\n\n  private raiseInitialEvent(snap: ViewSnapshot): void {\n    debugAssert(\n      !this.raisedInitialEvent,\n      'Trying to raise initial events for second time'\n    );\n    snap = ViewSnapshot.fromInitialDocuments(\n      snap.query,\n      snap.docs,\n      snap.mutatedKeys,\n      snap.fromCache,\n      snap.hasCachedResults\n    );\n    this.raisedInitialEvent = true;\n    this.queryObserver.next(snap);\n  }\n\n  listensToRemoteStore(): boolean {\n    return this.options.source !== ListenerDataSource.Cache;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetOptions } from '@firebase/firestore-types';\n\nimport { LoadBundleTask } from '../api/bundle';\nimport {\n  CredentialChangeListener,\n  CredentialsProvider\n} from '../api/credentials';\nimport { User } from '../auth/user';\nimport { LocalStore } from '../local/local_store';\nimport {\n  localStoreConfigureFieldIndexes,\n  localStoreDeleteAllFieldIndexes,\n  localStoreExecuteQuery,\n  localStoreGetNamedQuery,\n  localStoreHandleUserChange,\n  localStoreReadDocument,\n  localStoreSetIndexAutoCreationEnabled\n} from '../local/local_store_impl';\nimport { Persistence } from '../local/persistence';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldIndex } from '../model/field_index';\nimport { Mutation } from '../model/mutation';\nimport { toByteStreamReader } from '../platform/byte_stream_reader';\nimport { newSerializer } from '../platform/serializer';\nimport { newTextEncoder } from '../platform/text_serializer';\nimport { ApiClientObjectMap, Value } from '../protos/firestore_proto_api';\nimport { Datastore, invokeRunAggregationQueryRpc } from '../remote/datastore';\nimport {\n  RemoteStore,\n  remoteStoreDisableNetwork,\n  remoteStoreEnableNetwork,\n  remoteStoreHandleCredentialChange\n} from '../remote/remote_store';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { debugAssert } from '../util/assert';\nimport { AsyncObserver } from '../util/async_observer';\nimport { AsyncQueue, wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { BundleReader } from '../util/bundle_reader';\nimport { newBundleReader } from '../util/bundle_reader_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { AutoId } from '../util/misc';\nimport { Deferred } from '../util/promise';\n\nimport { Aggregate } from './aggregate';\nimport { NamedQuery } from './bundle';\nimport {\n  ComponentConfiguration,\n  MemoryOfflineComponentProvider,\n  OfflineComponentProvider,\n  OnlineComponentProvider\n} from './component_provider';\nimport { DatabaseId, DatabaseInfo } from './database_info';\nimport {\n  addSnapshotsInSyncListener,\n  EventManager,\n  eventManagerListen,\n  eventManagerUnlisten,\n  ListenOptions,\n  Observer,\n  QueryListener,\n  removeSnapshotsInSyncListener\n} from './event_manager';\nimport { newQueryForPath, Query } from './query';\nimport { SyncEngine } from './sync_engine';\nimport {\n  syncEngineListen,\n  syncEngineLoadBundle,\n  syncEngineRegisterPendingWritesCallback,\n  syncEngineUnlisten,\n  syncEngineWrite,\n  triggerRemoteStoreListen,\n  triggerRemoteStoreUnlisten\n} from './sync_engine_impl';\nimport { Transaction } from './transaction';\nimport { TransactionOptions } from './transaction_options';\nimport { TransactionRunner } from './transaction_runner';\nimport { View } from './view';\nimport { ViewSnapshot } from './view_snapshot';\n\nconst LOG_TAG = 'FirestoreClient';\nexport const MAX_CONCURRENT_LIMBO_RESOLUTIONS = 100;\n\n/** DOMException error code constants. */\nconst DOM_EXCEPTION_INVALID_STATE = 11;\nconst DOM_EXCEPTION_ABORTED = 20;\nconst DOM_EXCEPTION_QUOTA_EXCEEDED = 22;\n\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the //\n * pieces of the client SDK architecture. It is responsible for creating the //\n * async queue that is shared by all of the other components in the system. //\n */\nexport class FirestoreClient {\n  private user = User.UNAUTHENTICATED;\n  private readonly clientId = AutoId.newId();\n  private authCredentialListener: CredentialChangeListener<User> = () =>\n    Promise.resolve();\n  private appCheckCredentialListener: (\n    appCheckToken: string,\n    user: User\n  ) => Promise<void> = () => Promise.resolve();\n  _uninitializedComponentsProvider?: {\n    _offline: OfflineComponentProvider;\n    _offlineKind: 'memory' | 'persistent';\n    _online: OnlineComponentProvider;\n  };\n\n  _offlineComponents?: OfflineComponentProvider;\n  _onlineComponents?: OnlineComponentProvider;\n\n  constructor(\n    private authCredentials: CredentialsProvider<User>,\n    private appCheckCredentials: CredentialsProvider<string>,\n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    public asyncQueue: AsyncQueue,\n    private databaseInfo: DatabaseInfo\n  ) {\n    this.authCredentials.start(asyncQueue, async user => {\n      logDebug(LOG_TAG, 'Received user=', user.uid);\n      await this.authCredentialListener(user);\n      this.user = user;\n    });\n    this.appCheckCredentials.start(asyncQueue, newAppCheckToken => {\n      logDebug(LOG_TAG, 'Received new app check token=', newAppCheckToken);\n      return this.appCheckCredentialListener(newAppCheckToken, this.user);\n    });\n  }\n\n  get configuration(): ComponentConfiguration {\n    return {\n      asyncQueue: this.asyncQueue,\n      databaseInfo: this.databaseInfo,\n      clientId: this.clientId,\n      authCredentials: this.authCredentials,\n      appCheckCredentials: this.appCheckCredentials,\n      initialUser: this.user,\n      maxConcurrentLimboResolutions: MAX_CONCURRENT_LIMBO_RESOLUTIONS\n    };\n  }\n\n  setCredentialChangeListener(listener: (user: User) => Promise<void>): void {\n    this.authCredentialListener = listener;\n  }\n\n  setAppCheckTokenChangeListener(\n    listener: (appCheckToken: string, user: User) => Promise<void>\n  ): void {\n    this.appCheckCredentialListener = listener;\n  }\n\n  /**\n   * Checks that the client has not been terminated. Ensures that other methods on //\n   * this class cannot be called after the client is terminated. //\n   */\n  verifyNotTerminated(): void {\n    if (this.asyncQueue.isShuttingDown) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'The client has already been terminated.'\n      );\n    }\n  }\n\n  terminate(): Promise<void> {\n    this.asyncQueue.enterRestrictedMode();\n    const deferred = new Deferred();\n    this.asyncQueue.enqueueAndForgetEvenWhileRestricted(async () => {\n      try {\n        if (this._onlineComponents) {\n          await this._onlineComponents.terminate();\n        }\n        if (this._offlineComponents) {\n          await this._offlineComponents.terminate();\n        }\n\n        // The credentials provider must be terminated after shutting down the\n        // RemoteStore as it will prevent the RemoteStore from retrieving auth\n        // tokens.\n        this.authCredentials.shutdown();\n        this.appCheckCredentials.shutdown();\n        deferred.resolve();\n      } catch (e) {\n        const firestoreError = wrapInUserErrorIfRecoverable(\n          e as Error,\n          `Failed to shutdown persistence`\n        );\n        deferred.reject(firestoreError);\n      }\n    });\n    return deferred.promise;\n  }\n}\n\nexport async function setOfflineComponentProvider(\n  client: FirestoreClient,\n  offlineComponentProvider: OfflineComponentProvider\n): Promise<void> {\n  client.asyncQueue.verifyOperationInProgress();\n\n  logDebug(LOG_TAG, 'Initializing OfflineComponentProvider');\n  const configuration = client.configuration;\n  await offlineComponentProvider.initialize(configuration);\n\n  let currentUser = configuration.initialUser;\n  client.setCredentialChangeListener(async user => {\n    if (!currentUser.isEqual(user)) {\n      await localStoreHandleUserChange(\n        offlineComponentProvider.localStore,\n        user\n      );\n      currentUser = user;\n    }\n  });\n\n  // When a user calls clearPersistence() in one client, all other clients\n  // need to be terminated to allow the delete to succeed.\n  offlineComponentProvider.persistence.setDatabaseDeletedListener(() =>\n    client.terminate()\n  );\n\n  client._offlineComponents = offlineComponentProvider;\n}\n\nexport async function setOnlineComponentProvider(\n  client: FirestoreClient,\n  onlineComponentProvider: OnlineComponentProvider\n): Promise<void> {\n  client.asyncQueue.verifyOperationInProgress();\n\n  const offlineComponentProvider = await ensureOfflineComponents(client);\n\n  logDebug(LOG_TAG, 'Initializing OnlineComponentProvider');\n  await onlineComponentProvider.initialize(\n    offlineComponentProvider,\n    client.configuration\n  );\n  // The CredentialChangeListener of the online component provider takes\n  // precedence over the offline component provider.\n  client.setCredentialChangeListener(user =>\n    remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user)\n  );\n  client.setAppCheckTokenChangeListener((_, user) =>\n    remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user)\n  );\n  client._onlineComponents = onlineComponentProvider;\n}\n\n/**\n * Decides whether the provided error allows us to gracefully disable\n * persistence (as opposed to crashing the client).\n */\nexport function canFallbackFromIndexedDbError(\n  error: FirestoreError | DOMException\n): boolean {\n  if (error.name === 'FirebaseError') {\n    return (\n      error.code === Code.FAILED_PRECONDITION ||\n      error.code === Code.UNIMPLEMENTED\n    );\n  } else if (\n    typeof DOMException !== 'undefined' &&\n    error instanceof DOMException\n  ) {\n    // There are a few known circumstances where we can open IndexedDb but\n    // trying to read/write will fail (e.g. quota exceeded). For\n    // well-understood cases, we attempt to detect these and then gracefully\n    // fall back to memory persistence.\n    // NOTE: Rather than continue to add to this list, we could decide to\n    // always fall back, with the risk that we might accidentally hide errors\n    // representing actual SDK bugs.\n    return (\n      // When the browser is out of quota we could get either quota exceeded\n      // or an aborted error depending on whether the error happened during\n      // schema migration.\n      error.code === DOM_EXCEPTION_QUOTA_EXCEEDED ||\n      error.code === DOM_EXCEPTION_ABORTED ||\n      // Firefox Private Browsing mode disables IndexedDb and returns\n      // INVALID_STATE for any usage.\n      error.code === DOM_EXCEPTION_INVALID_STATE\n    );\n  }\n\n  return true;\n}\n\nasync function ensureOfflineComponents(\n  client: FirestoreClient\n): Promise<OfflineComponentProvider> {\n  if (!client._offlineComponents) {\n    if (client._uninitializedComponentsProvider) {\n      logDebug(LOG_TAG, 'Using user provided OfflineComponentProvider');\n      try {\n        await setOfflineComponentProvider(\n          client,\n          client._uninitializedComponentsProvider._offline\n        );\n      } catch (e) {\n        const error = e as FirestoreError | DOMException;\n        if (!canFallbackFromIndexedDbError(error)) {\n          throw error;\n        }\n        logWarn(\n          'Error using user provided cache. Falling back to ' +\n            'memory cache: ' +\n            error\n        );\n        await setOfflineComponentProvider(\n          client,\n          new MemoryOfflineComponentProvider()\n        );\n      }\n    } else {\n      logDebug(LOG_TAG, 'Using default OfflineComponentProvider');\n      await setOfflineComponentProvider(\n        client,\n        new MemoryOfflineComponentProvider()\n      );\n    }\n  }\n\n  return client._offlineComponents!;\n}\n\nasync function ensureOnlineComponents(\n  client: FirestoreClient\n): Promise<OnlineComponentProvider> {\n  if (!client._onlineComponents) {\n    if (client._uninitializedComponentsProvider) {\n      logDebug(LOG_TAG, 'Using user provided OnlineComponentProvider');\n      await setOnlineComponentProvider(\n        client,\n        client._uninitializedComponentsProvider._online\n      );\n    } else {\n      logDebug(LOG_TAG, 'Using default OnlineComponentProvider');\n      await setOnlineComponentProvider(client, new OnlineComponentProvider());\n    }\n  }\n\n  return client._onlineComponents!;\n}\n\nfunction getPersistence(client: FirestoreClient): Promise<Persistence> {\n  return ensureOfflineComponents(client).then(c => c.persistence);\n}\n\nexport function getLocalStore(client: FirestoreClient): Promise<LocalStore> {\n  return ensureOfflineComponents(client).then(c => c.localStore);\n}\n\nfunction getRemoteStore(client: FirestoreClient): Promise<RemoteStore> {\n  return ensureOnlineComponents(client).then(c => c.remoteStore);\n}\n\nexport function getSyncEngine(client: FirestoreClient): Promise<SyncEngine> {\n  return ensureOnlineComponents(client).then(c => c.syncEngine);\n}\n\nfunction getDatastore(client: FirestoreClient): Promise<Datastore> {\n  return ensureOnlineComponents(client).then(c => c.datastore);\n}\n\nexport async function getEventManager(\n  client: FirestoreClient\n): Promise<EventManager> {\n  const onlineComponentProvider = await ensureOnlineComponents(client);\n  const eventManager = onlineComponentProvider.eventManager;\n  eventManager.onListen = syncEngineListen.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  eventManager.onUnlisten = syncEngineUnlisten.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  eventManager.onFirstRemoteStoreListen = triggerRemoteStoreListen.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  eventManager.onLastRemoteStoreUnlisten = triggerRemoteStoreUnlisten.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  return eventManager;\n}\n\n/** Enables the network connection and re-enqueues all pending operations. */\nexport function firestoreClientEnableNetwork(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    const persistence = await getPersistence(client);\n    const remoteStore = await getRemoteStore(client);\n    persistence.setNetworkEnabled(true);\n    return remoteStoreEnableNetwork(remoteStore);\n  });\n}\n\n/** Disables the network connection. Pending operations will not complete. */\nexport function firestoreClientDisableNetwork(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    const persistence = await getPersistence(client);\n    const remoteStore = await getRemoteStore(client);\n    persistence.setNetworkEnabled(false);\n    return remoteStoreDisableNetwork(remoteStore);\n  });\n}\n\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */\nexport function firestoreClientWaitForPendingWrites(\n  client: FirestoreClient\n): Promise<void> {\n  const deferred = new Deferred<void>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const syncEngine = await getSyncEngine(client);\n    return syncEngineRegisterPendingWritesCallback(syncEngine, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientListen(\n  client: FirestoreClient,\n  query: Query,\n  options: ListenOptions,\n  observer: Partial<Observer<ViewSnapshot>>\n): () => void {\n  const wrappedObserver = new AsyncObserver(observer);\n  const listener = new QueryListener(query, wrappedObserver, options);\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return eventManagerListen(eventManager, listener);\n  });\n  return () => {\n    wrappedObserver.mute();\n    client.asyncQueue.enqueueAndForget(async () => {\n      const eventManager = await getEventManager(client);\n      return eventManagerUnlisten(eventManager, listener);\n    });\n  };\n}\n\nexport function firestoreClientGetDocumentFromLocalCache(\n  client: FirestoreClient,\n  docKey: DocumentKey\n): Promise<Document | null> {\n  const deferred = new Deferred<Document | null>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const localStore = await getLocalStore(client);\n    return readDocumentFromCache(localStore, docKey, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentViaSnapshotListener(\n  client: FirestoreClient,\n  key: DocumentKey,\n  options: GetOptions = {}\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return readDocumentViaSnapshotListener(\n      eventManager,\n      client.asyncQueue,\n      key,\n      options,\n      deferred\n    );\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentsFromLocalCache(\n  client: FirestoreClient,\n  query: Query\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const localStore = await getLocalStore(client);\n    return executeQueryFromCache(localStore, query, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentsViaSnapshotListener(\n  client: FirestoreClient,\n  query: Query,\n  options: GetOptions = {}\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return executeQueryViaSnapshotListener(\n      eventManager,\n      client.asyncQueue,\n      query,\n      options,\n      deferred\n    );\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientRunAggregateQuery(\n  client: FirestoreClient,\n  query: Query,\n  aggregates: Aggregate[]\n): Promise<ApiClientObjectMap<Value>> {\n  const deferred = new Deferred<ApiClientObjectMap<Value>>();\n\n  client.asyncQueue.enqueueAndForget(async () => {\n    // Implement and call executeAggregateQueryViaSnapshotListener, similar\n    // to the implementation in firestoreClientGetDocumentsViaSnapshotListener\n    // above\n    try {\n      // TODO(b/277628384): check `canUseNetwork()` and handle multi-tab.\n      const datastore = await getDatastore(client);\n      deferred.resolve(\n        invokeRunAggregationQueryRpc(datastore, query, aggregates)\n      );\n    } catch (e) {\n      deferred.reject(e as Error);\n    }\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientWrite(\n  client: FirestoreClient,\n  mutations: Mutation[]\n): Promise<void> {\n  const deferred = new Deferred<void>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const syncEngine = await getSyncEngine(client);\n    return syncEngineWrite(syncEngine, mutations, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientAddSnapshotsInSyncListener(\n  client: FirestoreClient,\n  observer: Partial<Observer<void>>\n): () => void {\n  const wrappedObserver = new AsyncObserver(observer);\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return addSnapshotsInSyncListener(eventManager, wrappedObserver);\n  });\n  return () => {\n    wrappedObserver.mute();\n    client.asyncQueue.enqueueAndForget(async () => {\n      const eventManager = await getEventManager(client);\n      return removeSnapshotsInSyncListener(eventManager, wrappedObserver);\n    });\n  };\n}\n\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */\nexport function firestoreClientTransaction<T>(\n  client: FirestoreClient,\n  updateFunction: (transaction: Transaction) => Promise<T>,\n  options: TransactionOptions\n): Promise<T> {\n  const deferred = new Deferred<T>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const datastore = await getDatastore(client);\n    new TransactionRunner<T>(\n      client.asyncQueue,\n      datastore,\n      options,\n      updateFunction,\n      deferred\n    ).run();\n  });\n  return deferred.promise;\n}\n\nasync function readDocumentFromCache(\n  localStore: LocalStore,\n  docKey: DocumentKey,\n  result: Deferred<Document | null>\n): Promise<void> {\n  try {\n    const document = await localStoreReadDocument(localStore, docKey);\n    if (document.isFoundDocument()) {\n      result.resolve(document);\n    } else if (document.isNoDocument()) {\n      result.resolve(null);\n    } else {\n      result.reject(\n        new FirestoreError(\n          Code.UNAVAILABLE,\n          'Failed to get document from cache. (However, this document may ' +\n            \"exist on the server. Run again without setting 'source' in \" +\n            'the GetOptions to attempt to retrieve the document from the ' +\n            'server.)'\n        )\n      );\n    }\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to get document '${docKey} from cache`\n    );\n    result.reject(firestoreError);\n  }\n}\n\n/**\n * Retrieves a latency-compensated document from the backend via a\n * SnapshotListener.\n */\nfunction readDocumentViaSnapshotListener(\n  eventManager: EventManager,\n  asyncQueue: AsyncQueue,\n  key: DocumentKey,\n  options: GetOptions,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  const wrappedObserver = new AsyncObserver({\n    next: (snap: ViewSnapshot) => {\n      // Remove query first before passing event to user to avoid\n      // user actions affecting the now stale query.\n      asyncQueue.enqueueAndForget(() =>\n        eventManagerUnlisten(eventManager, listener)\n      );\n\n      const exists = snap.docs.has(key);\n      if (!exists && snap.fromCache) {\n        // TODO(dimond): If we're online and the document doesn't\n        // exist then we resolve with a doc.exists set to false. If\n        // we're offline however, we reject the Promise in this\n        // case. Two options: 1) Cache the negative response from\n        // the server so we can deliver that even when you're\n        // offline 2) Actually reject the Promise in the online case\n        // if the document doesn't exist.\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get document because the client is offline.'\n          )\n        );\n      } else if (\n        exists &&\n        snap.fromCache &&\n        options &&\n        options.source === 'server'\n      ) {\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get document from server. (However, this ' +\n              'document does exist in the local cache. Run again ' +\n              'without setting source to \"server\" to ' +\n              'retrieve the cached document.)'\n          )\n        );\n      } else {\n        debugAssert(\n          snap.docs.size <= 1,\n          'Expected zero or a single result on a document-only query'\n        );\n        result.resolve(snap);\n      }\n    },\n    error: e => result.reject(e)\n  });\n\n  const listener = new QueryListener(\n    newQueryForPath(key.path),\n    wrappedObserver,\n    {\n      includeMetadataChanges: true,\n      waitForSyncWhenOnline: true\n    }\n  );\n  return eventManagerListen(eventManager, listener);\n}\n\nasync function executeQueryFromCache(\n  localStore: LocalStore,\n  query: Query,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  try {\n    const queryResult = await localStoreExecuteQuery(\n      localStore,\n      query,\n      /* usePreviousResults= */ true\n    );\n    const view = new View(query, queryResult.remoteKeys);\n    const viewDocChanges = view.computeDocChanges(queryResult.documents);\n    const viewChange = view.applyChanges(\n      viewDocChanges,\n      /* limboResolutionEnabled= */ false\n    );\n    result.resolve(viewChange.snapshot!);\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to execute query '${query} against cache`\n    );\n    result.reject(firestoreError);\n  }\n}\n\n/**\n * Retrieves a latency-compensated query snapshot from the backend via a\n * SnapshotListener.\n */\nfunction executeQueryViaSnapshotListener(\n  eventManager: EventManager,\n  asyncQueue: AsyncQueue,\n  query: Query,\n  options: GetOptions,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  const wrappedObserver = new AsyncObserver<ViewSnapshot>({\n    next: snapshot => {\n      // Remove query first before passing event to user to avoid\n      // user actions affecting the now stale query.\n      asyncQueue.enqueueAndForget(() =>\n        eventManagerUnlisten(eventManager, listener)\n      );\n\n      if (snapshot.fromCache && options.source === 'server') {\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get documents from server. (However, these ' +\n              'documents may exist in the local cache. Run again ' +\n              'without setting source to \"server\" to ' +\n              'retrieve the cached documents.)'\n          )\n        );\n      } else {\n        result.resolve(snapshot);\n      }\n    },\n    error: e => result.reject(e)\n  });\n\n  const listener = new QueryListener(query, wrappedObserver, {\n    includeMetadataChanges: true,\n    waitForSyncWhenOnline: true\n  });\n  return eventManagerListen(eventManager, listener);\n}\n\nexport function firestoreClientLoadBundle(\n  client: FirestoreClient,\n  databaseId: DatabaseId,\n  data: ReadableStream<Uint8Array> | ArrayBuffer | string,\n  resultTask: LoadBundleTask\n): void {\n  const reader = createBundleReader(data, newSerializer(databaseId));\n  client.asyncQueue.enqueueAndForget(async () => {\n    syncEngineLoadBundle(await getSyncEngine(client), reader, resultTask);\n  });\n}\n\nexport function firestoreClientGetNamedQuery(\n  client: FirestoreClient,\n  queryName: string\n): Promise<NamedQuery | undefined> {\n  return client.asyncQueue.enqueue(async () =>\n    localStoreGetNamedQuery(await getLocalStore(client), queryName)\n  );\n}\n\nfunction createBundleReader(\n  data: ReadableStream<Uint8Array> | ArrayBuffer | string,\n  serializer: JsonProtoSerializer\n): BundleReader {\n  let content: ReadableStream<Uint8Array> | ArrayBuffer;\n  if (typeof data === 'string') {\n    content = newTextEncoder().encode(data);\n  } else {\n    content = data;\n  }\n  return newBundleReader(toByteStreamReader(content), serializer);\n}\n\nexport function firestoreClientSetIndexConfiguration(\n  client: FirestoreClient,\n  indexes: FieldIndex[]\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreConfigureFieldIndexes(\n      await getLocalStore(client),\n      indexes\n    );\n  });\n}\n\nexport function firestoreClientSetPersistentCacheIndexAutoCreationEnabled(\n  client: FirestoreClient,\n  isEnabled: boolean\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreSetIndexAutoCreationEnabled(\n      await getLocalStore(client),\n      isEnabled\n    );\n  });\n}\n\nexport function firestoreClientDeleteAllFieldIndexes(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreDeleteAllFieldIndexes(await getLocalStore(client));\n  });\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Options that configure the SDK’s underlying network transport (WebChannel)\n * when long-polling is used.\n *\n * Note: This interface is \"experimental\" and is subject to change.\n *\n * See `FirestoreSettings.experimentalAutoDetectLongPolling`,\n * `FirestoreSettings.experimentalForceLongPolling`, and\n * `FirestoreSettings.experimentalLongPollingOptions`.\n */\nexport interface ExperimentalLongPollingOptions {\n  /**\n   * The desired maximum timeout interval, in seconds, to complete a\n   * long-polling GET response. Valid values are between 5 and 30, inclusive.\n   * Floating point values are allowed and will be rounded to the nearest\n   * millisecond.\n   *\n   * By default, when long-polling is used the \"hanging GET\" request sent by\n   * the client times out after 30 seconds. To request a different timeout\n   * from the server, set this setting with the desired timeout.\n   *\n   * Changing the default timeout may be useful, for example, if the buffering\n   * proxy that necessitated enabling long-polling in the first place has a\n   * shorter timeout for hanging GET requests, in which case setting the\n   * long-polling timeout to a shorter value, such as 25 seconds, may fix\n   * prematurely-closed hanging GET requests.\n   * For example, see https://github.com/firebase/firebase-js-sdk/issues/6987.\n   */\n  timeoutSeconds?: number;\n}\n\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\nexport function longPollingOptionsEqual(\n  options1: ExperimentalLongPollingOptions,\n  options2: ExperimentalLongPollingOptions\n): boolean {\n  return options1.timeoutSeconds === options2.timeoutSeconds;\n}\n\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nexport function cloneLongPollingOptions(\n  options: ExperimentalLongPollingOptions\n): ExperimentalLongPollingOptions {\n  const clone: ExperimentalLongPollingOptions = {};\n\n  if (options.timeoutSeconds !== undefined) {\n    clone.timeoutSeconds = options.timeoutSeconds;\n  }\n\n  return clone;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _FirebaseService } from '@firebase/app';\n\nimport { CredentialsProvider } from '../api/credentials';\nimport { cloneLongPollingOptions } from '../api/long_polling_options';\nimport { User } from '../auth/user';\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { newConnection } from '../platform/connection';\nimport { newSerializer } from '../platform/serializer';\nimport { Datastore, newDatastore } from '../remote/datastore';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\n\nimport { FirestoreSettingsImpl } from './settings';\n\nexport const LOG_TAG = 'ComponentProvider';\n\n// The components module manages the lifetime of dependencies of the Firestore\n// client. Dependencies can be lazily constructed and only one exists per\n// Firestore instance.\n\n/**\n * An interface implemented by FirebaseFirestore that provides compatibility\n * with the usage in this file.\n *\n * This interface mainly exists to remove a cyclic dependency.\n */\nexport interface FirestoreService extends _FirebaseService {\n  _authCredentials: CredentialsProvider<User>;\n  _appCheckCredentials: CredentialsProvider<string>;\n  _persistenceKey: string;\n  _databaseId: DatabaseId;\n  _terminated: boolean;\n\n  _freezeSettings(): FirestoreSettingsImpl;\n}\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\nconst datastoreInstances = new Map<FirestoreService, Datastore>();\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nexport function getDatastore(firestore: FirestoreService): Datastore {\n  if (firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'The client has already been terminated.'\n    );\n  }\n  if (!datastoreInstances.has(firestore)) {\n    logDebug(LOG_TAG, 'Initializing Datastore');\n    const databaseInfo = makeDatabaseInfo(\n      firestore._databaseId,\n      firestore.app.options.appId || '',\n      firestore._persistenceKey,\n      firestore._freezeSettings()\n    );\n    const connection = newConnection(databaseInfo);\n    const serializer = newSerializer(firestore._databaseId);\n    const datastore = newDatastore(\n      firestore._authCredentials,\n      firestore._appCheckCredentials,\n      connection,\n      serializer\n    );\n\n    datastoreInstances.set(firestore, datastore);\n  }\n  return datastoreInstances.get(firestore)!;\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\nexport function removeComponents(firestore: FirestoreService): void {\n  const datastore = datastoreInstances.get(firestore);\n  if (datastore) {\n    logDebug(LOG_TAG, 'Removing Datastore');\n    datastoreInstances.delete(firestore);\n    datastore.terminate();\n  }\n}\n\nexport function makeDatabaseInfo(\n  databaseId: DatabaseId,\n  appId: string,\n  persistenceKey: string,\n  settings: FirestoreSettingsImpl\n): DatabaseInfo {\n  return new DatabaseInfo(\n    databaseId,\n    appId,\n    persistenceKey,\n    settings.host,\n    settings.ssl,\n    settings.experimentalForceLongPolling,\n    settings.experimentalAutoDetectLongPolling,\n    cloneLongPollingOptions(settings.experimentalLongPollingOptions),\n    settings.useFetchStreams\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport { ResourcePath } from '../model/path';\n\nimport { fail } from './assert';\nimport { Code, FirestoreError } from './error';\n\n/** Types accepted by validateType() and related methods for validation. */\nexport type ValidationType =\n  | 'undefined'\n  | 'object'\n  | 'function'\n  | 'boolean'\n  | 'number'\n  | 'string'\n  | 'non-empty string';\n\nexport function validateNonEmptyArgument(\n  functionName: string,\n  argumentName: string,\n  argument?: string\n): asserts argument is string {\n  if (!argument) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() cannot be called with an empty ${argumentName}.`\n    );\n  }\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\nexport function validateIsNotUsedTogether(\n  optionName1: string,\n  argument1: boolean | undefined,\n  optionName2: string,\n  argument2: boolean | undefined\n): void {\n  if (argument1 === true && argument2 === true) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `${optionName1} and ${optionName2} cannot be used together.`\n    );\n  }\n}\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nexport function validateDocumentPath(path: ResourcePath): void {\n  if (!DocumentKey.isDocumentKey(path)) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid document reference. Document references must have an even number of segments, but ${path} has ${path.length}.`\n    );\n  }\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nexport function validateCollectionPath(path: ResourcePath): void {\n  if (DocumentKey.isDocumentKey(path)) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid collection reference. Collection references must have an odd number of segments, but ${path} has ${path.length}.`\n    );\n  }\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\nexport function isPlainObject(input: unknown): boolean {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    (Object.getPrototypeOf(input) === Object.prototype ||\n      Object.getPrototypeOf(input) === null)\n  );\n}\n\n/** Returns a string describing the type / value of the provided input. */\nexport function valueDescription(input: unknown): string {\n  if (input === undefined) {\n    return 'undefined';\n  } else if (input === null) {\n    return 'null';\n  } else if (typeof input === 'string') {\n    if (input.length > 20) {\n      input = `${input.substring(0, 20)}...`;\n    }\n    return JSON.stringify(input);\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return '' + input;\n  } else if (typeof input === 'object') {\n    if (input instanceof Array) {\n      return 'an array';\n    } else {\n      const customObjectName = tryGetCustomObjectType(input!);\n      if (customObjectName) {\n        return `a custom ${customObjectName} object`;\n      } else {\n        return 'an object';\n      }\n    }\n  } else if (typeof input === 'function') {\n    return 'a function';\n  } else {\n    return fail('Unknown wrong type: ' + typeof input);\n  }\n}\n\n/** try to get the constructor name for an object. */\nexport function tryGetCustomObjectType(input: object): string | null {\n  if (input.constructor) {\n    return input.constructor.name;\n  }\n  return null;\n}\n\n/**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */\nexport function cast<T>(\n  obj: object,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor: { new (...args: any[]): T }\n): T | never {\n  if ('_delegate' in obj) {\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj = (obj as any)._delegate;\n  }\n\n  if (!(obj instanceof constructor)) {\n    if (constructor.name === obj.constructor.name) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Type does not match the expected instance. Did you pass a ' +\n          `reference from a different Firestore SDK?`\n      );\n    } else {\n      const description = valueDescription(obj);\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Expected type '${constructor.name}', but it was: ${description}`\n      );\n    }\n  }\n  return obj as T;\n}\n\nexport function validatePositiveNumber(functionName: string, n: number): void {\n  if (n <= 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires a positive number, but it was: ${n}.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirestoreLocalCache } from '../api/cache_config';\nimport { CredentialsSettings } from '../api/credentials';\nimport {\n  ExperimentalLongPollingOptions,\n  cloneLongPollingOptions,\n  longPollingOptionsEqual\n} from '../api/long_polling_options';\nimport {\n  LRU_COLLECTION_DISABLED,\n  LRU_DEFAULT_CACHE_SIZE_BYTES\n} from '../local/lru_garbage_collector';\nimport { LRU_MINIMUM_CACHE_SIZE_BYTES } from '../local/lru_garbage_collector_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { validateIsNotUsedTogether } from '../util/input_validation';\n\n// settings() defaults:\nexport const DEFAULT_HOST = 'firestore.googleapis.com';\nexport const DEFAULT_SSL = true;\n\n// The minimum long-polling timeout is hardcoded on the server. The value here\n// should be kept in sync with the value used by the server, as the server will\n// silently ignore a value below the minimum and fall back to the default.\n// Googlers see b/266868871 for relevant discussion.\nconst MIN_LONG_POLLING_TIMEOUT_SECONDS = 5;\n\n// No maximum long-polling timeout is configured in the server, and defaults to\n// 30 seconds, which is what Watch appears to use.\n// Googlers see b/266868871 for relevant discussion.\nconst MAX_LONG_POLLING_TIMEOUT_SECONDS = 30;\n\n// Whether long-polling auto-detected is enabled by default.\nconst DEFAULT_AUTO_DETECT_LONG_POLLING = true;\n\n/**\n * Specifies custom configurations for your Cloud Firestore instance.\n * You must set these before invoking any other methods.\n */\nexport interface FirestoreSettings {\n  /** The hostname to connect to. */\n  host?: string;\n\n  /** Whether to use SSL when connecting. */\n  ssl?: boolean;\n\n  /**\n   * Whether to skip nested properties that are set to `undefined` during\n   * object serialization. If set to `true`, these properties are skipped\n   * and not written to Firestore. If set to `false` or omitted, the SDK\n   * throws an exception when it encounters properties of type `undefined`.\n   */\n  ignoreUndefinedProperties?: boolean;\n}\n\n/**\n * @internal\n * Undocumented, private additional settings not exposed in our public API.\n */\nexport interface PrivateSettings extends FirestoreSettings {\n  // Can be a google-auth-library or gapi client.\n  credentials?: CredentialsSettings;\n  cacheSizeBytes?: number;\n  experimentalForceLongPolling?: boolean;\n  experimentalAutoDetectLongPolling?: boolean;\n  experimentalLongPollingOptions?: ExperimentalLongPollingOptions;\n  useFetchStreams?: boolean;\n\n  localCache?: FirestoreLocalCache;\n}\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nexport class FirestoreSettingsImpl {\n  /** The hostname to connect to. */\n  readonly host: string;\n\n  /** Whether to use SSL when connecting. */\n  readonly ssl: boolean;\n\n  readonly cacheSizeBytes: number;\n\n  readonly experimentalForceLongPolling: boolean;\n\n  readonly experimentalAutoDetectLongPolling: boolean;\n\n  readonly experimentalLongPollingOptions: ExperimentalLongPollingOptions;\n\n  readonly ignoreUndefinedProperties: boolean;\n\n  readonly useFetchStreams: boolean;\n  readonly localCache?: FirestoreLocalCache;\n\n  // Can be a google-auth-library or gapi client.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  credentials?: any;\n\n  constructor(settings: PrivateSettings) {\n    if (settings.host === undefined) {\n      if (settings.ssl !== undefined) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          \"Can't provide ssl option if host option is not set\"\n        );\n      }\n      this.host = DEFAULT_HOST;\n      this.ssl = DEFAULT_SSL;\n    } else {\n      this.host = settings.host;\n      this.ssl = settings.ssl ?? DEFAULT_SSL;\n    }\n\n    this.credentials = settings.credentials;\n    this.ignoreUndefinedProperties = !!settings.ignoreUndefinedProperties;\n    this.localCache = settings.localCache;\n\n    if (settings.cacheSizeBytes === undefined) {\n      this.cacheSizeBytes = LRU_DEFAULT_CACHE_SIZE_BYTES;\n    } else {\n      if (\n        settings.cacheSizeBytes !== LRU_COLLECTION_DISABLED &&\n        settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES\n      ) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`\n        );\n      } else {\n        this.cacheSizeBytes = settings.cacheSizeBytes;\n      }\n    }\n\n    validateIsNotUsedTogether(\n      'experimentalForceLongPolling',\n      settings.experimentalForceLongPolling,\n      'experimentalAutoDetectLongPolling',\n      settings.experimentalAutoDetectLongPolling\n    );\n\n    this.experimentalForceLongPolling = !!settings.experimentalForceLongPolling;\n\n    if (this.experimentalForceLongPolling) {\n      this.experimentalAutoDetectLongPolling = false;\n    } else if (settings.experimentalAutoDetectLongPolling === undefined) {\n      this.experimentalAutoDetectLongPolling = DEFAULT_AUTO_DETECT_LONG_POLLING;\n    } else {\n      // For backwards compatibility, coerce the value to boolean even though\n      // the TypeScript compiler has narrowed the type to boolean already.\n      // noinspection PointlessBooleanExpressionJS\n      this.experimentalAutoDetectLongPolling =\n        !!settings.experimentalAutoDetectLongPolling;\n    }\n\n    this.experimentalLongPollingOptions = cloneLongPollingOptions(\n      settings.experimentalLongPollingOptions ?? {}\n    );\n    validateLongPollingOptions(this.experimentalLongPollingOptions);\n\n    this.useFetchStreams = !!settings.useFetchStreams;\n  }\n\n  isEqual(other: FirestoreSettingsImpl): boolean {\n    return (\n      this.host === other.host &&\n      this.ssl === other.ssl &&\n      this.credentials === other.credentials &&\n      this.cacheSizeBytes === other.cacheSizeBytes &&\n      this.experimentalForceLongPolling ===\n        other.experimentalForceLongPolling &&\n      this.experimentalAutoDetectLongPolling ===\n        other.experimentalAutoDetectLongPolling &&\n      longPollingOptionsEqual(\n        this.experimentalLongPollingOptions,\n        other.experimentalLongPollingOptions\n      ) &&\n      this.ignoreUndefinedProperties === other.ignoreUndefinedProperties &&\n      this.useFetchStreams === other.useFetchStreams\n    );\n  }\n}\n\nfunction validateLongPollingOptions(\n  options: ExperimentalLongPollingOptions\n): void {\n  if (options.timeoutSeconds !== undefined) {\n    if (isNaN(options.timeoutSeconds)) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ` +\n          `${options.timeoutSeconds} (must not be NaN)`\n      );\n    }\n    if (options.timeoutSeconds < MIN_LONG_POLLING_TIMEOUT_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ${options.timeoutSeconds} ` +\n          `(minimum allowed value is ${MIN_LONG_POLLING_TIMEOUT_SECONDS})`\n      );\n    }\n    if (options.timeoutSeconds > MAX_LONG_POLLING_TIMEOUT_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ${options.timeoutSeconds} ` +\n          `(maximum allowed value is ${MAX_LONG_POLLING_TIMEOUT_SECONDS})`\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirestoreError } from '../api';\nimport { ListenSequence } from '../core/listen_sequence';\nimport { ListenSequenceNumber } from '../core/types';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { getLogLevel, logDebug, LogLevel } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { ignoreIfPrimaryLeaseLoss, LocalStore } from './local_store';\nimport {\n  ActiveTargets,\n  GC_DID_NOT_RUN,\n  LRU_COLLECTION_DISABLED,\n  LruDelegate,\n  LruGarbageCollector,\n  LruParams,\n  LruResults\n} from './lru_garbage_collector';\nimport { Scheduler } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { isIndexedDbTransactionError } from './simple_db';\n\nconst LOG_TAG = 'LruGarbageCollector';\n\nexport const LRU_MINIMUM_CACHE_SIZE_BYTES = 1 * 1024 * 1024;\n\n/** How long we wait to try running LRU GC after SDK initialization. */\nconst INITIAL_GC_DELAY_MS = 1 * 60 * 1000;\n/** Minimum amount of time between GC checks, after the first one. */\nconst REGULAR_GC_DELAY_MS = 5 * 60 * 1000;\n\n// The type and comparator for the items contained in the SortedSet used in\n// place of a priority queue for the RollingSequenceNumberBuffer.\ntype BufferEntry = [ListenSequenceNumber, number];\n\nfunction bufferEntryComparator(\n  [aSequence, aIndex]: BufferEntry,\n  [bSequence, bIndex]: BufferEntry\n): number {\n  const seqCmp = primitiveComparator(aSequence, bSequence);\n  if (seqCmp === 0) {\n    // This order doesn't matter, but we can bias against churn by sorting\n    // entries created earlier as less than newer entries.\n    return primitiveComparator(aIndex, bIndex);\n  } else {\n    return seqCmp;\n  }\n}\n\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */\nclass RollingSequenceNumberBuffer {\n  private buffer: SortedSet<BufferEntry> = new SortedSet<BufferEntry>(\n    bufferEntryComparator\n  );\n\n  private previousIndex = 0;\n\n  constructor(private readonly maxElements: number) {}\n\n  private nextIndex(): number {\n    return ++this.previousIndex;\n  }\n\n  addElement(sequenceNumber: ListenSequenceNumber): void {\n    const entry: BufferEntry = [sequenceNumber, this.nextIndex()];\n    if (this.buffer.size < this.maxElements) {\n      this.buffer = this.buffer.add(entry);\n    } else {\n      const highestValue = this.buffer.last()!;\n      if (bufferEntryComparator(entry, highestValue) < 0) {\n        this.buffer = this.buffer.delete(highestValue).add(entry);\n      }\n    }\n  }\n\n  get maxValue(): ListenSequenceNumber {\n    // Guaranteed to be non-empty. If we decide we are not collecting any\n    // sequence numbers, nthSequenceNumber below short-circuits. If we have\n    // decided that we are collecting n sequence numbers, it's because n is some\n    // percentage of the existing sequence numbers. That means we should never\n    // be in a situation where we are collecting sequence numbers but don't\n    // actually have any.\n    return this.buffer.last()![0];\n  }\n}\n\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */\nexport class LruScheduler implements Scheduler {\n  private gcTask: DelayedOperation<void> | null;\n\n  constructor(\n    private readonly garbageCollector: LruGarbageCollector,\n    private readonly asyncQueue: AsyncQueue,\n    private readonly localStore: LocalStore\n  ) {\n    this.gcTask = null;\n  }\n\n  start(): void {\n    debugAssert(\n      this.gcTask === null,\n      'Cannot start an already started LruScheduler'\n    );\n    if (\n      this.garbageCollector.params.cacheSizeCollectionThreshold !==\n      LRU_COLLECTION_DISABLED\n    ) {\n      this.scheduleGC(INITIAL_GC_DELAY_MS);\n    }\n  }\n\n  stop(): void {\n    if (this.gcTask) {\n      this.gcTask.cancel();\n      this.gcTask = null;\n    }\n  }\n\n  get started(): boolean {\n    return this.gcTask !== null;\n  }\n\n  private scheduleGC(delay: number): void {\n    debugAssert(\n      this.gcTask === null,\n      'Cannot schedule GC while a task is pending'\n    );\n    logDebug(LOG_TAG, `Garbage collection scheduled in ${delay}ms`);\n    this.gcTask = this.asyncQueue.enqueueAfterDelay(\n      TimerId.LruGarbageCollection,\n      delay,\n      async () => {\n        this.gcTask = null;\n        try {\n          await this.localStore.collectGarbage(this.garbageCollector);\n        } catch (e) {\n          if (isIndexedDbTransactionError(e as Error)) {\n            logDebug(\n              LOG_TAG,\n              'Ignoring IndexedDB error during garbage collection: ',\n              e\n            );\n          } else {\n            await ignoreIfPrimaryLeaseLoss(e as FirestoreError);\n          }\n        }\n        await this.scheduleGC(REGULAR_GC_DELAY_MS);\n      }\n    );\n  }\n}\n\n/**\n * Implements the steps for LRU garbage collection.\n */\nclass LruGarbageCollectorImpl implements LruGarbageCollector {\n  constructor(\n    private readonly delegate: LruDelegate,\n    readonly params: LruParams\n  ) {}\n\n  calculateTargetCount(\n    txn: PersistenceTransaction,\n    percentile: number\n  ): PersistencePromise<number> {\n    return this.delegate.getSequenceNumberCount(txn).next(targetCount => {\n      return Math.floor((percentile / 100.0) * targetCount);\n    });\n  }\n\n  nthSequenceNumber(\n    txn: PersistenceTransaction,\n    n: number\n  ): PersistencePromise<ListenSequenceNumber> {\n    if (n === 0) {\n      return PersistencePromise.resolve(ListenSequence.INVALID);\n    }\n\n    const buffer = new RollingSequenceNumberBuffer(n);\n    return this.delegate\n      .forEachTarget(txn, target => buffer.addElement(target.sequenceNumber))\n      .next(() => {\n        return this.delegate.forEachOrphanedDocumentSequenceNumber(\n          txn,\n          sequenceNumber => buffer.addElement(sequenceNumber)\n        );\n      })\n      .next(() => buffer.maxValue);\n  }\n\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number> {\n    return this.delegate.removeTargets(txn, upperBound, activeTargetIds);\n  }\n\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number> {\n    return this.delegate.removeOrphanedDocuments(txn, upperBound);\n  }\n\n  collect(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults> {\n    if (this.params.cacheSizeCollectionThreshold === LRU_COLLECTION_DISABLED) {\n      logDebug('LruGarbageCollector', 'Garbage collection skipped; disabled');\n      return PersistencePromise.resolve(GC_DID_NOT_RUN);\n    }\n\n    return this.getCacheSize(txn).next(cacheSize => {\n      if (cacheSize < this.params.cacheSizeCollectionThreshold) {\n        logDebug(\n          'LruGarbageCollector',\n          `Garbage collection skipped; Cache size ${cacheSize} ` +\n            `is lower than threshold ${this.params.cacheSizeCollectionThreshold}`\n        );\n        return GC_DID_NOT_RUN;\n      } else {\n        return this.runGarbageCollection(txn, activeTargetIds);\n      }\n    });\n  }\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number> {\n    return this.delegate.getCacheSize(txn);\n  }\n\n  private runGarbageCollection(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults> {\n    let upperBoundSequenceNumber: number;\n    let sequenceNumbersToCollect: number, targetsRemoved: number;\n    // Timestamps for various pieces of the process\n    let countedTargetsTs: number,\n      foundUpperBoundTs: number,\n      removedTargetsTs: number,\n      removedDocumentsTs: number;\n    const startTs = Date.now();\n    return this.calculateTargetCount(txn, this.params.percentileToCollect)\n      .next(sequenceNumbers => {\n        // Cap at the configured max\n        if (sequenceNumbers > this.params.maximumSequenceNumbersToCollect) {\n          logDebug(\n            'LruGarbageCollector',\n            'Capping sequence numbers to collect down ' +\n              `to the maximum of ${this.params.maximumSequenceNumbersToCollect} ` +\n              `from ${sequenceNumbers}`\n          );\n          sequenceNumbersToCollect =\n            this.params.maximumSequenceNumbersToCollect;\n        } else {\n          sequenceNumbersToCollect = sequenceNumbers;\n        }\n        countedTargetsTs = Date.now();\n\n        return this.nthSequenceNumber(txn, sequenceNumbersToCollect);\n      })\n      .next(upperBound => {\n        upperBoundSequenceNumber = upperBound;\n        foundUpperBoundTs = Date.now();\n\n        return this.removeTargets(\n          txn,\n          upperBoundSequenceNumber,\n          activeTargetIds\n        );\n      })\n      .next(numTargetsRemoved => {\n        targetsRemoved = numTargetsRemoved;\n        removedTargetsTs = Date.now();\n\n        return this.removeOrphanedDocuments(txn, upperBoundSequenceNumber);\n      })\n      .next(documentsRemoved => {\n        removedDocumentsTs = Date.now();\n\n        if (getLogLevel() <= LogLevel.DEBUG) {\n          const desc =\n            'LRU Garbage Collection\\n' +\n            `\\tCounted targets in ${countedTargetsTs - startTs}ms\\n` +\n            `\\tDetermined least recently used ${sequenceNumbersToCollect} in ` +\n            `${foundUpperBoundTs - countedTargetsTs}ms\\n` +\n            `\\tRemoved ${targetsRemoved} targets in ` +\n            `${removedTargetsTs - foundUpperBoundTs}ms\\n` +\n            `\\tRemoved ${documentsRemoved} documents in ` +\n            `${removedDocumentsTs - removedTargetsTs}ms\\n` +\n            `Total Duration: ${removedDocumentsTs - startTs}ms`;\n          logDebug('LruGarbageCollector', desc);\n        }\n\n        return PersistencePromise.resolve<LruResults>({\n          didRun: true,\n          sequenceNumbersCollected: sequenceNumbersToCollect,\n          targetsRemoved,\n          documentsRemoved\n        });\n      });\n  }\n}\n\nexport function newLruGarbageCollector(\n  delegate: LruDelegate,\n  params: LruParams\n): LruGarbageCollector {\n  return new LruGarbageCollectorImpl(delegate, params);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _getProvider,\n  _removeServiceInstance,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport {\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport {\n  CredentialsProvider,\n  EmulatorAuthCredentialsProvider,\n  makeAuthCredentialsProvider,\n  OAuthToken\n} from '../api/credentials';\nimport { User } from '../auth/user';\nimport { DatabaseId, DEFAULT_DATABASE_NAME } from '../core/database_info';\nimport { Code, FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\nimport { logWarn } from '../util/log';\n\nimport { FirestoreService, removeComponents } from './components';\nimport {\n  DEFAULT_HOST,\n  FirestoreSettingsImpl,\n  PrivateSettings,\n  FirestoreSettings\n} from './settings';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore/lite': Firestore;\n  }\n}\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nexport class Firestore implements FirestoreService {\n  /**\n   * Whether it's a Firestore or Firestore Lite instance.\n   */\n  type: 'firestore-lite' | 'firestore' = 'firestore-lite';\n\n  readonly _persistenceKey: string = '(lite)';\n\n  private _settings = new FirestoreSettingsImpl({});\n  private _settingsFrozen = false;\n\n  // A task that is assigned when the terminate() is invoked and resolved when\n  // all components have shut down.\n  private _terminateTask?: Promise<void>;\n\n  /** @hideconstructor */\n  constructor(\n    public _authCredentials: CredentialsProvider<User>,\n    public _appCheckCredentials: CredentialsProvider<string>,\n    readonly _databaseId: DatabaseId,\n    readonly _app?: FirebaseApp\n  ) {}\n\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n  get app(): FirebaseApp {\n    if (!this._app) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\n          'not available'\n      );\n    }\n    return this._app;\n  }\n\n  get _initialized(): boolean {\n    return this._settingsFrozen;\n  }\n\n  get _terminated(): boolean {\n    return this._terminateTask !== undefined;\n  }\n\n  _setSettings(settings: PrivateSettings): void {\n    if (this._settingsFrozen) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'Firestore has already been started and its settings can no longer ' +\n          'be changed. You can only modify settings before calling any other ' +\n          'methods on a Firestore object.'\n      );\n    }\n    this._settings = new FirestoreSettingsImpl(settings);\n    if (settings.credentials !== undefined) {\n      this._authCredentials = makeAuthCredentialsProvider(settings.credentials);\n    }\n  }\n\n  _getSettings(): FirestoreSettingsImpl {\n    return this._settings;\n  }\n\n  _freezeSettings(): FirestoreSettingsImpl {\n    this._settingsFrozen = true;\n    return this._settings;\n  }\n\n  _delete(): Promise<void> {\n    if (!this._terminateTask) {\n      this._terminateTask = this._terminate();\n    }\n    return this._terminateTask;\n  }\n\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n  toJSON(): object {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n  protected _terminate(): Promise<void> {\n    removeComponents(this);\n    return Promise.resolve();\n  }\n}\n\n/**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings\n): Firestore;\n/**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized `Firestore` instance.\n * @beta\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore;\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore {\n  if (!databaseId) {\n    databaseId = DEFAULT_DATABASE_NAME;\n  }\n  const provider = _getProvider(app, 'firestore/lite');\n\n  if (provider.isInitialized(databaseId)) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Firestore can only be initialized once per app.'\n    );\n  }\n\n  return provider.initialize({\n    options: settings,\n    instanceIdentifier: databaseId\n  });\n}\n\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @returns The {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(): Firestore;\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(app: FirebaseApp): Firestore;\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param databaseId - The name of the database.\n * @returns The {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(databaseId: string): Firestore;\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @param databaseId - The name of the database.\n * @returns The {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(app: FirebaseApp, databaseId: string): Firestore;\nexport function getFirestore(\n  appOrDatabaseId?: FirebaseApp | string,\n  optionalDatabaseId?: string\n): Firestore {\n  const app: FirebaseApp =\n    typeof appOrDatabaseId === 'object' ? appOrDatabaseId : getApp();\n  const databaseId =\n    typeof appOrDatabaseId === 'string'\n      ? appOrDatabaseId\n      : optionalDatabaseId || '(default)';\n  const db = _getProvider(app, 'firestore/lite').getImmediate({\n    identifier: databaseId\n  }) as Firestore;\n  if (!db._initialized) {\n    const emulator = getDefaultEmulatorHostnameAndPort('firestore');\n    if (emulator) {\n      connectFirestoreEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nexport function connectFirestoreEmulator(\n  firestore: Firestore,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  firestore = cast(firestore, Firestore);\n  const settings = firestore._getSettings();\n  const newHostSetting = `${host}:${port}`;\n\n  if (settings.host !== DEFAULT_HOST && settings.host !== newHostSetting) {\n    logWarn(\n      'Host has been set in both settings() and connectFirestoreEmulator(), emulator host ' +\n        'will be used.'\n    );\n  }\n\n  firestore._setSettings({\n    ...settings,\n    host: newHostSetting,\n    ssl: false\n  });\n\n  if (options.mockUserToken) {\n    let token: string;\n    let user: User;\n    if (typeof options.mockUserToken === 'string') {\n      token = options.mockUserToken;\n      user = User.MOCK_USER;\n    } else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      token = createMockUserToken(\n        options.mockUserToken,\n        firestore._app?.options.projectId\n      );\n      const uid = options.mockUserToken.sub || options.mockUserToken.user_id;\n      if (!uid) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          \"mockUserToken must contain 'sub' or 'user_id' field!\"\n        );\n      }\n      user = new User(uid);\n    }\n\n    firestore._authCredentials = new EmulatorAuthCredentialsProvider(\n      new OAuthToken(token, user)\n    );\n  }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nexport function terminate(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  _removeServiceInstance(firestore.app, 'firestore/lite');\n  return firestore._delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIndexedDbTransactionError } from '../local/simple_db';\nimport { getDocument } from '../platform/dom';\nimport { ExponentialBackoff } from '../remote/backoff';\n\nimport { debugAssert, fail } from './assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from './async_queue';\nimport { FirestoreError } from './error';\nimport { logDebug, logError } from './log';\nimport { Deferred } from './promise';\n\nconst LOG_TAG = 'AsyncQueue';\n\nexport class AsyncQueueImpl implements AsyncQueue {\n  // The last promise in the queue.\n  private tail: Promise<unknown> = Promise.resolve();\n\n  // A list of retryable operations. Retryable operations are run in order and\n  // retried with backoff.\n  private retryableOps: Array<() => Promise<void>> = [];\n\n  // Is this AsyncQueue being shut down? Once it is set to true, it will not\n  // be changed again.\n  private _isShuttingDown: boolean = false;\n\n  // Operations scheduled to be queued in the future. Operations are\n  // automatically removed after they are run or canceled.\n  private delayedOperations: Array<DelayedOperation<unknown>> = [];\n\n  // visible for testing\n  failure: FirestoreError | null = null;\n\n  // Flag set while there's an outstanding AsyncQueue operation, used for\n  // assertion sanity-checks.\n  private operationInProgress = false;\n\n  // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n  private skipNonRestrictedTasks = false;\n\n  // List of TimerIds to fast-forward delays for.\n  private timerIdsToSkip: TimerId[] = [];\n\n  // Backoff timer used to schedule retries for retryable operations\n  private backoff = new ExponentialBackoff(this, TimerId.AsyncQueueRetry);\n\n  // Visibility handler that triggers an immediate retry of all retryable\n  // operations. Meant to speed up recovery when we regain file system access\n  // after page comes into foreground.\n  private visibilityHandler: () => void = () => {\n    const document = getDocument();\n    if (document) {\n      logDebug(\n        LOG_TAG,\n        'Visibility state changed to ' + document.visibilityState\n      );\n    }\n    this.backoff.skipBackoff();\n  };\n\n  constructor() {\n    const document = getDocument();\n    if (document && typeof document.addEventListener === 'function') {\n      document.addEventListener('visibilitychange', this.visibilityHandler);\n    }\n  }\n\n  get isShuttingDown(): boolean {\n    return this._isShuttingDown;\n  }\n\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget<T extends unknown>(op: () => Promise<T>): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(op);\n  }\n\n  enqueueAndForgetEvenWhileRestricted<T extends unknown>(\n    op: () => Promise<T>\n  ): void {\n    this.verifyNotFailed();\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueueInternal(op);\n  }\n\n  enterRestrictedMode(purgeExistingTasks?: boolean): void {\n    if (!this._isShuttingDown) {\n      this._isShuttingDown = true;\n      this.skipNonRestrictedTasks = purgeExistingTasks || false;\n      const document = getDocument();\n      if (document && typeof document.removeEventListener === 'function') {\n        document.removeEventListener(\n          'visibilitychange',\n          this.visibilityHandler\n        );\n      }\n    }\n  }\n\n  enqueue<T extends unknown>(op: () => Promise<T>): Promise<T> {\n    this.verifyNotFailed();\n    if (this._isShuttingDown) {\n      // Return a Promise which never resolves.\n      return new Promise<T>(() => {});\n    }\n\n    // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n    const task = new Deferred<T>();\n    return this.enqueueInternal<unknown>(() => {\n      if (this._isShuttingDown && this.skipNonRestrictedTasks) {\n        // We do not resolve 'task'\n        return Promise.resolve();\n      }\n\n      op().then(task.resolve, task.reject);\n      return task.promise;\n    }).then(() => task.promise);\n  }\n\n  enqueueRetryable(op: () => Promise<void>): void {\n    this.enqueueAndForget(() => {\n      this.retryableOps.push(op);\n      return this.retryNextOp();\n    });\n  }\n\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n  private async retryNextOp(): Promise<void> {\n    if (this.retryableOps.length === 0) {\n      return;\n    }\n\n    try {\n      await this.retryableOps[0]();\n      this.retryableOps.shift();\n      this.backoff.reset();\n    } catch (e) {\n      if (isIndexedDbTransactionError(e as Error)) {\n        logDebug(LOG_TAG, 'Operation failed with retryable error: ' + e);\n      } else {\n        throw e; // Failure will be handled by AsyncQueue\n      }\n    }\n\n    if (this.retryableOps.length > 0) {\n      // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.backoff.backoffAndRun(() => this.retryNextOp());\n    }\n  }\n\n  private enqueueInternal<T extends unknown>(op: () => Promise<T>): Promise<T> {\n    const newTail = this.tail.then(() => {\n      this.operationInProgress = true;\n      return op()\n        .catch((error: FirestoreError) => {\n          this.failure = error;\n          this.operationInProgress = false;\n          const message = getMessageOrStack(error);\n          logError('INTERNAL UNHANDLED ERROR: ', message);\n\n          // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n          throw error;\n        })\n        .then(result => {\n          this.operationInProgress = false;\n          return result;\n        });\n    });\n    this.tail = newTail;\n    return newTail;\n  }\n\n  enqueueAfterDelay<T extends unknown>(\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<T>\n  ): DelayedOperation<T> {\n    this.verifyNotFailed();\n\n    debugAssert(\n      delayMs >= 0,\n      `Attempted to schedule an operation with a negative delay of ${delayMs}`\n    );\n\n    // Fast-forward delays for timerIds that have been overriden.\n    if (this.timerIdsToSkip.indexOf(timerId) > -1) {\n      delayMs = 0;\n    }\n\n    const delayedOp = DelayedOperation.createAndSchedule<T>(\n      this,\n      timerId,\n      delayMs,\n      op,\n      removedOp =>\n        this.removeDelayedOperation(removedOp as DelayedOperation<unknown>)\n    );\n    this.delayedOperations.push(delayedOp as DelayedOperation<unknown>);\n    return delayedOp;\n  }\n\n  private verifyNotFailed(): void {\n    if (this.failure) {\n      fail('AsyncQueue is already failed: ' + getMessageOrStack(this.failure));\n    }\n  }\n\n  verifyOperationInProgress(): void {\n    debugAssert(\n      this.operationInProgress,\n      'verifyOpInProgress() called when no op in progress on this queue.'\n    );\n  }\n\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n  async drain(): Promise<void> {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let currentTail: Promise<unknown>;\n    do {\n      currentTail = this.tail;\n      await currentTail;\n    } while (currentTail !== this.tail);\n  }\n\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n  containsDelayedOperation(timerId: TimerId): boolean {\n    for (const op of this.delayedOperations) {\n      if (op.timerId === timerId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n  runAllDelayedOperationsUntil(lastTimerId: TimerId): Promise<void> {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.drain().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.delayedOperations.sort((a, b) => a.targetTimeMs - b.targetTimeMs);\n\n      for (const op of this.delayedOperations) {\n        op.skipDelay();\n        if (lastTimerId !== TimerId.All && op.timerId === lastTimerId) {\n          break;\n        }\n      }\n\n      return this.drain();\n    });\n  }\n\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n  skipDelaysForTimerId(timerId: TimerId): void {\n    this.timerIdsToSkip.push(timerId);\n  }\n\n  /** Called once a DelayedOperation is run or canceled. */\n  private removeDelayedOperation(op: DelayedOperation<unknown>): void {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const index = this.delayedOperations.indexOf(op);\n    debugAssert(index >= 0, 'Delayed operation not found.');\n    this.delayedOperations.splice(index, 1);\n  }\n}\n\nexport function newAsyncQueue(): AsyncQueue {\n  return new AsyncQueueImpl();\n}\n\n/**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\nfunction getMessageOrStack(error: Error): string {\n  let message = error.message || '';\n  if (error.stack) {\n    if (error.stack.includes(error.message)) {\n      message = error.stack;\n    } else {\n      message = error.message + '\\n' + error.stack;\n    }\n  }\n  return message;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _getProvider,\n  _removeServiceInstance,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { deepEqual, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\n\nimport { User } from '../auth/user';\nimport {\n  IndexedDbOfflineComponentProvider,\n  MultiTabOfflineComponentProvider,\n  OfflineComponentProvider,\n  OnlineComponentProvider\n} from '../core/component_provider';\nimport { DatabaseId, DEFAULT_DATABASE_NAME } from '../core/database_info';\nimport {\n  canFallbackFromIndexedDbError,\n  FirestoreClient,\n  firestoreClientDisableNetwork,\n  firestoreClientEnableNetwork,\n  firestoreClientGetNamedQuery,\n  firestoreClientLoadBundle,\n  firestoreClientWaitForPendingWrites,\n  setOfflineComponentProvider,\n  setOnlineComponentProvider\n} from '../core/firestore_client';\nimport { makeDatabaseInfo } from '../lite-api/components';\nimport {\n  Firestore as LiteFirestore,\n  connectFirestoreEmulator\n} from '../lite-api/database';\nimport { Query } from '../lite-api/reference';\nimport {\n  indexedDbClearPersistence,\n  indexedDbStoragePrefix\n} from '../local/indexeddb_persistence';\nimport { LRU_COLLECTION_DISABLED } from '../local/lru_garbage_collector';\nimport { LRU_MINIMUM_CACHE_SIZE_BYTES } from '../local/lru_garbage_collector_impl';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { newAsyncQueue } from '../util/async_queue_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\nimport { logWarn } from '../util/log';\nimport { Deferred } from '../util/promise';\n\nimport { LoadBundleTask } from './bundle';\nimport { CredentialsProvider } from './credentials';\nimport { PersistenceSettings, FirestoreSettings } from './settings';\nexport {\n  connectFirestoreEmulator,\n  EmulatorMockTokenOptions\n} from '../lite-api/database';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore': Firestore;\n  }\n}\n\n/**\n * Constant used to indicate the LRU garbage collection should be disabled.\n * Set this value as the `cacheSizeBytes` on the settings passed to the\n * {@link Firestore} instance.\n */\nexport const CACHE_SIZE_UNLIMITED = LRU_COLLECTION_DISABLED;\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nexport class Firestore extends LiteFirestore {\n  /**\n   * Whether it's a {@link Firestore} or Firestore Lite instance.\n   */\n  type: 'firestore-lite' | 'firestore' = 'firestore';\n\n  readonly _queue: AsyncQueue = newAsyncQueue();\n  readonly _persistenceKey: string;\n\n  _firestoreClient: FirestoreClient | undefined;\n\n  /** @hideconstructor */\n  constructor(\n    authCredentialsProvider: CredentialsProvider<User>,\n    appCheckCredentialsProvider: CredentialsProvider<string>,\n    databaseId: DatabaseId,\n    app?: FirebaseApp\n  ) {\n    super(\n      authCredentialsProvider,\n      appCheckCredentialsProvider,\n      databaseId,\n      app\n    );\n    this._persistenceKey = app?.name || '[DEFAULT]';\n  }\n\n  _terminate(): Promise<void> {\n    if (!this._firestoreClient) {\n      // The client must be initialized to ensure that all subsequent API\n      // usage throws an exception.\n      configureFirestore(this);\n    }\n    return this._firestoreClient!.terminate();\n  }\n}\n\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized {@link Firestore} instance.\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore {\n  if (!databaseId) {\n    databaseId = DEFAULT_DATABASE_NAME;\n  }\n  const provider = _getProvider(app, 'firestore');\n\n  if (provider.isInitialized(databaseId)) {\n    const existingInstance = provider.getImmediate({\n      identifier: databaseId\n    });\n    const initialSettings = provider.getOptions(\n      databaseId\n    ) as FirestoreSettings;\n    if (deepEqual(initialSettings, settings)) {\n      return existingInstance;\n    } else {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'initializeFirestore() has already been called with ' +\n          'different options. To avoid this error, call initializeFirestore() with the ' +\n          'same options as when it was originally called, or call getFirestore() to return the' +\n          ' already initialized instance.'\n      );\n    }\n  }\n\n  if (\n    settings.cacheSizeBytes !== undefined &&\n    settings.localCache !== undefined\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `cache and cacheSizeBytes cannot be specified at the same time as cacheSizeBytes will` +\n        `be deprecated. Instead, specify the cache size in the cache object`\n    );\n  }\n\n  if (\n    settings.cacheSizeBytes !== undefined &&\n    settings.cacheSizeBytes !== CACHE_SIZE_UNLIMITED &&\n    settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`\n    );\n  }\n\n  return provider.initialize({\n    options: settings,\n    instanceIdentifier: databaseId\n  });\n}\n\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @returns The default {@link Firestore} instance of the default app.\n */\nexport function getFirestore(): Firestore;\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The default {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(app: FirebaseApp): Firestore;\n/**\n * Returns the existing named {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param databaseId - The name of the database.\n * @returns The named {@link Firestore} instance of the default app.\n * @beta\n */\nexport function getFirestore(databaseId: string): Firestore;\n/**\n * Returns the existing named {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @param databaseId - The name of the database.\n * @returns The named {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(app: FirebaseApp, databaseId: string): Firestore;\nexport function getFirestore(\n  appOrDatabaseId?: FirebaseApp | string,\n  optionalDatabaseId?: string\n): Firestore {\n  const app: FirebaseApp =\n    typeof appOrDatabaseId === 'object' ? appOrDatabaseId : getApp();\n  const databaseId =\n    typeof appOrDatabaseId === 'string'\n      ? appOrDatabaseId\n      : optionalDatabaseId || DEFAULT_DATABASE_NAME;\n  const db = _getProvider(app, 'firestore').getImmediate({\n    identifier: databaseId\n  }) as Firestore;\n  if (!db._initialized) {\n    const emulator = getDefaultEmulatorHostnameAndPort('firestore');\n    if (emulator) {\n      connectFirestoreEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * @internal\n */\nexport function ensureFirestoreConfigured(\n  firestore: Firestore\n): FirestoreClient {\n  if (!firestore._firestoreClient) {\n    configureFirestore(firestore);\n  }\n  firestore._firestoreClient!.verifyNotTerminated();\n  return firestore._firestoreClient as FirestoreClient;\n}\n\nexport function configureFirestore(firestore: Firestore): void {\n  const settings = firestore._freezeSettings();\n  debugAssert(!!settings.host, 'FirestoreSettings.host is not set');\n  debugAssert(\n    !firestore._firestoreClient,\n    'configureFirestore() called multiple times'\n  );\n\n  const databaseInfo = makeDatabaseInfo(\n    firestore._databaseId,\n    firestore._app?.options.appId || '',\n    firestore._persistenceKey,\n    settings\n  );\n  firestore._firestoreClient = new FirestoreClient(\n    firestore._authCredentials,\n    firestore._appCheckCredentials,\n    firestore._queue,\n    databaseInfo\n  );\n  if (\n    settings.localCache?._offlineComponentProvider &&\n    settings.localCache?._onlineComponentProvider\n  ) {\n    firestore._firestoreClient._uninitializedComponentsProvider = {\n      _offlineKind: settings.localCache.kind,\n      _offline: settings.localCache._offlineComponentProvider,\n      _online: settings.localCache._onlineComponentProvider\n    };\n  }\n}\n\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * On failure, `enableIndexedDbPersistence()` will reject the promise or\n * throw an exception. There are several reasons why this can fail, which can be\n * identified by the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline persistence\n *     implementation.\n *\n * Note that even after a failure, the {@link Firestore} instance will remain\n * usable, however offline persistence will be disabled.\n *\n * Note: `enableIndexedDbPersistence()` must be called before any other functions\n * (other than {@link initializeFirestore}, {@link (getFirestore:1)} or\n * {@link clearIndexedDbPersistence}.\n *\n * Persistence cannot be used in a Node.js environment.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on IndexedDb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nexport function enableIndexedDbPersistence(\n  firestore: Firestore,\n  persistenceSettings?: PersistenceSettings\n): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  verifyNotInitialized(firestore);\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'SDK cache is already specified.'\n    );\n  }\n\n  logWarn(\n    'enableIndexedDbPersistence() will be deprecated in the future, ' +\n      'you can use `FirestoreSettings.cache` instead.'\n  );\n  const settings = firestore._freezeSettings();\n\n  const onlineComponentProvider = new OnlineComponentProvider();\n  const offlineComponentProvider = new IndexedDbOfflineComponentProvider(\n    onlineComponentProvider,\n    settings.cacheSizeBytes,\n    persistenceSettings?.forceOwnership\n  );\n  return setPersistenceProviders(\n    client,\n    onlineComponentProvider,\n    offlineComponentProvider\n  );\n}\n\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * On failure, `enableMultiTabIndexedDbPersistence()` will reject the promise or\n * throw an exception. There are several reasons why this can fail, which can be\n * identified by the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline persistence\n *     implementation.\n *\n * Note that even after a failure, the {@link Firestore} instance will remain\n * usable, however offline persistence will be disabled.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on indexeddb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nexport function enableMultiTabIndexedDbPersistence(\n  firestore: Firestore\n): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  verifyNotInitialized(firestore);\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'SDK cache is already specified.'\n    );\n  }\n\n  logWarn(\n    'enableMultiTabIndexedDbPersistence() will be deprecated in the future, ' +\n      'you can use `FirestoreSettings.cache` instead.'\n  );\n  const settings = firestore._freezeSettings();\n\n  const onlineComponentProvider = new OnlineComponentProvider();\n  const offlineComponentProvider = new MultiTabOfflineComponentProvider(\n    onlineComponentProvider,\n    settings.cacheSizeBytes\n  );\n  return setPersistenceProviders(\n    client,\n    onlineComponentProvider,\n    offlineComponentProvider\n  );\n}\n\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */\nfunction setPersistenceProviders(\n  client: FirestoreClient,\n  onlineComponentProvider: OnlineComponentProvider,\n  offlineComponentProvider: OfflineComponentProvider\n): Promise<void> {\n  const persistenceResult = new Deferred();\n  return client.asyncQueue\n    .enqueue(async () => {\n      try {\n        await setOfflineComponentProvider(client, offlineComponentProvider);\n        await setOnlineComponentProvider(client, onlineComponentProvider);\n        persistenceResult.resolve();\n      } catch (e) {\n        const error = e as FirestoreError | DOMException;\n        if (!canFallbackFromIndexedDbError(error)) {\n          throw error;\n        }\n        logWarn(\n          'Error enabling indexeddb cache. Falling back to ' +\n            'memory cache: ' +\n            error\n        );\n        persistenceResult.reject(error);\n      }\n    })\n    .then(() => persistenceResult.promise);\n}\n\n/**\n * Clears the persistent storage. This includes pending writes and cached\n * documents.\n *\n * Must be called while the {@link Firestore} instance is not started (after the app is\n * terminated or when the app is first initialized). On startup, this function\n * must be called before other functions (other than {@link\n * initializeFirestore} or {@link (getFirestore:1)})). If the {@link Firestore}\n * instance is still running, the promise will be rejected with the error code\n * of `failed-precondition`.\n *\n * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n * dropping existing data but does not attempt to securely overwrite or\n * otherwise make cached data unrecoverable. For applications that are sensitive\n * to the disclosure of cached data in between user sessions, we strongly\n * recommend not enabling persistence at all.\n *\n * @param firestore - The {@link Firestore} instance to clear persistence for.\n * @returns A `Promise` that is resolved when the persistent storage is\n * cleared. Otherwise, the promise is rejected with an error.\n */\nexport function clearIndexedDbPersistence(firestore: Firestore): Promise<void> {\n  if (firestore._initialized && !firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Persistence can only be cleared before a Firestore instance is ' +\n        'initialized or after it is terminated.'\n    );\n  }\n\n  const deferred = new Deferred<void>();\n  firestore._queue.enqueueAndForgetEvenWhileRestricted(async () => {\n    try {\n      await indexedDbClearPersistence(\n        indexedDbStoragePrefix(firestore._databaseId, firestore._persistenceKey)\n      );\n      deferred.resolve();\n    } catch (e) {\n      deferred.reject(e as Error | undefined);\n    }\n  });\n  return deferred.promise;\n}\n\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */\nexport function waitForPendingWrites(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientWaitForPendingWrites(client);\n}\n\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */\nexport function enableNetwork(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientEnableNetwork(client);\n}\n\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */\nexport function disableNetwork(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientDisableNetwork(client);\n}\n\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link (getFirestore:1)}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nexport function terminate(firestore: Firestore): Promise<void> {\n  _removeServiceInstance(\n    firestore.app,\n    'firestore',\n    firestore._databaseId.database\n  );\n  return firestore._delete();\n}\n\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for.\n * @param bundleData - An object representing the bundle to be loaded. Valid\n * objects are `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns A `LoadBundleTask` object, which notifies callers with progress\n * updates, and completion or error events. It can be used as a\n * `Promise<LoadBundleTaskProgress>`.\n */\nexport function loadBundle(\n  firestore: Firestore,\n  bundleData: ReadableStream<Uint8Array> | ArrayBuffer | string\n): LoadBundleTask {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const resultTask = new LoadBundleTask();\n  firestoreClientLoadBundle(\n    client,\n    firestore._databaseId,\n    bundleData,\n    resultTask\n  );\n  return resultTask;\n}\n\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given\n * name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once\n * in local cache, use this method to extract a {@link Query} by name.\n *\n * @param firestore - The {@link Firestore} instance to read the query from.\n * @param name - The name of the query.\n * @returns A `Promise` that is resolved with the Query or `null`.\n */\nexport function namedQuery(\n  firestore: Firestore,\n  name: string\n): Promise<Query | null> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientGetNamedQuery(client, name).then(namedQuery => {\n    if (!namedQuery) {\n      return null;\n    }\n\n    return new Query(firestore, null, namedQuery.query);\n  });\n}\n\nfunction verifyNotInitialized(firestore: Firestore): void {\n  if (firestore._initialized || firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Firestore has already been started and persistence can no longer be ' +\n        'enabled. You can only enable persistence before calling any other ' +\n        'methods on a Firestore object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DocumentData,\n  FieldPath as PublicFieldPath,\n  SetOptions\n} from '@firebase/firestore-types';\nimport { Compat, deepEqual, getModularInstance } from '@firebase/util';\n\nimport { ParseContext } from '../api/parse_context';\nimport { DatabaseId } from '../core/database_info';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  FieldTransform,\n  Mutation,\n  PatchMutation,\n  Precondition,\n  SetMutation\n} from '../model/mutation';\nimport { ObjectValue } from '../model/object_value';\nimport { FieldPath as InternalFieldPath } from '../model/path';\nimport {\n  ArrayRemoveTransformOperation,\n  ArrayUnionTransformOperation,\n  NumericIncrementTransformOperation,\n  ServerTimestampTransform\n} from '../model/transform_operation';\nimport { newSerializer } from '../platform/serializer';\nimport {\n  MapValue as ProtoMapValue,\n  Value as ProtoValue\n} from '../protos/firestore_proto_api';\nimport { toNumber } from '../remote/number_serializer';\nimport {\n  JsonProtoSerializer,\n  toBytes,\n  toResourceName,\n  toTimestamp\n} from '../remote/serializer';\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { isPlainObject, valueDescription } from '../util/input_validation';\nimport { Dict, forEach, isEmpty } from '../util/obj';\n\nimport { Bytes } from './bytes';\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport { FieldValue } from './field_value';\nimport { GeoPoint } from './geo_point';\nimport {\n  DocumentReference,\n  PartialWithFieldValue,\n  WithFieldValue\n} from './reference';\nimport { Timestamp } from './timestamp';\n\nconst RESERVED_FIELD_REGEX = /^__.*__$/;\n\n/**\n * An untyped Firestore Data Converter interface that is shared between the\n * lite, firestore-exp and classic SDK.\n */\nexport interface UntypedFirestoreDataConverter<\n  AppModelType,\n  DbModelType extends DocumentData = DocumentData\n> {\n  toFirestore(\n    modelObject: WithFieldValue<AppModelType>\n  ): WithFieldValue<DbModelType>;\n  toFirestore(\n    modelObject: PartialWithFieldValue<AppModelType>,\n    options: SetOptions\n  ): PartialWithFieldValue<DbModelType>;\n  fromFirestore(snapshot: unknown, options?: unknown): AppModelType;\n}\n\n/** The result of parsing document data (e.g. for a setData call). */\nexport class ParsedSetData {\n  constructor(\n    readonly data: ObjectValue,\n    readonly fieldMask: FieldMask | null,\n    readonly fieldTransforms: FieldTransform[]\n  ) {}\n\n  toMutation(key: DocumentKey, precondition: Precondition): Mutation {\n    if (this.fieldMask !== null) {\n      return new PatchMutation(\n        key,\n        this.data,\n        this.fieldMask,\n        precondition,\n        this.fieldTransforms\n      );\n    } else {\n      return new SetMutation(\n        key,\n        this.data,\n        precondition,\n        this.fieldTransforms\n      );\n    }\n  }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nexport class ParsedUpdateData {\n  constructor(\n    readonly data: ObjectValue,\n    // The fieldMask does not include document transforms.\n    readonly fieldMask: FieldMask,\n    readonly fieldTransforms: FieldTransform[]\n  ) {}\n\n  toMutation(key: DocumentKey, precondition: Precondition): Mutation {\n    return new PatchMutation(\n      key,\n      this.data,\n      this.fieldMask,\n      precondition,\n      this.fieldTransforms\n    );\n  }\n}\n\n/*\n * Represents what type of API method provided the data being parsed; useful\n * for determining which error conditions apply during parsing and providing\n * better error messages.\n */\nexport const enum UserDataSource {\n  Set,\n  Update,\n  MergeSet,\n  /**\n   * Indicates the source is a where clause, cursor bound, arrayUnion()\n   * element, etc. Of note, isWrite(source) will return false.\n   */\n  Argument,\n  /**\n   * Indicates that the source is an Argument that may directly contain nested\n   * arrays (e.g. the operand of an `in` query).\n   */\n  ArrayArgument\n}\n\nfunction isWrite(dataSource: UserDataSource): boolean {\n  switch (dataSource) {\n    case UserDataSource.Set: // fall through\n    case UserDataSource.MergeSet: // fall through\n    case UserDataSource.Update:\n      return true;\n    case UserDataSource.Argument:\n    case UserDataSource.ArrayArgument:\n      return false;\n    default:\n      throw fail(`Unexpected case for UserDataSource: ${dataSource}`);\n  }\n}\n\n/** Contains the settings that are mutated as we parse user data. */\ninterface ContextSettings {\n  /** Indicates what kind of API method this data came from. */\n  readonly dataSource: UserDataSource;\n  /** The name of the method the user called to create the ParseContext. */\n  readonly methodName: string;\n  /** The document the user is attempting to modify, if that applies. */\n  readonly targetDoc?: DocumentKey;\n  /**\n   * A path within the object being parsed. This could be an empty path (in\n   * which case the context represents the root of the data being parsed), or a\n   * nonempty path (indicating the context represents a nested location within\n   * the data).\n   */\n  readonly path?: InternalFieldPath;\n  /**\n   * Whether or not this context corresponds to an element of an array.\n   * If not set, elements are treated as if they were outside of arrays.\n   */\n  readonly arrayElement?: boolean;\n  /**\n   * Whether or not a converter was specified in this context. If true, error\n   * messages will reference the converter when invalid data is provided.\n   */\n  readonly hasConverter?: boolean;\n}\n\n/** A \"context\" object passed around while parsing user data. */\nclass ParseContextImpl implements ParseContext {\n  readonly fieldTransforms: FieldTransform[];\n  readonly fieldMask: InternalFieldPath[];\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(\n    readonly settings: ContextSettings,\n    readonly databaseId: DatabaseId,\n    readonly serializer: JsonProtoSerializer,\n    readonly ignoreUndefinedProperties: boolean,\n    fieldTransforms?: FieldTransform[],\n    fieldMask?: InternalFieldPath[]\n  ) {\n    // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    if (fieldTransforms === undefined) {\n      this.validatePath();\n    }\n    this.fieldTransforms = fieldTransforms || [];\n    this.fieldMask = fieldMask || [];\n  }\n\n  get path(): InternalFieldPath | undefined {\n    return this.settings.path;\n  }\n\n  get dataSource(): UserDataSource {\n    return this.settings.dataSource;\n  }\n\n  /** Returns a new context with the specified settings overwritten. */\n  contextWith(configuration: Partial<ContextSettings>): ParseContextImpl {\n    return new ParseContextImpl(\n      { ...this.settings, ...configuration },\n      this.databaseId,\n      this.serializer,\n      this.ignoreUndefinedProperties,\n      this.fieldTransforms,\n      this.fieldMask\n    );\n  }\n\n  childContextForField(field: string): ParseContextImpl {\n    const childPath = this.path?.child(field);\n    const context = this.contextWith({ path: childPath, arrayElement: false });\n    context.validatePathSegment(field);\n    return context;\n  }\n\n  childContextForFieldPath(field: InternalFieldPath): ParseContextImpl {\n    const childPath = this.path?.child(field);\n    const context = this.contextWith({ path: childPath, arrayElement: false });\n    context.validatePath();\n    return context;\n  }\n\n  childContextForArray(index: number): ParseContextImpl {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.contextWith({ path: undefined, arrayElement: true });\n  }\n\n  createError(reason: string): FirestoreError {\n    return createError(\n      reason,\n      this.settings.methodName,\n      this.settings.hasConverter || false,\n      this.path,\n      this.settings.targetDoc\n    );\n  }\n\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n  contains(fieldPath: InternalFieldPath): boolean {\n    return (\n      this.fieldMask.find(field => fieldPath.isPrefixOf(field)) !== undefined ||\n      this.fieldTransforms.find(transform =>\n        fieldPath.isPrefixOf(transform.field)\n      ) !== undefined\n    );\n  }\n\n  private validatePath(): void {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (!this.path) {\n      return;\n    }\n    for (let i = 0; i < this.path.length; i++) {\n      this.validatePathSegment(this.path.get(i));\n    }\n  }\n\n  private validatePathSegment(segment: string): void {\n    if (segment.length === 0) {\n      throw this.createError('Document fields must not be empty');\n    }\n    if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\n      throw this.createError('Document fields cannot begin and end with \"__\"');\n    }\n  }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nexport class UserDataReader {\n  private readonly serializer: JsonProtoSerializer;\n\n  constructor(\n    private readonly databaseId: DatabaseId,\n    private readonly ignoreUndefinedProperties: boolean,\n    serializer?: JsonProtoSerializer\n  ) {\n    this.serializer = serializer || newSerializer(databaseId);\n  }\n\n  /** Creates a new top-level parse context. */\n  createContext(\n    dataSource: UserDataSource,\n    methodName: string,\n    targetDoc?: DocumentKey,\n    hasConverter = false\n  ): ParseContextImpl {\n    return new ParseContextImpl(\n      {\n        dataSource,\n        methodName,\n        targetDoc,\n        path: InternalFieldPath.emptyPath(),\n        arrayElement: false,\n        hasConverter\n      },\n      this.databaseId,\n      this.serializer,\n      this.ignoreUndefinedProperties\n    );\n  }\n}\n\nexport function newUserDataReader(firestore: Firestore): UserDataReader {\n  const settings = firestore._freezeSettings();\n  const serializer = newSerializer(firestore._databaseId);\n  return new UserDataReader(\n    firestore._databaseId,\n    !!settings.ignoreUndefinedProperties,\n    serializer\n  );\n}\n\n/** Parse document data from a set() call. */\nexport function parseSetData(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  input: unknown,\n  hasConverter: boolean,\n  options: SetOptions = {}\n): ParsedSetData {\n  const context = userDataReader.createContext(\n    options.merge || options.mergeFields\n      ? UserDataSource.MergeSet\n      : UserDataSource.Set,\n    methodName,\n    targetDoc,\n    hasConverter\n  );\n  validatePlainObject('Data must be an object, but it was:', context, input);\n  const updateData = parseObject(input, context)!;\n\n  let fieldMask: FieldMask | null;\n  let fieldTransforms: FieldTransform[];\n\n  if (options.merge) {\n    fieldMask = new FieldMask(context.fieldMask);\n    fieldTransforms = context.fieldTransforms;\n  } else if (options.mergeFields) {\n    const validatedFieldPaths: InternalFieldPath[] = [];\n\n    for (const stringOrFieldPath of options.mergeFields) {\n      const fieldPath = fieldPathFromArgument(\n        methodName,\n        stringOrFieldPath,\n        targetDoc\n      );\n      if (!context.contains(fieldPath)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Field '${fieldPath}' is specified in your field mask but missing from your input data.`\n        );\n      }\n\n      if (!fieldMaskContains(validatedFieldPaths, fieldPath)) {\n        validatedFieldPaths.push(fieldPath);\n      }\n    }\n\n    fieldMask = new FieldMask(validatedFieldPaths);\n    fieldTransforms = context.fieldTransforms.filter(transform =>\n      fieldMask!.covers(transform.field)\n    );\n  } else {\n    fieldMask = null;\n    fieldTransforms = context.fieldTransforms;\n  }\n\n  return new ParsedSetData(\n    new ObjectValue(updateData),\n    fieldMask,\n    fieldTransforms\n  );\n}\n\nexport class DeleteFieldValueImpl extends FieldValue {\n  _toFieldTransform(context: ParseContextImpl): null {\n    if (context.dataSource === UserDataSource.MergeSet) {\n      // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n      context.fieldMask.push(context.path!);\n    } else if (context.dataSource === UserDataSource.Update) {\n      debugAssert(\n        context.path!.length > 0,\n        `${this._methodName}() at the top level should have already ` +\n          'been handled.'\n      );\n      throw context.createError(\n        `${this._methodName}() can only appear at the top level ` +\n          'of your update data'\n      );\n    } else {\n      // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\n      throw context.createError(\n        `${this._methodName}() cannot be used with set() unless you pass ` +\n          '{merge:true}'\n      );\n    }\n    return null;\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return other instanceof DeleteFieldValueImpl;\n  }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction createSentinelChildContext(\n  fieldValue: FieldValue,\n  context: ParseContextImpl,\n  arrayElement: boolean\n): ParseContextImpl {\n  return new ParseContextImpl(\n    {\n      dataSource: UserDataSource.Argument,\n      targetDoc: context.settings.targetDoc,\n      methodName: fieldValue._methodName,\n      arrayElement\n    },\n    context.databaseId,\n    context.serializer,\n    context.ignoreUndefinedProperties\n  );\n}\n\nexport class ServerTimestampFieldValueImpl extends FieldValue {\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    return new FieldTransform(context.path!, new ServerTimestampTransform());\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return other instanceof ServerTimestampFieldValueImpl;\n  }\n}\n\nexport class ArrayUnionFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _elements: unknown[]) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const parseContext = createSentinelChildContext(\n      this,\n      context,\n      /*array=*/ true\n    );\n    const parsedElements = this._elements.map(\n      element => parseData(element, parseContext)!\n    );\n    const arrayUnion = new ArrayUnionTransformOperation(parsedElements);\n    return new FieldTransform(context.path!, arrayUnion);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return (\n      other instanceof ArrayUnionFieldValueImpl &&\n      deepEqual(this._elements, other._elements)\n    );\n  }\n}\n\nexport class ArrayRemoveFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _elements: unknown[]) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const parseContext = createSentinelChildContext(\n      this,\n      context,\n      /*array=*/ true\n    );\n    const parsedElements = this._elements.map(\n      element => parseData(element, parseContext)!\n    );\n    const arrayUnion = new ArrayRemoveTransformOperation(parsedElements);\n    return new FieldTransform(context.path!, arrayUnion);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return (\n      other instanceof ArrayRemoveFieldValueImpl &&\n      deepEqual(this._elements, other._elements)\n    );\n  }\n}\n\nexport class NumericIncrementFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _operand: number) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const numericIncrement = new NumericIncrementTransformOperation(\n      context.serializer,\n      toNumber(context.serializer, this._operand)\n    );\n    return new FieldTransform(context.path!, numericIncrement);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return (\n      other instanceof NumericIncrementFieldValueImpl &&\n      this._operand === other._operand\n    );\n  }\n}\n\n/** Parse update data from an update() call. */\nexport function parseUpdateData(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  input: unknown\n): ParsedUpdateData {\n  const context = userDataReader.createContext(\n    UserDataSource.Update,\n    methodName,\n    targetDoc\n  );\n  validatePlainObject('Data must be an object, but it was:', context, input);\n\n  const fieldMaskPaths: InternalFieldPath[] = [];\n  const updateData = ObjectValue.empty();\n  forEach(input as Dict<unknown>, (key, value) => {\n    const path = fieldPathFromDotSeparatedString(methodName, key, targetDoc);\n\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    value = getModularInstance(value);\n\n    const childContext = context.childContextForFieldPath(path);\n    if (value instanceof DeleteFieldValueImpl) {\n      // Add it to the field mask, but don't add anything to updateData.\n      fieldMaskPaths.push(path);\n    } else {\n      const parsedValue = parseData(value, childContext);\n      if (parsedValue != null) {\n        fieldMaskPaths.push(path);\n        updateData.set(path, parsedValue);\n      }\n    }\n  });\n\n  const mask = new FieldMask(fieldMaskPaths);\n  return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */\nexport function parseUpdateVarargs(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  field: string | PublicFieldPath | Compat<PublicFieldPath>,\n  value: unknown,\n  moreFieldsAndValues: unknown[]\n): ParsedUpdateData {\n  const context = userDataReader.createContext(\n    UserDataSource.Update,\n    methodName,\n    targetDoc\n  );\n  const keys = [fieldPathFromArgument(methodName, field, targetDoc)];\n  const values = [value];\n\n  if (moreFieldsAndValues.length % 2 !== 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${methodName}() needs to be called with an even number ` +\n        'of arguments that alternate between field names and values.'\n    );\n  }\n\n  for (let i = 0; i < moreFieldsAndValues.length; i += 2) {\n    keys.push(\n      fieldPathFromArgument(\n        methodName,\n        moreFieldsAndValues[i] as string | PublicFieldPath\n      )\n    );\n    values.push(moreFieldsAndValues[i + 1]);\n  }\n\n  const fieldMaskPaths: InternalFieldPath[] = [];\n  const updateData = ObjectValue.empty();\n\n  // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n  for (let i = keys.length - 1; i >= 0; --i) {\n    if (!fieldMaskContains(fieldMaskPaths, keys[i])) {\n      const path = keys[i];\n      let value = values[i];\n\n      // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n      value = getModularInstance(value);\n\n      const childContext = context.childContextForFieldPath(path);\n      if (value instanceof DeleteFieldValueImpl) {\n        // Add it to the field mask, but don't add anything to updateData.\n        fieldMaskPaths.push(path);\n      } else {\n        const parsedValue = parseData(value, childContext);\n        if (parsedValue != null) {\n          fieldMaskPaths.push(path);\n          updateData.set(path, parsedValue);\n        }\n      }\n    }\n  }\n\n  const mask = new FieldMask(fieldMaskPaths);\n  return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nexport function parseQueryValue(\n  userDataReader: UserDataReader,\n  methodName: string,\n  input: unknown,\n  allowArrays = false\n): ProtoValue {\n  const context = userDataReader.createContext(\n    allowArrays ? UserDataSource.ArrayArgument : UserDataSource.Argument,\n    methodName\n  );\n  const parsed = parseData(input, context);\n  debugAssert(parsed != null, 'Parsed data should not be null.');\n  debugAssert(\n    context.fieldTransforms.length === 0,\n    'Field transforms should have been disallowed.'\n  );\n  return parsed;\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nexport function parseData(\n  input: unknown,\n  context: ParseContextImpl\n): ProtoValue | null {\n  // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  input = getModularInstance(input);\n\n  if (looksLikeJsonObject(input)) {\n    validatePlainObject('Unsupported field value:', context, input);\n    return parseObject(input, context);\n  } else if (input instanceof FieldValue) {\n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    parseSentinelFieldValue(input, context);\n    return null;\n  } else if (input === undefined && context.ignoreUndefinedProperties) {\n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n  } else {\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    if (context.path) {\n      context.fieldMask.push(context.path);\n    }\n\n    if (input instanceof Array) {\n      // TODO(b/34871131): Include the path containing the array in the error\n      // message.\n      // In the case of IN queries, the parsed data is an array (representing\n      // the set of values to be included for the IN query) that may directly\n      // contain additional arrays (each representing an individual field\n      // value), so we disable this validation.\n      if (\n        context.settings.arrayElement &&\n        context.dataSource !== UserDataSource.ArrayArgument\n      ) {\n        throw context.createError('Nested arrays are not supported');\n      }\n      return parseArray(input as unknown[], context);\n    } else {\n      return parseScalarValue(input, context);\n    }\n  }\n}\n\nfunction parseObject(\n  obj: Dict<unknown>,\n  context: ParseContextImpl\n): { mapValue: ProtoMapValue } {\n  const fields: Dict<ProtoValue> = {};\n\n  if (isEmpty(obj)) {\n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    if (context.path && context.path.length > 0) {\n      context.fieldMask.push(context.path);\n    }\n  } else {\n    forEach(obj, (key: string, val: unknown) => {\n      const parsedValue = parseData(val, context.childContextForField(key));\n      if (parsedValue != null) {\n        fields[key] = parsedValue;\n      }\n    });\n  }\n\n  return { mapValue: { fields } };\n}\n\nfunction parseArray(array: unknown[], context: ParseContextImpl): ProtoValue {\n  const values: ProtoValue[] = [];\n  let entryIndex = 0;\n  for (const entry of array) {\n    let parsedEntry = parseData(\n      entry,\n      context.childContextForArray(entryIndex)\n    );\n    if (parsedEntry == null) {\n      // Just include nulls in the array for fields being replaced with a\n      // sentinel.\n      parsedEntry = { nullValue: 'NULL_VALUE' };\n    }\n    values.push(parsedEntry);\n    entryIndex++;\n  }\n  return { arrayValue: { values } };\n}\n\n/**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\nfunction parseSentinelFieldValue(\n  value: FieldValue,\n  context: ParseContextImpl\n): void {\n  // Sentinels are only supported with writes, and not within arrays.\n  if (!isWrite(context.dataSource)) {\n    throw context.createError(\n      `${value._methodName}() can only be used with update() and set()`\n    );\n  }\n  if (!context.path) {\n    throw context.createError(\n      `${value._methodName}() is not currently supported inside arrays`\n    );\n  }\n\n  const fieldTransform = value._toFieldTransform(context);\n  if (fieldTransform) {\n    context.fieldTransforms.push(fieldTransform);\n  }\n}\n\n/**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */\nfunction parseScalarValue(\n  value: unknown,\n  context: ParseContextImpl\n): ProtoValue | null {\n  value = getModularInstance(value);\n\n  if (value === null) {\n    return { nullValue: 'NULL_VALUE' };\n  } else if (typeof value === 'number') {\n    return toNumber(context.serializer, value);\n  } else if (typeof value === 'boolean') {\n    return { booleanValue: value };\n  } else if (typeof value === 'string') {\n    return { stringValue: value };\n  } else if (value instanceof Date) {\n    const timestamp = Timestamp.fromDate(value);\n    return {\n      timestampValue: toTimestamp(context.serializer, timestamp)\n    };\n  } else if (value instanceof Timestamp) {\n    // Firestore backend truncates precision down to microseconds. To ensure\n    // offline mode works the same with regards to truncation, perform the\n    // truncation immediately without waiting for the backend to do that.\n    const timestamp = new Timestamp(\n      value.seconds,\n      Math.floor(value.nanoseconds / 1000) * 1000\n    );\n    return {\n      timestampValue: toTimestamp(context.serializer, timestamp)\n    };\n  } else if (value instanceof GeoPoint) {\n    return {\n      geoPointValue: {\n        latitude: value.latitude,\n        longitude: value.longitude\n      }\n    };\n  } else if (value instanceof Bytes) {\n    return { bytesValue: toBytes(context.serializer, value._byteString) };\n  } else if (value instanceof DocumentReference) {\n    const thisDb = context.databaseId;\n    const otherDb = value.firestore._databaseId;\n    if (!otherDb.isEqual(thisDb)) {\n      throw context.createError(\n        'Document reference is for database ' +\n          `${otherDb.projectId}/${otherDb.database} but should be ` +\n          `for database ${thisDb.projectId}/${thisDb.database}`\n      );\n    }\n    return {\n      referenceValue: toResourceName(\n        value.firestore._databaseId || context.databaseId,\n        value._key.path\n      )\n    };\n  } else {\n    throw context.createError(\n      `Unsupported field value: ${valueDescription(value)}`\n    );\n  }\n}\n\n/**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */\nfunction looksLikeJsonObject(input: unknown): boolean {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    !(input instanceof Array) &&\n    !(input instanceof Date) &&\n    !(input instanceof Timestamp) &&\n    !(input instanceof GeoPoint) &&\n    !(input instanceof Bytes) &&\n    !(input instanceof DocumentReference) &&\n    !(input instanceof FieldValue)\n  );\n}\n\nfunction validatePlainObject(\n  message: string,\n  context: ParseContextImpl,\n  input: unknown\n): asserts input is Dict<unknown> {\n  if (!looksLikeJsonObject(input) || !isPlainObject(input)) {\n    const description = valueDescription(input);\n    if (description === 'an object') {\n      // Massage the error if it was an object.\n      throw context.createError(message + ' a custom object');\n    } else {\n      throw context.createError(message + ' ' + description);\n    }\n  }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nexport function fieldPathFromArgument(\n  methodName: string,\n  path: string | PublicFieldPath | Compat<PublicFieldPath>,\n  targetDoc?: DocumentKey\n): InternalFieldPath {\n  // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  path = getModularInstance(path);\n\n  if (path instanceof FieldPath) {\n    return path._internalPath;\n  } else if (typeof path === 'string') {\n    return fieldPathFromDotSeparatedString(methodName, path);\n  } else {\n    const message = 'Field path arguments must be of type string or ';\n    throw createError(\n      message,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nconst FIELD_PATH_RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nexport function fieldPathFromDotSeparatedString(\n  methodName: string,\n  path: string,\n  targetDoc?: DocumentKey\n): InternalFieldPath {\n  const found = path.search(FIELD_PATH_RESERVED);\n  if (found >= 0) {\n    throw createError(\n      `Invalid field path (${path}). Paths must not contain ` +\n        `'~', '*', '/', '[', or ']'`,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n\n  try {\n    return new FieldPath(...path.split('.'))._internalPath;\n  } catch (e) {\n    throw createError(\n      `Invalid field path (${path}). Paths must not be empty, ` +\n        `begin with '.', end with '.', or contain '..'`,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n}\n\nfunction createError(\n  reason: string,\n  methodName: string,\n  hasConverter: boolean,\n  path?: InternalFieldPath,\n  targetDoc?: DocumentKey\n): FirestoreError {\n  const hasPath = path && !path.isEmpty();\n  const hasDocument = targetDoc !== undefined;\n  let message = `Function ${methodName}() called with invalid data`;\n  if (hasConverter) {\n    message += ' (via `toFirestore()`)';\n  }\n  message += '. ';\n\n  let description = '';\n  if (hasPath || hasDocument) {\n    description += ' (found';\n\n    if (hasPath) {\n      description += ` in field ${path}`;\n    }\n    if (hasDocument) {\n      description += ` in document ${targetDoc}`;\n    }\n    description += ')';\n  }\n\n  return new FirestoreError(\n    Code.INVALID_ARGUMENT,\n    message + reason + description\n  );\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction fieldMaskContains(\n  haystack: InternalFieldPath[],\n  needle: InternalFieldPath\n): boolean {\n  return haystack.some(v => v.isEqual(needle));\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  firestoreClientDeleteAllFieldIndexes,\n  firestoreClientSetPersistentCacheIndexAutoCreationEnabled,\n  FirestoreClient\n} from '../core/firestore_client';\nimport { cast } from '../util/input_validation';\nimport { logDebug, logWarn } from '../util/log';\n\nimport { ensureFirestoreConfigured, Firestore } from './database';\n\n/**\n * A `PersistentCacheIndexManager` for configuring persistent cache indexes used\n * for local query execution.\n *\n * To use, call `getPersistentCacheIndexManager()` to get an instance.\n */\nexport class PersistentCacheIndexManager {\n  /** A type string to uniquely identify instances of this class. */\n  readonly type: 'PersistentCacheIndexManager' = 'PersistentCacheIndexManager';\n\n  /** @hideconstructor */\n  constructor(readonly _client: FirestoreClient) {}\n}\n\n/**\n * Returns the PersistentCache Index Manager used by the given `Firestore`\n * object.\n *\n * @return The `PersistentCacheIndexManager` instance, or `null` if local\n * persistent storage is not in use.\n */\nexport function getPersistentCacheIndexManager(\n  firestore: Firestore\n): PersistentCacheIndexManager | null {\n  firestore = cast(firestore, Firestore);\n\n  const cachedInstance = persistentCacheIndexManagerByFirestore.get(firestore);\n  if (cachedInstance) {\n    return cachedInstance;\n  }\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider?._offlineKind !== 'persistent') {\n    return null;\n  }\n\n  const instance = new PersistentCacheIndexManager(client);\n  persistentCacheIndexManagerByFirestore.set(firestore, instance);\n  return instance;\n}\n\n/**\n * Enables the SDK to create persistent cache indexes automatically for local\n * query execution when the SDK believes cache indexes can help improve\n * performance.\n *\n * This feature is disabled by default.\n */\nexport function enablePersistentCacheIndexAutoCreation(\n  indexManager: PersistentCacheIndexManager\n): void {\n  setPersistentCacheIndexAutoCreationEnabled(indexManager, true);\n}\n\n/**\n * Stops creating persistent cache indexes automatically for local query\n * execution. The indexes which have been created by calling\n * `enablePersistentCacheIndexAutoCreation()` still take effect.\n */\nexport function disablePersistentCacheIndexAutoCreation(\n  indexManager: PersistentCacheIndexManager\n): void {\n  setPersistentCacheIndexAutoCreationEnabled(indexManager, false);\n}\n\n/**\n * Removes all persistent cache indexes.\n *\n * Please note this function will also deletes indexes generated by\n * `setIndexConfiguration()`, which is deprecated.\n */\nexport function deleteAllPersistentCacheIndexes(\n  indexManager: PersistentCacheIndexManager\n): void {\n  indexManager._client.verifyNotTerminated();\n\n  const promise = firestoreClientDeleteAllFieldIndexes(indexManager._client);\n\n  promise\n    .then(_ => logDebug('deleting all persistent cache indexes succeeded'))\n    .catch(error =>\n      logWarn('deleting all persistent cache indexes failed', error)\n    );\n}\n\nfunction setPersistentCacheIndexAutoCreationEnabled(\n  indexManager: PersistentCacheIndexManager,\n  isEnabled: boolean\n): void {\n  indexManager._client.verifyNotTerminated();\n\n  const promise = firestoreClientSetPersistentCacheIndexAutoCreationEnabled(\n    indexManager._client,\n    isEnabled\n  );\n\n  promise\n    .then(_ =>\n      logDebug(\n        `setting persistent cache index auto creation ` +\n          `isEnabled=${isEnabled} succeeded`\n      )\n    )\n    .catch(error =>\n      logWarn(\n        `setting persistent cache index auto creation ` +\n          `isEnabled=${isEnabled} failed`,\n        error\n      )\n    );\n}\n\n/**\n * Maps `Firestore` instances to their corresponding\n * `PersistentCacheIndexManager` instances.\n *\n * Use a `WeakMap` so that the mapping will be automatically dropped when the\n * `Firestore` instance is garbage collected. This emulates a private member\n * as described in https://goo.gle/454yvug.\n */\nconst persistentCacheIndexManagerByFirestore = new WeakMap<\n  Firestore,\n  PersistentCacheIndexManager\n>();\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport {\n  FirebaseAppCheckTokenProvider,\n  FirebaseAuthCredentialsProvider\n} from '../src/api/credentials';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { Firestore } from './api/database';\nimport { databaseIdFromApp } from './core/database_info';\n\nexport function registerFirestore(\n  variant?: string,\n  useFetchStreams = true\n): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'firestore',\n      (container, { instanceIdentifier: databaseId, options: settings }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const firestoreInstance = new Firestore(\n          new FirebaseAuthCredentialsProvider(\n            container.getProvider('auth-internal')\n          ),\n          new FirebaseAppCheckTokenProvider(\n            container.getProvider('app-check-internal')\n          ),\n          databaseIdFromApp(app, databaseId),\n          app\n        );\n        settings = { useFetchStreams, ...settings };\n        firestoreInstance._setSettings(settings);\n        return firestoreInstance;\n      },\n      'PUBLIC' as ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * Cloud Firestore\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore } from './api/database';\nimport { registerFirestore } from './register';\n\nregisterFirestore();\n\nexport * from './api';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore': Firestore;\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/*!\n  * vue-router v4.3.3\n  * (c) 2024 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, shallowReactive, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst isBrowser = typeof document !== 'undefined';\n\nfunction isESModule(obj) {\n    return obj.__esModule || obj[Symbol.toStringTag] === 'Module';\n}\nconst assign = Object.assign;\nfunction applyToParams(fn, params) {\n    const newParams = {};\n    for (const key in params) {\n        const value = params[key];\n        newParams[key] = isArray(value)\n            ? value.map(fn)\n            : fn(value);\n    }\n    return newParams;\n}\nconst noop = () => { };\n/**\n * Typesafe alternative to Array.isArray\n * https://github.com/microsoft/TypeScript/pull/48228\n */\nconst isArray = Array.isArray;\n\nfunction warn(msg) {\n    // avoid using ...args as it breaks in older Edge builds\n    const args = Array.from(arguments).slice(1);\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\n}\n\n/**\n * Encoding Rules (␣ = Space)\n * - Path: ␣ \" < > # ? { }\n * - Query: ␣ \" < > # & =\n * - Hash: ␣ \" < > `\n *\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\n * defines some extra characters to be encoded. Most browsers do not encode them\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\n * also encode `!'()*`. Leaving un-encoded only ASCII alphanumeric(`a-zA-Z0-9`)\n * plus `-._~`. This extra safety should be applied to query by patching the\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\n * encoded everywhere because some browsers like FF encode it when directly\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\n */\n// const EXTRA_RESERVED_RE = /[!'()*]/g\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\nconst HASH_RE = /#/g; // %23\nconst AMPERSAND_RE = /&/g; // %26\nconst SLASH_RE = /\\//g; // %2F\nconst EQUAL_RE = /=/g; // %3D\nconst IM_RE = /\\?/g; // %3F\nconst PLUS_RE = /\\+/g; // %2B\n/**\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\n * seems to be less flexible than not doing so and I can't find out the legacy\n * systems requiring this for regular requests like text/html. In the standard,\n * the encoding of the plus character is only mentioned for\n * application/x-www-form-urlencoded\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\n * leave the plus character as is in queries. To be more flexible, we allow the\n * plus character on the query, but it can also be manually encoded by the user.\n *\n * Resources:\n * - https://url.spec.whatwg.org/#urlencoded-parsing\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\n */\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\nconst ENC_CARET_RE = /%5E/g; // ^\nconst ENC_BACKTICK_RE = /%60/g; // `\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\nconst ENC_PIPE_RE = /%7C/g; // |\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\nconst ENC_SPACE_RE = /%20/g; // }\n/**\n * Encode characters that need to be encoded on the path, search and hash\n * sections of the URL.\n *\n * @internal\n * @param text - string to encode\n * @returns encoded string\n */\nfunction commonEncode(text) {\n    return encodeURI('' + text)\n        .replace(ENC_PIPE_RE, '|')\n        .replace(ENC_BRACKET_OPEN_RE, '[')\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\n}\n/**\n * Encode characters that need to be encoded on the hash section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeHash(text) {\n    return commonEncode(text)\n        .replace(ENC_CURLY_OPEN_RE, '{')\n        .replace(ENC_CURLY_CLOSE_RE, '}')\n        .replace(ENC_CARET_RE, '^');\n}\n/**\n * Encode characters that need to be encoded query values on the query\n * section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeQueryValue(text) {\n    return (commonEncode(text)\n        // Encode the space as +, encode the + to differentiate it from the space\n        .replace(PLUS_RE, '%2B')\n        .replace(ENC_SPACE_RE, '+')\n        .replace(HASH_RE, '%23')\n        .replace(AMPERSAND_RE, '%26')\n        .replace(ENC_BACKTICK_RE, '`')\n        .replace(ENC_CURLY_OPEN_RE, '{')\n        .replace(ENC_CURLY_CLOSE_RE, '}')\n        .replace(ENC_CARET_RE, '^'));\n}\n/**\n * Like `encodeQueryValue` but also encodes the `=` character.\n *\n * @param text - string to encode\n */\nfunction encodeQueryKey(text) {\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\n}\n/**\n * Encode characters that need to be encoded on the path section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodePath(text) {\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\n}\n/**\n * Encode characters that need to be encoded on the path section of the URL as a\n * param. This function encodes everything {@link encodePath} does plus the\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\n * string instead.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeParam(text) {\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\n}\n/**\n * Decode text using `decodeURIComponent`. Returns the original text if it\n * fails.\n *\n * @param text - string to decode\n * @returns decoded string\n */\nfunction decode(text) {\n    try {\n        return decodeURIComponent('' + text);\n    }\n    catch (err) {\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\n    }\n    return '' + text;\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\n/**\n * Transforms a URI into a normalized history location\n *\n * @param parseQuery\n * @param location - URI to normalize\n * @param currentLocation - current absolute location. Allows resolving relative\n * paths. Must start with `/`. Defaults to `/`\n * @returns a normalized history location\n */\nfunction parseURL(parseQuery, location, currentLocation = '/') {\n    let path, query = {}, searchString = '', hash = '';\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\n    // TODO: move to new URL()\n    const hashPos = location.indexOf('#');\n    let searchPos = location.indexOf('?');\n    // the hash appears before the search, so it's not part of the search string\n    if (hashPos < searchPos && hashPos >= 0) {\n        searchPos = -1;\n    }\n    if (searchPos > -1) {\n        path = location.slice(0, searchPos);\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\n        query = parseQuery(searchString);\n    }\n    if (hashPos > -1) {\n        path = path || location.slice(0, hashPos);\n        // keep the # character\n        hash = location.slice(hashPos, location.length);\n    }\n    // no search and no query\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\n    // empty path means a relative query or hash `?foo=f`, `#thing`\n    return {\n        fullPath: path + (searchString && '?') + searchString + hash,\n        path,\n        query,\n        hash: decode(hash),\n    };\n}\n/**\n * Stringifies a URL object\n *\n * @param stringifyQuery\n * @param location\n */\nfunction stringifyURL(stringifyQuery, location) {\n    const query = location.query ? stringifyQuery(location.query) : '';\n    return location.path + (query && '?') + query + (location.hash || '');\n}\n/**\n * Strips off the base from the beginning of a location.pathname in a non-case-sensitive way.\n *\n * @param pathname - location.pathname\n * @param base - base to strip off\n */\nfunction stripBase(pathname, base) {\n    // no base or base is not found at the beginning\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\n        return pathname;\n    return pathname.slice(base.length) || '/';\n}\n/**\n * Checks if two RouteLocation are equal. This means that both locations are\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\n * parameters and `hash` are the same\n *\n * @param stringifyQuery - A function that takes a query object of type LocationQueryRaw and returns a string representation of it.\n * @param a - first {@link RouteLocation}\n * @param b - second {@link RouteLocation}\n */\nfunction isSameRouteLocation(stringifyQuery, a, b) {\n    const aLastIndex = a.matched.length - 1;\n    const bLastIndex = b.matched.length - 1;\n    return (aLastIndex > -1 &&\n        aLastIndex === bLastIndex &&\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\n        isSameRouteLocationParams(a.params, b.params) &&\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\n        a.hash === b.hash);\n}\n/**\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\n * considered equal to the `RouteRecord` they are aliasing.\n *\n * @param a - first {@link RouteRecord}\n * @param b - second {@link RouteRecord}\n */\nfunction isSameRouteRecord(a, b) {\n    // since the original record has an undefined value for aliasOf\n    // but all aliases point to the original record, this will always compare\n    // the original record\n    return (a.aliasOf || a) === (b.aliasOf || b);\n}\nfunction isSameRouteLocationParams(a, b) {\n    if (Object.keys(a).length !== Object.keys(b).length)\n        return false;\n    for (const key in a) {\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\n            return false;\n    }\n    return true;\n}\nfunction isSameRouteLocationParamsValue(a, b) {\n    return isArray(a)\n        ? isEquivalentArray(a, b)\n        : isArray(b)\n            ? isEquivalentArray(b, a)\n            : a === b;\n}\n/**\n * Check if two arrays are the same or if an array with one single entry is the\n * same as another primitive value. Used to check query and parameters\n *\n * @param a - array of values\n * @param b - array of values or a single value\n */\nfunction isEquivalentArray(a, b) {\n    return isArray(b)\n        ? a.length === b.length && a.every((value, i) => value === b[i])\n        : a.length === 1 && a[0] === b;\n}\n/**\n * Resolves a relative path that starts with `.`.\n *\n * @param to - path location we are resolving\n * @param from - currentLocation.path, should start with `/`\n */\nfunction resolveRelativePath(to, from) {\n    if (to.startsWith('/'))\n        return to;\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\n        return to;\n    }\n    if (!to)\n        return from;\n    const fromSegments = from.split('/');\n    const toSegments = to.split('/');\n    const lastToSegment = toSegments[toSegments.length - 1];\n    // make . and ./ the same (../ === .., ../../ === ../..)\n    // this is the same behavior as new URL()\n    if (lastToSegment === '..' || lastToSegment === '.') {\n        toSegments.push('');\n    }\n    let position = fromSegments.length - 1;\n    let toPosition;\n    let segment;\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\n        segment = toSegments[toPosition];\n        // we stay on the same position\n        if (segment === '.')\n            continue;\n        // go up in the from array\n        if (segment === '..') {\n            // we can't go below zero, but we still need to increment toPosition\n            if (position > 1)\n                position--;\n            // continue\n        }\n        // we reached a non-relative path, we stop here\n        else\n            break;\n    }\n    return (fromSegments.slice(0, position).join('/') +\n        '/' +\n        toSegments.slice(toPosition).join('/'));\n}\n\nvar NavigationType;\n(function (NavigationType) {\n    NavigationType[\"pop\"] = \"pop\";\n    NavigationType[\"push\"] = \"push\";\n})(NavigationType || (NavigationType = {}));\nvar NavigationDirection;\n(function (NavigationDirection) {\n    NavigationDirection[\"back\"] = \"back\";\n    NavigationDirection[\"forward\"] = \"forward\";\n    NavigationDirection[\"unknown\"] = \"\";\n})(NavigationDirection || (NavigationDirection = {}));\n/**\n * Starting location for Histories\n */\nconst START = '';\n// Generic utils\n/**\n * Normalizes a base by removing any trailing slash and reading the base tag if\n * present.\n *\n * @param base - base to normalize\n */\nfunction normalizeBase(base) {\n    if (!base) {\n        if (isBrowser) {\n            // respect <base> tag\n            const baseEl = document.querySelector('base');\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\n            // strip full URL origin\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\n        }\n        else {\n            base = '/';\n        }\n    }\n    // ensure leading slash when it was removed by the regex above avoid leading\n    // slash with hash because the file could be read from the disk like file://\n    // and the leading slash would cause problems\n    if (base[0] !== '/' && base[0] !== '#')\n        base = '/' + base;\n    // remove the trailing slash so all other method can just do `base + fullPath`\n    // to build an href\n    return removeTrailingSlash(base);\n}\n// remove any character before the hash\nconst BEFORE_HASH_RE = /^[^#]+#/;\nfunction createHref(base, location) {\n    return base.replace(BEFORE_HASH_RE, '#') + location;\n}\n\nfunction getElementPosition(el, offset) {\n    const docRect = document.documentElement.getBoundingClientRect();\n    const elRect = el.getBoundingClientRect();\n    return {\n        behavior: offset.behavior,\n        left: elRect.left - docRect.left - (offset.left || 0),\n        top: elRect.top - docRect.top - (offset.top || 0),\n    };\n}\nconst computeScrollPosition = () => ({\n    left: window.scrollX,\n    top: window.scrollY,\n});\nfunction scrollToPosition(position) {\n    let scrollToOptions;\n    if ('el' in position) {\n        const positionEl = position.el;\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\n        /**\n         * `id`s can accept pretty much any characters, including CSS combinators\n         * like `>` or `~`. It's still possible to retrieve elements using\n         * `document.getElementById('~')` but it needs to be escaped when using\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\n         * requirements for `id`s are them to be unique on the page and to not be\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\n         * be properly escaped for it to work with `querySelector`. We could check\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\n         * would make things inconsistent since they are valid characters for an\n         * `id` but would need to be escaped when using `querySelector`, breaking\n         * their usage and ending up in no selector returned. Selectors need to be\n         * escaped:\n         *\n         * - `#1-thing` becomes `#\\31 -thing`\n         * - `#with~symbols` becomes `#with\\\\~symbols`\n         *\n         * - More information about  the topic can be found at\n         *   https://mathiasbynens.be/notes/html5-id-class.\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\n         */\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\n                try {\n                    const foundEl = document.querySelector(position.el);\n                    if (isIdSelector && foundEl) {\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\n                        // return to avoid other warnings\n                        return;\n                    }\n                }\n                catch (err) {\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\n                    // return to avoid other warnings\n                    return;\n                }\n            }\n        }\n        const el = typeof positionEl === 'string'\n            ? isIdSelector\n                ? document.getElementById(positionEl.slice(1))\n                : document.querySelector(positionEl)\n            : positionEl;\n        if (!el) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\n            return;\n        }\n        scrollToOptions = getElementPosition(el, position);\n    }\n    else {\n        scrollToOptions = position;\n    }\n    if ('scrollBehavior' in document.documentElement.style)\n        window.scrollTo(scrollToOptions);\n    else {\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.scrollX, scrollToOptions.top != null ? scrollToOptions.top : window.scrollY);\n    }\n}\nfunction getScrollKey(path, delta) {\n    const position = history.state ? history.state.position - delta : -1;\n    return position + path;\n}\nconst scrollPositions = new Map();\nfunction saveScrollPosition(key, scrollPosition) {\n    scrollPositions.set(key, scrollPosition);\n}\nfunction getSavedScrollPosition(key) {\n    const scroll = scrollPositions.get(key);\n    // consume it so it's not used again\n    scrollPositions.delete(key);\n    return scroll;\n}\n// TODO: RFC about how to save scroll position\n/**\n * ScrollBehavior instance used by the router to compute and restore the scroll\n * position when navigating.\n */\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\n//   // returns a scroll position that can be saved in history\n//   compute(): ScrollPositionEntry\n//   // can take an extended ScrollPositionEntry\n//   scroll(position: ScrollPosition): void\n// }\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\n//   compute: computeScroll,\n//   scroll: scrollToPosition,\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\n/**\n * Creates a normalized history location from a window.location object\n * @param base - The base path\n * @param location - The window.location object\n */\nfunction createCurrentLocation(base, location) {\n    const { pathname, search, hash } = location;\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\n    const hashPos = base.indexOf('#');\n    if (hashPos > -1) {\n        let slicePos = hash.includes(base.slice(hashPos))\n            ? base.slice(hashPos).length\n            : 1;\n        let pathFromHash = hash.slice(slicePos);\n        // prepend the starting slash to hash so the url starts with /#\n        if (pathFromHash[0] !== '/')\n            pathFromHash = '/' + pathFromHash;\n        return stripBase(pathFromHash, '');\n    }\n    const path = stripBase(pathname, base);\n    return path + search + hash;\n}\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\n    let listeners = [];\n    let teardowns = [];\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\n    // can trigger twice\n    let pauseState = null;\n    const popStateHandler = ({ state, }) => {\n        const to = createCurrentLocation(base, location);\n        const from = currentLocation.value;\n        const fromState = historyState.value;\n        let delta = 0;\n        if (state) {\n            currentLocation.value = to;\n            historyState.value = state;\n            // ignore the popstate and reset the pauseState\n            if (pauseState && pauseState === from) {\n                pauseState = null;\n                return;\n            }\n            delta = fromState ? state.position - fromState.position : 0;\n        }\n        else {\n            replace(to);\n        }\n        // Here we could also revert the navigation by calling history.go(-delta)\n        // this listener will have to be adapted to not trigger again and to wait for the url\n        // to be updated before triggering the listeners. Some kind of validation function would also\n        // need to be passed to the listeners so the navigation can be accepted\n        // call all listeners\n        listeners.forEach(listener => {\n            listener(currentLocation.value, from, {\n                delta,\n                type: NavigationType.pop,\n                direction: delta\n                    ? delta > 0\n                        ? NavigationDirection.forward\n                        : NavigationDirection.back\n                    : NavigationDirection.unknown,\n            });\n        });\n    };\n    function pauseListeners() {\n        pauseState = currentLocation.value;\n    }\n    function listen(callback) {\n        // set up the listener and prepare teardown callbacks\n        listeners.push(callback);\n        const teardown = () => {\n            const index = listeners.indexOf(callback);\n            if (index > -1)\n                listeners.splice(index, 1);\n        };\n        teardowns.push(teardown);\n        return teardown;\n    }\n    function beforeUnloadListener() {\n        const { history } = window;\n        if (!history.state)\n            return;\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\n    }\n    function destroy() {\n        for (const teardown of teardowns)\n            teardown();\n        teardowns = [];\n        window.removeEventListener('popstate', popStateHandler);\n        window.removeEventListener('beforeunload', beforeUnloadListener);\n    }\n    // set up the listeners and prepare teardown callbacks\n    window.addEventListener('popstate', popStateHandler);\n    // TODO: could we use 'pagehide' or 'visibilitychange' instead?\n    // https://developer.chrome.com/blog/page-lifecycle-api/\n    window.addEventListener('beforeunload', beforeUnloadListener, {\n        passive: true,\n    });\n    return {\n        pauseListeners,\n        listen,\n        destroy,\n    };\n}\n/**\n * Creates a state object\n */\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\n    return {\n        back,\n        current,\n        forward,\n        replaced,\n        position: window.history.length,\n        scroll: computeScroll ? computeScrollPosition() : null,\n    };\n}\nfunction useHistoryStateNavigation(base) {\n    const { history, location } = window;\n    // private variables\n    const currentLocation = {\n        value: createCurrentLocation(base, location),\n    };\n    const historyState = { value: history.state };\n    // build current history entry as this is a fresh navigation\n    if (!historyState.value) {\n        changeLocation(currentLocation.value, {\n            back: null,\n            current: currentLocation.value,\n            forward: null,\n            // the length is off by one, we need to decrease it\n            position: history.length - 1,\n            replaced: true,\n            // don't add a scroll as the user may have an anchor, and we want\n            // scrollBehavior to be triggered without a saved position\n            scroll: null,\n        }, true);\n    }\n    function changeLocation(to, state, replace) {\n        /**\n         * if a base tag is provided, and we are on a normal domain, we have to\n         * respect the provided `base` attribute because pushState() will use it and\n         * potentially erase anything before the `#` like at\n         * https://github.com/vuejs/router/issues/685 where a base of\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\n         * base tag we can just use everything after the `#`.\n         */\n        const hashIndex = base.indexOf('#');\n        const url = hashIndex > -1\n            ? (location.host && document.querySelector('base')\n                ? base\n                : base.slice(hashIndex)) + to\n            : createBaseLocation() + base + to;\n        try {\n            // BROWSER QUIRK\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\n            historyState.value = state;\n        }\n        catch (err) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                warn('Error with push/replace State', err);\n            }\n            else {\n                console.error(err);\n            }\n            // Force the navigation, this also resets the call count\n            location[replace ? 'replace' : 'assign'](url);\n        }\n    }\n    function replace(to, data) {\n        const state = assign({}, history.state, buildState(historyState.value.back, \n        // keep back and forward entries but override current position\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\n        changeLocation(to, state, true);\n        currentLocation.value = to;\n    }\n    function push(to, data) {\n        // Add to current entry the information of where we are going\n        // as well as saving the current position\n        const currentState = assign({}, \n        // use current history state to gracefully handle a wrong call to\n        // history.replaceState\n        // https://github.com/vuejs/router/issues/366\n        historyState.value, history.state, {\n            forward: to,\n            scroll: computeScrollPosition(),\n        });\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\n                `history.replaceState(history.state, '', url)\\n\\n` +\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\n        }\n        changeLocation(currentState.current, currentState, true);\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\n        changeLocation(to, state, false);\n        currentLocation.value = to;\n    }\n    return {\n        location: currentLocation,\n        state: historyState,\n        push,\n        replace,\n    };\n}\n/**\n * Creates an HTML5 history. Most common history for single page applications.\n *\n * @param base -\n */\nfunction createWebHistory(base) {\n    base = normalizeBase(base);\n    const historyNavigation = useHistoryStateNavigation(base);\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\n    function go(delta, triggerListeners = true) {\n        if (!triggerListeners)\n            historyListeners.pauseListeners();\n        history.go(delta);\n    }\n    const routerHistory = assign({\n        // it's overridden right after\n        location: '',\n        base,\n        go,\n        createHref: createHref.bind(null, base),\n    }, historyNavigation, historyListeners);\n    Object.defineProperty(routerHistory, 'location', {\n        enumerable: true,\n        get: () => historyNavigation.location.value,\n    });\n    Object.defineProperty(routerHistory, 'state', {\n        enumerable: true,\n        get: () => historyNavigation.state.value,\n    });\n    return routerHistory;\n}\n\n/**\n * Creates an in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\n *\n * @param base - Base applied to all urls, defaults to '/'\n * @returns a history object that can be passed to the router constructor\n */\nfunction createMemoryHistory(base = '') {\n    let listeners = [];\n    let queue = [START];\n    let position = 0;\n    base = normalizeBase(base);\n    function setLocation(location) {\n        position++;\n        if (position !== queue.length) {\n            // we are in the middle, we remove everything from here in the queue\n            queue.splice(position);\n        }\n        queue.push(location);\n    }\n    function triggerListeners(to, from, { direction, delta }) {\n        const info = {\n            direction,\n            delta,\n            type: NavigationType.pop,\n        };\n        for (const callback of listeners) {\n            callback(to, from, info);\n        }\n    }\n    const routerHistory = {\n        // rewritten by Object.defineProperty\n        location: START,\n        // TODO: should be kept in queue\n        state: {},\n        base,\n        createHref: createHref.bind(null, base),\n        replace(to) {\n            // remove current entry and decrement position\n            queue.splice(position--, 1);\n            setLocation(to);\n        },\n        push(to, data) {\n            setLocation(to);\n        },\n        listen(callback) {\n            listeners.push(callback);\n            return () => {\n                const index = listeners.indexOf(callback);\n                if (index > -1)\n                    listeners.splice(index, 1);\n            };\n        },\n        destroy() {\n            listeners = [];\n            queue = [START];\n            position = 0;\n        },\n        go(delta, shouldTrigger = true) {\n            const from = this.location;\n            const direction = \n            // we are considering delta === 0 going forward, but in abstract mode\n            // using 0 for the delta doesn't make sense like it does in html5 where\n            // it reloads the page\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\n            if (shouldTrigger) {\n                triggerListeners(this.location, from, {\n                    direction,\n                    delta,\n                });\n            }\n        },\n    };\n    Object.defineProperty(routerHistory, 'location', {\n        enumerable: true,\n        get: () => queue[position],\n    });\n    return routerHistory;\n}\n\n/**\n * Creates a hash history. Useful for web applications with no host (e.g. `file://`) or when configuring a server to\n * handle any URL is not possible.\n *\n * @param base - optional base to provide. Defaults to `location.pathname + location.search` If there is a `<base>` tag\n * in the `head`, its value will be ignored in favor of this parameter **but note it affects all the history.pushState()\n * calls**, meaning that if you use a `<base>` tag, it's `href` value **has to match this parameter** (ignoring anything\n * after the `#`).\n *\n * @example\n * ```js\n * // at https://example.com/folder\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\n * // you should avoid doing this because it changes the original url and breaks copying urls\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\n *\n * // at file:///usr/etc/folder/index.html\n * // for locations with no `host`, the base is ignored\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\n * ```\n */\nfunction createWebHashHistory(base) {\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\n    // for `file://`, directly use the pathname and ignore the base\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\n    base = location.host ? base || location.pathname + location.search : '';\n    // allow the user to provide a `#` in the middle: `/base/#/app`\n    if (!base.includes('#'))\n        base += '#';\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\n    }\n    return createWebHistory(base);\n}\n\nfunction isRouteLocation(route) {\n    return typeof route === 'string' || (route && typeof route === 'object');\n}\nfunction isRouteName(name) {\n    return typeof name === 'string' || typeof name === 'symbol';\n}\n\n/**\n * Initial route location where the router is. Can be used in navigation guards\n * to differentiate the initial navigation.\n *\n * @example\n * ```js\n * import { START_LOCATION } from 'vue-router'\n *\n * router.beforeEach((to, from) => {\n *   if (from === START_LOCATION) {\n *     // initial navigation\n *   }\n * })\n * ```\n */\nconst START_LOCATION_NORMALIZED = {\n    path: '/',\n    name: undefined,\n    params: {},\n    query: {},\n    hash: '',\n    fullPath: '/',\n    matched: [],\n    meta: {},\n    redirectedFrom: undefined,\n};\n\nconst NavigationFailureSymbol = Symbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : '');\n/**\n * Enumeration with all possible types for navigation failures. Can be passed to\n * {@link isNavigationFailure} to check for specific failures.\n */\nvar NavigationFailureType;\n(function (NavigationFailureType) {\n    /**\n     * An aborted navigation is a navigation that failed because a navigation\n     * guard returned `false` or called `next(false)`\n     */\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\n    /**\n     * A cancelled navigation is a navigation that failed because a more recent\n     * navigation finished started (not necessarily finished).\n     */\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\n    /**\n     * A duplicated navigation is a navigation that failed because it was\n     * initiated while already being at the exact same location.\n     */\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\n})(NavigationFailureType || (NavigationFailureType = {}));\n// DEV only debug messages\nconst ErrorTypeMessages = {\n    [1 /* ErrorTypes.MATCHER_NOT_FOUND */]({ location, currentLocation }) {\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\n            : ''}`;\n    },\n    [2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\n    },\n    [4 /* ErrorTypes.NAVIGATION_ABORTED */]({ from, to }) {\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\n    },\n    [8 /* ErrorTypes.NAVIGATION_CANCELLED */]({ from, to }) {\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\n    },\n    [16 /* ErrorTypes.NAVIGATION_DUPLICATED */]({ from, to }) {\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\n    },\n};\n/**\n * Creates a typed NavigationFailure object.\n * @internal\n * @param type - NavigationFailureType\n * @param params - { from, to }\n */\nfunction createRouterError(type, params) {\n    // keep full error messages in cjs versions\n    if ((process.env.NODE_ENV !== 'production') || !true) {\n        return assign(new Error(ErrorTypeMessages[type](params)), {\n            type,\n            [NavigationFailureSymbol]: true,\n        }, params);\n    }\n    else {\n        return assign(new Error(), {\n            type,\n            [NavigationFailureSymbol]: true,\n        }, params);\n    }\n}\nfunction isNavigationFailure(error, type) {\n    return (error instanceof Error &&\n        NavigationFailureSymbol in error &&\n        (type == null || !!(error.type & type)));\n}\nconst propertiesToLog = ['params', 'query', 'hash'];\nfunction stringifyRoute(to) {\n    if (typeof to === 'string')\n        return to;\n    if (to.path != null)\n        return to.path;\n    const location = {};\n    for (const key of propertiesToLog) {\n        if (key in to)\n            location[key] = to[key];\n    }\n    return JSON.stringify(location, null, 2);\n}\n\n// default pattern for a param: non-greedy everything but /\nconst BASE_PARAM_PATTERN = '[^/]+?';\nconst BASE_PATH_PARSER_OPTIONS = {\n    sensitive: false,\n    strict: false,\n    start: true,\n    end: true,\n};\n// Special Regex characters that must be escaped in static tokens\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\n/**\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\n *\n * @param segments - array of segments returned by tokenizePath\n * @param extraOptions - optional options for the regexp\n * @returns a PathParser\n */\nfunction tokensToParser(segments, extraOptions) {\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\n    const score = [];\n    // the regexp as a string\n    let pattern = options.start ? '^' : '';\n    // extracted keys\n    const keys = [];\n    for (const segment of segments) {\n        // the root segment needs special treatment\n        const segmentScores = segment.length ? [] : [90 /* PathScore.Root */];\n        // allow trailing slash\n        if (options.strict && !segment.length)\n            pattern += '/';\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\n            const token = segment[tokenIndex];\n            // resets the score if we are inside a sub-segment /:a-other-:b\n            let subSegmentScore = 40 /* PathScore.Segment */ +\n                (options.sensitive ? 0.25 /* PathScore.BonusCaseSensitive */ : 0);\n            if (token.type === 0 /* TokenType.Static */) {\n                // prepend the slash if we are starting a new segment\n                if (!tokenIndex)\n                    pattern += '/';\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\n                subSegmentScore += 40 /* PathScore.Static */;\n            }\n            else if (token.type === 1 /* TokenType.Param */) {\n                const { value, repeatable, optional, regexp } = token;\n                keys.push({\n                    name: value,\n                    repeatable,\n                    optional,\n                });\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\n                // the user provided a custom regexp /:id(\\\\d+)\n                if (re !== BASE_PARAM_PATTERN) {\n                    subSegmentScore += 10 /* PathScore.BonusCustomRegExp */;\n                    // make sure the regexp is valid before using it\n                    try {\n                        new RegExp(`(${re})`);\n                    }\n                    catch (err) {\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\n                            err.message);\n                    }\n                }\n                // when we repeat we must take care of the repeating leading slash\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\n                // prepend the slash if we are starting a new segment\n                if (!tokenIndex)\n                    subPattern =\n                        // avoid an optional / if there are more segments e.g. /:p?-static\n                        // or /:p?-:p2\n                        optional && segment.length < 2\n                            ? `(?:/${subPattern})`\n                            : '/' + subPattern;\n                if (optional)\n                    subPattern += '?';\n                pattern += subPattern;\n                subSegmentScore += 20 /* PathScore.Dynamic */;\n                if (optional)\n                    subSegmentScore += -8 /* PathScore.BonusOptional */;\n                if (repeatable)\n                    subSegmentScore += -20 /* PathScore.BonusRepeatable */;\n                if (re === '.*')\n                    subSegmentScore += -50 /* PathScore.BonusWildcard */;\n            }\n            segmentScores.push(subSegmentScore);\n        }\n        // an empty array like /home/ -> [[{home}], []]\n        // if (!segment.length) pattern += '/'\n        score.push(segmentScores);\n    }\n    // only apply the strict bonus to the last score\n    if (options.strict && options.end) {\n        const i = score.length - 1;\n        score[i][score[i].length - 1] += 0.7000000000000001 /* PathScore.BonusStrict */;\n    }\n    // TODO: dev only warn double trailing slash\n    if (!options.strict)\n        pattern += '/?';\n    if (options.end)\n        pattern += '$';\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\n    else if (options.strict)\n        pattern += '(?:/|$)';\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\n    function parse(path) {\n        const match = path.match(re);\n        const params = {};\n        if (!match)\n            return null;\n        for (let i = 1; i < match.length; i++) {\n            const value = match[i] || '';\n            const key = keys[i - 1];\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\n        }\n        return params;\n    }\n    function stringify(params) {\n        let path = '';\n        // for optional parameters to allow to be empty\n        let avoidDuplicatedSlash = false;\n        for (const segment of segments) {\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\n                path += '/';\n            avoidDuplicatedSlash = false;\n            for (const token of segment) {\n                if (token.type === 0 /* TokenType.Static */) {\n                    path += token.value;\n                }\n                else if (token.type === 1 /* TokenType.Param */) {\n                    const { value, repeatable, optional } = token;\n                    const param = value in params ? params[value] : '';\n                    if (isArray(param) && !repeatable) {\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\n                    }\n                    const text = isArray(param)\n                        ? param.join('/')\n                        : param;\n                    if (!text) {\n                        if (optional) {\n                            // if we have more than one optional param like /:a?-static we don't need to care about the optional param\n                            if (segment.length < 2) {\n                                // remove the last slash as we could be at the end\n                                if (path.endsWith('/'))\n                                    path = path.slice(0, -1);\n                                // do not append a slash on the next iteration\n                                else\n                                    avoidDuplicatedSlash = true;\n                            }\n                        }\n                        else\n                            throw new Error(`Missing required param \"${value}\"`);\n                    }\n                    path += text;\n                }\n            }\n        }\n        // avoid empty path when we have multiple optional params\n        return path || '/';\n    }\n    return {\n        re,\n        score,\n        keys,\n        parse,\n        stringify,\n    };\n}\n/**\n * Compares an array of numbers as used in PathParser.score and returns a\n * number. This function can be used to `sort` an array\n *\n * @param a - first array of numbers\n * @param b - second array of numbers\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\n * should be sorted first\n */\nfunction compareScoreArray(a, b) {\n    let i = 0;\n    while (i < a.length && i < b.length) {\n        const diff = b[i] - a[i];\n        // only keep going if diff === 0\n        if (diff)\n            return diff;\n        i++;\n    }\n    // if the last subsegment was Static, the shorter segments should be sorted first\n    // otherwise sort the longest segment first\n    if (a.length < b.length) {\n        return a.length === 1 && a[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\n            ? -1\n            : 1;\n    }\n    else if (a.length > b.length) {\n        return b.length === 1 && b[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\n            ? 1\n            : -1;\n    }\n    return 0;\n}\n/**\n * Compare function that can be used with `sort` to sort an array of PathParser\n *\n * @param a - first PathParser\n * @param b - second PathParser\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\n */\nfunction comparePathParserScore(a, b) {\n    let i = 0;\n    const aScore = a.score;\n    const bScore = b.score;\n    while (i < aScore.length && i < bScore.length) {\n        const comp = compareScoreArray(aScore[i], bScore[i]);\n        // do not return if both are equal\n        if (comp)\n            return comp;\n        i++;\n    }\n    if (Math.abs(bScore.length - aScore.length) === 1) {\n        if (isLastScoreNegative(aScore))\n            return 1;\n        if (isLastScoreNegative(bScore))\n            return -1;\n    }\n    // if a and b share the same score entries but b has more, sort b first\n    return bScore.length - aScore.length;\n    // this is the ternary version\n    // return aScore.length < bScore.length\n    //   ? 1\n    //   : aScore.length > bScore.length\n    //   ? -1\n    //   : 0\n}\n/**\n * This allows detecting splats at the end of a path: /home/:id(.*)*\n *\n * @param score - score to check\n * @returns true if the last entry is negative\n */\nfunction isLastScoreNegative(score) {\n    const last = score[score.length - 1];\n    return score.length > 0 && last[last.length - 1] < 0;\n}\n\nconst ROOT_TOKEN = {\n    type: 0 /* TokenType.Static */,\n    value: '',\n};\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\n// After some profiling, the cache seems to be unnecessary because tokenizePath\n// (the slowest part of adding a route) is very fast\n// const tokenCache = new Map<string, Token[][]>()\nfunction tokenizePath(path) {\n    if (!path)\n        return [[]];\n    if (path === '/')\n        return [[ROOT_TOKEN]];\n    if (!path.startsWith('/')) {\n        throw new Error((process.env.NODE_ENV !== 'production')\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\n            : `Invalid path \"${path}\"`);\n    }\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\n    function crash(message) {\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\n    }\n    let state = 0 /* TokenizerState.Static */;\n    let previousState = state;\n    const tokens = [];\n    // the segment will always be valid because we get into the initial state\n    // with the leading /\n    let segment;\n    function finalizeSegment() {\n        if (segment)\n            tokens.push(segment);\n        segment = [];\n    }\n    // index on the path\n    let i = 0;\n    // char at index\n    let char;\n    // buffer of the value read\n    let buffer = '';\n    // custom regexp for a param\n    let customRe = '';\n    function consumeBuffer() {\n        if (!buffer)\n            return;\n        if (state === 0 /* TokenizerState.Static */) {\n            segment.push({\n                type: 0 /* TokenType.Static */,\n                value: buffer,\n            });\n        }\n        else if (state === 1 /* TokenizerState.Param */ ||\n            state === 2 /* TokenizerState.ParamRegExp */ ||\n            state === 3 /* TokenizerState.ParamRegExpEnd */) {\n            if (segment.length > 1 && (char === '*' || char === '+'))\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\n            segment.push({\n                type: 1 /* TokenType.Param */,\n                value: buffer,\n                regexp: customRe,\n                repeatable: char === '*' || char === '+',\n                optional: char === '*' || char === '?',\n            });\n        }\n        else {\n            crash('Invalid state to consume buffer');\n        }\n        buffer = '';\n    }\n    function addCharToBuffer() {\n        buffer += char;\n    }\n    while (i < path.length) {\n        char = path[i++];\n        if (char === '\\\\' && state !== 2 /* TokenizerState.ParamRegExp */) {\n            previousState = state;\n            state = 4 /* TokenizerState.EscapeNext */;\n            continue;\n        }\n        switch (state) {\n            case 0 /* TokenizerState.Static */:\n                if (char === '/') {\n                    if (buffer) {\n                        consumeBuffer();\n                    }\n                    finalizeSegment();\n                }\n                else if (char === ':') {\n                    consumeBuffer();\n                    state = 1 /* TokenizerState.Param */;\n                }\n                else {\n                    addCharToBuffer();\n                }\n                break;\n            case 4 /* TokenizerState.EscapeNext */:\n                addCharToBuffer();\n                state = previousState;\n                break;\n            case 1 /* TokenizerState.Param */:\n                if (char === '(') {\n                    state = 2 /* TokenizerState.ParamRegExp */;\n                }\n                else if (VALID_PARAM_RE.test(char)) {\n                    addCharToBuffer();\n                }\n                else {\n                    consumeBuffer();\n                    state = 0 /* TokenizerState.Static */;\n                    // go back one character if we were not modifying\n                    if (char !== '*' && char !== '?' && char !== '+')\n                        i--;\n                }\n                break;\n            case 2 /* TokenizerState.ParamRegExp */:\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\n                // it already works by escaping the closing )\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\n                // is this really something people need since you can also write\n                // /prefix_:p()_suffix\n                if (char === ')') {\n                    // handle the escaped )\n                    if (customRe[customRe.length - 1] == '\\\\')\n                        customRe = customRe.slice(0, -1) + char;\n                    else\n                        state = 3 /* TokenizerState.ParamRegExpEnd */;\n                }\n                else {\n                    customRe += char;\n                }\n                break;\n            case 3 /* TokenizerState.ParamRegExpEnd */:\n                // same as finalizing a param\n                consumeBuffer();\n                state = 0 /* TokenizerState.Static */;\n                // go back one character if we were not modifying\n                if (char !== '*' && char !== '?' && char !== '+')\n                    i--;\n                customRe = '';\n                break;\n            default:\n                crash('Unknown state');\n                break;\n        }\n    }\n    if (state === 2 /* TokenizerState.ParamRegExp */)\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\n    consumeBuffer();\n    finalizeSegment();\n    // tokenCache.set(path, tokens)\n    return tokens;\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\n    const parser = tokensToParser(tokenizePath(record.path), options);\n    // warn against params with the same name\n    if ((process.env.NODE_ENV !== 'production')) {\n        const existingKeys = new Set();\n        for (const key of parser.keys) {\n            if (existingKeys.has(key.name))\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\n            existingKeys.add(key.name);\n        }\n    }\n    const matcher = assign(parser, {\n        record,\n        parent,\n        // these needs to be populated by the parent\n        children: [],\n        alias: [],\n    });\n    if (parent) {\n        // both are aliases or both are not aliases\n        // we don't want to mix them because the order is used when\n        // passing originalRecord in Matcher.addRoute\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\n            parent.children.push(matcher);\n    }\n    return matcher;\n}\n\n/**\n * Creates a Router Matcher.\n *\n * @internal\n * @param routes - array of initial routes\n * @param globalOptions - global route options\n */\nfunction createRouterMatcher(routes, globalOptions) {\n    // normalized ordered array of matchers\n    const matchers = [];\n    const matcherMap = new Map();\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\n    function getRecordMatcher(name) {\n        return matcherMap.get(name);\n    }\n    function addRoute(record, parent, originalRecord) {\n        // used later on to remove by name\n        const isRootAdd = !originalRecord;\n        const mainNormalizedRecord = normalizeRouteRecord(record);\n        if ((process.env.NODE_ENV !== 'production')) {\n            checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent);\n        }\n        // we might be the child of an alias\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\n        const options = mergeOptions(globalOptions, record);\n        // generate an array of records to correctly handle aliases\n        const normalizedRecords = [\n            mainNormalizedRecord,\n        ];\n        if ('alias' in record) {\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\n            for (const alias of aliases) {\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\n                    // this allows us to hold a copy of the `components` option\n                    // so that async components cache is hold on the original record\n                    components: originalRecord\n                        ? originalRecord.record.components\n                        : mainNormalizedRecord.components,\n                    path: alias,\n                    // we might be the child of an alias\n                    aliasOf: originalRecord\n                        ? originalRecord.record\n                        : mainNormalizedRecord,\n                    // the aliases are always of the same kind as the original since they\n                    // are defined on the same record\n                }));\n            }\n        }\n        let matcher;\n        let originalMatcher;\n        for (const normalizedRecord of normalizedRecords) {\n            const { path } = normalizedRecord;\n            // Build up the path for nested routes if the child isn't an absolute\n            // route. Only add the / delimiter if the child path isn't empty and if the\n            // parent path doesn't have a trailing slash\n            if (parent && path[0] !== '/') {\n                const parentPath = parent.record.path;\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\n                normalizedRecord.path =\n                    parent.record.path + (path && connectingSlash + path);\n            }\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\n            }\n            // create the object beforehand, so it can be passed to children\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\n                checkMissingParamsInAbsolutePath(matcher, parent);\n            // if we are an alias we must tell the original record that we exist,\n            // so we can be removed\n            if (originalRecord) {\n                originalRecord.alias.push(matcher);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    checkSameParams(originalRecord, matcher);\n                }\n            }\n            else {\n                // otherwise, the first record is the original and others are aliases\n                originalMatcher = originalMatcher || matcher;\n                if (originalMatcher !== matcher)\n                    originalMatcher.alias.push(matcher);\n                // remove the route if named and only for the top record (avoid in nested calls)\n                // this works because the original record is the first one\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\n                    removeRoute(record.name);\n            }\n            // Avoid adding a record that doesn't display anything. This allows passing through records without a component to\n            // not be reached and pass through the catch all route\n            if (isMatchable(matcher)) {\n                insertMatcher(matcher);\n            }\n            if (mainNormalizedRecord.children) {\n                const children = mainNormalizedRecord.children;\n                for (let i = 0; i < children.length; i++) {\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\n                }\n            }\n            // if there was no original record, then the first one was not an alias and all\n            // other aliases (if any) need to reference this record when adding children\n            originalRecord = originalRecord || matcher;\n            // TODO: add normalized records for more flexibility\n            // if (parent && isAliasRecord(originalRecord)) {\n            //   parent.children.push(originalRecord)\n            // }\n        }\n        return originalMatcher\n            ? () => {\n                // since other matchers are aliases, they should be removed by the original matcher\n                removeRoute(originalMatcher);\n            }\n            : noop;\n    }\n    function removeRoute(matcherRef) {\n        if (isRouteName(matcherRef)) {\n            const matcher = matcherMap.get(matcherRef);\n            if (matcher) {\n                matcherMap.delete(matcherRef);\n                matchers.splice(matchers.indexOf(matcher), 1);\n                matcher.children.forEach(removeRoute);\n                matcher.alias.forEach(removeRoute);\n            }\n        }\n        else {\n            const index = matchers.indexOf(matcherRef);\n            if (index > -1) {\n                matchers.splice(index, 1);\n                if (matcherRef.record.name)\n                    matcherMap.delete(matcherRef.record.name);\n                matcherRef.children.forEach(removeRoute);\n                matcherRef.alias.forEach(removeRoute);\n            }\n        }\n    }\n    function getRoutes() {\n        return matchers;\n    }\n    function insertMatcher(matcher) {\n        const index = findInsertionIndex(matcher, matchers);\n        matchers.splice(index, 0, matcher);\n        // only add the original record to the name map\n        if (matcher.record.name && !isAliasRecord(matcher))\n            matcherMap.set(matcher.record.name, matcher);\n    }\n    function resolve(location, currentLocation) {\n        let matcher;\n        let params = {};\n        let path;\n        let name;\n        if ('name' in location && location.name) {\n            matcher = matcherMap.get(location.name);\n            if (!matcher)\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\n                    location,\n                });\n            // warn if the user is passing invalid params so they can debug it better when they get removed\n            if ((process.env.NODE_ENV !== 'production')) {\n                const invalidParams = Object.keys(location.params || {}).filter(paramName => !matcher.keys.find(k => k.name === paramName));\n                if (invalidParams.length) {\n                    warn(`Discarded invalid param(s) \"${invalidParams.join('\", \"')}\" when navigating. See https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#414-2022-08-22 for more details.`);\n                }\n            }\n            name = matcher.record.name;\n            params = assign(\n            // paramsFromLocation is a new object\n            paramsFromLocation(currentLocation.params, \n            // only keep params that exist in the resolved location\n            // only keep optional params coming from a parent record\n            matcher.keys\n                .filter(k => !k.optional)\n                .concat(matcher.parent ? matcher.parent.keys.filter(k => k.optional) : [])\n                .map(k => k.name)), \n            // discard any existing params in the current location that do not exist here\n            // #1497 this ensures better active/exact matching\n            location.params &&\n                paramsFromLocation(location.params, matcher.keys.map(k => k.name)));\n            // throws if cannot be stringified\n            path = matcher.stringify(params);\n        }\n        else if (location.path != null) {\n            // no need to resolve the path with the matcher as it was provided\n            // this also allows the user to control the encoding\n            path = location.path;\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://github.com/vuejs/router/issues/new/choose.`);\n            }\n            matcher = matchers.find(m => m.re.test(path));\n            // matcher should have a value after the loop\n            if (matcher) {\n                // we know the matcher works because we tested the regexp\n                params = matcher.parse(path);\n                name = matcher.record.name;\n            }\n            // location is a relative path\n        }\n        else {\n            // match by name or path of current route\n            matcher = currentLocation.name\n                ? matcherMap.get(currentLocation.name)\n                : matchers.find(m => m.re.test(currentLocation.path));\n            if (!matcher)\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\n                    location,\n                    currentLocation,\n                });\n            name = matcher.record.name;\n            // since we are navigating to the same location, we don't need to pick the\n            // params like when `name` is provided\n            params = assign({}, currentLocation.params, location.params);\n            path = matcher.stringify(params);\n        }\n        const matched = [];\n        let parentMatcher = matcher;\n        while (parentMatcher) {\n            // reversed order so parents are at the beginning\n            matched.unshift(parentMatcher.record);\n            parentMatcher = parentMatcher.parent;\n        }\n        return {\n            name,\n            path,\n            params,\n            matched,\n            meta: mergeMetaFields(matched),\n        };\n    }\n    // add initial routes\n    routes.forEach(route => addRoute(route));\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\n}\nfunction paramsFromLocation(params, keys) {\n    const newParams = {};\n    for (const key of keys) {\n        if (key in params)\n            newParams[key] = params[key];\n    }\n    return newParams;\n}\n/**\n * Normalizes a RouteRecordRaw. Creates a copy\n *\n * @param record\n * @returns the normalized version\n */\nfunction normalizeRouteRecord(record) {\n    return {\n        path: record.path,\n        redirect: record.redirect,\n        name: record.name,\n        meta: record.meta || {},\n        aliasOf: undefined,\n        beforeEnter: record.beforeEnter,\n        props: normalizeRecordProps(record),\n        children: record.children || [],\n        instances: {},\n        leaveGuards: new Set(),\n        updateGuards: new Set(),\n        enterCallbacks: {},\n        components: 'components' in record\n            ? record.components || null\n            : record.component && { default: record.component },\n    };\n}\n/**\n * Normalize the optional `props` in a record to always be an object similar to\n * components. Also accept a boolean for components.\n * @param record\n */\nfunction normalizeRecordProps(record) {\n    const propsObject = {};\n    // props does not exist on redirect records, but we can set false directly\n    const props = record.props || false;\n    if ('component' in record) {\n        propsObject.default = props;\n    }\n    else {\n        // NOTE: we could also allow a function to be applied to every component.\n        // Would need user feedback for use cases\n        for (const name in record.components)\n            propsObject[name] = typeof props === 'object' ? props[name] : props;\n    }\n    return propsObject;\n}\n/**\n * Checks if a record or any of its parent is an alias\n * @param record\n */\nfunction isAliasRecord(record) {\n    while (record) {\n        if (record.record.aliasOf)\n            return true;\n        record = record.parent;\n    }\n    return false;\n}\n/**\n * Merge meta fields of an array of records\n *\n * @param matched - array of matched records\n */\nfunction mergeMetaFields(matched) {\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\n}\nfunction mergeOptions(defaults, partialOptions) {\n    const options = {};\n    for (const key in defaults) {\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\n    }\n    return options;\n}\nfunction isSameParam(a, b) {\n    return (a.name === b.name &&\n        a.optional === b.optional &&\n        a.repeatable === b.repeatable);\n}\n/**\n * Check if a path and its alias have the same required params\n *\n * @param a - original record\n * @param b - alias record\n */\nfunction checkSameParams(a, b) {\n    for (const key of a.keys) {\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\n    }\n    for (const key of b.keys) {\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\n    }\n}\n/**\n * A route with a name and a child with an empty path without a name should warn when adding the route\n *\n * @param mainNormalizedRecord - RouteRecordNormalized\n * @param parent - RouteRecordMatcher\n */\nfunction checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent) {\n    if (parent &&\n        parent.record.name &&\n        !mainNormalizedRecord.name &&\n        !mainNormalizedRecord.path) {\n        warn(`The route named \"${String(parent.record.name)}\" has a child without a name and an empty path. Using that name won't render the empty path child so you probably want to move the name to the child instead. If this is intentional, add a name to the child route to remove the warning.`);\n    }\n}\nfunction checkMissingParamsInAbsolutePath(record, parent) {\n    for (const key of parent.keys) {\n        if (!record.keys.find(isSameParam.bind(null, key)))\n            return warn(`Absolute path \"${record.record.path}\" must have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\n    }\n}\n/**\n * Performs a binary search to find the correct insertion index for a new matcher.\n *\n * Matchers are primarily sorted by their score. If scores are tied then we also consider parent/child relationships,\n * with descendants coming before ancestors. If there's still a tie, new routes are inserted after existing routes.\n *\n * @param matcher - new matcher to be inserted\n * @param matchers - existing matchers\n */\nfunction findInsertionIndex(matcher, matchers) {\n    // First phase: binary search based on score\n    let lower = 0;\n    let upper = matchers.length;\n    while (lower !== upper) {\n        const mid = (lower + upper) >> 1;\n        const sortOrder = comparePathParserScore(matcher, matchers[mid]);\n        if (sortOrder < 0) {\n            upper = mid;\n        }\n        else {\n            lower = mid + 1;\n        }\n    }\n    // Second phase: check for an ancestor with the same score\n    const insertionAncestor = getInsertionAncestor(matcher);\n    if (insertionAncestor) {\n        upper = matchers.lastIndexOf(insertionAncestor, upper - 1);\n        if ((process.env.NODE_ENV !== 'production') && upper < 0) {\n            // This should never happen\n            warn(`Finding ancestor route \"${insertionAncestor.record.path}\" failed for \"${matcher.record.path}\"`);\n        }\n    }\n    return upper;\n}\nfunction getInsertionAncestor(matcher) {\n    let ancestor = matcher;\n    while ((ancestor = ancestor.parent)) {\n        if (isMatchable(ancestor) &&\n            comparePathParserScore(matcher, ancestor) === 0) {\n            return ancestor;\n        }\n    }\n    return;\n}\n/**\n * Checks if a matcher can be reachable. This means if it's possible to reach it as a route. For example, routes without\n * a component, or name, or redirect, are just used to group other routes.\n * @param matcher\n * @param matcher.record record of the matcher\n * @returns\n */\nfunction isMatchable({ record }) {\n    return !!(record.name ||\n        (record.components && Object.keys(record.components).length) ||\n        record.redirect);\n}\n\n/**\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\n * version with the leading `?` and without Should work as URLSearchParams\n\n * @internal\n *\n * @param search - search string to parse\n * @returns a query object\n */\nfunction parseQuery(search) {\n    const query = {};\n    // avoid creating an object with an empty key and empty value\n    // because of split('&')\n    if (search === '' || search === '?')\n        return query;\n    const hasLeadingIM = search[0] === '?';\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\n    for (let i = 0; i < searchParams.length; ++i) {\n        // pre decode the + into space\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\n        // allow the = character\n        const eqPos = searchParam.indexOf('=');\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\n        if (key in query) {\n            // an extra variable for ts types\n            let currentValue = query[key];\n            if (!isArray(currentValue)) {\n                currentValue = query[key] = [currentValue];\n            }\n            currentValue.push(value);\n        }\n        else {\n            query[key] = value;\n        }\n    }\n    return query;\n}\n/**\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\n * doesn't prepend a `?`\n *\n * @internal\n *\n * @param query - query object to stringify\n * @returns string version of the query without the leading `?`\n */\nfunction stringifyQuery(query) {\n    let search = '';\n    for (let key in query) {\n        const value = query[key];\n        key = encodeQueryKey(key);\n        if (value == null) {\n            // only null adds the value\n            if (value !== undefined) {\n                search += (search.length ? '&' : '') + key;\n            }\n            continue;\n        }\n        // keep null values\n        const values = isArray(value)\n            ? value.map(v => v && encodeQueryValue(v))\n            : [value && encodeQueryValue(value)];\n        values.forEach(value => {\n            // skip undefined values in arrays as if they were not present\n            // smaller code than using filter\n            if (value !== undefined) {\n                // only append & with non-empty search\n                search += (search.length ? '&' : '') + key;\n                if (value != null)\n                    search += '=' + value;\n            }\n        });\n    }\n    return search;\n}\n/**\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\n * numbers into strings, removing keys with an undefined value and replacing\n * undefined with null in arrays\n *\n * @param query - query object to normalize\n * @returns a normalized query object\n */\nfunction normalizeQuery(query) {\n    const normalizedQuery = {};\n    for (const key in query) {\n        const value = query[key];\n        if (value !== undefined) {\n            normalizedQuery[key] = isArray(value)\n                ? value.map(v => (v == null ? null : '' + v))\n                : value == null\n                    ? value\n                    : '' + value;\n        }\n    }\n    return normalizedQuery;\n}\n\n/**\n * RouteRecord being rendered by the closest ancestor Router View. Used for\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\n * Location Matched\n *\n * @internal\n */\nconst matchedRouteKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : '');\n/**\n * Allows overriding the router view depth to control which component in\n * `matched` is rendered. rvd stands for Router View Depth\n *\n * @internal\n */\nconst viewDepthKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : '');\n/**\n * Allows overriding the router instance returned by `useRouter` in tests. r\n * stands for router\n *\n * @internal\n */\nconst routerKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router' : '');\n/**\n * Allows overriding the current route returned by `useRoute` in tests. rl\n * stands for route location\n *\n * @internal\n */\nconst routeLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'route location' : '');\n/**\n * Allows overriding the current route used by router-view. Internally this is\n * used when the `route` prop is passed.\n *\n * @internal\n */\nconst routerViewLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location' : '');\n\n/**\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\n */\nfunction useCallbacks() {\n    let handlers = [];\n    function add(handler) {\n        handlers.push(handler);\n        return () => {\n            const i = handlers.indexOf(handler);\n            if (i > -1)\n                handlers.splice(i, 1);\n        };\n    }\n    function reset() {\n        handlers = [];\n    }\n    return {\n        add,\n        list: () => handlers.slice(),\n        reset,\n    };\n}\n\nfunction registerGuard(record, name, guard) {\n    const removeFromList = () => {\n        record[name].delete(guard);\n    };\n    onUnmounted(removeFromList);\n    onDeactivated(removeFromList);\n    onActivated(() => {\n        record[name].add(guard);\n    });\n    record[name].add(guard);\n}\n/**\n * Add a navigation guard that triggers whenever the component for the current\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\n * used in any component. The guard is removed when the component is unmounted.\n *\n * @param leaveGuard - {@link NavigationGuard}\n */\nfunction onBeforeRouteLeave(leaveGuard) {\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\n        return;\n    }\n    const activeRecord = inject(matchedRouteKey, \n    // to avoid warning\n    {}).value;\n    if (!activeRecord) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\n        return;\n    }\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\n}\n/**\n * Add a navigation guard that triggers whenever the current location is about\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\n * component. The guard is removed when the component is unmounted.\n *\n * @param updateGuard - {@link NavigationGuard}\n */\nfunction onBeforeRouteUpdate(updateGuard) {\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\n        return;\n    }\n    const activeRecord = inject(matchedRouteKey, \n    // to avoid warning\n    {}).value;\n    if (!activeRecord) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\n        return;\n    }\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\n}\nfunction guardToPromiseFn(guard, to, from, record, name, runWithContext = fn => fn()) {\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\n    const enterCallbackArray = record &&\n        // name is defined if record is because of the function overload\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\n    return () => new Promise((resolve, reject) => {\n        const next = (valid) => {\n            if (valid === false) {\n                reject(createRouterError(4 /* ErrorTypes.NAVIGATION_ABORTED */, {\n                    from,\n                    to,\n                }));\n            }\n            else if (valid instanceof Error) {\n                reject(valid);\n            }\n            else if (isRouteLocation(valid)) {\n                reject(createRouterError(2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */, {\n                    from: to,\n                    to: valid,\n                }));\n            }\n            else {\n                if (enterCallbackArray &&\n                    // since enterCallbackArray is truthy, both record and name also are\n                    record.enterCallbacks[name] === enterCallbackArray &&\n                    typeof valid === 'function') {\n                    enterCallbackArray.push(valid);\n                }\n                resolve();\n            }\n        };\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\n        const guardReturn = runWithContext(() => guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next));\n        let guardCall = Promise.resolve(guardReturn);\n        if (guard.length < 3)\n            guardCall = guardCall.then(next);\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\n                guardCall = guardCall.then(resolvedValue => {\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\n                    if (!next._called) {\n                        warn(message);\n                        return Promise.reject(new Error('Invalid navigation guard'));\n                    }\n                    return resolvedValue;\n                });\n            }\n            else if (guardReturn !== undefined) {\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\n                if (!next._called) {\n                    warn(message);\n                    reject(new Error('Invalid navigation guard'));\n                    return;\n                }\n            }\n        }\n        guardCall.catch(err => reject(err));\n    });\n}\nfunction canOnlyBeCalledOnce(next, to, from) {\n    let called = 0;\n    return function () {\n        if (called++ === 1)\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\n        // @ts-expect-error: we put it in the original one because it's easier to check\n        next._called = true;\n        if (called === 1)\n            next.apply(null, arguments);\n    };\n}\nfunction extractComponentsGuards(matched, guardType, to, from, runWithContext = fn => fn()) {\n    const guards = [];\n    for (const record of matched) {\n        if ((process.env.NODE_ENV !== 'production') && !record.components && !record.children.length) {\n            warn(`Record with path \"${record.path}\" is either missing a \"component(s)\"` +\n                ` or \"children\" property.`);\n        }\n        for (const name in record.components) {\n            let rawComponent = record.components[name];\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (!rawComponent ||\n                    (typeof rawComponent !== 'object' &&\n                        typeof rawComponent !== 'function')) {\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\n                    // throw to ensure we stop here but warn to ensure the message isn't\n                    // missed by the user\n                    throw new Error('Invalid route component');\n                }\n                else if ('then' in rawComponent) {\n                    // warn if user wrote import('/component.vue') instead of () =>\n                    // import('./component.vue')\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\n                        `Promise instead of a function that returns a Promise. Did you ` +\n                        `write \"import('./MyPage.vue')\" instead of ` +\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\n                        `production if not fixed.`);\n                    const promise = rawComponent;\n                    rawComponent = () => promise;\n                }\n                else if (rawComponent.__asyncLoader &&\n                    // warn only once per component\n                    !rawComponent.__warnedDefineAsync) {\n                    rawComponent.__warnedDefineAsync = true;\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\n                        `using \"defineAsyncComponent()\". ` +\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\n                }\n            }\n            // skip update and leave guards if the route component is not mounted\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\n                continue;\n            if (isRouteComponent(rawComponent)) {\n                // __vccOpts is added by vue-class-component and contain the regular options\n                const options = rawComponent.__vccOpts || rawComponent;\n                const guard = options[guardType];\n                guard &&\n                    guards.push(guardToPromiseFn(guard, to, from, record, name, runWithContext));\n            }\n            else {\n                // start requesting the chunk already\n                let componentPromise = rawComponent();\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\n                    componentPromise = Promise.resolve(componentPromise);\n                }\n                guards.push(() => componentPromise.then(resolved => {\n                    if (!resolved)\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\n                    const resolvedComponent = isESModule(resolved)\n                        ? resolved.default\n                        : resolved;\n                    // replace the function with the resolved component\n                    // cannot be null or undefined because we went into the for loop\n                    record.components[name] = resolvedComponent;\n                    // __vccOpts is added by vue-class-component and contain the regular options\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\n                    const guard = options[guardType];\n                    return (guard &&\n                        guardToPromiseFn(guard, to, from, record, name, runWithContext)());\n                }));\n            }\n        }\n    }\n    return guards;\n}\n/**\n * Allows differentiating lazy components from functional components and vue-class-component\n * @internal\n *\n * @param component\n */\nfunction isRouteComponent(component) {\n    return (typeof component === 'object' ||\n        'displayName' in component ||\n        'props' in component ||\n        '__vccOpts' in component);\n}\n/**\n * Ensures a route is loaded, so it can be passed as o prop to `<RouterView>`.\n *\n * @param route - resolved route to load\n */\nfunction loadRouteLocation(route) {\n    return route.matched.every(record => record.redirect)\n        ? Promise.reject(new Error('Cannot load a route that redirects.'))\n        : Promise.all(route.matched.map(record => record.components &&\n            Promise.all(Object.keys(record.components).reduce((promises, name) => {\n                const rawComponent = record.components[name];\n                if (typeof rawComponent === 'function' &&\n                    !('displayName' in rawComponent)) {\n                    promises.push(rawComponent().then(resolved => {\n                        if (!resolved)\n                            return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\". Ensure you passed a function that returns a promise.`));\n                        const resolvedComponent = isESModule(resolved)\n                            ? resolved.default\n                            : resolved;\n                        // replace the function with the resolved component\n                        // cannot be null or undefined because we went into the for loop\n                        record.components[name] = resolvedComponent;\n                        return;\n                    }));\n                }\n                return promises;\n            }, [])))).then(() => route);\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\n// `isExactActive` behavior should go through an RFC\nfunction useLink(props) {\n    const router = inject(routerKey);\n    const currentRoute = inject(routeLocationKey);\n    let hasPrevious = false;\n    let previousTo = null;\n    const route = computed(() => {\n        const to = unref(props.to);\n        if ((process.env.NODE_ENV !== 'production') && (!hasPrevious || to !== previousTo)) {\n            if (!isRouteLocation(to)) {\n                if (hasPrevious) {\n                    warn(`Invalid value for prop \"to\" in useLink()\\n- to:`, to, `\\n- previous to:`, previousTo, `\\n- props:`, props);\n                }\n                else {\n                    warn(`Invalid value for prop \"to\" in useLink()\\n- to:`, to, `\\n- props:`, props);\n                }\n            }\n            previousTo = to;\n            hasPrevious = true;\n        }\n        return router.resolve(to);\n    });\n    const activeRecordIndex = computed(() => {\n        const { matched } = route.value;\n        const { length } = matched;\n        const routeMatched = matched[length - 1];\n        const currentMatched = currentRoute.matched;\n        if (!routeMatched || !currentMatched.length)\n            return -1;\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\n        if (index > -1)\n            return index;\n        // possible parent record\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\n        return (\n        // we are dealing with nested routes\n        length > 1 &&\n            // if the parent and matched route have the same path, this link is\n            // referring to the empty child. Or we currently are on a different\n            // child of the same parent\n            getOriginalPath(routeMatched) === parentRecordPath &&\n            // avoid comparing the child with its parent\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\n            : index);\n    });\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\n        includesParams(currentRoute.params, route.value.params));\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\n    function navigate(e = {}) {\n        if (guardEvent(e)) {\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\n            // avoid uncaught errors are they are logged anyway\n            ).catch(noop);\n        }\n        return Promise.resolve();\n    }\n    // devtools only\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\n        const instance = getCurrentInstance();\n        if (instance) {\n            const linkContextDevtools = {\n                route: route.value,\n                isActive: isActive.value,\n                isExactActive: isExactActive.value,\n                error: null,\n            };\n            // @ts-expect-error: this is internal\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\n            // @ts-expect-error: this is internal\n            instance.__vrl_devtools.push(linkContextDevtools);\n            watchEffect(() => {\n                linkContextDevtools.route = route.value;\n                linkContextDevtools.isActive = isActive.value;\n                linkContextDevtools.isExactActive = isExactActive.value;\n                linkContextDevtools.error = isRouteLocation(unref(props.to))\n                    ? null\n                    : 'Invalid \"to\" value';\n            }, { flush: 'post' });\n        }\n    }\n    /**\n     * NOTE: update {@link _RouterLinkI}'s `$slots` type when updating this\n     */\n    return {\n        route,\n        href: computed(() => route.value.href),\n        isActive,\n        isExactActive,\n        navigate,\n    };\n}\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\n    name: 'RouterLink',\n    compatConfig: { MODE: 3 },\n    props: {\n        to: {\n            type: [String, Object],\n            required: true,\n        },\n        replace: Boolean,\n        activeClass: String,\n        // inactiveClass: String,\n        exactActiveClass: String,\n        custom: Boolean,\n        ariaCurrentValue: {\n            type: String,\n            default: 'page',\n        },\n    },\n    useLink,\n    setup(props, { slots }) {\n        const link = reactive(useLink(props));\n        const { options } = inject(routerKey);\n        const elClass = computed(() => ({\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\n            // [getLinkClass(\n            //   props.inactiveClass,\n            //   options.linkInactiveClass,\n            //   'router-link-inactive'\n            // )]: !link.isExactActive,\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\n        }));\n        return () => {\n            const children = slots.default && slots.default(link);\n            return props.custom\n                ? children\n                : h('a', {\n                    'aria-current': link.isExactActive\n                        ? props.ariaCurrentValue\n                        : null,\n                    href: link.href,\n                    // this would override user added attrs but Vue will still add\n                    // the listener, so we end up triggering both\n                    onClick: link.navigate,\n                    class: elClass.value,\n                }, children);\n        };\n    },\n});\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n/**\n * Component to render a link that triggers a navigation on click.\n */\nconst RouterLink = RouterLinkImpl;\nfunction guardEvent(e) {\n    // don't redirect with control keys\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n        return;\n    // don't redirect when preventDefault called\n    if (e.defaultPrevented)\n        return;\n    // don't redirect on right click\n    if (e.button !== undefined && e.button !== 0)\n        return;\n    // don't redirect if `target=\"_blank\"`\n    // @ts-expect-error getAttribute does exist\n    if (e.currentTarget && e.currentTarget.getAttribute) {\n        // @ts-expect-error getAttribute exists\n        const target = e.currentTarget.getAttribute('target');\n        if (/\\b_blank\\b/i.test(target))\n            return;\n    }\n    // this may be a Weex event which doesn't have this method\n    if (e.preventDefault)\n        e.preventDefault();\n    return true;\n}\nfunction includesParams(outer, inner) {\n    for (const key in inner) {\n        const innerValue = inner[key];\n        const outerValue = outer[key];\n        if (typeof innerValue === 'string') {\n            if (innerValue !== outerValue)\n                return false;\n        }\n        else {\n            if (!isArray(outerValue) ||\n                outerValue.length !== innerValue.length ||\n                innerValue.some((value, i) => value !== outerValue[i]))\n                return false;\n        }\n    }\n    return true;\n}\n/**\n * Get the original path value of a record by following its aliasOf\n * @param record\n */\nfunction getOriginalPath(record) {\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\n}\n/**\n * Utility class to get the active class based on defaults.\n * @param propClass\n * @param globalClass\n * @param defaultClass\n */\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\n    ? propClass\n    : globalClass != null\n        ? globalClass\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\n    name: 'RouterView',\n    // #674 we manually inherit them\n    inheritAttrs: false,\n    props: {\n        name: {\n            type: String,\n            default: 'default',\n        },\n        route: Object,\n    },\n    // Better compat for @vue/compat users\n    // https://github.com/vuejs/router/issues/1315\n    compatConfig: { MODE: 3 },\n    setup(props, { attrs, slots }) {\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\n        const injectedRoute = inject(routerViewLocationKey);\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\n        const injectedDepth = inject(viewDepthKey, 0);\n        // The depth changes based on empty components option, which allows passthrough routes e.g. routes with children\n        // that are used to reuse the `path` property\n        const depth = computed(() => {\n            let initialDepth = unref(injectedDepth);\n            const { matched } = routeToDisplay.value;\n            let matchedRoute;\n            while ((matchedRoute = matched[initialDepth]) &&\n                !matchedRoute.components) {\n                initialDepth++;\n            }\n            return initialDepth;\n        });\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth.value]);\n        provide(viewDepthKey, computed(() => depth.value + 1));\n        provide(matchedRouteKey, matchedRouteRef);\n        provide(routerViewLocationKey, routeToDisplay);\n        const viewRef = ref();\n        // watch at the same time the component instance, the route record we are\n        // rendering, and the name\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\n            // copy reused instances\n            if (to) {\n                // this will update the instance for new instances as well as reused\n                // instances when navigating to a new route\n                to.instances[name] = instance;\n                // the component instance is reused for a different route or name, so\n                // we copy any saved update or leave guards. With async setup, the\n                // mounting component will mount before the matchedRoute changes,\n                // making instance === oldInstance, so we check if guards have been\n                // added before. This works because we remove guards when\n                // unmounting/deactivating components\n                if (from && from !== to && instance && instance === oldInstance) {\n                    if (!to.leaveGuards.size) {\n                        to.leaveGuards = from.leaveGuards;\n                    }\n                    if (!to.updateGuards.size) {\n                        to.updateGuards = from.updateGuards;\n                    }\n                }\n            }\n            // trigger beforeRouteEnter next callbacks\n            if (instance &&\n                to &&\n                // if there is no instance but to and from are the same this might be\n                // the first visit\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\n            }\n        }, { flush: 'post' });\n        return () => {\n            const route = routeToDisplay.value;\n            // we need the value at the time we render because when we unmount, we\n            // navigated to a different location so the value is different\n            const currentName = props.name;\n            const matchedRoute = matchedRouteRef.value;\n            const ViewComponent = matchedRoute && matchedRoute.components[currentName];\n            if (!ViewComponent) {\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\n            }\n            // props from route configuration\n            const routePropsOption = matchedRoute.props[currentName];\n            const routeProps = routePropsOption\n                ? routePropsOption === true\n                    ? route.params\n                    : typeof routePropsOption === 'function'\n                        ? routePropsOption(route)\n                        : routePropsOption\n                : null;\n            const onVnodeUnmounted = vnode => {\n                // remove the instance reference to prevent leak\n                if (vnode.component.isUnmounted) {\n                    matchedRoute.instances[currentName] = null;\n                }\n            };\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\n                onVnodeUnmounted,\n                ref: viewRef,\n            }));\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\n                isBrowser &&\n                component.ref) {\n                // TODO: can display if it's an alias, its props\n                const info = {\n                    depth: depth.value,\n                    name: matchedRoute.name,\n                    path: matchedRoute.path,\n                    meta: matchedRoute.meta,\n                };\n                const internalInstances = isArray(component.ref)\n                    ? component.ref.map(r => r.i)\n                    : [component.ref.i];\n                internalInstances.forEach(instance => {\n                    // @ts-expect-error\n                    instance.__vrv_devtools = info;\n                });\n            }\n            return (\n            // pass the vnode to the slot as a prop.\n            // h and <component :is=\"...\"> both accept vnodes\n            normalizeSlot(slots.default, { Component: component, route }) ||\n                component);\n        };\n    },\n});\nfunction normalizeSlot(slot, data) {\n    if (!slot)\n        return null;\n    const slotContent = slot(data);\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\n}\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n/**\n * Component to display the current route the user is at.\n */\nconst RouterView = RouterViewImpl;\n// warn against deprecated usage with <transition> & <keep-alive>\n// due to functional component being no longer eager in Vue 3\nfunction warnDeprecatedUsage() {\n    const instance = getCurrentInstance();\n    const parentName = instance.parent && instance.parent.type.name;\n    const parentSubTreeType = instance.parent && instance.parent.subTree && instance.parent.subTree.type;\n    if (parentName &&\n        (parentName === 'KeepAlive' || parentName.includes('Transition')) &&\n        typeof parentSubTreeType === 'object' &&\n        parentSubTreeType.name === 'RouterView') {\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\n            `Use slot props instead:\\n\\n` +\n            `<router-view v-slot=\"{ Component }\">\\n` +\n            `  <${comp}>\\n` +\n            `    <component :is=\"Component\" />\\n` +\n            `  </${comp}>\\n` +\n            `</router-view>`);\n    }\n}\n\n/**\n * Copies a route location and removes any problematic properties that cannot be shown in devtools (e.g. Vue instances).\n *\n * @param routeLocation - routeLocation to format\n * @param tooltip - optional tooltip\n * @returns a copy of the routeLocation\n */\nfunction formatRouteLocation(routeLocation, tooltip) {\n    const copy = assign({}, routeLocation, {\n        // remove variables that can contain vue instances\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\n    });\n    return {\n        _custom: {\n            type: null,\n            readOnly: true,\n            display: routeLocation.fullPath,\n            tooltip,\n            value: copy,\n        },\n    };\n}\nfunction formatDisplay(display) {\n    return {\n        _custom: {\n            display,\n        },\n    };\n}\n// to support multiple router instances\nlet routerId = 0;\nfunction addDevtools(app, router, matcher) {\n    // Take over router.beforeEach and afterEach\n    // make sure we are not registering the devtool twice\n    if (router.__hasDevtools)\n        return;\n    router.__hasDevtools = true;\n    // increment to support multiple router instances\n    const id = routerId++;\n    setupDevtoolsPlugin({\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\n        label: 'Vue Router',\n        packageName: 'vue-router',\n        homepage: 'https://router.vuejs.org',\n        logo: 'https://router.vuejs.org/logo.png',\n        componentStateTypes: ['Routing'],\n        app,\n    }, api => {\n        if (typeof api.now !== 'function') {\n            console.warn('[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n        }\n        // display state added by the router\n        api.on.inspectComponent((payload, ctx) => {\n            if (payload.instanceData) {\n                payload.instanceData.state.push({\n                    type: 'Routing',\n                    key: '$route',\n                    editable: false,\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\n                });\n            }\n        });\n        // mark router-link as active and display tags on router views\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\n            if (componentInstance.__vrv_devtools) {\n                const info = componentInstance.__vrv_devtools;\n                node.tags.push({\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\n                    textColor: 0,\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\n                    backgroundColor: PINK_500,\n                });\n            }\n            // if multiple useLink are used\n            if (isArray(componentInstance.__vrl_devtools)) {\n                componentInstance.__devtoolsApi = api;\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\n                    let label = devtoolsData.route.path;\n                    let backgroundColor = ORANGE_400;\n                    let tooltip = '';\n                    let textColor = 0;\n                    if (devtoolsData.error) {\n                        label = devtoolsData.error;\n                        backgroundColor = RED_100;\n                        textColor = RED_700;\n                    }\n                    else if (devtoolsData.isExactActive) {\n                        backgroundColor = LIME_500;\n                        tooltip = 'This is exactly active';\n                    }\n                    else if (devtoolsData.isActive) {\n                        backgroundColor = BLUE_600;\n                        tooltip = 'This link is active';\n                    }\n                    node.tags.push({\n                        label,\n                        textColor,\n                        tooltip,\n                        backgroundColor,\n                    });\n                });\n            }\n        });\n        watch(router.currentRoute, () => {\n            // refresh active state\n            refreshRoutesView();\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(routerInspectorId);\n            api.sendInspectorState(routerInspectorId);\n        });\n        const navigationsLayerId = 'router:navigations:' + id;\n        api.addTimelineLayer({\n            id: navigationsLayerId,\n            label: `Router${id ? ' ' + id : ''} Navigations`,\n            color: 0x40a8c4,\n        });\n        // const errorsLayerId = 'router:errors'\n        // api.addTimelineLayer({\n        //   id: errorsLayerId,\n        //   label: 'Router Errors',\n        //   color: 0xea5455,\n        // })\n        router.onError((error, to) => {\n            api.addTimelineEvent({\n                layerId: navigationsLayerId,\n                event: {\n                    title: 'Error during Navigation',\n                    subtitle: to.fullPath,\n                    logType: 'error',\n                    time: api.now(),\n                    data: { error },\n                    groupId: to.meta.__navigationId,\n                },\n            });\n        });\n        // attached to `meta` and used to group events\n        let navigationId = 0;\n        router.beforeEach((to, from) => {\n            const data = {\n                guard: formatDisplay('beforeEach'),\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\n                to: formatRouteLocation(to, 'Target location'),\n            };\n            // Used to group navigations together, hide from devtools\n            Object.defineProperty(to.meta, '__navigationId', {\n                value: navigationId++,\n            });\n            api.addTimelineEvent({\n                layerId: navigationsLayerId,\n                event: {\n                    time: api.now(),\n                    title: 'Start of navigation',\n                    subtitle: to.fullPath,\n                    data,\n                    groupId: to.meta.__navigationId,\n                },\n            });\n        });\n        router.afterEach((to, from, failure) => {\n            const data = {\n                guard: formatDisplay('afterEach'),\n            };\n            if (failure) {\n                data.failure = {\n                    _custom: {\n                        type: Error,\n                        readOnly: true,\n                        display: failure ? failure.message : '',\n                        tooltip: 'Navigation Failure',\n                        value: failure,\n                    },\n                };\n                data.status = formatDisplay('❌');\n            }\n            else {\n                data.status = formatDisplay('✅');\n            }\n            // we set here to have the right order\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\n            data.to = formatRouteLocation(to, 'Target location');\n            api.addTimelineEvent({\n                layerId: navigationsLayerId,\n                event: {\n                    title: 'End of navigation',\n                    subtitle: to.fullPath,\n                    time: api.now(),\n                    data,\n                    logType: failure ? 'warning' : 'default',\n                    groupId: to.meta.__navigationId,\n                },\n            });\n        });\n        /**\n         * Inspector of Existing routes\n         */\n        const routerInspectorId = 'router-inspector:' + id;\n        api.addInspector({\n            id: routerInspectorId,\n            label: 'Routes' + (id ? ' ' + id : ''),\n            icon: 'book',\n            treeFilterPlaceholder: 'Search routes',\n        });\n        function refreshRoutesView() {\n            // the routes view isn't active\n            if (!activeRoutesPayload)\n                return;\n            const payload = activeRoutesPayload;\n            // children routes will appear as nested\n            let routes = matcher.getRoutes().filter(route => !route.parent ||\n                // these routes have a parent with no component which will not appear in the view\n                // therefore we still need to include them\n                !route.parent.record.components);\n            // reset match state to false\n            routes.forEach(resetMatchStateOnRouteRecord);\n            // apply a match state if there is a payload\n            if (payload.filter) {\n                routes = routes.filter(route => \n                // save matches state based on the payload\n                isRouteMatching(route, payload.filter.toLowerCase()));\n            }\n            // mark active routes\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\n        }\n        let activeRoutesPayload;\n        api.on.getInspectorTree(payload => {\n            activeRoutesPayload = payload;\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\n                refreshRoutesView();\n            }\n        });\n        /**\n         * Display information about the currently selected route record\n         */\n        api.on.getInspectorState(payload => {\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\n                const routes = matcher.getRoutes();\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\n                if (route) {\n                    payload.state = {\n                        options: formatRouteRecordMatcherForStateInspector(route),\n                    };\n                }\n            }\n        });\n        api.sendInspectorTree(routerInspectorId);\n        api.sendInspectorState(routerInspectorId);\n    });\n}\nfunction modifierForKey(key) {\n    if (key.optional) {\n        return key.repeatable ? '*' : '?';\n    }\n    else {\n        return key.repeatable ? '+' : '';\n    }\n}\nfunction formatRouteRecordMatcherForStateInspector(route) {\n    const { record } = route;\n    const fields = [\n        { editable: false, key: 'path', value: record.path },\n    ];\n    if (record.name != null) {\n        fields.push({\n            editable: false,\n            key: 'name',\n            value: record.name,\n        });\n    }\n    fields.push({ editable: false, key: 'regexp', value: route.re });\n    if (route.keys.length) {\n        fields.push({\n            editable: false,\n            key: 'keys',\n            value: {\n                _custom: {\n                    type: null,\n                    readOnly: true,\n                    display: route.keys\n                        .map(key => `${key.name}${modifierForKey(key)}`)\n                        .join(' '),\n                    tooltip: 'Param keys',\n                    value: route.keys,\n                },\n            },\n        });\n    }\n    if (record.redirect != null) {\n        fields.push({\n            editable: false,\n            key: 'redirect',\n            value: record.redirect,\n        });\n    }\n    if (route.alias.length) {\n        fields.push({\n            editable: false,\n            key: 'aliases',\n            value: route.alias.map(alias => alias.record.path),\n        });\n    }\n    if (Object.keys(route.record.meta).length) {\n        fields.push({\n            editable: false,\n            key: 'meta',\n            value: route.record.meta,\n        });\n    }\n    fields.push({\n        key: 'score',\n        editable: false,\n        value: {\n            _custom: {\n                type: null,\n                readOnly: true,\n                display: route.score.map(score => score.join(', ')).join(' | '),\n                tooltip: 'Score used to sort routes',\n                value: route.score,\n            },\n        },\n    });\n    return fields;\n}\n/**\n * Extracted from tailwind palette\n */\nconst PINK_500 = 0xec4899;\nconst BLUE_600 = 0x2563eb;\nconst LIME_500 = 0x84cc16;\nconst CYAN_400 = 0x22d3ee;\nconst ORANGE_400 = 0xfb923c;\n// const GRAY_100 = 0xf4f4f5\nconst DARK = 0x666666;\nconst RED_100 = 0xfee2e2;\nconst RED_700 = 0xb91c1c;\nfunction formatRouteRecordForInspector(route) {\n    const tags = [];\n    const { record } = route;\n    if (record.name != null) {\n        tags.push({\n            label: String(record.name),\n            textColor: 0,\n            backgroundColor: CYAN_400,\n        });\n    }\n    if (record.aliasOf) {\n        tags.push({\n            label: 'alias',\n            textColor: 0,\n            backgroundColor: ORANGE_400,\n        });\n    }\n    if (route.__vd_match) {\n        tags.push({\n            label: 'matches',\n            textColor: 0,\n            backgroundColor: PINK_500,\n        });\n    }\n    if (route.__vd_exactActive) {\n        tags.push({\n            label: 'exact',\n            textColor: 0,\n            backgroundColor: LIME_500,\n        });\n    }\n    if (route.__vd_active) {\n        tags.push({\n            label: 'active',\n            textColor: 0,\n            backgroundColor: BLUE_600,\n        });\n    }\n    if (record.redirect) {\n        tags.push({\n            label: typeof record.redirect === 'string'\n                ? `redirect: ${record.redirect}`\n                : 'redirects',\n            textColor: 0xffffff,\n            backgroundColor: DARK,\n        });\n    }\n    // add an id to be able to select it. Using the `path` is not possible because\n    // empty path children would collide with their parents\n    let id = record.__vd_id;\n    if (id == null) {\n        id = String(routeRecordId++);\n        record.__vd_id = id;\n    }\n    return {\n        id,\n        label: record.path,\n        tags,\n        children: route.children.map(formatRouteRecordForInspector),\n    };\n}\n//  incremental id for route records and inspector state\nlet routeRecordId = 0;\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\nfunction markRouteRecordActive(route, currentRoute) {\n    // no route will be active if matched is empty\n    // reset the matching state\n    const isExactActive = currentRoute.matched.length &&\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\n    route.__vd_exactActive = route.__vd_active = isExactActive;\n    if (!isExactActive) {\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\n    }\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\n}\nfunction resetMatchStateOnRouteRecord(route) {\n    route.__vd_match = false;\n    route.children.forEach(resetMatchStateOnRouteRecord);\n}\nfunction isRouteMatching(route, filter) {\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\n    route.__vd_match = false;\n    if (!found || found.length < 3) {\n        return false;\n    }\n    // use a regexp without $ at the end to match nested routes better\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\n    if (nonEndingRE.test(filter)) {\n        // mark children as matches\n        route.children.forEach(child => isRouteMatching(child, filter));\n        // exception case: `/`\n        if (route.record.path !== '/' || filter === '/') {\n            route.__vd_match = route.re.test(filter);\n            return true;\n        }\n        // hide the / route\n        return false;\n    }\n    const path = route.record.path.toLowerCase();\n    const decodedPath = decode(path);\n    // also allow partial matching on the path\n    if (!filter.startsWith('/') &&\n        (decodedPath.includes(filter) || path.includes(filter)))\n        return true;\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\n        return true;\n    if (route.record.name && String(route.record.name).includes(filter))\n        return true;\n    return route.children.some(child => isRouteMatching(child, filter));\n}\nfunction omit(obj, keys) {\n    const ret = {};\n    for (const key in obj) {\n        if (!keys.includes(key)) {\n            // @ts-expect-error\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n\n/**\n * Creates a Router instance that can be used by a Vue app.\n *\n * @param options - {@link RouterOptions}\n */\nfunction createRouter(options) {\n    const matcher = createRouterMatcher(options.routes, options);\n    const parseQuery$1 = options.parseQuery || parseQuery;\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\n    const routerHistory = options.history;\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\n            ' https://next.router.vuejs.org/api/#history.');\n    const beforeGuards = useCallbacks();\n    const beforeResolveGuards = useCallbacks();\n    const afterGuards = useCallbacks();\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\n    let pendingLocation = START_LOCATION_NORMALIZED;\n    // leave the scrollRestoration if no scrollBehavior is provided\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\n        history.scrollRestoration = 'manual';\n    }\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\n    const encodeParams = applyToParams.bind(null, encodeParam);\n    const decodeParams = \n    // @ts-expect-error: intentionally avoid the type check\n    applyToParams.bind(null, decode);\n    function addRoute(parentOrRoute, route) {\n        let parent;\n        let record;\n        if (isRouteName(parentOrRoute)) {\n            parent = matcher.getRecordMatcher(parentOrRoute);\n            if ((process.env.NODE_ENV !== 'production') && !parent) {\n                warn(`Parent route \"${String(parentOrRoute)}\" not found when adding child route`, route);\n            }\n            record = route;\n        }\n        else {\n            record = parentOrRoute;\n        }\n        return matcher.addRoute(record, parent);\n    }\n    function removeRoute(name) {\n        const recordMatcher = matcher.getRecordMatcher(name);\n        if (recordMatcher) {\n            matcher.removeRoute(recordMatcher);\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\n        }\n    }\n    function getRoutes() {\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\n    }\n    function hasRoute(name) {\n        return !!matcher.getRecordMatcher(name);\n    }\n    function resolve(rawLocation, currentLocation) {\n        // const objectLocation = routerLocationAsObject(rawLocation)\n        // we create a copy to modify it later\n        currentLocation = assign({}, currentLocation || currentRoute.value);\n        if (typeof rawLocation === 'string') {\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\n            const href = routerHistory.createHref(locationNormalized.fullPath);\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (href.startsWith('//'))\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\n                else if (!matchedRoute.matched.length) {\n                    warn(`No match found for location with path \"${rawLocation}\"`);\n                }\n            }\n            // locationNormalized is always a new object\n            return assign(locationNormalized, matchedRoute, {\n                params: decodeParams(matchedRoute.params),\n                hash: decode(locationNormalized.hash),\n                redirectedFrom: undefined,\n                href,\n            });\n        }\n        if ((process.env.NODE_ENV !== 'production') && !isRouteLocation(rawLocation)) {\n            warn(`router.resolve() was passed an invalid location. This will fail in production.\\n- Location:`, rawLocation);\n            rawLocation = {};\n        }\n        let matcherLocation;\n        // path could be relative in object as well\n        if (rawLocation.path != null) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                'params' in rawLocation &&\n                !('name' in rawLocation) &&\n                // @ts-expect-error: the type is never\n                Object.keys(rawLocation.params).length) {\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\n            }\n            matcherLocation = assign({}, rawLocation, {\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\n            });\n        }\n        else {\n            // remove any nullish param\n            const targetParams = assign({}, rawLocation.params);\n            for (const key in targetParams) {\n                if (targetParams[key] == null) {\n                    delete targetParams[key];\n                }\n            }\n            // pass encoded values to the matcher, so it can produce encoded path and fullPath\n            matcherLocation = assign({}, rawLocation, {\n                params: encodeParams(targetParams),\n            });\n            // current location params are decoded, we need to encode them in case the\n            // matcher merges the params\n            currentLocation.params = encodeParams(currentLocation.params);\n        }\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\n        const hash = rawLocation.hash || '';\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\n        }\n        // the matcher might have merged current location params, so\n        // we need to run the decoding again\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\n            hash: encodeHash(hash),\n            path: matchedRoute.path,\n        }));\n        const href = routerHistory.createHref(fullPath);\n        if ((process.env.NODE_ENV !== 'production')) {\n            if (href.startsWith('//')) {\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\n            }\n            else if (!matchedRoute.matched.length) {\n                warn(`No match found for location with path \"${rawLocation.path != null ? rawLocation.path : rawLocation}\"`);\n            }\n        }\n        return assign({\n            fullPath,\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\n            // hash\n            hash,\n            query: \n            // if the user is using a custom query lib like qs, we might have\n            // nested objects, so we keep the query as is, meaning it can contain\n            // numbers at `$route.query`, but at the point, the user will have to\n            // use their own type anyway.\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\n            stringifyQuery$1 === stringifyQuery\n                ? normalizeQuery(rawLocation.query)\n                : (rawLocation.query || {}),\n        }, matchedRoute, {\n            redirectedFrom: undefined,\n            href,\n        });\n    }\n    function locationAsObject(to) {\n        return typeof to === 'string'\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\n            : assign({}, to);\n    }\n    function checkCanceledNavigation(to, from) {\n        if (pendingLocation !== to) {\n            return createRouterError(8 /* ErrorTypes.NAVIGATION_CANCELLED */, {\n                from,\n                to,\n            });\n        }\n    }\n    function push(to) {\n        return pushWithRedirect(to);\n    }\n    function replace(to) {\n        return push(assign(locationAsObject(to), { replace: true }));\n    }\n    function handleRedirectRecord(to) {\n        const lastMatched = to.matched[to.matched.length - 1];\n        if (lastMatched && lastMatched.redirect) {\n            const { redirect } = lastMatched;\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\n            if (typeof newTargetLocation === 'string') {\n                newTargetLocation =\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\n                        : // force empty params\n                            { path: newTargetLocation };\n                // @ts-expect-error: force empty params when a string is passed to let\n                // the router parse them again\n                newTargetLocation.params = {};\n            }\n            if ((process.env.NODE_ENV !== 'production') &&\n                newTargetLocation.path == null &&\n                !('name' in newTargetLocation)) {\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\n                throw new Error('Invalid redirect');\n            }\n            return assign({\n                query: to.query,\n                hash: to.hash,\n                // avoid transferring params if the redirect has a path\n                params: newTargetLocation.path != null ? {} : to.params,\n            }, newTargetLocation);\n        }\n    }\n    function pushWithRedirect(to, redirectedFrom) {\n        const targetLocation = (pendingLocation = resolve(to));\n        const from = currentRoute.value;\n        const data = to.state;\n        const force = to.force;\n        // to could be a string where `replace` is a function\n        const replace = to.replace === true;\n        const shouldRedirect = handleRedirectRecord(targetLocation);\n        if (shouldRedirect)\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\n                state: typeof shouldRedirect === 'object'\n                    ? assign({}, data, shouldRedirect.state)\n                    : data,\n                force,\n                replace,\n            }), \n            // keep original redirectedFrom if it exists\n            redirectedFrom || targetLocation);\n        // if it was a redirect we already called `pushWithRedirect` above\n        const toLocation = targetLocation;\n        toLocation.redirectedFrom = redirectedFrom;\n        let failure;\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\n            failure = createRouterError(16 /* ErrorTypes.NAVIGATION_DUPLICATED */, { to: toLocation, from });\n            // trigger scroll to allow scrolling to the same anchor\n            handleScroll(from, from, \n            // this is a push, the only way for it to be triggered from a\n            // history.listen is with a redirect, which makes it become a push\n            true, \n            // This cannot be the first navigation because the initial location\n            // cannot be manually navigated to\n            false);\n        }\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\n            .catch((error) => isNavigationFailure(error)\n            ? // navigation redirects still mark the router as ready\n                isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)\n                    ? error\n                    : markAsReady(error) // also returns the error\n            : // reject any unknown error\n                triggerError(error, toLocation, from))\n            .then((failure) => {\n            if (failure) {\n                if (isNavigationFailure(failure, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\n                    if ((process.env.NODE_ENV !== 'production') &&\n                        // we are redirecting to the same location we were already at\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\n                        // and we have done it a couple of times\n                        redirectedFrom &&\n                        // @ts-expect-error: added only in dev\n                        (redirectedFrom._count = redirectedFrom._count\n                            ? // @ts-expect-error\n                                redirectedFrom._count + 1\n                            : 1) > 30) {\n                        warn(`Detected a possibly infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow.\\n Are you always returning a new location within a navigation guard? That would lead to this error. Only return when redirecting or aborting, that should fix this. This might break in production if not fixed.`);\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\n                    }\n                    return pushWithRedirect(\n                    // keep options\n                    assign({\n                        // preserve an existing replacement but allow the redirect to override it\n                        replace,\n                    }, locationAsObject(failure.to), {\n                        state: typeof failure.to === 'object'\n                            ? assign({}, data, failure.to.state)\n                            : data,\n                        force,\n                    }), \n                    // preserve the original redirectedFrom if any\n                    redirectedFrom || toLocation);\n                }\n            }\n            else {\n                // if we fail we don't finalize the navigation\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\n            }\n            triggerAfterEach(toLocation, from, failure);\n            return failure;\n        });\n    }\n    /**\n     * Helper to reject and skip all navigation guards if a new navigation happened\n     * @param to\n     * @param from\n     */\n    function checkCanceledNavigationAndReject(to, from) {\n        const error = checkCanceledNavigation(to, from);\n        return error ? Promise.reject(error) : Promise.resolve();\n    }\n    function runWithContext(fn) {\n        const app = installedApps.values().next().value;\n        // support Vue < 3.3\n        return app && typeof app.runWithContext === 'function'\n            ? app.runWithContext(fn)\n            : fn();\n    }\n    // TODO: refactor the whole before guards by internally using router.beforeEach\n    function navigate(to, from) {\n        let guards;\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\n        // all components here have been resolved once because we are leaving\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\n        // leavingRecords is already reversed\n        for (const record of leavingRecords) {\n            record.leaveGuards.forEach(guard => {\n                guards.push(guardToPromiseFn(guard, to, from));\n            });\n        }\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\n        guards.push(canceledNavigationCheck);\n        // run the queue of per route beforeRouteLeave guards\n        return (runGuardQueue(guards)\n            .then(() => {\n            // check global guards beforeEach\n            guards = [];\n            for (const guard of beforeGuards.list()) {\n                guards.push(guardToPromiseFn(guard, to, from));\n            }\n            guards.push(canceledNavigationCheck);\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check in components beforeRouteUpdate\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\n            for (const record of updatingRecords) {\n                record.updateGuards.forEach(guard => {\n                    guards.push(guardToPromiseFn(guard, to, from));\n                });\n            }\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check the route beforeEnter\n            guards = [];\n            for (const record of enteringRecords) {\n                // do not trigger beforeEnter on reused views\n                if (record.beforeEnter) {\n                    if (isArray(record.beforeEnter)) {\n                        for (const beforeEnter of record.beforeEnter)\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\n                    }\n                    else {\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\n                    }\n                }\n            }\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\n            to.matched.forEach(record => (record.enterCallbacks = {}));\n            // check in-component beforeRouteEnter\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from, runWithContext);\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check global guards beforeResolve\n            guards = [];\n            for (const guard of beforeResolveGuards.list()) {\n                guards.push(guardToPromiseFn(guard, to, from));\n            }\n            guards.push(canceledNavigationCheck);\n            return runGuardQueue(guards);\n        })\n            // catch any navigation canceled\n            .catch(err => isNavigationFailure(err, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)\n            ? err\n            : Promise.reject(err)));\n    }\n    function triggerAfterEach(to, from, failure) {\n        // navigation is confirmed, call afterGuards\n        // TODO: wrap with error handlers\n        afterGuards\n            .list()\n            .forEach(guard => runWithContext(() => guard(to, from, failure)));\n    }\n    /**\n     * - Cleans up any navigation guards\n     * - Changes the url if necessary\n     * - Calls the scrollBehavior\n     */\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\n        // a more recent navigation took place\n        const error = checkCanceledNavigation(toLocation, from);\n        if (error)\n            return error;\n        // only consider as push if it's not the first navigation\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\n        const state = !isBrowser ? {} : history.state;\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\n        // it's just reflecting the url\n        if (isPush) {\n            // on the initial navigation, we want to reuse the scroll position from\n            // history state if it exists\n            if (replace || isFirstNavigation)\n                routerHistory.replace(toLocation.fullPath, assign({\n                    scroll: isFirstNavigation && state && state.scroll,\n                }, data));\n            else\n                routerHistory.push(toLocation.fullPath, data);\n        }\n        // accept current navigation\n        currentRoute.value = toLocation;\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\n        markAsReady();\n    }\n    let removeHistoryListener;\n    // attach listener to history to trigger navigations\n    function setupListeners() {\n        // avoid setting up listeners twice due to an invalid first navigation\n        if (removeHistoryListener)\n            return;\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\n            if (!router.listening)\n                return;\n            // cannot be a redirect route because it was in history\n            const toLocation = resolve(to);\n            // due to dynamic routing, and to hash history with manual navigation\n            // (manually changing the url or calling history.hash = '#/somewhere'),\n            // there could be a redirect record in history\n            const shouldRedirect = handleRedirectRecord(toLocation);\n            if (shouldRedirect) {\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\n                return;\n            }\n            pendingLocation = toLocation;\n            const from = currentRoute.value;\n            // TODO: should be moved to web history?\n            if (isBrowser) {\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\n            }\n            navigate(toLocation, from)\n                .catch((error) => {\n                if (isNavigationFailure(error, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\n                    return error;\n                }\n                if (isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\n                    // false) but this is bug prone as we have no way to wait the\n                    // navigation to be finished before calling pushWithRedirect. Using\n                    // a setTimeout of 16ms seems to work but there is no guarantee for\n                    // it to work on every browser. So instead we do not restore the\n                    // history entry and trigger a new navigation as requested by the\n                    // navigation guard.\n                    // the error is already handled by router.push we just want to avoid\n                    // logging the error\n                    pushWithRedirect(error.to, toLocation\n                    // avoid an uncaught rejection, let push call triggerError\n                    )\n                        .then(failure => {\n                        // manual change in hash history #916 ending up in the URL not\n                        // changing, but it was changed by the manual url change, so we\n                        // need to manually change it ourselves\n                        if (isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ |\n                            16 /* ErrorTypes.NAVIGATION_DUPLICATED */) &&\n                            !info.delta &&\n                            info.type === NavigationType.pop) {\n                            routerHistory.go(-1, false);\n                        }\n                    })\n                        .catch(noop);\n                    // avoid the then branch\n                    return Promise.reject();\n                }\n                // do not restore history on unknown direction\n                if (info.delta) {\n                    routerHistory.go(-info.delta, false);\n                }\n                // unrecognized error, transfer to the global handler\n                return triggerError(error, toLocation, from);\n            })\n                .then((failure) => {\n                failure =\n                    failure ||\n                        finalizeNavigation(\n                        // after navigation, all matched components are resolved\n                        toLocation, from, false);\n                // revert the navigation\n                if (failure) {\n                    if (info.delta &&\n                        // a new navigation has been triggered, so we do not want to revert, that will change the current history\n                        // entry while a different route is displayed\n                        !isNavigationFailure(failure, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\n                        routerHistory.go(-info.delta, false);\n                    }\n                    else if (info.type === NavigationType.pop &&\n                        isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 16 /* ErrorTypes.NAVIGATION_DUPLICATED */)) {\n                        // manual change in hash history #916\n                        // it's like a push but lacks the information of the direction\n                        routerHistory.go(-1, false);\n                    }\n                }\n                triggerAfterEach(toLocation, from, failure);\n            })\n                // avoid warnings in the console about uncaught rejections, they are logged by triggerErrors\n                .catch(noop);\n        });\n    }\n    // Initialization and Errors\n    let readyHandlers = useCallbacks();\n    let errorListeners = useCallbacks();\n    let ready;\n    /**\n     * Trigger errorListeners added via onError and throws the error as well\n     *\n     * @param error - error to throw\n     * @param to - location we were navigating to when the error happened\n     * @param from - location we were navigating from when the error happened\n     * @returns the error as a rejected promise\n     */\n    function triggerError(error, to, from) {\n        markAsReady(error);\n        const list = errorListeners.list();\n        if (list.length) {\n            list.forEach(handler => handler(error, to, from));\n        }\n        else {\n            if ((process.env.NODE_ENV !== 'production')) {\n                warn('uncaught error during route navigation:');\n            }\n            console.error(error);\n        }\n        // reject the error no matter there were error listeners or not\n        return Promise.reject(error);\n    }\n    function isReady() {\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\n            return Promise.resolve();\n        return new Promise((resolve, reject) => {\n            readyHandlers.add([resolve, reject]);\n        });\n    }\n    function markAsReady(err) {\n        if (!ready) {\n            // still not ready if an error happened\n            ready = !err;\n            setupListeners();\n            readyHandlers\n                .list()\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\n            readyHandlers.reset();\n        }\n        return err;\n    }\n    // Scroll behavior\n    function handleScroll(to, from, isPush, isFirstNavigation) {\n        const { scrollBehavior } = options;\n        if (!isBrowser || !scrollBehavior)\n            return Promise.resolve();\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\n            ((isFirstNavigation || !isPush) &&\n                history.state &&\n                history.state.scroll) ||\n            null;\n        return nextTick()\n            .then(() => scrollBehavior(to, from, scrollPosition))\n            .then(position => position && scrollToPosition(position))\n            .catch(err => triggerError(err, to, from));\n    }\n    const go = (delta) => routerHistory.go(delta);\n    let started;\n    const installedApps = new Set();\n    const router = {\n        currentRoute,\n        listening: true,\n        addRoute,\n        removeRoute,\n        hasRoute,\n        getRoutes,\n        resolve,\n        options,\n        push,\n        replace,\n        go,\n        back: () => go(-1),\n        forward: () => go(1),\n        beforeEach: beforeGuards.add,\n        beforeResolve: beforeResolveGuards.add,\n        afterEach: afterGuards.add,\n        onError: errorListeners.add,\n        isReady,\n        install(app) {\n            const router = this;\n            app.component('RouterLink', RouterLink);\n            app.component('RouterView', RouterView);\n            app.config.globalProperties.$router = router;\n            Object.defineProperty(app.config.globalProperties, '$route', {\n                enumerable: true,\n                get: () => unref(currentRoute),\n            });\n            // this initial navigation is only necessary on client, on server it doesn't\n            // make sense because it will create an extra unnecessary navigation and could\n            // lead to problems\n            if (isBrowser &&\n                // used for the initial navigation client side to avoid pushing\n                // multiple times when the router is used in multiple apps\n                !started &&\n                currentRoute.value === START_LOCATION_NORMALIZED) {\n                // see above\n                started = true;\n                push(routerHistory.location).catch(err => {\n                    if ((process.env.NODE_ENV !== 'production'))\n                        warn('Unexpected error when starting the router:', err);\n                });\n            }\n            const reactiveRoute = {};\n            for (const key in START_LOCATION_NORMALIZED) {\n                Object.defineProperty(reactiveRoute, key, {\n                    get: () => currentRoute.value[key],\n                    enumerable: true,\n                });\n            }\n            app.provide(routerKey, router);\n            app.provide(routeLocationKey, shallowReactive(reactiveRoute));\n            app.provide(routerViewLocationKey, currentRoute);\n            const unmountApp = app.unmount;\n            installedApps.add(app);\n            app.unmount = function () {\n                installedApps.delete(app);\n                // the router is not attached to an app anymore\n                if (installedApps.size < 1) {\n                    // invalidate the current navigation\n                    pendingLocation = START_LOCATION_NORMALIZED;\n                    removeHistoryListener && removeHistoryListener();\n                    removeHistoryListener = null;\n                    currentRoute.value = START_LOCATION_NORMALIZED;\n                    started = false;\n                    ready = false;\n                }\n                unmountApp();\n            };\n            // TODO: this probably needs to be updated so it can be used by vue-termui\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\n                addDevtools(app, router, matcher);\n            }\n        },\n    };\n    // TODO: type this as NavigationGuardReturn or similar instead of any\n    function runGuardQueue(guards) {\n        return guards.reduce((promise, guard) => promise.then(() => runWithContext(guard)), Promise.resolve());\n    }\n    return router;\n}\nfunction extractChangingRecords(to, from) {\n    const leavingRecords = [];\n    const updatingRecords = [];\n    const enteringRecords = [];\n    const len = Math.max(from.matched.length, to.matched.length);\n    for (let i = 0; i < len; i++) {\n        const recordFrom = from.matched[i];\n        if (recordFrom) {\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\n                updatingRecords.push(recordFrom);\n            else\n                leavingRecords.push(recordFrom);\n        }\n        const recordTo = to.matched[i];\n        if (recordTo) {\n            // the type doesn't matter because we are comparing per reference\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\n                enteringRecords.push(recordTo);\n            }\n        }\n    }\n    return [leavingRecords, updatingRecords, enteringRecords];\n}\n\n/**\n * Returns the router instance. Equivalent to using `$router` inside\n * templates.\n */\nfunction useRouter() {\n    return inject(routerKey);\n}\n/**\n * Returns the current route location. Equivalent to using `$route` inside\n * templates.\n */\nfunction useRoute() {\n    return inject(routeLocationKey);\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, loadRouteLocation, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n"],"names":["stringToByteArray$1","str","out","p","i","length","c","charCodeAt","byteArrayToString","bytes","pos","c1","String","fromCharCode","c2","c3","c4","u","join","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","haveByte4","byte4","DecodeBase64StringError","constructor","name","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","replace","base64Decode","e","console","error","getGlobal","self","window","global","getDefaultsFromGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","process","defaultsJsonString","JSON","parse","getDefaultsFromCookie","document","match","cookie","decoded","getDefaults","info","getDefaultEmulatorHost","productName","_a","_b","emulatorHosts","getDefaultEmulatorHostnameAndPort","host","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","getExperimentalSetting","Deferred","reject","resolve","promise","Promise","wrapCallback","callback","value","catch","createMockUserToken","token","projectId","uid","header","alg","type","project","iat","sub","user_id","payload","Object","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","signature","stringify","getUA","navigator","isMobileCordova","test","isNode","forceEnvironment","prototype","toString","call","isBrowserExtension","runtime","chrome","browser","undefined","id","isReactNative","isIE","ua","indexOf","isSafari","userAgent","includes","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","areCookiesEnabled","cookieEnabled","ERROR_NAME","FirebaseError","code","customData","super","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","key","isEmpty","obj","hasOwnProperty","deepEqual","a","b","aKeys","keys","bKeys","k","aProp","bProp","isObject","thing","querystring","querystringParams","params","entries","forEach","arrayVal","encodeURIComponent","querystringDecode","tokens","split","decodeURIComponent","extractQuerystring","url","queryStart","fragmentStart","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","observers","unsubscribes","observerCount","task","finalized","then","next","forEachObserver","observer","complete","nextOrObserver","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","err","methods","method","DEFAULT_INTERVAL_MILLIS","DEFAULT_BACKOFF_FACTOR","MAX_VALUE_MILLIS","RANDOM_FACTOR","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","Math","pow","randomWait","round","random","min","getModularInstance","_delegate","activeEffectScope","activeEffect","EffectScope","detached","_active","effects","cleanups","parent","index","scopes","active","run","currentEffectScope","on","off","stop","fromParent","l","last","pop","recordEffectScope","effect","scope","getCurrentScope","ReactiveEffect","trigger","scheduler","deps","_dirtyLevel","_trackId","_runnings","_shouldSchedule","_depsLength","dirty","pauseTracking","dep","computed","triggerComputed","resetTracking","v","lastShouldTrack","shouldTrack","lastEffect","preCleanupEffect","postCleanupEffect","onStop","effect2","cleanupDepEffect","trackId","get","delete","size","cleanup","pauseScheduleStack","trackStack","pauseScheduling","resetScheduling","queueEffectSchedulers","shift","trackEffect","debuggerEventExtraInfo","set","oldDep","triggerEffects","dirtyLevel","tracking","allowRecurse","createDep","Map","targetMap","WeakMap","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","track","target","depsMap","newValue","oldValue","oldTarget","values","newLength","Number","key2","isSymbol","isIntegerKey","isMap","isNonTrackableKeys","makeMap","builtInSymbols","Set","getOwnPropertyNames","filter","map","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","arr","toRaw","res","apply","BaseReactiveHandler","_isReadonly","_isShallow","receiver","isReadonly2","isShallow2","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","getPrototypeOf","targetIsArray","hasOwn","Reflect","has","isRef","readonly","reactive","MutableReactiveHandler","isOldValueReadonly","isReadonly","isShallow","hadKey","hasChanged","deleteProperty","ownKeys","ReadonlyReactiveHandler","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toShallow","getProto","rawTarget","rawKey","has2","wrap","toReadonly","toReactive","add","proto","get2","deleteEntry","clear","hadItems","createForEach","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations2","shallowInstrumentations2","readonlyInstrumentations2","shallowReadonlyInstrumentations2","iteratorMethods","mutableInstrumentations","readonlyInstrumentations","shallowInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","shallow","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","toRawType","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","Proxy","isReactive","isProxy","raw","markRaw","def","ComputedRefImpl","getter","_setter","isSSR","__v_isRef","_value","triggerRefValue","_cacheable","trackRefValue","_dirty","getterOrOptions","debugOptions","setter","onlyGetter","isFunction","NOOP","cRef","ref2","newVal","oldVal","r","ref","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","callWithErrorHandling","instance","handleError","callWithAsyncErrorHandling","isPromise","throwInDev","contextVNode","vnode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","nextTick","findInsertionIndex","start","end","middle","middleJob","middleJobId","getId","pre","queueJob","job","splice","queueFlush","flushJobs","invalidateJob","queuePostFlushCb","cb","flushPreFlushCbs","seen","flushPostFlushCbs","deduped","sort","Infinity","comparator","diff","emit","event","rawArgs","isUnmounted","props","EMPTY_OBJ","isModelListener","startsWith","modelArg","slice","modifiersKey","number","trim","isString","looseToNumber","handlerName","handler","toHandlerKey","camelize","hyphenate","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","cache","emitsCache","cached","emits","normalized","hasExtends","extendEmits","raw2","normalizedFromExtend","extend","mixins","extends","isEmitListener","options","isOn","toLowerCase","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","thisProxy","normalizeVNode","render2","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","children","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","el","subTree","suspense","activeBranch","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","for","warnMissing","currentInstance","selfName","getComponentName","capitalize","registry","isSuspense","__isSuspense","queueEffectWithSuspense","pendingBranch","injectHook","hook","prepend","hooks","wrappedHook","__weh","reset","setCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","withDirectives","directives","getComponentPublicInstance","bindings","dir","arg","modifiers","mounted","updated","deep","traverse","invokeDirectiveHook","oldBindings","binding","renderList","source","renderItem","ret","from","item","defineComponent","extraOptions","setup","isAsyncWrapper","__asyncLoader","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","update","$nextTick","n","$watch","instanceWatch","hasSetupBinding","state","__isScriptSetup","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","defineProperty","descriptor","normalizePropsOrEmits","reduce","applyOptions","publicThis","beforeCreate","callHook","dataOptions","computedOptions","watch","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","filters","checkDuplicateProperties","resolveInjections","methodHandler","opt","enumerable","configurable","createWatcher","provides","registerLifecycleHook","register","_hook","onActivated","onDeactivated","exposed","val","normalizeInject","injected","default","h","createPathGetter","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","m","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeEmitsOrPropsOptions","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","createAppContext","app","isNativeTag","NO","performance","warnHandler","compilerOptions","propsCache","uid$1","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","WeakSet","isMounted","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","namespace","__vue_app__","unmount","runWithContext","lastApp","currentApp","parentProvides","defaultValue","treatDefaultAsFactory","arguments","internalObjectProto","createInternalObject","isInternalObject","initProps","rawProps","isStateful","propsDefaults","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","rawCastValues","isReservedProp","camelKey","castValues","isAbsent","hasDefault","Function","skipFactory","normalizePropsOptions","extendProps","EMPTY_ARR","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","Boolean","stringIndex","getType","ctor","isSameType","expectedTypes","findIndex","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","owner","oldRef","_isString","_isRef","doSet","existing","remove","queuePostRenderEffect","initFeatureFlags","__VUE_PROD_HYDRATION_MISMATCH_DETAILS__","getGlobalThis","createRenderer","baseCreateRenderer","createHydrationFns","__VUE__","insert","hostInsert","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","dynamicChildren","isSameVNodeType","getNextHostNode","Text","processText","processCommentNode","Static","mountStaticNode","Fragment","processFragment","processElement","processComponent","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","resolveChildrenNamespace","scopeId","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","needTransition","beforeEnter","onVnodeMounted","enter","parentVNode","child","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","patchBlockChildren","patchChildren","patchProps","class","style","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","isKeepAlive","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","componentUpdateFn","bu","nonHydratedAsyncRoot","locateNonHydratedAsyncRoot","originNext","invokeArrayFns","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateNode","hydrateSubTree","scopedInitialVNode","prevShapeFlag","patchKeyedChildren","patchUnkeyedChildren","oldLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition2","leave","delayLeave","afterLeave","remove2","performLeave","doRemove","memoIndex","deactivate","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","persisted","bum","um","invalidateMount","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","currentNamespace","encoding","allowed","ch1","ch2","len","arrI","subComponent","ssrContextKey","useSSRContext","INITIAL_WATCHER_VALUE","doWatch","immediate","flush","once","onTrack","onTrigger","_cb","unwatch","reactiveGetter","source2","forceTrigger","isMultiSource","s","onCleanup","baseGetter","ssrCleanup","__watcherHandles","fill","path","segments","depth","isSet","isPlainObject","getOwnPropertySymbols","propertyIsEnumerable","__isKeepAlive","RegExp","matches","pattern","isRegExp","registerKeepAliveHook","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","resetShapeFlag","getInnerChild","ssContent","leaveCbKey","enterCbKey","useTransitionState","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionPropsValidators","mode","appear","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","recursiveGetSubtree","BaseTransitionImpl","getCurrentInstance","getTransitionRawChildren","hasFound","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","leavingHooks","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","BaseTransition","postClone","callAsyncHook","every","hook2","leavingVNode","afterHook","cancelHook","called","cancelled","clone","vnode2","hooks2","ssFallback","keepComment","parentKey","keyedFragmentCount","isTeleport","__isTeleport","currentBlock","openBlock","disableTracking","closeBlock","isBlockTreeEnabled","setupBlock","createElementBlock","createBaseVNode","createBlock","isVNode","__v_isVNode","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","targetAnchor","staticCount","normalizeChildren","normalize","_createVNode","cloned","isClassComponent","__vccOpts","guardReactiveProps","klass","normalizeClass","normalizeStyle","extraProps","mergeRef","cloneTransition","mergedProps","mergeProps","ce","createTextVNode","text","flag","createCommentVNode","asBlock","memo","slot","slotFlag","toMerge","incoming","emptyAppContext","exposeProxy","setupContext","attrsProxy","slotsProxy","bc","da","rtg","rtc","sp","internalSetCurrentInstance","setInSSRSetupState","g","registerGlobalSetter","setters","unsetCurrentInstance","compile","installWithProxy","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","__ssrInlineRender","ssrRender","skipOptions","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","attrsProxyHandlers","includeInferred","displayName","__name","computed$1","propsOrChildren","svgNS","mathmlNS","doc","templateContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","content","before","previousSibling","lastChild","cloneNode","innerHTML","wrapper","firstChild","appendChild","TRANSITION","ANIMATION","vtcKey","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","h2","hasExplicitCallback","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","toNumber","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","removeEventListener","onEnd","addEventListener","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","delays","d","toMs","body","offsetHeight","patchClass","isSVG","transitionClasses","removeAttribute","className","vShowOriginalDisplay","vShowHidden","vShow","display","setDisplay","CSS_VAR_TEXT","displayRE","patchStyle","isCssString","hasControlledDisplay","prevStyle","setStyle","cssVarText","cssText","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","isBoolean","isSpecialBooleanAttr","removeAttributeNS","setAttributeNS","includeBooleanAttr","patchDOMProp","tagName","getAttribute","needRemove","veiKey","patchEvent","prevValue","nextValue","invokers","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","cachedNow","getNow","Date","now","initialValue","_vts","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","isNativeOn","shouldSetAsProp","_trueValue","_falseValue","HTMLElement","positionMap","newPositionMap","moveCbKey","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","propertyName","cssTransitionProps","Element","getBoundingClientRect","TransitionGroup","oldPos","newPos","dx","left","dy","top","nodeType","getModelAssigner","onCompositionStart","composing","onCompositionEnd","dispatchEvent","Event","assignKey","vModelText","lazy","castToNumber","domValue","elValue","activeElement","vModelSelect","isSetModel","selectedVal","selected","getValue","_assigning","setSelected","_binding","isMultiple","isArrayValue","option","optionValue","optionType","looseIndexOf","looseEqual","selectedIndex","rendererOptions","ensureRenderer","containerOrSelector","normalizeContainer","resolveRootNamespace","SVGElement","MathMLElement","expectsLowerCase","toTypeString","isDate","objectToString","cacheStringFunction","hit","camelizeRE","toUpperCase","hyphenateRE","fns","writable","parseFloat","isNaN","NaN","_globalThis","globalThis","GLOBALS_ALLOWED","isGloballyAllowed","parseStringStyle","listDelimiterRE","propertyDelimiterRE","styleCommentRE","tmp","specialBooleanAttrs","looseCompareArrays","equal","aValidType","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","toDisplayString","replacer","_key","val2","stringifySymbol","description","Html5QrcodeSupportedFormats","DecodedTextType","Html5QrcodeScanType","html5QrcodeSupportedFormatsTextMap","QR_CODE","AZTEC","CODABAR","CODE_39","CODE_93","CODE_128","DATA_MATRIX","MAXICODE","ITF","EAN_13","EAN_8","PDF_417","RSS_14","RSS_EXPANDED","UPC_A","UPC_E","UPC_EAN_EXTENSION","isValidHtml5QrcodeSupportedFormats","format","Html5QrcodeErrorTypes","Html5QrcodeConstants","GITHUB_PROJECT_URL","SCAN_DEFAULT_FPS","DEFAULT_DISABLE_FLIP","DEFAULT_REMEMBER_LAST_CAMERA_USED","DEFAULT_SUPPORTED_SCAN_TYPE","SCAN_TYPE_CAMERA","SCAN_TYPE_FILE","QrcodeResultFormat","formatName","Html5QrcodeResultFactory","createFromText","decodedText","qrcodeResult","createFromQrcodeResult","Html5QrcodeErrorFactory","createFrom","errorMessage","UNKWOWN_ERROR","BaseLoggger","verbose","log","warn","isExperimental","logErrors","isNullOrUndefined","clip","minValue","maxValue","Html5QrcodeScannerState","Html5QrcodeStrings","codeParseError","exception","errorGettingUserMedia","onlyDeviceSupportedError","cameraStreamingNotSupported","unableToQuerySupportedDevices","insecureContextCameraQueryError","scannerPaused","Html5QrcodeScannerStrings","scanningStatus","idleStatus","errorStatus","permissionStatus","noCameraFoundErrorStatus","lastMatch","codeScannerTitle","cameraPermissionTitle","cameraPermissionRequesting","noCameraFound","scanButtonStopScanningText","scanButtonStartScanningText","torchOnButton","torchOffButton","torchOnFailedMessage","torchOffFailedMessage","scanButtonScanningStarting","textIfCameraScanSelected","textIfFileScanSelected","selectCamera","fileSelectionChooseImage","fileSelectionChooseAnother","fileSelectionNoImageSelected","anonymousCameraPrefix","dragAndDropMessage","dragAndDropMessageOnlyImages","zoom","loadingImage","cameraScanAltText","fileScanAltText","LibraryInfoStrings","poweredBy","reportIssues","VideoConstraintsUtil","isMediaStreamConstraintsValid","videoConstraints","logger","typeofVideoConstraints","bannedKeys","bannedkeysSet","keysInVideoConstraints","_i","keysInVideoConstraints_1","ZXingHtml5QrcodeDecoder","requestedFormats","formatMap","ZXing","reverseFormatMap","createReverseFormatMap","formats","createZXingFormats","hints","POSSIBLE_FORMATS","TRY_HARDER","decodeAsync","canvas","_this","decode","zxingDecoder","luminanceSource","binaryBitmap","toHtml5QrcodeSupportedFormats","debugData","createDebugData","zxingFormat","zxingFormats","requestedFormats_1","requestedFormat","decoderName","BarcodeDetectorDelegate","isSupported","createBarcodeDetectorFormats","detector","BarcodeDetector","dummyDetector","detect","barcodes","sent","largestBarcode","selectLargestBarcode","maxArea","barcodes_1","barcode","area","boundingBox","width","height","barcodeDetectorFormat","Html5QrcodeShim","useBarCodeDetectorIfSupported","EXECUTIONS_TO_REPORT_PERFORMANCE","executions","executionResults","wasPrimaryDecoderUsedInLastDecode","primaryDecoder","secondaryDecoder","startTime","getDecoder","possiblyLogPerformance","decodeRobustlyAsync","error_1","executionTime","possiblyFlushPerformanceReport","sum","mean","AbstractCameraCapability","getCapabilities","constraint","constraints","advanced","applyConstraints","settings","getSettings","settingValue","AbstractRangeCameraCapability","_super","__extends","step","failIfNotSupported","capabilities","capability","ZoomFeatureImpl","TorchFeatureImpl","CameraCapabilitiesImpl","zoomFeature","torchFeature","RenderedCameraImpl","parentElement","mediaStream","callbacks","isClosed","surface","createVideoElement","clientWidth","append","videoElement","muted","playsInline","setupSurface","onabort","onVideoStart","videoWidth","videoHeight","clientHeight","onRenderSurfaceReady","srcObject","play","renderedCamera","aspectRatio","aspectRatioConstraint","getFirstTrackOrFail","failIfClosed","getVideoTracks","pause","resume","onResumeCallback","$this","onVideoResume","isPaused","paused","getSurface","getRunningTrackCapabilities","getRunningTrackSettings","applyVideoConstraints","tracks","tracksToClose","tracksClosed","videoTrack","removeTrack","CameraImpl","mediaDevices","audio","video","getUserMedia","CameraFactory","CameraRetriever","retrieve","getCamerasFromMediaDevices","mst","MediaStreamTrack","getSources","getCamerasFromMediaStreamTrack","rejectWithError","isHttpsOrLocalhost","location","protocol","closeActiveStreams","stream","tracks_1","enabled","enumerateDevices","devices","results","devices_1","device","kind","deviceId","label","sourceInfos","sourceInfos_1","sourceInfo","Html5QrcodeScannerStatus","StateManagerImpl","NOT_STARTED","onGoingTransactionNewState","UNKNOWN","directTransition","newState","failIfTransitionOngoing","validateTransition","startTransition","execute","tempNewState","cancel","getState","failIfNewStateIs","PAUSED","SCANNING","disallowedStatesToTransition","disallowedStatesToTransition_1","disallowedState","StateManagerProxy","stateManager","canScanFile","isScanning","isStrictlyScanning","StateManagerFactory","Constants","DEFAULT_WIDTH","DEFAULT_WIDTH_OFFSET","FILE_SCAN_MIN_HEIGHT","FILE_SCAN_HIDDEN_CANVAS_PADDING","MIN_QR_BOX_SIZE","SHADED_LEFT","SHADED_RIGHT","SHADED_TOP","SHADED_BOTTOM","SHADED_REGION_ELEMENT_ID","VERBOSE","BORDER_SHADER_DEFAULT_COLOR","BORDER_SHADER_MATCH_COLOR","InternalHtml5QrcodeConfig","fps","disableFlip","qrbox","isShadedBoxEnabled","Html5Qrcode","elementId","configOrVerbosityFlag","element","canvasElement","scannerPausedUiElement","hasBorderShaders","borderShaders","qrMatch","qrRegion","lastScanImageFile","getElementById","configObject","experimentalFeatures","qrcode","getSupportedFormats","getUseBarCodeDetectorIfSupported","foreverScanTimeout","shouldScan","stateManagerProxy","cameraIdOrConfig","configuration","qrCodeSuccessCallback","qrCodeErrorCallback","qrCodeErrorCallbackInternal","internalConfig","clearElement","videoConstraintsAvailableAndValid","areVideoConstraintsEnabled","position","toScanningStateChangeTransaction","createVideoConstraints","cameraRenderingOptions","renderingCallbacks","viewfinderWidth","viewfinderHeight","setupUi","foreverScan","factory","camera","shouldPauseVideo","showPausedState","transitionToScanning","hidePausedState","toStoppedStateTransaction","clearTimeout","removeQrRegion","childElement","scanFile","imageFile","showImage","scanFileV2","html5qrcodeResult","File","possiblyCloseLastScanImageFile","URL","createObjectURL","inputImage","Image","onload","imageWidth","imageHeight","containerWidth","containerHeight","computeCanvasDrawConfig","visibleCanvas","createCanvasElement","context_1","getContext","drawImage","x","y","padding","hiddenImageWidth","hiddenImageHeight","hiddenCanvasWidth","hiddenCanvasHeight","hiddenCanvas","onstalled","onsuspend","src","getCameras","getRenderedCameraOrFail","getRunningTrackCameraCapabilities","videoConstaints","allFormats","formatsToSupport","supportedFormats","validateQrboxSize","qrboxSize","validateQrboxConfig","qrDimensions","toQrdimensions","validateMinSize","correctWidthBasedOnRootElementSize","configWidth","shouldShadingBeApplied","defaultQrRegion","getShadedRegionBounds","contextAttributes","willReadFrequently","possiblyInsertShadingElement","createScannerPausedUiElement","rootElement","innerText","zIndex","background","color","textAlign","scanContext","possiblyUpdateShaders","widthRatio","heightRatio","sWidthOffset","sHeightOffset","sxOffset","syOffset","triggerNextScan","getTimeoutFps","isSuccessfull","translate","scale","finally","exact","facingModeKey","deviceIdKey","allowedFacingModeValues_1","exactKey","isValidFacingModeValue","type_2","facingMode","type_1","xoffset","yoffset","formerImageWidth","formerImageHeight","shader","backgroundColor","revokeObjectURL","customId","canvasWidth","canvasHeight","shadingElement","rightLeftBorderSize","topBottomBorderSize","borderLeft","borderRight","borderTop","borderBottom","boxSizing","bottom","right","smallSize","largeSize","insertShaderBorders","shaderElem","side","isLeft","elem","SVG_XML_PREFIX","ASSET_CAMERA_SCAN","ASSET_FILE_SCAN","ASSET_INFO_ICON_16PX","ASSET_CLOSE_ICON_16PX","PersistedDataFactory","createDefault","hasPermission","lastUsedCameraId","PersistedDataManager","localStorage","getItem","LOCAL_STORAGE_KEY","hasCameraPermissions","getLastUsedCameraId","setHasPermission","setLastUsedCameraId","resetLastUsedCameraId","setItem","LibraryInfoDiv","infoDiv","renderInto","border","fontSize","borderRadius","fontWeight","projectLink","href","breakElemFirst","breakElemSecond","reportIssueLink","show","hide","LibraryInfoIcon","onTapIn","onTapOut","isShowingInfoIcon","infoIcon","alt","opacity","cursor","onmouseover","onHoverIn","onmouseout","onHoverOut","onclick","onClick","LibraryInfoContainer","CameraPermissions","hasPermissions","ScanTypeSelector","supportedScanTypes","validateAndReturnScanTypes","getDefaultScanType","hasMoreThanOneScanType","isCameraScanRequired","scanType","isCameraScanType","isFileScanType","maxExpectedValues","supportedScanTypes_1","PublicUiElementIdAndClasses","ALL_ELEMENT_CLASS","CAMERA_PERMISSION_BUTTON_ID","CAMERA_START_BUTTON_ID","CAMERA_STOP_BUTTON_ID","TORCH_BUTTON_ID","CAMERA_SELECTION_SELECT_ID","FILE_SELECTION_BUTTON_ID","ZOOM_SLIDER_ID","SCAN_TYPE_CHANGE_ANCHOR_ID","TORCH_BUTTON_CLASS_TORCH_ON","TORCH_BUTTON_CLASS_TORCH_OFF","BaseUiElementFactory","elementType","TorchController","torchCapability","buttonController","onTorchActionFailureCallback","isTorchOn","isTorchEnabled","flipState","disable","isTorchOnExpected","updateUiBasedOnLatestSettings","propagateFailure","enable","TorchButton","torchButton","torchController","torchButtonOptions","marginLeft","__awaiter","updateTorchCapability","getTorchButton","disabled","button","FileSelectionUi","showOnRender","onFileSelected","fileBasedScanRegion","createFileBasedScanRegion","fileScanLabel","getFileScanInputId","fileSelectionButton","setInitialValueToButton","click","fileScanInput","accept","files","fileList","file","fileName","setImageNameToButton","createDragAndDropMessage","fileBasedScanRegionActiveBorder","stopPropagation","preventDefault","fileBasedScanRegionDefaultBorder","dataTransfer","isAnyFileImage","imageType","isShowing","resetValue","margin","maxWidth","marginBottom","imageFileName","MAX_CHARS","start8Chars","length_1","last8Chars","newText","initialText","CameraSelectionUi","cameras","selectElement","cameraSelectionContainer","marginRight","numCameras","selectCameraString","anonymousCameraId","name_1","isDisabled","hasValue","setValue","hasSingleItem","cameraSelectUi","CameraZoomUi","onChangeCallback","zoomElementContainer","rangeInput","rangeText","renderOnCreate","outline","zoomString","onValueChange","setValues","setOnCameraZoomValueChangeCallback","removeOnCameraZoomValueChangeCallback","cameraZoomUi","toHtml5QrcodeCameraScanConfig","toHtml5QrcodeFullConfig","Html5QrcodeScanner","lastMatchFound","cameraScanImage","fileScanImage","fileSelectionUi","createConfig","scanTypeSelector","currentScanType","sectionSwapAllowed","persistedDataManager","rememberLastUsedCamera","setHeaderMessage","STATUS_SUCCESS","createBasicLayout","html5Qrcode","getScanRegionId","getHtml5QrcodeOrFail","emptyHtmlContainer","mainContainer","resetBasicLayout","createHeader","qrCodeScanRegion","scanRegionId","minHeight","insertCameraScanImageToScanRegion","insertFileScanImageToScanRegion","qrCodeDashboard","dashboardId","getDashboardId","setupInitialDashboard","dashboard","createSection","createSectionControlPanel","createSectionSwap","libraryInfo","headerMessageContainer","getHeaderMessageContainerId","section","getDashboardSectionId","createCameraListUi","scpCameraScanRegion","requestPermissionContainer","requestPermissionButton","showHideScanTypeSwapLink","createPermissionButtonIfNotExists","createPermissionButton","resetHeaderMessage","renderCameraSelection","STATUS_WARNING","getCameraPermissionButtonId","createPermissionsUi","sectionControlPanel","getDashboardSectionCameraScanRegionId","renderFileScanUi","renderCameraZoomUiIfSupported","cameraCapabilities","zoomCapability","zoomValue","defaultZoom","defaultZoomValueIfSupported","cameraActionContainer","cameraActionStartButton","cameraActionStopButton","createAndShowTorchButtonIfSupported","resetCameraActionStartButton","shouldShow","cameraId","showTorchButtonIfSupported","showZoomSliderIfSupported","TEXT_IF_CAMERA_SCAN_SELECTED","TEXT_IF_FILE_SCAN_SELECTED","switchContainer","switchScanTypeLink","getDashboardSectionSwapLinkId","textDecoration","clearScanRegion","getCameraScanRegion","startCameraScanIfPermissionExistsOnSwap","permissionButton","messageDiv","messageText","scannerStatus","STATUS_DEFAULT","getHeaderMessageDiv","shouldDisplay","getDashboardSectionSwapLink","exports","extendStatics","__proto__","__","fixProto","fixStack","DecodeHintType","CustomError","_newTarget","Exception","getKind","ex","ArgumentException","IllegalArgumentException","BinaryBitmap","binarizer","getWidth","getHeight","getBlackRow","row","getBlackMatrix","matrix","isCropSupported","getLuminanceSource","crop","newSource","createBinarizer","isRotateSupported","rotateCounterClockwise","rotateCounterClockwise45","ChecksumException","getChecksumInstance","Binarizer","System","arraycopy","srcPos","dest","destPos","currentTimeMillis","IndexOutOfBoundsException","ArrayIndexOutOfBoundsException","Arrays","fillWithin","fromIndex","toIndex","rangeCheck","arrayLength","asList","rows","cols","createInt32Array","Int32Array","equals","first","second","hashCode","fillUint8Array","copyOf","original","copyOfUint8Array","newArray","Uint8Array","copyOfRange","copy","binarySearch","ar","numberComparator","cmp","Integer","numberOfTrailingZeros","numberOfLeadingZeros","toHexString","toBinaryString","intNumber","bitCount","truncDivision","dividend","divisor","trunc","num","radix","MIN_VALUE_32_BITS","MAX_VALUE","MAX_SAFE_INTEGER","BitArray","bits","makeArray","getSize","getSizeInBytes","floor","ensureCapacity","newBits","flip","getNextSet","bitsOffset","currentBits","getNextUnset","setBulk","setRange","firstInt","lastInt","firstBit","lastBit","mask","isRange","appendBit","bit","appendBits","numBits","numBitsLeft","appendBitArray","other","otherSize","xor","toBytes","bitOffset","array","offset","numBytes","theByte","getBitArray","reverse","oldBitsLen","leftOffset","currentInt","nextInt","CharacterSetValueIdentifiers","DecodeHintType$1","FormatException","getFormatInstance","CharacterSetECI","valueIdentifier","valuesParam","otherEncodingNames","VALUE_IDENTIFIER_TO_ECI","NAME_TO_ECI","VALUES_TO_ECI","otherName","getValueIdentifier","getName","getCharacterSetECIByValue","characterSet","getCharacterSetECIByName","Cp437","ISO8859_1","ISO8859_2","ISO8859_3","ISO8859_4","ISO8859_5","ISO8859_6","ISO8859_7","ISO8859_8","ISO8859_9","ISO8859_10","ISO8859_11","ISO8859_13","ISO8859_14","ISO8859_15","ISO8859_16","SJIS","Cp1250","Cp1251","Cp1252","Cp1256","UnicodeBigUnmarked","UTF8","ASCII","Big5","GB18030","EUC_KR","UnsupportedOperationException","StringEncoding","encodingName","customDecoder","TextDecoder","shouldDecodeOnFallback","decodeFallback","isBrowser","encode","customEncoder","TextEncoder","encodeFallback","encodingCharacterSet","isDecodeFallbackSupported","Uint16Array","buffer","encodedURIstring","unescape","charList","uintArray","StringUtils","castAsNonUtf8Char","ISO88591","guessEncoding","CHARACTER_SET","canBeISO88591","canBeShiftJIS","canBeUTF8","utf8BytesLeft","utf2BytesChars","utf3BytesChars","utf4BytesChars","sjisBytesLeft","sjisKatakanaChars","sjisCurKatakanaWordLength","sjisCurDoubleBytesWordLength","sjisMaxKatakanaWordLength","sjisMaxDoubleBytesWordLength","isoHighOther","utf8bom","ASSUME_SHIFT_JIS","SHIFT_JIS","PLATFORM_DEFAULT_ENCODING","p0","p1","p2","p3","p4","substr","toFixed","toPrecision","toExponential","ch","regex","getBytes","getCharCode","getCharAt","charCode","GB2312","EUC_JP","StringBuilder","enableDecoding","appendChars","deleteCharAt","setCharAt","setLengthToZero","BitMatrix","rowSize","parseFromBooleanArray","image","imageI","parseFromString","stringRepresentation","setString","unsetString","bitsPos","rowStartPos","rowLength","nRows","unset","getRowSize","rowArray","getRow","setRegion","setRow","rotate180","topRow","bottomRow","getEnclosingRectangle","x32","theBits","getTopLeftOnBit","getBottomRightOnBit","hash","lineSeparator","buildToString","NotFoundException","getNotFoundInstance","GlobalHistogramBinarizer","luminances","EMPTY","buckets","LUMINANCE_BUCKETS","initArrays","localLuminances","localBuckets","LUMINANCE_SHIFT","blackPoint","estimateBlackPoint","center","pixel","getMatrix","luminanceSize","Uint8ClampedArray","numBuckets","maxBucketCount","firstPeak","firstPeakSize","secondPeak","secondPeakScore","distanceToBiggest","score","temp","bestValley","bestValleyScore","fromFirst","LUMINANCE_BITS","HybridBinarizer","MINIMUM_DIMENSION","subWidth","BLOCK_SIZE_POWER","BLOCK_SIZE_MASK","subHeight","blackPoints","calculateBlackPoints","newMatrix","calculateThresholdForBlock","maxYOffset","BLOCK_SIZE","maxXOffset","cap","z","blackRow","average","thresholdBlock","threshold","stride","yy","xx","MIN_DYNAMIC_RANGE","averageNeighborBlackPoint","LuminanceSource","sourceRow","luminance","InvertedLuminanceSource","delegate","invertedMatrix","invert","HTMLCanvasElementLuminanceSource","tempCanvasElement","makeBufferFromCanvasImageData","imageData","getImageData","toGrayscaleBuffer","imageBuffer","grayscaleBuffer","gray","alpha","pixelR","pixelG","pixelB","rotate","getTempCanvasElement","ownerDocument","angle","tempContext","angleRadians","DEGREE_TO_RADIANS","newWidth","ceil","abs","cos","sin","newHeight","PI","VideoInputDevice","groupId","toJSON","BarcodeFormat","_arguments","P","generator","adopt","fulfilled","rejected","BrowserCodeReader","reader","timeBetweenScansMillis","_hints","_stopContinuousDecode","_stopAsyncDecode","_timeBetweenDecodingAttempts","hasNavigator","isMediaDevicesSuported","canEnumerateDevices","timeBetweenDecodingAttempts","millis","listVideoInputDevices","videoDevices","videoDevice","getVideoInputDevices","findDeviceById","find","decodeFromInputVideoDevice","videoSource","decodeOnceFromVideoDevice","decodeOnceFromConstraints","decodeOnceFromStream","attachStreamToVideo","decodeOnce","decodeFromInputVideoDeviceContinuously","callbackFn","decodeFromVideoDevice","decodeFromConstraints","decodeFromStream","decodeContinuously","stopAsyncDecode","stopContinuousDecode","prepareVideoElement","addVideoSource","playVideoOnLoadAsync","playVideoOnLoad","videoEndedListener","stopStreams","videoCanPlayListener","tryPlayVideo","isVideoPlaying","currentTime","readyState","getMediaElement","mediaElementId","mediaElement","nodeName","decodeFromImage","decodeFromImageUrl","decodeFromImageElement","decodeFromVideo","decodeFromVideoUrl","decodeFromVideoElement","decodeFromVideoContinuously","decodeFromVideoUrlContinuously","decodeFromVideoElementContinuously","prepareImageElement","imageElement","isImageLoaded","_decodeOnLoadImage","_decodeFromVideoElementSetup","_decodeOnLoadVideo","_decodeOnLoadVideoContinuously","decodeTask","imageLoadedListener","img","naturalWidth","imageSource","HTMLImageElement","HTMLVideoElement","retryIfNotFound","retryIfChecksumOrFormatError","loop","ifNotFound","isChecksumOrFormatError","ifChecksumOrFormat","isNotFound","createBinaryBitmap","decodeBitmap","_isHTMLVideoElement","potentialVideo","drawFrameOnCanvas","srcElement","dimensions","canvasElementContext","sx","sy","sWidth","sHeight","dWidth","dHeight","captureCanvasContext","drawImageOnCanvas","naturalHeight","getCaptureCanvasContext","getCaptureCanvas","hybridBinarizer","captureCanvas","createCaptureCanvas","_destroyCaptureCanvas","_destroyVideoElement","_destroyImageElement","videoPlayingEventListener","cleanVideoSource","Result","rawBytes","resultPoints","timestamp","resultMetadata","getText","getRawBytes","getNumBits","getResultPoints","getBarcodeFormat","getResultMetadata","putMetadata","putAllMetadata","metadata","addResultPoints","newPoints","oldPoints","allPoints","getTimestamp","ResultMetadataType","BarcodeFormat$1","Table","Mode","ErrorCorrectionLevelValues","DataMaskValues","ModeValues","Mode$2","ResultMetadataType$1","DecoderResult","byteSegments","ecLevel","structuredAppendSequenceNumber","structuredAppendParity","setNumBits","getByteSegments","getECLevel","getErrorsCorrected","errorsCorrected","setErrorsCorrected","getErasures","erasures","setErasures","getOther","setOther","hasStructuredAppend","getStructuredAppendParity","getStructuredAppendSequenceNumber","AbstractGenericGF","expTable","logTable","addOrSubtract","GenericGFPoly","field","coefficients","coefficientsLength","firstNonZero","getCoefficients","getDegree","isZero","getCoefficient","degree","evaluateAt","coefficient","multiply","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","getZero","aCoefficients","aLength","bCoefficients","bLength","product","aCoeff","multiplyScalar","scalar","multiplyByMonomial","divide","quotient","remainder","denominatorLeadingTerm","inverseDenominatorLeadingTerm","inverse","degreeDifference","term","iterationQuotient","buildMonomial","alphaPower","ArithmeticException","GenericGF","primitive","generatorBase","zero","one","getOne","getGeneratorBase","AZTEC_DATA_12","AZTEC_DATA_10","AZTEC_DATA_6","AZTEC_PARAM","QR_CODE_FIELD_256","DATA_MATRIX_FIELD_256","AZTEC_DATA_8","MAXICODE_FIELD_64","ReedSolomonException","IllegalStateException","ReedSolomonDecoder","received","twoS","poly","syndromeCoefficients","noError","evalResult","syndrome","sigmaOmega","runEuclideanAlgorithm","sigma","omega","errorLocations","findErrorLocations","errorMagnitudes","findErrorMagnitudes","R","rLast","tLast","rLastLast","tLastLast","q","dltInverse","degreeDiff","sigmaTildeAtZero","errorLocator","numErrors","errorEvaluator","xiInverse","denominator","termPlus1","Decoder","detectorResult","ddata","getBits","rawbits","extractBits","correctedBits","correctBits","convertBoolArrayToByteArray","getEncodedData","decoderResult","highLevelDecode","endIndex","latchTable","UPPER","shiftTable","BINARY","readCode","charCount","DIGIT","getCharacter","getTable","LOWER","PUNCT","MIXED","table","UPPER_TABLE","LOWER_TABLE","MIXED_TABLE","PUNCT_TABLE","DIGIT_TABLE","gf","codewordSize","getNbLayers","numDataCodewords","getNbDatablocks","numCodewords","dataWords","rsDecoder","stuffedBits","dataWord","compact","isCompact","layers","baseMatrixSize","alignmentMap","totalBitsInLayer","matrixSize","origCenter","newOffset","rowOffset","low","high","columnOffset","startIndex","readByte","boolArr","byteArr","MathUtils","MIN_SAFE_INTEGER","distance","aX","aY","bX","bY","xDiff","yDiff","sqrt","count","Float","floatToIntBits","ResultPoint","getX","getY","otherPoint","orderBestPatterns","patterns","zeroOneDistance","oneTwoDistance","zeroTwoDistance","pointA","pointB","pointC","crossProductZ","pattern1","pattern2","DetectorResult","points","getPoints","AztecDetectorResult","nbDatablocks","nbLayers","WhiteRectangleDetector","initSize","INIT_SIZE","halfsize","leftInit","rightInit","upInit","downInit","up","down","sizeExceeded","aBlackPointFoundOnBorder","atLeastOneBlackPointFoundOnBorder","atLeastOneBlackPointFoundOnRight","atLeastOneBlackPointFoundOnBottom","atLeastOneBlackPointFoundOnLeft","atLeastOneBlackPointFoundOnTop","rightBorderNotWhite","containsBlackPoint","bottomBorderNotWhite","leftBorderNotWhite","topBorderNotWhite","maxSize","getBlackPointOnSegment","centerEdges","dist","xStep","yStep","yi","yj","zi","zj","xi","xj","ti","tj","CORR","fixed","horizontal","GridSampler","checkAndNudgePoints","nudged","PerspectiveTransform","a11","a21","a31","a12","a22","a32","a13","a23","a33","quadrilateralToQuadrilateral","x0","y0","x1","y1","x2","y2","x3","y3","x0p","y0p","x1p","y1p","x2p","y2p","x3p","y3p","qToS","quadrilateralToSquare","sToQ","squareToQuadrilateral","times","transformPoints","transformPointsWithValues","xValues","yValues","dx3","dy3","dx1","dx2","dy1","dy2","buildAdjoint","DefaultGridSampler","sampleGrid","dimensionX","dimensionY","p1ToX","p1ToY","p2ToX","p2ToY","p3ToX","p3ToY","p4ToX","p4ToY","p1FromX","p1FromY","p2FromX","p2FromY","p3FromX","p3FromY","p4FromX","p4FromY","sampleGridWithTransform","Float32Array","iValue","aioobe","GridSamplerInstance","setGridSampler","newGridSampler","gridSampler","getInstance","Point","toResultPoint","Detector","EXPECTED_CORNER_BITS","detectMirror","isMirror","pCenter","getMatrixCenter","bullsEyeCorners","getBullsEyeCorners","extractParameters","corners","getMatrixCornerPoints","nbDataBlocks","isValidPoint","nbCenterLayers","sides","sampleLine","getRotation","parameterData","correctedData","getCorrectedParameterData","cornerBits","idx","numECCodewords","parameterWords","ignored","pina","pinb","pinc","pind","pouta","getFirstDifferent","poutb","poutc","poutd","distancePoint","isWhiteOrBlackRectangle","pinax","pinbx","pincx","pindx","expandSquare","pointD","cornerPoints","cx","cy","getDimension","topLeft","topRight","bottomRight","bottomLeft","sampler","dimension","distanceResultPoint","moduleSize","px","py","corr","cInit","getColor","colorModel","iMax","errRatio","init","isValid","oldSide","newSide","ratio","centerx","centery","result0","result2","result1","result3","point","AztecReader","reportFoundResultPoints","BYTE_SEGMENTS","ERROR_CORRECTION_LEVEL","rpcb","NEED_RESULT_POINT_CALLBACK","foundPossibleResultPoint","BrowserAztecCodeReader","OneDReader","doDecode","nfe","tryHarder","rotatedImage","orientation","ORIENTATION","rowStep","maxLines","rowStepsAboveOrBelow","isAbove","rowNumber","attempt","newHints","hint","decodeRow","re","recordPattern","counters","numCounters","isWhite","counterPosition","recordPatternInReverse","numTransitionsLeft","patternMatchVariance","maxIndividualVariance","total","patternLength","POSITIVE_INFINITY","unitBarWidth","totalVariance","counter","scaledPattern","variance","Code128Reader","findStartPattern","patternStart","bestVariance","MAX_AVG_VARIANCE","bestMatch","startCode","CODE_START_A","CODE_START_C","CODE_PATTERNS","MAX_INDIVIDUAL_VARIANCE","decodeCode","convertFNC1","ASSUME_GS1","startPatternInfo","currentRawCodesIndex","rawCodes","codeSet","CODE_CODE_A","CODE_START_B","CODE_CODE_B","CODE_CODE_C","isNextShifted","lastStart","nextStart","lastCode","checksumTotal","multiplier","lastCharacterWasPrintable","upperMode","shiftUpperMode","CODE_STOP","previous","CODE_FNC_1","CODE_FNC_2","CODE_FNC_3","CODE_FNC_4_A","CODE_SHIFT","CODE_FNC_4_B","lastPatternSize","resultLength","rawCodesSize","Code39Reader","usingCheckDigit","extendedMode","decodeRowResult","theCounters","decodedChar","findAsteriskPattern","toNarrowWidePattern","patternToChar","resultString","whiteSpaceAfterEnd","ALPHABET_STRING","decodeExtended","ASTERISK_ENCODING","copyWithin","wideCounters","maxNarrowCounter","minCounter","totalWideCountersWidth","CHARACTER_ENCODINGS","encoded","ITFReader","narrowLineWidth","startRange","decodeStart","endRange","decodeEnd","decodeMiddle","allowedLengths","ALLOWED_LENGTHS","DEFAULT_ALLOWED_LENGTHS","lengthOK","maxAllowedLength","resultReturn","payloadStart","payloadEnd","counterDigitPair","counterBlack","counterWhite","twoK","decodeDigit","counterDigit","endStart","skipWhiteSpace","startPattern","findGuardPattern","START_PATTERN","validateQuietZone","quietCount","endPattern","END_PATTERN_REVERSED","PATTERNS","AbstractUPCEANReader","decodeRowStringBuffer","findStartGuardPattern","foundStart","START_END_PATTERN","quietStart","checkChecksum","checkStandardUPCEANChecksum","check","getStandardUPCEANChecksum","digit","findGuardPatternWithoutCounters","whiteFirst","MIDDLE_PATTERN","END_PATTERN","L_PATTERNS","UPCEANExtension5Support","CHECK_DIGIT_ENCODINGS","decodeMiddleCounters","extensionStartRange","extensionData","parseExtensionString","extensionResult","lgPatternFound","L_AND_G_PATTERNS","checkDigit","determineCheckDigit","extensionChecksum","parseExtension5String","SUGGESTED_PRICE","currency","rawAmount","unitsString","hundredths","hundredthsString","UPCEANExtension2Support","checkParity","ISSUE_NUMBER","UPCEANExtensionSupport","EXTENSION_START_PATTERN","fiveSupport","twoSupport","UPCEANReader","widths","reversedWidths","startGuardRange","resultPointCallback","resultPoint","budello","quietEnd","decodeResult","extensionLength","ignoreError","allowedExtensions","ALLOWED_EAN_EXTENSIONS","valid","EAN13Reader","determineFirstDigit","middleRange","FIRST_DIGIT_ENCODINGS","EAN8Reader","UPCAReader","ean13Reader","maybeReturnResult","upcaResult","UPCEReader","determineNumSysAndCheckDigit","MIDDLE_END_PATTERN","convertUPCEtoUPCA","numSys","NUMSYS_AND_CHECK_DIGIT_PATTERNS","prefix","suffix","upce","upceChars","lastChar","MultiFormatUPCEANReader","possibleFormats","readers","ean13MayBeUPCA","canReturnUPCA","resultUPCA","AbstractRSSReader","decodeFinderCounters","dataCharacterCounters","oddRoundingErrors","evenRoundingErrors","oddCounts","evenCounts","getDecodeFinderCounters","getDataCharacterCounters","getOddRoundingErrors","getEvenRoundingErrors","getOddCounts","getEvenCounts","parseFinderValue","finderPatterns","increment","biggestError","decrement","isFinderPattern","firstTwoSum","MIN_FINDER_PATTERN_RATIO","MAX_FINDER_PATTERN_RATIO","maxCounter","DataCharacter","checksumPortion","getChecksumPortion","that","FinderPattern","startEnd","getStartEnd","RSSUtils","getRSSvalue","noNarrow","narrowMask","elements","bar","elmWidth","subVal","combins","lessVal","mxwElement","maxDenom","minDenom","BitArrayBuilder","buildBitArray","pairs","charNumber","getRightChar","binary","accPos","firstPair","firstValue","currentPair","leftValue","getLeftChar","rightValue","BlockParsedResult","finished","decodedInformation","getDecodedInformation","isFinished","DecodedObject","newPosition","getNewPosition","DecodedChar","isFNC1","FNC1","DecodedInformation","newString","remainingValue","remaining","getNewString","isRemaining","getRemainingValue","DecodedNumeric","firstDigit","secondDigit","getFirstDigit","getSecondDigit","isFirstDigitFNC1","isSecondDigitFNC1","isAnyFNC1","FieldParser","parseFieldsInGeneralPurpose","rawInformation","firstTwoDigits","dataLength","TWO_DIGIT_DATA_LENGTH","VARIABLE_LENGTH","processVariableAI","processFixedAI","firstThreeDigits","THREE_DIGIT_DATA_LENGTH","THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH","firstFourDigits","FOUR_DIGIT_DATA_LENGTH","aiSize","fieldSize","ai","parsedAI","variableFieldSize","GeneralAppIdDecoder","information","decodeAllCodes","buff","initialPosition","currentPosition","decodeGeneralPurposeField","parsedFields","isStillNumeric","decodeNumeric","numeric","extractNumericValueFromBitArray","digit1","digit2","setPosition","lastDecoded","parseBlocks","getPosition","isAlpha","parseAlphaBlock","isIsoIec646","parseIsoIec646Block","parseNumericBlock","positionChanged","isNumericToAlphaNumericLatch","setAlpha","incrementPosition","isStillIsoIec646","iso","decodeIsoIec646","isAlphaOr646ToNumericLatch","setNumeric","isAlphaTo646ToAlphaLatch","isStillAlpha","decodeAlphanumeric","setIsoIec646","fiveBitValue","sevenBitValue","eightBitValue","sixBitValue","AbstractExpandedDecoder","generalDecoder","getInformation","getGeneralDecoder","AI01decoder","encodeCompressedGtin","buf","currentPos","encodeCompressedGtinWithoutAI","initialBufferPosition","appendCheckDigit","GTIN_SIZE","AI01AndOtherAIs","parseInformation","initialGtinPosition","firstGtinDigit","HEADER_SIZE","AnyAIDecoder","AI01weightDecoder","encodeCompressedWeight","weightSize","originalWeightNumeric","addWeightCode","weightNumeric","checkWeight","currentDivisor","AI013x0xDecoder","WEIGHT_SIZE","AI013103decoder","weight","AI01320xDecoder","AI01392xDecoder","lastAIdigit","LAST_DIGIT_SIZE","AI01393xDecoder","FIRST_THREE_DIGITS_SIZE","generalInformation","AI013x0x1xDecoder","firstAIdigits","dateCode","DATE_SIZE","encodeCompressedDate","numericDate","day","month","year","createDecoder","fourBitEncodationMethod","fiveBitEncodationMethod","sevenBitEncodationMethod","ExpandedPair","leftChar","rightChar","finderPatter","mayBeLast","leftchar","rightchar","finderpattern","maybeLast","getFinderPattern","mustBeLast","o1","o2","equalsOrNull","ExpandedRow","wasReversed","getPairs","getRowNumber","isReversed","isEquivalent","otherPairs","checkEqualitity","pair1","pair2","getFinderPatter","RSSExpandedReader","MAX_PAIRS","startFromEven","constructResult","decodeRow2pairs","tryStackedDecode","retrieveNextPair","storeRow","ps","checkRowsBoolean","checkRows","collectedRows","currentRow","collectedRow","isValidSequence","rs","sequence","FINDER_PATTERN_SEQUENCES","insertPos","prevIsSame","nextIsSame","erow","isPartialRow","removePartialRows","pp","allFound","found","getRows","decoder","resultingString","firstPoints","lastPoints","checkCharacter","firstCharacter","checksum","currentRightChar","checkCharacterValue","getNextSecondBar","initialPos","previousPairs","isOddPattern","keepFinding","forcedOffset","findNextPair","parseFoundFinderPattern","decodeDataCharacter","isEmptyPair","lastPair","searchingEvenPair","reverseCounters","oddPattern","firstCounter","firstElementStart","FINDER_PATTERNS","numModules","elementWidth","expectedElementWidth","adjustOddEvenCounts","weightRowNumber","oddSum","oddChecksumPortion","isNotA1left","WEIGHTS","evenChecksumPortion","group","oddWidest","SYMBOL_WIDEST","evenWidest","vOdd","vEven","tEven","EVEN_TOTAL_SUBSET","gSum","GSUM","evenSum","incrementOdd","decrementOdd","incrementEven","decrementEven","mismatch","oddParityBad","evenParityBad","FINDER_PAT_A","FINDER_PAT_B","FINDER_PAT_C","FINDER_PAT_D","FINDER_PAT_E","FINDER_PAT_F","Pair","finderPattern","getCount","incrementCount","RSS14Reader","possibleLeftPairs","possibleRightPairs","leftPair","decodePair","addOrTally","rightPair","possiblePairs","pair","symbolValue","leftPoints","rightPoints","checkValue","targetCheckValue","findFinderPattern","outside","inside","outsideChar","OUTSIDE_ODD_WIDEST","OUTSIDE_EVEN_TOTAL_SUBSET","OUTSIDE_GSUM","INSIDE_ODD_WIDEST","tOdd","INSIDE_ODD_TOTAL_SUBSET","INSIDE_GSUM","rightFinderPattern","firstIsBlack","MultiFormatOneDReader","useCode39CheckDigit","ASSUME_CODE_39_CHECK_DIGIT","BrowserBarcodeReader","ECBlocks","ecCodewords","ecBlocks1","ecBlocks2","ecBlocks","getECCodewords","getECBlocks","ECB","dataCodewords","getDataCodewords","Version","versionNumber","symbolSizeRows","symbolSizeColumns","dataRegionSizeRows","dataRegionSizeColumns","ecbArray","ecBlock","totalCodewords","getVersionNumber","getSymbolSizeRows","getSymbolSizeColumns","getDataRegionSizeRows","getDataRegionSizeColumns","getTotalCodewords","getVersionForDimensions","numRows","numColumns","VERSIONS","buildVersions","BitMatrixParser","bitMatrix","readVersion","mappingBitMatrix","extractDataRegion","readMappingMatrix","getVersion","readCodewords","Int8Array","resultOffset","column","corner1Read","corner2Read","corner3Read","corner4Read","readUtah","readCorner4","readCorner3","readCorner2","readCorner1","readModule","currentByte","numDataRegionsRow","numDataRegionsColumn","sizeDataRegionRow","sizeDataRegionColumn","bitMatrixWithoutAlignment","dataRegionRow","dataRegionRowOffset","dataRegionColumn","dataRegionColumnOffset","readRowOffset","writeRowOffset","readColumnOffset","writeColumnOffset","DataBlock","codewords","getDataBlocks","rawCodewords","totalBlocks","ecBlockArray","numResultBlocks","numBlockCodewords","longerBlocksTotalCodewords","longerBlocksNumDataCodewords","shorterBlocksNumDataCodewords","rawCodewordsOffset","specialVersion","numLongerBlocks","jOffset","iOffset","getNumDataCodewords","getCodewords","BitSource","byteOffset","getBitOffset","getByteOffset","readBits","available","bitsLeft","toRead","bitsToNotRead","DecodedBitStreamParser","resultTrailer","ASCII_ENCODE","decodeAsciiSegment","C40_ENCODE","decodeC40Segment","TEXT_ENCODE","decodeTextSegment","ANSIX12_ENCODE","decodeAnsiX12Segment","EDIFACT_ENCODE","decodeEdifactSegment","BASE256_ENCODE","decodeBase256Segment","PAD_ENCODE","upperShift","oneByte","cValues","firstByte","parseTwoBytes","cValue","C40_BASIC_SET_CHARS","c40char","C40_SHIFT2_SET_CHARS","TEXT_BASIC_SET_CHARS","textChar","TEXT_SHIFT2_SET_CHARS","TEXT_SHIFT3_SET_CHARS","secondByte","fullBitValue","edifactValue","codewordPosition","d1","unrandomize255State","uee","randomizedBase256Codeword","base256CodewordPosition","pseudoRandomNumber","tempVariable","Decoder$1","parser","dataBlocks","totalBytes","db","resultBytes","dataBlocksCount","dataBlock","codewordBytes","correctErrors","codewordsInts","Detector$1","rectangleDetector","detectSolid1","detectSolid2","correctTopRight","shiftToModuleCenter","dimensionTop","transitionsBetween","dimensionRight","shiftPoint","div","moveAway","fromX","fromY","trAB","trBC","trCD","trDA","tr","pointBs","pointCs","trBA","trTop","trRight","pointAs","candidate1","candidate2","sumc1","sumc2","dimH","dimV","pointDs","centerX","centerY","toX","toY","steep","ystep","xstep","transitions","inBlack","isBlack","DataMatrixReader","PURE_BARCODE","extractPureBits","NO_POINTS","leftTopBlack","rightBottomBlack","matrixWidth","matrixHeight","nudge","BrowserDatamatrixCodeReader","ErrorCorrectionLevel","stringValue","FOR_BITS","FOR_VALUE","fromString","L","M","Q","H","forBits","FormatInformation","formatInfo","errorCorrectionLevel","dataMask","numBitsDiffering","decodeFormatInformation","maskedFormatInfo1","maskedFormatInfo2","doDecodeFormatInformation","FORMAT_INFO_MASK_QR","bestDifference","bestFormatInfo","decodeInfo","FORMAT_INFO_DECODE_LOOKUP","targetInfo","bitsDifference","getErrorCorrectionLevel","getDataMask","ECBlocks$1","ecCodewordsPerBlock","getECCodewordsPerBlock","getNumBlocks","getTotalECCodewords","ECB$1","Version$1","alignmentPatternCenters","getAlignmentPatternCenters","getDimensionForVersion","getECBlocksForLevel","getProvisionalVersionForDimension","getVersionForNumber","decodeVersionInformation","versionBits","bestVersion","VERSION_DECODE_INFO","targetVersion","buildFunctionPattern","DataMask","isMasked","unmaskBitMatrix","DATA_MASK_000","DATA_MASK_001","DATA_MASK_010","DATA_MASK_011","DATA_MASK_100","DATA_MASK_101","DATA_MASK_110","DATA_MASK_111","BitMatrixParser$1","readFormatInformation","parsedFormatInfo","formatInfoBits1","copyBit","formatInfoBits2","jMin","parsedVersion","provisionalVersion","ijMin","theParsedVersion","functionPattern","readingUp","bitsRead","col","remask","setMirror","mirror","DataBlock$1","shorterBlocksTotalCodewords","longerBlocksStartAt","Mode$1","characterCountBitsForVersions","getCharacterCountBits","TERMINATOR","NUMERIC","ALPHANUMERIC","STRUCTURED_APPEND","BYTE","ECI","KANJI","FNC1_FIRST_POSITION","FNC1_SECOND_POSITION","HANZI","DecodedBitStreamParser$1","symbolSequence","parityData","currentCharacterSetECI","fc1InEffect","modeBits","parseECIValue","subset","countHanzi","GB2312_SUBSET","decodeHanziSegment","decodeNumericSegment","decodeAlphanumericSegment","decodeByteSegment","decodeKanjiSegment","iae","twoBytes","assembledTwoBytes","readBytes","toAlphaNumericChar","ALPHANUMERIC_CHARS","nextTwoCharsBits","threeDigitsBits","twoDigitsBits","digitBits","secondThirdBytes","QRCodeDecoderMetaData","mirrored","isMirrored","applyMirroredCorrection","Decoder$2","decodeBooleanArray","decodeBitMatrix","decodeBitMatrixParser","AlignmentPattern","posX","posY","estimatedModuleSize","aboutEquals","moduleSizeDiff","combineEstimate","newModuleSize","combinedX","combinedY","combinedModuleSize","AlignmentPatternFinder","startX","startY","possibleCenters","crossCheckStateCount","maxJ","middleI","stateCount","iGen","currentState","foundPatternCross","confirmed","handlePossibleCenter","centerFromEnd","maxVariance","crossCheckVertical","startI","centerJ","maxCount","originalStateCountTotal","maxI","stateCountTotal","centerI","FinderPattern$1","getEstimatedModuleSize","combinedCount","FinderPatternInfo","patternCenters","getBottomLeft","getTopLeft","getTopRight","FinderPatternFinder","getImage","getPossibleCenters","pureBarcode","iSkip","MAX_MODULES","MIN_SKIP","hasSkipped","haveMultiplyConfirmedCenters","rowSkip","findRowSkip","patternInfo","selectBestPatterns","totalModuleSize","getCrossCheckStateCount","crossCheckDiagonal","crossCheckHorizontal","startJ","firstConfirmedCenter","CENTER_QUORUM","confirmedCount","totalDeviation","startSize","square","stdDev","center1","center2","dA","dB","limit","possibleCenter","Detector$2","getResultPointCallback","finder","processFinderPatternInfo","calculateModuleSize","computeDimension","modulesBetweenFPCenters","alignmentPattern","bottomRightX","bottomRightY","correctionToTopLeft","estAlignmentX","estAlignmentY","findAlignmentInRegion","createTransform","dimMinusThree","sourceBottomRightX","sourceBottomRightY","tltrCentersDimension","tlblCentersDimension","calculateModuleSizeOneWay","otherPattern","moduleSizeEst1","sizeOfBlackWhiteBlackRunBothWays","moduleSizeEst2","sizeOfBlackWhiteBlackRun","otherToX","otherToY","xLimit","realX","realY","overallEstModuleSize","allowanceFactor","allowance","alignmentAreaLeftX","alignmentAreaRightX","alignmentAreaTopY","alignmentAreaBottomY","alignmentFinder","QRCodeReader","STRUCTURED_APPEND_SEQUENCE","STRUCTURED_APPEND_PARITY","nudgedTooFarRight","nudgedTooFarDown","PDF417Common","getBitCountSum","moduleBitCount","toIntArray","list","EMPTY_INT_ARRAY","integer","getCodeword","symbol","SYMBOL_TABLE","CODEWORD_TABLE","NUMBER_OF_CODEWORDS","MAX_CODEWORDS_IN_BARCODE","MIN_ROWS_IN_BARCODE","MAX_ROWS_IN_BARCODE","MODULES_IN_CODEWORD","MODULES_IN_STOP_PATTERN","BARS_IN_MODULE","PDF417DetectorResult","Detector$3","detectMultiple","barcodeCoordinates","foundBarcodeInRow","vertices","findVertices","barcodeCoordinate","ROW_STEP","startRow","startColumn","copyToResult","findRowsWithPattern","INDEXES_START_PATTERN","STOP_PATTERN","INDEXES_STOP_PATTERN","tmpResult","destinationIndexes","loc","previousRowLoc","stopRow","skippedRowCount","MAX_PATTERN_DRIFT","SKIPPED_ROW_COUNT_MAX","BARCODE_MIN_HEIGHT","pixelDrift","MAX_PIXEL_DRIFT","ModulusPoly","subtract","negative","multiplyOther","negativeCoefficients","ModulusBase","modulus","ModulusGF","PDF417_GF","ErrorCorrection","S","evaluation","knownErrors","erasure","errorLocatorDegree","formalDerivativeCoefficients","formalDerivative","numerator","BoundingBox","constructor_2","constructor_1","leftUnspecified","rightUnspecified","minX","maxX","minY","maxY","getBottomRight","getMinX","getMaxX","getMinY","getMaxY","merge","leftBox","rightBox","addMissingRows","missingStartRows","missingEndRows","newTopLeft","newBottomLeft","newTopRight","newBottomRight","newMinY","newTop","newMaxY","newBottom","BarcodeMetadata","columnCount","rowCountUpperPart","rowCountLowerPart","rowCount","getColumnCount","getRowCount","getRowCountUpperPart","getRowCountLowerPart","Formatter","form","DetectionResultColumn","getCodewordNearby","imageRow","codeword","MAX_NEARBY_DISTANCE","nearImageRow","imageRowToCodewordIndex","setCodeword","getBoundingBox","formatter","BarcodeValue","confidence","maxConfidence","entry","getKey","getConfidence","DetectionResultRowIndicatorColumn","_isLeft","setRowNumbers","setRowNumberAsRowIndicatorColumn","adjustCompleteIndicatorColumnRowNumbers","barcodeMetadata","removeIncorrectCodewords","firstRow","lastRow","barcodeRow","maxRowHeight","currentRowHeight","codewordsRow","rowDifference","checkedRows","closePreviousCodewordFound","getRowHeights","getBarcodeMetadata","adjustIncompleteIndicatorColumnRowNumbers","barcodeColumnCount","barcodeRowCountUpperPart","barcodeRowCountLowerPart","barcodeECLevel","rowIndicatorValue","codewordRowNumber","codewordRow","DetectionResult","ADJUST_ROW_NUMBER_SKIP","detectionResultColumns","getDetectionResultColumns","adjustIndicatorColumnRowNumbers","previousUnadjustedCount","unadjustedCodewordCount","adjustRowNumbersAndGetCount","detectionResultColumn","unadjustedCount","adjustRowNumbersByRow","barcodeColumn","hasValidRowNumber","adjustRowNumbers","adjustRowNumbersFromBothRI","adjustRowNumbersFromLRI","adjustRowNumbersFromRRI","LRIcodewords","RRIcodewords","setRowNumber","rowIndicatorRowNumber","invalidRowCounts","adjustRowNumberIfValid","isValidRowNumber","previousColumnCodewords","nextColumnCodewords","otherCodewords","otherCodeword","adjustRowNumber","getBucket","getBarcodeColumnCount","getBarcodeRowCount","getBarcodeECLevel","setBoundingBox","setDetectionResultColumn","getDetectionResultColumn","rowIndicatorColumn","Codeword","endX","bucket","BARCODE_ROW_UNKNOWN","getStartX","getEndX","PDF417CodewordDecoder","initialize","currentSymbol","currentBit","RATIOS_TABLE","fround","bSymbolTableReady","getDecodedValue","decodedValue","getDecodedCodewordValue","sampleBitCounts","getClosestDecodedValue","bitCountSum","bitCountIndex","sumPreviousBits","sampleIndex","getBitValue","bitCountRatios","bestMatchError","ratioTableRow","PDF417ResultMetadata","segmentCount","fileSize","getSegmentIndex","segmentIndex","setSegmentIndex","getFileId","fileId","setFileId","getOptionalData","optionalData","setOptionalData","isLastSegment","lastSegment","setLastSegment","getSegmentCount","setSegmentCount","getSender","sender","setSender","getAddressee","addressee","setAddressee","getFileName","setFileName","getFileSize","setFileSize","getChecksum","setChecksum","setTimestamp","Long","parseLong","NullPointerException","OutputStream","writeBytes","writeBytesOffset","write","OutOfMemoryError","ByteArrayOutputStream","minCapacity","grow","oldCapacity","newCapacity","writeTo","toByteArray","param","toString_string","toString_number","toString_void","charsetName","hibyte","getBigIntConstructor","BigInteger","createBigInt","getEXP900","EXP900","nineHundred","DecodedBitStreamParser$2","codeIndex","TEXT_COMPACTION_MODE_LATCH","textCompaction","BYTE_COMPACTION_MODE_LATCH","BYTE_COMPACTION_MODE_LATCH_6","byteCompaction","MODE_SHIFT_TO_BYTE_COMPACTION_MODE","NUMERIC_COMPACTION_MODE_LATCH","numericCompaction","ECI_CHARSET","ECI_GENERAL_PURPOSE","ECI_USER_DEFINED","BEGIN_MACRO_PDF417_CONTROL_BLOCK","decodeMacroBlock","BEGIN_MACRO_PDF417_OPTIONAL_FIELD","MACRO_PDF417_TERMINATOR","NUMBER_OF_SEQUENCE_CODEWORDS","segmentIndexArray","decodeBase900toBase10","optionalFieldsStart","MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME","MACRO_PDF417_OPTIONAL_FIELD_SENDER","MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE","MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT","MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP","MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM","MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE","optionalFieldsLength","textCompactionData","byteCompactionData","decodeTextCompaction","subMode","ALPHA","priorToShiftMode","subModeCh","LL","ML","PS","PUNCT_SHIFT","AS","ALPHA_SHIFT","PL","MIXED_CHARS","AL","PAL","PUNCT_CHARS","decodedBytes","byteCompactedCodewords","nextCode","numericCodewords","MAX_NUMERIC_CODEWORDS","PDF417ScanningDecoder","imageTopLeft","imageBottomLeft","imageTopRight","imageBottomRight","minCodewordWidth","maxCodewordWidth","detectionResult","leftRowIndicatorColumn","rightRowIndicatorColumn","firstPass","getRowIndicatorColumn","resultBox","maxBarcodeColumn","leftToRight","previousStartColumn","getStartColumn","detectCodeword","createDecoderResult","adjustBoundingBox","rowHeights","getMax","rowHeight","leftBarcodeMetadata","rightBarcodeMetadata","startPoint","adjustCodewordCount","barcodeMatrix","barcodeMatrix01","numberOfCodewords","calculatedNumberOfCodewords","getNumberOfECCodeWords","createBarcodeMatrix","ambiguousIndexValuesList","ambiguousIndexesList","codewordIndex","ambiguousIndexValues","createDecoderResultFromAmbiguousValues","erasureArray","ambiguousIndexes","ambiguousIndexCount","tries","decodeCodewords","isValidBarcodeColumn","skippedColumns","previousRowCodeword","minColumn","maxColumn","adjustCodewordStartColumn","endColumn","getModuleBitCount","codewordBitCount","tmpCount","checkCodewordSkew","getCodewordBucketNumber","imageColumn","moduleNumber","previousPixelValue","codewordStartColumn","correctedStartColumn","CODEWORD_SKEW_SIZE","correctedErrorsCount","verifyCodewordCount","MAX_ERRORS","MAX_EC_CODEWORDS","errorCorrection","getBitCountForCodeword","previousValue","getCodewordBucketNumber_Int32Array","getCodewordBucketNumber_number","barcodeValue","PDF417Reader","decodeMultiple","getMinCodewordWidth","getMaxCodewordWidth","pdf417ResultMetadata","PDF417_EXTRA_METADATA","getMaxWidth","getMinWidth","ReaderException","MultiFormatReader","setHints","decodeInternal","decodeWithState","addOneDReader","BrowserMultiFormatReader","BrowserPDF417Reader","BrowserQRCodeReader","EncodeHintType","EncodeHintType$1","ReedSolomonEncoder","cachedGenerators","buildGenerator","lastGenerator","nextGenerator","toEncode","ecBytes","dataBytes","infoCoefficients","numZeroCoefficients","MaskUtil","applyMaskPenaltyRule1","applyMaskPenaltyRule1Internal","applyMaskPenaltyRule2","penalty","getArray","arrayY","N2","applyMaskPenaltyRule3","numPenalties","isWhiteHorizontal","isWhiteVertical","N3","applyMaskPenaltyRule4","numDarkCells","numTotalCells","fivePercentVariances","N4","getDataMaskBit","maskPattern","intermediate","isHorizontal","iLimit","jLimit","numSameBitCells","prevBit","N1","ByteMatrix","setNumber","setBoolean","aByte","bytesY","otherBytesY","QRCode","getMode","getMaskPattern","setMode","setECLevel","setVersion","setMaskPattern","setMatrix","isValidMaskPattern","NUM_MASK_PATTERNS","WriterException","MatrixUtil","clearMatrix","buildMatrix","dataBits","embedBasicPatterns","embedTypeInfo","maybeEmbedVersionInfo","embedDataBits","embedPositionDetectionPatternsAndSeparators","embedDarkDotAtLeftBottomCorner","maybeEmbedPositionAdjustmentPatterns","embedTimingPatterns","typeInfoBits","makeTypeInfoBits","coordinates","TYPE_INFO_COORDINATES","versionInfoBits","makeVersionInfoBits","bitIndex","direction","findMSBSet","calculateBCHCode","msbSetInPoly","typeInfo","bchCode","TYPE_INFO_POLY","maskBits","TYPE_INFO_MASK_PATTERN","VERSION_INFO_POLY","embedHorizontalSeparationPattern","xStart","yStart","embedVerticalSeparationPattern","embedPositionAdjustmentPattern","patternY","POSITION_ADJUSTMENT_PATTERN","embedPositionDetectionPattern","POSITION_DETECTION_PATTERN","pdpWidth","hspWidth","vspSize","POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE","BlockPair","errorCorrectionBytes","getDataBytes","getErrorCorrectionBytes","Encoder","calculateMaskPenalty","DEFAULT_BYTE_MODE_ENCODING","hasEncodingHint","chooseMode","headerBits","eci","appendECI","appendModeInfo","appendBytes","QR_VERSION","bitsNeeded","calculateBitsNeeded","willFit","recommendVersion","headerAndDataBits","numLetters","appendLengthInfo","numDataBytes","terminateBits","finalBits","interleaveWithECBytes","qrCode","chooseMaskPattern","provisionalBitsNeeded","chooseVersion","getAlphanumericCode","ALPHANUMERIC_TABLE","isOnlyDoubleByteKanji","hasNumeric","hasAlphanumeric","isDigit","minPenalty","bestMaskPattern","numInputBits","versionNum","numEcBytes","totalInputBytes","capacity","numBitsInLastByte","numPaddingBytes","getNumDataBytesAndNumECBytesForBlockID","numTotalBytes","numRSBlocks","blockID","numDataBytesInBlock","numECBytesInBlock","numRsBlocksInGroup2","numRsBlocksInGroup1","numTotalBytesInGroup1","numTotalBytesInGroup2","numDataBytesInGroup1","numDataBytesInGroup2","numEcBytesInGroup1","numEcBytesInGroup2","dataBytesOffset","maxNumDataBytes","maxNumEcBytes","blocks","numEcBytesInBlock","generateECBytes","block","appendNumericBytes","appendAlphanumericBytes","append8BitBytes","appendKanjiBytes","getDigit","singleCharacter","cn","num1","num2","num3","code1","code2","subtracted","BrowserQRCodeSvgWriter","contents","quietZone","QUIET_ZONE_SIZE","ERROR_CORRECTION","MARGIN","renderResult","writeToDom","containerElement","svgElement","inputWidth","inputHeight","qrWidth","qrHeight","outputWidth","outputHeight","leftPadding","topPadding","createSVGElement","inputY","outputY","inputX","outputX","svgRectElement","createSvgRectElement","w","SVG_NS","rect","QRCodeWriter","MultiFormatWriter","writer","PlanarYUVLuminanceSource","yuvData","dataWidth","dataHeight","reverseHorizontal","inputOffset","outputOffset","renderThumbnail","THUMBNAIL_SCALE_FACTOR","pixels","yuv","grey","getThumbnailWidth","getThumbnailHeight","rowStart","RGBLuminanceSource","BYTES_PER_ELEMENT","luminancesUint8Array","g2","Charset","forName","StandardCharsets","ISO_8859_1","AztecCode","setCompact","setSize","getLayers","setLayers","getCodeWords","codeWords","setCodeWords","Collections","singletonList","collection","Token","getPrevious","SimpleToken","appendTo","bitArray","addBinaryShift","byteCount","BinaryShiftToken","binaryShiftStart","binaryShiftByteCount","MODE_NAMES","MODE_UPPER","MODE_LOWER","MODE_DIGIT","MODE_MIXED","MODE_PUNCT","EMPTY_TOKEN","LATCH_TABLE","static_SHIFT_TABLE","SHIFT_TABLE","State","binaryBytes","getToken","getBinaryShiftByteCount","getBitCount","latchAndAppend","latch","latchModeBitCount","shiftAndAppend","thisModeBitCount","addBinaryShiftChar","deltaBitCount","endBinaryShift","isBetterThanOrEqualTo","newModeBitCount","calculateBinaryShiftCost","toBitArray","symbols","static_CHAR_MAP","CHAR_MAP","spaceCharCode","pointCharCode","commaCharCode","zUpperCharCode","aUpperCharCode","zLowerCharCode","aLowerCharCode","nineCharCode","zeroCharCode","mixedTable","punctTable","INITIAL_STATE","HighLevelEncoder","lineBreakCharCode","states","pairCode","nextChar","updateStateListForPair","updateStateListForChar","minState","updateStateForChar","simplifyStates","charInCurrentTable","stateNoBinary","charInMode","latchState","shiftState","binaryState","updateStateForPair","digitState","oldState","Encoder$1","encodeBytes","DEFAULT_EC_PERCENT","DEFAULT_AZTEC_LAYERS","minECCPercent","userSpecifiedLayers","wordSize","eccBits","totalSizeBits","MAX_NB_BITS_COMPACT","MAX_NB_BITS","WORD_SIZE","usableBitsInLayers","stuffBits","messageBits","generateCheckWords","messageSizeInWords","modeMessage","generateModeMessage","drawModeMessage","drawBullsEye","aztec","totalBits","getGF","totalWords","messageWords","bitsToWords","startPad","messageWord","word","AztecWriter","encodeWithHints","charset","eccPercent","AZTEC_LAYERS","encodeLayers","AztecCodeReader","AztecCodeWriter","AztecDecoder","AztecDetector","AztecEncoder","AztecHighLevelEncoder","AztecPoint","DataMatrixDecodedBitStreamParser","PDF417DecodedBitStreamParser","PDF417DecoderErrorCorrection","QRCodeByteMatrix","QRCodeDataMask","QRCodeDecodedBitStreamParser","QRCodeDecoderErrorCorrectionLevel","QRCodeDecoderFormatInformation","QRCodeEncoder","QRCodeEncoderQRCode","QRCodeMaskUtil","QRCodeMatrixUtil","QRCodeMode","QRCodeVersion","ZXingArrays","ZXingCharset","ZXingInteger","ZXingStandardCharsets","ZXingStringBuilder","ZXingStringEncoding","ZXingSystem","createAbstractExpandedDecoder","sfc","isCallable","tryToString","$TypeError","TypeError","module","argument","isPossiblePrototype","$String","it","isPrototypeOf","Prototype","ArrayBuffer","DataView","uncurryThisAccessor","classof","O","byteLength","uncurryThis","arrayBufferByteLength","isDetached","detachTransferable","PROPER_STRUCTURED_CLONE_TRANSFER","structuredClone","ArrayBufferPrototype","DataViewPrototype","isResizable","maxByteLength","getInt8","setInt8","arrayBuffer","preserveResizability","newBuffer","newByteLength","fixedLength","transfer","copyLength","NAME","Constructor","NATIVE_ARRAY_BUFFER","DESCRIPTORS","createNonEnumerableProperty","defineBuiltIn","defineBuiltInAccessor","wellKnownSymbol","InternalStateModule","enforceInternalState","enforce","getInternalState","Int8ArrayPrototype","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","ObjectPrototype","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","NATIVE_ARRAY_BUFFER_VIEWS","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Int16Array","Uint32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","getTypedArrayConstructor","isTypedArray","aTypedArray","aTypedArrayConstructor","C","exportTypedArrayMethod","KEY","property","forced","ARRAY","TypedArrayConstructor","error2","exportTypedArrayStaticMethod","lengthOfArrayLike","$length","toIndexedObject","toAbsoluteIndex","createMethod","IS_INCLUDES","getOwnPropertyDescriptor","SILENT_ON_NON_WRITABLE_LENGTH_SET","A","toIntegerOrInfinity","$RangeError","RangeError","relativeIndex","actualIndex","stringSlice","TO_STRING_TAG_SUPPORT","classofRaw","$Object","CORRECT_ARGUMENTS","tryGet","callee","getOwnPropertyDescriptorModule","definePropertyModule","exceptions","fails","F","createPropertyDescriptor","object","bitmap","makeBuiltIn","defineGlobalProperty","simple","unsafe","nonConfigurable","nonWritable","WorkerThreads","channel","$detach","tryNodeRequire","$ArrayBuffer","$MessageChannel","MessageChannel","detach","transferable","port1","postMessage","EXISTS","IndexSizeError","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","IS_DENO","IS_NODE","Deno","versions","v8","$Error","TEST","stack","V8_OR_CHAKRA_STACK_ENTRY","IS_V8_OR_CHAKRA_STACK","dropEntries","prepareStackTrace","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","dontCallGetSet","sham","exec","NATIVE_BIND","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","aCallable","uncurryThisWithBind","aFunction","V","func","anObject","getIteratorDirect","INVALID_SIZE","SetRecord","intSize","getIterator","numSize","toObject","dummy","Wrapper","NewTarget","NewTargetPrototype","store","functionToString","inspectSource","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","getterFor","TYPE","facade","STATE","documentAll","all","replacement","feature","detection","POLYFILL","NATIVE","string","getBuiltIn","USE_SYMBOL_AS_UID","$Symbol","record","ITERATOR_INSTEAD_OF_RECORD","getMethod","innerResult","innerError","toLength","CONFIGURABLE_FUNCTION_NAME","CONFIGURABLE_LENGTH","TEMPLATE","arity","$default","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","propertyIsEnumerableModule","internalObjectKeys","enumBugKeys","CORRECT_PROTOTYPE_GETTER","IE_PROTO","names","$propertyIsEnumerable","NASHORN_BUG","requireObjectCoercible","aPossiblePrototype","CORRECT_SETTER","pref","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","SetHelpers","iterate","aSet","getSetRecord","iterateSet","iterateSimple","otherRec","SetPrototype","iteratorClose","interruptible","createSetLike","keysIter","IS_PURE","SHARED","copyright","license","V8","IS_BROWSER","V8_VERSION","toPrimitive","prim","BigInt","IndexedObject","ordinaryToPrimitive","TO_PRIMITIVE","exoticToPrim","postfix","NATIVE_SYMBOL","passed","required","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","$transfer","transferToFixedLength","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","properErrorOnNonWritableLength","argCount","difference","setMethodAcceptSetLike","real","intersection","INCORRECT","isDisjointFrom","isSubsetOf","isSupersetOf","symmetricDifference","union","arrayToReversed","ArrayBufferViewCore","arrayFromConstructorAndList","compareFn","arrayWith","isBigIntArray","toBigInt","PROPER_ORDER","actualValue","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","DOM_EXCEPTION","NativeDOMException","$DOMException","DOMExceptionPrototype","argumentsLength","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","BUGGY_DESCRIPTOR","FORCED_CONSTRUCTOR","DOMException","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","constant","constantName","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","$delete","$value","dindex","entriesLength","getAll","$has","PlatformLoggerServiceImpl","getPlatformInfoString","providers","getProviders","provider","isVersionServiceProvider","getImmediate","library","logString","getComponent","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","name$p","name$o","name$m","name$n","name$k","name$l","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","_apps","_serverApps","_components","_addComponent","addComponent","debug","_registerComponent","componentName","serverApp","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_isFirebaseServerApp","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","checkDestroyed","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","oldVersion","createObjectStore","originalErrorMessage","async","readHeartbeatsFromIndexedDB","tx","transaction","objectStore","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","platformLogger","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","hbTimestamp","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","today","toISOString","heartbeatsCache","heartbeatEntry","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","registerCoreComponents","version$1","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","setMultipleInstances","setServiceProps","setInstanceCreatedCallback","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","setComponent","isComponentEager","instanceDeferred","clearInstance","services","INTERNAL","_delete","isComponentSet","getOptions","opts","normalizedDeferredIdentifier","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","normalizeIdentifierForFactory","addOrOverwriteComponent","LogLevel","levelStringToEnum","DEBUG","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","_logLevel","_logHandler","_userLogHandler","setLogLevel","logHandler","userLogHandler","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","isServerError","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","requestStatus","expiresIn","getExpiresInFromResponseExpiresIn","creationTime","getErrorFromResponse","requestName","responseJson","json","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","getAuthorizationHeader","retryIfServerError","responseExpiresIn","createInstallationRequest","heartbeatServiceProvider","fid","endpoint","heartbeatService","heartbeatsHeader","authVersion","sdkVersion","fetch","ok","responseValue","registeredInstallationEntry","registrationStatus","authToken","sleep","ms","bufferToBase64UrlSafe","b64","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","crypto","msCrypto","getRandomValues","b64String","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","broadcastFidChange","getBroadcastChannel","closeBroadcastChannel","broadcastChannel","BroadcastChannel","onmessage","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","updateFn","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","clearTimedOutRequest","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","updateInstallationRequest","hasInstallationRequestTimedOut","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","installation","completedAuthToken","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","hasAuthTokenRequestTimedOut","updatedInstallationEntry","isAuthTokenExpired","inProgressAuthToken","requestTime","installationsImpl","completeInstallationRegistration","extractAppConfig","getMissingValueError","configKeys","keyName","valueName","INSTALLATIONS_NAME","INSTALLATIONS_NAME_INTERNAL","publicFactory","internalFactory","installationsInternal","registerInstallations","ANALYTICS_TYPE","GA_FID_KEY","ORIGIN_KEY","FETCH_TIMEOUT_MILLIS","DYNAMIC_CONFIG_URL","GTAG_URL","createGtagTrustedTypesScriptURL","gtagURL","promiseAllSettled","promises","createTrustedTypesPolicy","policyName","policyOptions","trustedTypesPolicy","trustedTypes","createPolicy","insertScriptTag","dataLayerName","measurementId","createScriptURL","script","gtagScriptURL","head","getOrCreateDataLayer","dataLayer","gtagOnConfig","gtagCore","initializationPromisesMap","dynamicConfigPromisesList","measurementIdToAppId","gtagParams","correspondingAppId","dynamicConfigResults","foundConfig","gtagOnEvent","initializationPromisesToWaitFor","gaSendToList","sendToId","initializationPromise","wrapGtag","gtagWrapper","command","consentAction","fieldName","customParams","wrapOrCreateGtag","gtagFunctionName","_args","wrappedGtag","findGtagScriptOnPage","scriptTags","getElementsByTagName","LONG_RETRY_FACTOR","BASE_INTERVAL_MILLIS","RetryData","throttleMetadata","getThrottleMetadata","setThrottleMetadata","deleteThrottleMetadata","defaultRetryData","fetchDynamicConfig","appFields","appUrl","jsonResponse","_ignored","httpStatus","responseMessage","fetchDynamicConfigWithRetry","retryData","timeoutMillis","throttleEndTimeMillis","signal","AnalyticsAbortSignal","abort","attemptFetchDynamicConfigWithRetry","setAbortableTimeout","isRetriableError","backoffMillis","listeners","listener","defaultEventParametersForInit","defaultConsentSettingsForInit","logEvent$1","gtagFunction","eventName","eventParams","_setConsentDefaultForInit","consentSettings","_setDefaultEventParametersForInit","validateIndexedDB","_initializeAnalytics","dynamicConfigPromise","fidPromise","envIsValid","dynamicConfig","configProperties","AnalyticsService","gtagCoreFunction","wrappedGtagFunction","gtagName","globalInitDone","warnOnBrowserContextMismatch","mismatchedEnvMessages","details","analyticsInstance","getAnalytics","analyticsProvider","initializeAnalytics","logEvent","registerAnalytics","analytics","reason","analyticsOptions","__rest","SuppressedError","_prodErrorMap","prodErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","logClient","_logWarn","msg","_logError","_fail","authOrCode","rest","createErrorInternal","_createError","_errorWithCustomMessage","auth","errorMap","_serverAppCurrentUserOperationNotSupportedError","fullParams","_errorFactory","_assert","assertion","debugFail","failure","debugAssert","_getCurrentUrl","_isHttpOrHttps","_getCurrentScheme","_isOnline","_getUserLanguage","navigatorLanguage","languages","language","Delay","shortDelay","longDelay","isMobile","_emulatorUrl","emulator","FetchProvider","fetchImpl","headersImpl","responseImpl","Response","SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","tenantId","_performApiRequest","customErrorMap","_performFetchWithErrorHandling","query","_getAdditionalHeaders","languageCode","_getFinalTarget","apiHost","referrerPolicy","fetchFn","_canInitEmulator","networkTimeout","NetworkTimeout","race","clearNetworkTimeout","_makeTaggedError","serverErrorCode","serverErrorMessage","authError","_performSignInRequest","serverResponse","_serverResponse","apiScheme","_parseEnforcementState","enforcementStateStr","timer","errorParams","email","phoneNumber","_tokenResponse","isEnterprise","grecaptcha","enterprise","RecaptchaConfig","siteKey","recaptchaEnforcementState","recaptchaKey","getProviderEnforcementState","providerStr","enforcementState","isProviderEnabled","getRecaptchaConfig","deleteAccount","getAccountInfo","utcTimestampToDateString","utcTimestamp","toUTCString","getIdTokenResult","user","userInternal","getIdToken","claims","_parseToken","signInProvider","authTime","secondsStringToMilliseconds","issuedAtTime","expirationTime","signInSecondFactor","seconds","algorithm","_tokenExpiresIn","parsedToken","_logoutIfInvalidated","bypassAuthState","isUserInvalidated","currentUser","signOut","ProactiveRefresh","isRunning","timerId","errorBackoff","_start","schedule","_stop","getInterval","wasError","interval","expTime","stsTokenManager","iteration","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","_copy","_reloadWithoutSaving","idToken","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","extractProviderData","providerData","mergeProviderData","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","localId","photoURL","photoUrl","emailVerified","reload","_persistUserIfCurrent","_notifyListenersIfCurrent","newData","providerId","rawId","requestStsToken","tokenApiHost","accessToken","access_token","expires_in","refresh_token","revokeToken","StsTokenManager","isExpired","updateFromServerResponse","updateTokensAndExpiration","updateFromIdToken","refresh","clearRefreshToken","oldToken","expiresInSec","fromJSON","manager","_assign","_clone","_performRefresh","assertStringOrUndefined","UserImpl","proactiveRefresh","reloadUserInfo","reloadListener","userInfo","newUser","_onReload","_startProactiveRefresh","_stopProactiveRefresh","_updateTokensIfNecessary","tokensRefreshed","_redirectEventId","_fromJSON","_e","_f","_g","_h","plainObjectTokenManager","_fromIdTokenResponse","idTokenResponse","_fromGetAccountInfoResponse","instanceCache","_getInstance","InMemoryPersistence","storage","_isAvailable","_set","_get","_remove","_addListener","_listener","_removeListener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","setCurrentUser","getCurrentUser","blob","removeCurrentUser","savePersistenceForRedirect","setPersistence","newPersistence","persistenceHierarchy","availablePersistences","selectedPersistence","userToMigrate","migrationHierarchy","_shouldAllowMigration","_getBrowserName","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","_isIOS","_isIOSStandalone","standalone","_isIE10","documentMode","_isMobileBrowser","_isIframe","_getClientVersion","clientPlatform","frameworks","reportedPlatform","reportedFrameworks","AuthMiddlewareQueue","pushCallback","onAbort","wrappedCallback","runMiddleware","nextUser","onAbortStack","beforeStateCallback","originalMessage","_getPasswordPolicy","MINIMUM_MIN_PASSWORD_LENGTH","PasswordPolicyImpl","responseOptions","customStrengthOptions","minPasswordLength","maxPasswordLength","containsLowercaseCharacter","containsLowercaseLetter","containsUppercaseCharacter","containsUppercaseLetter","containsNumericCharacter","containsNonAlphanumericCharacter","allowedNonAlphanumericCharacters","forceUpgradeOnSignin","schemaVersion","validatePassword","password","passwordPolicy","validatePasswordLengthOptions","validatePasswordCharacterOptions","meetsMinPasswordLength","meetsMaxPasswordLength","passwordChar","updatePasswordCharacterOptionsStatuses","AuthImpl","appCheckServiceProvider","emulatorConfig","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","redirectUser","isProactiveRefreshEnabled","EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION","_isInitialized","_deleted","_initializationPromise","_popupRedirectResolver","_agentRecaptchaConfig","_tenantRecaptchaConfigs","_projectPasswordPolicy","_tenantPasswordPolicies","lastNotifiedUid","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","_initializeWithPersistence","popupRedirectResolver","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","assertedPersistence","_currentUser","_updateCurrentUser","initializeCurrentUserFromIdToken","directlySetCurrentUser","authIdToken","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","storedUserEventId","tryRedirectSignIn","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectResolver","_completeRedirectFn","_setRedirectUser","useDeviceLanguage","updateCurrentUser","userExtern","skipBeforeStateCallbacks","notifyAuthListeners","redirectPersistenceManager","_getRecaptchaConfig","_getPasswordPolicyInternal","_updatePasswordPolicy","_getPersistence","_updateErrorMap","onAuthStateChanged","completed","registerStateListener","beforeAuthStateChanged","onIdTokenChanged","authStateReady","unsubscribe","revokeAccessToken","tokenType","redirectManager","resolver","_redirectPersistence","_redirectUserForId","currentUid","subscription","isUnsubscribed","addObserver","action","_logFramework","framework","_getFrameworks","appCheckToken","_getAppCheckToken","appCheckTokenResult","_castAuth","externalJSProvider","loadJS","recaptchaV2Script","recaptchaEnterpriseScript","gapiScript","_setExternalJSProvider","_loadJS","_recaptchaEnterpriseScriptUrl","_gapiScriptUrl","_generateCallbackName","RECAPTCHA_ENTERPRISE_VERIFIER_TYPE","FAKE_TOKEN","RecaptchaEnterpriseVerifier","authExtern","verify","retrieveSiteKey","clientType","retrieveRecaptchaToken","ready","injectRecaptchaFields","captchaResp","verifier","captchaResponse","newRequest","handleRecaptchaFlow","authInstance","actionName","actionMethod","requestWithRecaptcha","initializeAuth","initialOptions","_initializeAuthInstance","hierarchy","connectAuthEmulator","authInternal","disableWarnings","extractProtocol","extractHostAndPort","portStr","freeze","emitEmulatorWarning","protocolEnd","authority","hostAndPort","bracketedIPv6","parsePort","attachBanner","sty","AuthCredential","signInMethod","_getIdTokenResponse","_auth","_linkToIdToken","_idToken","_getReauthenticationResolver","linkEmailPassword","signInWithPassword","signInWithEmailLink$1","signInWithEmailLinkForLinking","EmailAuthCredential","_email","_password","_tenantId","_fromEmailAndPassword","_fromEmailAndCode","oobCode","returnSecureToken","signInWithIdp","IDP_REQUEST_URI$1","OAuthCredential","pendingToken","_fromParams","cred","nonce","oauthToken","oauthTokenSecret","secret","buildRequest","autoCreate","requestUri","postBody","sendPhoneVerificationCode","signInWithPhoneNumber$1","linkWithPhoneNumber$1","temporaryProof","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","verifyPhoneNumberForExisting","apiRequest","operation","PhoneAuthCredential","_fromVerification","verificationId","verificationCode","_fromTokenResponse","_makeVerificationRequest","sessionInfo","parseMode","parseDeepLink","link","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","ActionCodeURL","actionLink","searchParams","continueUrl","parseLink","EmailAuthProvider","PROVIDER_ID","credential","credentialWithLink","emailLink","actionCodeUrl","EMAIL_PASSWORD_SIGN_IN_METHOD","EMAIL_LINK_SIGN_IN_METHOD","FederatedAuthProvider","defaultLanguageCode","customParameters","setDefaultLanguage","setCustomParameters","customOAuthParameters","getCustomParameters","BaseOAuthProvider","addScope","getScopes","FacebookAuthProvider","FACEBOOK_SIGN_IN_METHOD","credentialFromResult","userCredential","credentialFromTaggedObject","credentialFromError","tokenResponse","oauthAccessToken","GoogleAuthProvider","GOOGLE_SIGN_IN_METHOD","oauthIdToken","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","UserCredentialImpl","operationType","providerIdForResponse","userCred","_forOperation","MultiFactorError","_fromErrorAndOperation","_processCredentialSavingMfaContextIfNecessary","idTokenProvider","_link$1","_reauthenticate","parsed","_signInWithCredential","signInWithCredential","recachePasswordPolicy","signInWithEmailAndPassword","startEnrollPhoneMfa","finalizeEnrollPhoneMfa","startEnrollTotpMfa","finalizeEnrollTotpMfa","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","removeItem","_iframeCannotSyncWebStorage","_POLLING_INTERVAL_MS$1","IE10_LOCAL_STORAGE_SYNC_DELAY","BrowserLocalPersistence","poll","onStorageEvent","localCache","pollTimer","safariLocalStorageNotSynced","fallbackToPolling","forAllChangedKeys","_oldValue","notifyListeners","detachListener","stopPolling","storedValue","triggerListeners","startPolling","setInterval","StorageEvent","clearInterval","attachListener","browserLocalPersistence","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","_allSettled","Receiver","eventTarget","handlersMap","handleEvent","receivers","isListeningto","newInstance","messageEvent","eventId","eventType","handlers","ports","origin","_subscribe","eventHandler","_unsubscribe","_generateEventId","digits","Sender","removeMessageHandler","messageChannel","onMessage","_send","completionTimer","ackTimer","port2","_window","_setWindowLocation","_isWorker","_getActiveServiceWorker","serviceWorker","registration","_getServiceWorkerController","controller","_getWorkerGlobalScope","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","toPromise","getObjectStore","isReadWrite","_deleteDatabase","_openDatabase","keyPath","objectStoreNames","contains","_putObject","getObject","_deleteObject","_POLLING_INTERVAL_MS","_TRANSACTION_RETRY_COUNT","IndexedDBLocalPersistence","pendingWrites","serviceWorkerReceiverAvailable","activeServiceWorker","_workerInitializationPromise","initializeServiceWorkerMessaging","_openDb","_withRetries","op","numAttempts","initializeReceiver","initializeSender","_origin","_poll","keyProcessed","_data","notifyServiceWorker","_withPendingWrite","getAllRequest","keysInResult","fbase_key","localKey","indexedDBLocalPersistence","startSignInPhoneMfa","finalizeSignInPhoneMfa","finalizeSignInTotpMfa","RECAPTCHA_VERIFIER_TYPE","_verifyPhoneNumber","recaptchaToken","phoneInfoOptions","session","phoneEnrollmentInfo","phoneSessionInfo","mfaEnrollmentId","multiFactorHint","multiFactorUid","mfaPendingCredential","phoneSignInInfo","phoneResponseInfo","_reset","PhoneAuthProvider","verifyPhoneNumber","phoneOptions","applicationVerifier","_withDefaultResolver","resolverOverride","PHONE_SIGN_IN_METHOD","IdpCredential","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","_link","AbstractPopupRedirectOperation","pendingPromise","eventManager","onExecution","registerConsumer","onAuthEvent","urlResponse","getIdpTask","onError","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","PopupOperation","authWindow","pollId","currentPopupAction","executeNotNull","_openPopup","associatedEvent","_originValidation","_isIframeWebStorageSupported","pollUserCancellation","closed","PENDING_REDIRECT_KEY","redirectOutcomeMap","RedirectAction","readyOutcome","hasPendingRedirect","_getAndClearPendingRedirectStatus","pendingRedirectKey","resolverPersistence","_getRedirectResult","resolverExtern","EVENT_DUPLICATION_CACHE_DURATION_MS","AuthEventManager","cachedEventUids","consumers","queuedRedirectEvent","hasHandledPotentialRedirect","lastProcessedEventTime","authEventConsumer","isEventForConsumer","sendToConsumer","saveEventToCache","onEvent","hasEventBeenHandled","handled","consumer","isRedirectEvent","isNullRedirectEvent","eventIdMatches","eventUid","_getProjectConfig","IP_ADDRESS_REGEX","HTTP_REGEX","_validateOrigin","authorizedDomains","domain","matchDomain","expected","currentUrl","hostname","ceUrl","escapedDomainPattern","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","CP","loadGapi","loadGapiIframe","gapi","load","iframes","ontimeout","Iframe","cbName","cachedGApiLoader","_loadGapi","PING_TIMEOUT","IFRAME_PATH","EMULATED_IFRAME_PATH","IFRAME_ATTRIBUTES","tabindex","EID_FROM_APIHOST","getIframeUrl","eid","fw","_openIframe","where","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","iframe","restyle","setHideOnLeave","networkError","networkErrorTimer","clearTimerAndResolve","ping","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","DEFAULT_HEIGHT","TARGET_BLANK","FIREFOX_EMPTY_URL","AuthPopup","_open","screen","availHeight","availWidth","scrollbars","optionsString","accum","openAsNewWindowIOS","newWin","focus","createEvent","initMouseEvent","WIDGET_PATH","EMULATOR_WIDGET_PATH","FIREBASE_APP_CHECK_FRAGMENT_ID","_getRedirectUrl","authType","redirectUrl","additionalParams","tid","paramsDict","appCheckTokenFragment","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","BrowserPopupRedirectResolver","eventManagers","originValidationPromises","_openRedirect","initAndGetManager","iframeEvent","authEvent","send","browserPopupRedirectResolver","MultiFactorAssertionImpl","factorId","_process","_finalizeEnroll","_finalizeSignIn","PhoneMultiFactorAssertionImpl","_fromCredential","phoneVerificationInfo","PhoneMultiFactorGenerator","FACTOR_ID","TotpMultiFactorGenerator","assertionForEnrollment","oneTimePassword","TotpMultiFactorAssertionImpl","_fromSecret","assertionForSignIn","enrollmentId","_fromEnrollmentId","generateSecret","mfaSession","totpEnrollmentInfo","TotpSecret","_fromStartTotpMfaEnrollmentResponse","otp","totpVerificationInfo","_makeTotpVerificationInfo","secretKey","hashingAlgorithm","codeLength","codeIntervalSeconds","enrollmentCompletionDeadline","totpSessionInfo","sharedSecretKey","verificationCodeLength","periodSec","finalizeEnrollmentTime","generateQrCodeUrl","accountName","issuer","useDefaults","_isEmptyString","AuthInterop","internalListeners","getUid","assertAuthConfigured","addAuthTokenListener","updateProactiveRefresh","removeAuthTokenListener","getVersionForPlatform","registerAuth","_instanceIdentifier","authInternalProvider","DEFAULT_ID_TOKEN_MAX_AGE","authIdTokenMaxAge","lastPostedIdToken","mintCookieFactory","idTokenResult","idTokenAge","getAuth","authTokenSyncPath","isSecureContext","authTokenSyncUrl","mintCookie","authEmulatorHost","getScriptParentElement","D","blockSize","B","isFinite","G","I","J","LN2","E","and","or","digest","bloom_blob_es2018","Md5","modulo","compare","fromNumber","commonjsGlobal","aa","defineProperties","ba","ca","ea","fa","ha","ia","ja","ka","Qb","la","ma","na","oa","pa","qa","ra","sa","ta","va","wa","xa","za","Aa","Ba","Ca","Ea","Da","defaultPrevented","N","Fa","relatedTarget","screenY","screenX","clientY","clientX","metaKey","shiftKey","altKey","ctrlKey","pointerId","pointerType","changedTouches","fromElement","toElement","pageX","pageY","Ga","returnValue","Ha","Ia","capture","Ja","Ka","Ma","La","Na","Oa","Qa","Ra","Sa","K","Ta","Ua","Va","attachEvent","Wa","addListener","removeListener","Xa","Ya","Za","detachEvent","$a","ab","bb","eb","fb","gb","ib","jb","kb","lb","mb","OPEN","wb","nb","ob","pb","qb","rb","sb","STAT_EVENT","tb","ub","vb","xb","yb","zb","Cb","Ab","NO_ERROR","TIMEOUT","Bb","Hb","Pb","Db","U","X","W","T","Eb","XMLHttpRequest","Fb","Gb","Ib","Jb","Kb","Lb","Mb","Y","Sb","Wb","Ob","Ub","Rb","Xb","Yb","Zb","$b","ac","ya","getResponseHeader","cc","dc","fc","gc","Z","Nb","Tb","Vb","hc","ic","PerformanceNavigationTiming","getEntriesByType","nextHopProtocol","loadTimes","wasFetchedViaSpdy","jc","kc","lc","nc","oc","qc","rc","sc","tc","uc","Ac","vc","Bc","decodeURI","encodeURI","Cc","wc","xc","yc","zc","Dc","Ec","Fc","Gc","AbortController","Hc","Ic","Jc","Kc","responseType","responseText","statusText","onreadystatechange","Nc","Pa","ga","Mc","Lc","Oc","Pc","credentials","Request","ReadableStream","getReader","setRequestHeader","getAllResponseHeaders","Qc","Rc","Sc","Uc","Vc","Wc","Tc","mozResponseArrayBuffer","Xc","internalChannelParams","Yc","xmlHttpFactory","useFetchStreams","supportsCrossDomainXhr","concurrentRequestLimit","fastHandshake","encodeInitMessageHeaders","forceLongPolling","detectBufferingProxy","longPollingTimeout","Zc","$c","sendBeacon","ad","bd","cd","ed","dd","fd","isActive","gd","hd","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","initMessageHeaders","messageContentType","sendRawJson","httpSessionIdParam","__headers__","statusCode","__status__","__sm__","jd","FormData","withCredentials","connect","OSID","OAID","__data__","createWebChannel","webchannel_blob_es2018","createWebChannelTransport","getStatEventTarget","Stat","PROXY","NOPROXY","HTTP_ERROR","ErrorCode","COMPLETE","EventType","CLOSE","MESSAGE","listen","WebChannel","FetchXmlHttpFactory","listenOnce","getLastError","getLastErrorCode","getStatus","getResponseJson","getResponseText","setWithCredentials","XhrIo","User","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","__PRIVATE_logDebug","__PRIVATE_argToString","__PRIVATE_logError","__PRIVATE_logWarn","fail","__PRIVATE_hardAssert","OK","CANCELLED","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","FirestoreError","__PRIVATE_Deferred","__PRIVATE_OAuthToken","__PRIVATE_EmptyAuthCredentialsProvider","invalidateToken","enqueueRetryable","shutdown","__PRIVATE_EmulatorAuthCredentialsProvider","changeListener","__PRIVATE_FirebaseAuthCredentialsProvider","__PRIVATE_guardedChangeListener","__PRIVATE_awaitNextToken","__PRIVATE_registerAuth","__PRIVATE_FirstPartyToken","__PRIVATE_FirstPartyAuthCredentialsProvider","AppCheckToken","__PRIVATE_FirebaseAppCheckTokenProvider","appCheck","onTokenChanged","__PRIVATE_registerAppCheck","addTokenListener","removeTokenListener","__PRIVATE_randomBytes","__PRIVATE_AutoId","newId","__PRIVATE_primitiveComparator","BasePath","construct","popFirst","popLast","firstSegment","isPrefixOf","isImmediateParentOf","toArray","ResourcePath","canonicalString","toUriEncodedString","emptyPath","DocumentKey","fromPath","fromName","empty","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","FieldIndex","indexId","fields","indexState","UNKNOWN_ID","__PRIVATE_isIndexedDbTransactionError","__PRIVATE_ListenSequence","sequenceNumberHandler","ie","se","writeSequenceNumber","__PRIVATE_isNegativeZero","oe","SortedMap","LLRBNode","BLACK","minKey","maxKey","inorderTraversal","reverseTraversal","SortedMapIterator","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","hasNext","peek","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","SortedSet","forEachInRange","forEachWhile","firstAfterOrEqual","SortedSetIterator","unionWith","iter","__PRIVATE_Base64DecodeError","ByteString","binaryString","fromBase64String","fromUint8Array","toBase64","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","ne","__PRIVATE_normalizeTimestamp","nanos","__PRIVATE_normalizeNumber","__PRIVATE_normalizeByteString","DatabaseInfo","databaseId","persistenceKey","ssl","autoDetectLongPolling","longPollingOptions","DatabaseId","database","isDefaultDatabase","__PRIVATE_isMaxValue","mapValue","__type__","le","asc","desc","in","__PRIVATE_FirestoreIndexValueWriter","Pt","It","Tt","Et","dt","booleanValue","integerValue","doubleValue","timestampValue","At","Rt","Vt","ft","bytesValue","gt","referenceValue","geoPointValue","latitude","longitude","yt","wt","arrayValue","St","bt","LruParams","cacheSizeCollectionThreshold","percentileToCollect","maximumSequenceNumbersToCollect","withCacheSize","DEFAULT_COLLECTION_PERCENTILE","DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT","DEFAULT","DISABLED","getDocument","__PRIVATE_ExponentialBackoff","oi","No","Lo","Bo","ko","qo","Qo","Ko","$o","Uo","enqueueAfterDelay","Wo","skipDelay","DelayedOperation","asyncQueue","targetTimeMs","removalCallback","createAndSchedule","timerHandle","handleDelayElapsed","enqueueAndForget","__PRIVATE_wrapInUserErrorIfRecoverable","ge","pe","J_","Cache","FirestoreClient","authCredentials","appCheckCredentials","databaseInfo","clientId","authCredentialListener","appCheckCredentialListener","initialUser","maxConcurrentLimboResolutions","setCredentialChangeListener","setAppCheckTokenChangeListener","verifyNotTerminated","isShuttingDown","terminate","enterRestrictedMode","enqueueAndForgetEvenWhileRestricted","_onlineComponents","_offlineComponents","__PRIVATE_cloneLongPollingOptions","timeoutSeconds","ye","__PRIVATE_validateIsNotUsedTogether","__PRIVATE_valueDescription","__PRIVATE_cast","FirestoreSettingsImpl","ignoreUndefinedProperties","cacheSizeBytes","experimentalForceLongPolling","experimentalAutoDetectLongPolling","experimentalLongPollingOptions","Firestore$1","_authCredentials","_appCheckCredentials","_databaseId","_app","_persistenceKey","_settings","_settingsFrozen","_initialized","_terminated","_terminateTask","_setSettings","sessionIndex","iamToken","authTokenFactory","client","_getSettings","_freezeSettings","_terminate","connectFirestoreEmulator","mockUserToken","__PRIVATE_AsyncQueueImpl","iu","su","ou","_u","au","uu","cu","lu","Yo","hu","visibilityState","enqueue","Pu","Iu","Tu","Eu","verifyOperationInProgress","du","Au","Ru","Vu","Firestore","_queue","_firestoreClient","__PRIVATE_configureFirestore","getFirestore","_offlineComponentProvider","_onlineComponentProvider","_uninitializedComponentsProvider","_offlineKind","_offline","_online","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continue","continuePrimaryKey","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","success","cacheDonePromiseForTransaction","idbProxyTraps","replaceTraps","wrapFunction","unwrap","storeNames","transformCachableValue","IDBRequest","blocked","blocking","terminated","openPromise","newVersion","readMethods","writeMethods","cachedMethods","targetFuncName","useIndex","isWrite","storeName","oldTraps","isESModule","__esModule","toStringTag","applyToParams","newParams","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","TRAILING_SLASH_RE","removeTrailingSlash","parseURL","parseQuery","currentLocation","searchString","hashPos","searchPos","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","isSameRouteLocation","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","toSegments","lastToSegment","toPosition","segment","NavigationType","NavigationDirection","normalizeBase","baseEl","BEFORE_HASH_RE","createHref","getElementPosition","docRect","documentElement","elRect","behavior","computeScrollPosition","scrollX","scrollY","scrollToPosition","scrollToOptions","positionEl","isIdSelector","scrollTo","getScrollKey","delta","history","scrollPositions","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","createBaseLocation","createCurrentLocation","search","slicePos","pathFromHash","useHistoryListeners","historyState","teardowns","pauseState","popStateHandler","fromState","forward","back","unknown","pauseListeners","teardown","beforeUnloadListener","replaceState","destroy","passive","buildState","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","createWebHistory","historyNavigation","historyListeners","go","routerHistory","createWebHashHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","REGEX_CHARS_RE","tokensToParser","segmentScores","tokenIndex","subSegmentScore","repeatable","regexp","subPattern","avoidDuplicatedSlash","endsWith","compareScoreArray","comparePathParserScore","aScore","bScore","isLastScoreNegative","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","previousState","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","matcher","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","normalizedRecords","aliases","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","isMatchable","insertMatcher","matcherRef","getRoutes","paramsFromLocation","parentMatcher","mergeMetaFields","redirect","normalizeRecordProps","leaveGuards","updateGuards","enterCallbacks","propsObject","defaults","partialOptions","lower","upper","mid","sortOrder","insertionAncestor","getInsertionAncestor","ancestor","hasLeadingIM","searchParam","eqPos","currentValue","normalizeQuery","normalizedQuery","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","useCallbacks","guardToPromiseFn","guard","enterCallbackArray","guardReturn","guardCall","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","componentPromise","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","parentRecordPath","getOriginalPath","includesParams","isExactActive","navigate","guardEvent","RouterLinkImpl","compatConfig","MODE","activeClass","exactActiveClass","custom","ariaCurrentValue","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","RouterLink","currentTarget","outer","inner","innerValue","outerValue","propClass","globalClass","defaultClass","RouterViewImpl","injectedRoute","routeToDisplay","injectedDepth","initialDepth","matchedRoute","matchedRouteRef","viewRef","oldInstance","oldName","currentName","ViewComponent","routePropsOption","routeProps","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","targetParams","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","handleScroll","markAsReady","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","installedApps","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","removeHistoryListener","setupListeners","_from","listening","readyHandlers","errorListeners","isReady","started","beforeEach","beforeResolve","afterEach","$router","reactiveRoute","unmountApp","recordFrom","recordTo"],"sourceRoot":""}