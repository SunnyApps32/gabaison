{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Firebase関連のインポート\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport Firebase from \"../firebase/firebase\";\nconst auth = Firebase.auth;\nexport default {\n  methods: {\n    // Home画面へ遷移\n    goToHome() {\n      this.$router.push('/');\n    },\n    // ログイン\n    logIn() {\n      // IDとパスワードの未入力チェック\n      if (this.inputValueId === undefined || this.inputValueId === \"\" || this.inputValuePassword === undefined || this.inputValuePassword === \"\") {\n        this.errorMessage = 'IDまたはパスワードが未入力です';\n        return;\n      }\n\n      // エラーメッセージの消去\n      this.errorMessage = \"\";\n\n      // ローディングアニメーション\n      this.isLoading = true;\n\n      // id,passを取得\n      const mId = this.inputValueId;\n      const mPass = this.inputValuePassword;\n\n      // 連続クリックを防ぐためにパスワード欄を空欄にする\n      this.inputValuePassword = \"\";\n\n      // サインインメソッド\n      signInWithEmailAndPassword(auth, mId, mPass)\n      // サインイン成功時\n      .then(userCredential => {\n        const user = userCredential.user;\n        console.log(\"ログイン成功 \" + user.email);\n        this.goToHome();\n      })\n\n      // サインイン失敗時\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log('ログインエラー: errorCode -> ' + errorCode + ', errorMessage -> ' + errorMessage);\n        this.JudgeErrorCode(errorCode);\n\n        // ローディングアニメーション\n        this.isLoading = false;\n      });\n    },\n    register() {\n      this.$router.push('/register');\n    },\n    // FirebaseAuthから受け取ったエラーコードを判定しエラーメッセージを表示する\n    JudgeErrorCode(mError) {\n      const errorCode = String(mError);\n      if (errorCode === 'auth/wrong-password' || errorCode === 'auth/invalid-email' || errorCode === 'auth/user-not-found') {\n        this.errorMessage = \"ログインに失敗しました。IDまたはパスワードが間違っています\";\n      } else {\n        this.errorMessage = \"ログインに失敗しました。予期せぬエラーが発生しました。\";\n      }\n    }\n  },\n  data() {\n    return {\n      // ローディングアニメーション\n      isLoading: false,\n      // エラーメッセージ\n      errorMessage: '',\n      // 入力欄\n      inputValueId: \"\",\n      inputValuePassword: \"\"\n    };\n  },\n  computed: {}\n};","map":{"version":3,"names":["signInWithEmailAndPassword","Firebase","auth","methods","goToHome","$router","push","logIn","inputValueId","undefined","inputValuePassword","errorMessage","isLoading","mId","mPass","then","userCredential","user","console","log","email","catch","error","errorCode","code","message","JudgeErrorCode","register","mError","String","data","computed"],"sources":["/app/reserve/src/views/LoginPage.vue"],"sourcesContent":["<template>\n    <body>\n        <header>\n            <div class=\"title\">ログイン\n            </div>\n        </header>\n\n        <main>\n            <div class=\"container\">\n                <p>ID(メールアドレス)</p>\n                <input type=\"email\" v-model=\"inputValueId\">\n                <!-- この下の<p></p>はテキストボックスを中央に配置するために必要な疑似要素です -->\n                <p></p>\n            </div>\n\n            <div class=\"container\">\n                <p>パスワード</p>\n                <input type=\"password\" v-model=\"inputValuePassword\">\n                <!-- この下の<p></p>はテキストボックスを中央に配置するために必要な疑似要素です -->\n                <p></p>\n            </div>\n\n            <div class=\"message\">\n                <p class=\"red\">{{ errorMessage }}&nbsp;</p>\n            </div>\n\n            <div>\n                <button class=\"btn_standard\" type=\"submit\" v-on:click=\"logIn\">ログインする</button>\n            </div>\n\n            <br>\n        \n\n        </main>\n\n \n    </body>\n</template>\n\n<script>\n\n// Firebase関連のインポート\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport Firebase from \"../firebase/firebase\";\nconst auth = Firebase.auth\n\nexport default {\n\n\n\n    methods: {\n        // Home画面へ遷移\n        goToHome() {\n            this.$router.push('/')\n        },\n\n        // ログイン\n        logIn() {\n            // IDとパスワードの未入力チェック\n            if (this.inputValueId === undefined || this.inputValueId === \"\" || this.inputValuePassword === undefined || this.inputValuePassword === \"\") {\n                this.errorMessage = 'IDまたはパスワードが未入力です'\n                return\n            }\n\n            // エラーメッセージの消去\n            this.errorMessage = \"\"\n\n            // ローディングアニメーション\n            this.isLoading = true\n\n            // id,passを取得\n            const mId = this.inputValueId\n            const mPass = this.inputValuePassword\n\n            // 連続クリックを防ぐためにパスワード欄を空欄にする\n            this.inputValuePassword = \"\"\n\n            // サインインメソッド\n            signInWithEmailAndPassword(auth, mId, mPass)\n                // サインイン成功時\n                .then((userCredential) => {\n                    const user = userCredential.user;\n                    console.log(\"ログイン成功 \" + user.email)\n\n                 \n                        this.goToHome()\n                    \n                  \n                })\n\n                // サインイン失敗時\n                .catch((error) => {\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log('ログインエラー: errorCode -> ' + errorCode + ', errorMessage -> ' + errorMessage)\n                    this.JudgeErrorCode(errorCode)\n\n                    // ローディングアニメーション\n                    this.isLoading = false\n                });\n        },\n\n        register(){\n            this.$router.push('/register')\n        },\n\n        // FirebaseAuthから受け取ったエラーコードを判定しエラーメッセージを表示する\n        JudgeErrorCode(mError) {\n            const errorCode = String(mError)\n            if (errorCode === 'auth/wrong-password' || errorCode === 'auth/invalid-email' || errorCode === 'auth/user-not-found') {\n                this.errorMessage = \"ログインに失敗しました。IDまたはパスワードが間違っています\"\n            } else {\n                this.errorMessage = \"ログインに失敗しました。予期せぬエラーが発生しました。\"\n            }\n        },\n\n    },\n\n    data() {\n        return {\n            // ローディングアニメーション\n            isLoading: false,\n\n            // エラーメッセージ\n            errorMessage: '',\n\n            // 入力欄\n            inputValueId: \"\",\n            inputValuePassword: \"\",\n        }\n    },\n\n    computed: {\n\n    },\n\n\n}\n</script>\n\n<style scoped>\nheader {\n    height: 120px;\n}\n\nheader .title {\n    font-size: 40px;\n    padding: 20px 0 0;\n}\n\nmain {\n    padding: 30px auto;\n}\n\n.container {\n    display: flex;\n    justify-content: center;\n    margin: 30px 0 0;\n}\n\n.container input {\n    width: 400px;\n}\n\n.container p {\n    width: 200px;\n    text-align: left;\n    margin-top: 8px;\n}\n\n.login_info_container {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n}\n\n.login_info {\n    text-align: left;\n    background-color: #efefef;\n    padding: 20px 100px;\n    border-radius: 20px;\n}\n\n.loading_animation_container {\n    height: 15px;\n    margin-top: 10px;\n}\n\n.btn_url {\n  border-radius: 0px;\n  padding: 0;\n\n  background-color: white;\n  border-color: white;\n  color: blue;\n\n  transform: translate(0, 0px);\n\n}\n\n  \nbutton {\n    padding: 10px 15px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    cursor: pointer;\n    border-radius: 5px;\n  }\n  \n  button:hover {\n    background-color: #0056b3;\n  }\n\n\n</style>\n"],"mappings":";AAyCA;AACA,SAASA,0BAAyB,QAAS,eAAe;AAC1D,OAAOC,QAAO,MAAO,sBAAsB;AAC3C,MAAMC,IAAG,GAAID,QAAQ,CAACC,IAAG;AAEzB,eAAe;EAIXC,OAAO,EAAE;IACL;IACAC,QAAQA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG;IACzB,CAAC;IAED;IACAC,KAAKA,CAAA,EAAG;MACJ;MACA,IAAI,IAAI,CAACC,YAAW,KAAMC,SAAQ,IAAK,IAAI,CAACD,YAAW,KAAM,EAAC,IAAK,IAAI,CAACE,kBAAiB,KAAMD,SAAQ,IAAK,IAAI,CAACC,kBAAiB,KAAM,EAAE,EAAE;QACxI,IAAI,CAACC,YAAW,GAAI,kBAAiB;QACrC;MACJ;;MAEA;MACA,IAAI,CAACA,YAAW,GAAI,EAAC;;MAErB;MACA,IAAI,CAACC,SAAQ,GAAI,IAAG;;MAEpB;MACA,MAAMC,GAAE,GAAI,IAAI,CAACL,YAAW;MAC5B,MAAMM,KAAI,GAAI,IAAI,CAACJ,kBAAiB;;MAEpC;MACA,IAAI,CAACA,kBAAiB,GAAI,EAAC;;MAE3B;MACAV,0BAA0B,CAACE,IAAI,EAAEW,GAAG,EAAEC,KAAK;MACvC;MAAA,CACCC,IAAI,CAAEC,cAAc,IAAK;QACtB,MAAMC,IAAG,GAAID,cAAc,CAACC,IAAI;QAChCC,OAAO,CAACC,GAAG,CAAC,SAAQ,GAAIF,IAAI,CAACG,KAAK;QAG9B,IAAI,CAAChB,QAAQ,CAAC;MAGtB,CAAC;;MAED;MAAA,CACCiB,KAAK,CAAEC,KAAK,IAAK;QACd,MAAMC,SAAQ,GAAID,KAAK,CAACE,IAAI;QAC5B,MAAMb,YAAW,GAAIW,KAAK,CAACG,OAAO;QAClCP,OAAO,CAACC,GAAG,CAAC,wBAAuB,GAAII,SAAQ,GAAI,oBAAmB,GAAIZ,YAAY;QACtF,IAAI,CAACe,cAAc,CAACH,SAAS;;QAE7B;QACA,IAAI,CAACX,SAAQ,GAAI,KAAI;MACzB,CAAC,CAAC;IACV,CAAC;IAEDe,QAAQA,CAAA,EAAE;MACN,IAAI,CAACtB,OAAO,CAACC,IAAI,CAAC,WAAW;IACjC,CAAC;IAED;IACAoB,cAAcA,CAACE,MAAM,EAAE;MACnB,MAAML,SAAQ,GAAIM,MAAM,CAACD,MAAM;MAC/B,IAAIL,SAAQ,KAAM,qBAAoB,IAAKA,SAAQ,KAAM,oBAAmB,IAAKA,SAAQ,KAAM,qBAAqB,EAAE;QAClH,IAAI,CAACZ,YAAW,GAAI,gCAA+B;MACvD,OAAO;QACH,IAAI,CAACA,YAAW,GAAI,6BAA4B;MACpD;IACJ;EAEJ,CAAC;EAEDmB,IAAIA,CAAA,EAAG;IACH,OAAO;MACH;MACAlB,SAAS,EAAE,KAAK;MAEhB;MACAD,YAAY,EAAE,EAAE;MAEhB;MACAH,YAAY,EAAE,EAAE;MAChBE,kBAAkB,EAAE;IACxB;EACJ,CAAC;EAEDqB,QAAQ,EAAE,CAEV;AAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}