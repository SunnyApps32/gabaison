{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\n// インポートするコンポーネント\nimport HelloPage from '../views/consoleHomePage.vue';\nimport deletePage from '../views/deletePage.vue';\nimport QRCodePage from '../views/QRcodePage.vue';\nimport checkInOutPage from '../views/checkInOutPage.vue';\nimport listPage from '../views/listPage.vue';\nimport LoginView from '../views/LoginPage.vue';\nimport TeamSelectPage from '../views/TeamSelectPage.vue';\nimport MainLayout from '@/layouts/MainLayout.vue';\n\n// ルート設定\nconst routes = [{\n  path: '/',\n  component: MainLayout,\n  // すべてのページを共通レイアウトでラップ\n  children: [{\n    path: '',\n    name: 'Home',\n    component: HelloPage,\n    meta: {\n      title: 'Home',\n      requiresAuth: true\n    }\n  }, {\n    path: 'qrcode',\n    name: 'qrcodeReader',\n    component: QRCodePage,\n    meta: {\n      title: 'QRCodeReader',\n      requiresAuth: true\n    }\n  }, {\n    path: 'deletePage/:reserveId',\n    name: 'deletePage',\n    component: deletePage,\n    props: true,\n    meta: {\n      title: '予約削除',\n      requiresAuth: true\n    }\n  }, {\n    path: 'checkInOutPage/:reserveId',\n    name: 'checkInOutPage',\n    component: checkInOutPage,\n    props: true,\n    meta: {\n      title: 'チェックイン/アウト',\n      requiresAuth: true\n    }\n  }, {\n    path: 'list',\n    name: 'list',\n    component: listPage,\n    meta: {\n      title: '予約者リスト',\n      requiresAuth: true\n    }\n  }, {\n    path: 'teamselect',\n    name: 'TeamSelect',\n    component: TeamSelectPage,\n    meta: {\n      title: 'チーム選択',\n      requiresAuth: false\n    }\n  }]\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    title: 'Login',\n    requiresAuth: false\n  }\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n  scrollBehavior() {\n    return {\n      top: 0\n    };\n  }\n});\nrouter.afterEach(to => {\n  document.title = to.meta.title + ' | reserve';\n});\n\n// 画面遷移前にログイン済みかをチェックして、未ログイン時はログイン画面に強制遷移させる\nlet onAuthStateChangedUnsubscribe;\nrouter.beforeEach((to, from, next) => {\n  const auth = getAuth();\n  if (!to.matched.some(record => record.meta.requiresAuth)) {\n    next();\n  } else {\n    if (auth.currentUser) {\n      next();\n      return;\n    } else {\n      if (typeof onAuthStateChangedUnsubscribe === 'function') {\n        onAuthStateChangedUnsubscribe();\n      }\n      onAuthStateChangedUnsubscribe = onAuthStateChanged(auth, user => {\n        if (user) {\n          next();\n        } else {\n          next({\n            name: 'login'\n          });\n        }\n      });\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","getAuth","onAuthStateChanged","HelloPage","deletePage","QRCodePage","checkInOutPage","listPage","LoginView","TeamSelectPage","MainLayout","routes","path","component","children","name","meta","title","requiresAuth","props","router","history","scrollBehavior","top","afterEach","to","document","onAuthStateChangedUnsubscribe","beforeEach","from","next","auth","matched","some","record","currentUser","user"],"sources":["/app/reserve/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\n// インポートするコンポーネント\nimport HelloPage from '../views/consoleHomePage.vue';\nimport deletePage from '../views/deletePage.vue';\nimport QRCodePage from '../views/QRcodePage.vue';\nimport checkInOutPage from '../views/checkInOutPage.vue';\nimport listPage from '../views/listPage.vue';\nimport LoginView from '../views/LoginPage.vue';\nimport TeamSelectPage from '../views/TeamSelectPage.vue';\nimport MainLayout from '@/layouts/MainLayout.vue';\n\n// ルート設定\nconst routes = [\n  {\n    path: '/',\n    component: MainLayout, // すべてのページを共通レイアウトでラップ\n    children: [\n      {\n        path: '',\n        name: 'Home',\n        component: HelloPage,\n        meta: { title: 'Home', requiresAuth: true}\n      },\n      {\n        path: 'qrcode',\n        name: 'qrcodeReader',\n        component: QRCodePage,\n        meta: { title: 'QRCodeReader', requiresAuth: true}\n      },\n      {\n        path: 'deletePage/:reserveId',\n        name: 'deletePage',\n        component: deletePage,\n        props: true, \n        meta: { title: '予約削除', requiresAuth: true}\n      },\n      {\n        path: 'checkInOutPage/:reserveId',\n        name: 'checkInOutPage',\n        component: checkInOutPage,\n        props: true, \n        meta: { title: 'チェックイン/アウト', requiresAuth: true}\n      },\n      {\n        path: 'list',\n        name: 'list',\n        component: listPage,\n        meta: { title: '予約者リスト', requiresAuth: true}\n      },\n      {\n        path: 'teamselect',\n        name: 'TeamSelect',\n        component: TeamSelectPage,\n        meta: { title: 'チーム選択', requiresAuth: false}\n      }\n    ]\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView,\n    meta: { title: 'Login', requiresAuth: false}\n  }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n  scrollBehavior() {\n    return {\n      top: 0\n    }\n  },\n});\n\nrouter.afterEach((to) => {\n  document.title = to.meta.title + ' | reserve';\n});\n\n// 画面遷移前にログイン済みかをチェックして、未ログイン時はログイン画面に強制遷移させる\nlet onAuthStateChangedUnsubscribe;\nrouter.beforeEach((to, from, next) => {\n    const auth = getAuth();\n\n    if (!to.matched.some(record => record.meta.requiresAuth)) {\n        next();\n    } else {\n        if (auth.currentUser) {\n            next();\n            return;\n        } else {\n            if (typeof onAuthStateChangedUnsubscribe === 'function') {\n                onAuthStateChangedUnsubscribe();\n            }\n            onAuthStateChangedUnsubscribe = onAuthStateChanged(auth, (user) => {\n                if (user) {\n                    next();\n                } else {\n                    next({ name: 'login' });\n                }\n            });\n        }\n    }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}