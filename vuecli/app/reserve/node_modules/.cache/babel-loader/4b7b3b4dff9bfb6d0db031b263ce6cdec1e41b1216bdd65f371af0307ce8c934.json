{"ast":null,"code":"// src/router/index.ts\nimport { createRouter, createWebHashHistory } from 'vue-router';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport HelloPage from '../views/consoleHomePage.vue';\nimport deletePage from '../views/deletePage.vue';\nimport QRCodePage from '../views/QRcodePage.vue';\nimport checkInOutPage from '../views/checkInOutPage.vue';\nimport listPage from '../views/listPage.vue';\nimport LoginView from '../views/LoginPage.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HelloPage,\n  meta: {\n    title: 'Home',\n    requiresAuth: true\n  }\n}, {\n  path: '/qrcode',\n  name: 'qrcodeReader',\n  component: QRCodePage,\n  meta: {\n    title: 'QRCodeReader',\n    requiresAuth: true\n  }\n}, {\n  path: '/deletePage/:reserveId',\n  name: 'deletePage',\n  component: deletePage,\n  props: true,\n  meta: {\n    title: '予約削除',\n    requiresAuth: true\n  }\n}, {\n  path: '/checkInOutPage/:reserveId',\n  name: 'checkInOutPage',\n  component: checkInOutPage,\n  props: true,\n  meta: {\n    title: 'チェックイン/アウト',\n    requiresAuth: true\n  }\n}, {\n  path: '/list',\n  name: 'list',\n  component: listPage,\n  meta: {\n    title: '予約者リスト',\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    title: 'Login',\n    requiresAuth: false\n  }\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n  scrollBehavior() {\n    return {\n      top: 0\n    };\n  }\n});\nrouter.afterEach(titleString => {\n  document.title = titleString.meta.title + ' | reserve';\n});\n\n// 画面遷移前にログイン済みかをチェックして、未ログイン時はログイン画面に強制遷移させる\nlet onAuthStateChangedUnsubscribe;\nrouter.beforeEach((to, from, next) => {\n  const auth = getAuth();\n  if (!to.matched.some(record => record.meta.requiresAuth)) {\n    next();\n  } else {\n    if (auth.currentUser) {\n      next();\n      return;\n    } else {\n      if (typeof onAuthStateChangedUnsubscribe === 'function') {\n        onAuthStateChangedUnsubscribe();\n      }\n      onAuthStateChanged(auth, user => {\n        if (user) {\n          next();\n        } else {\n          next({\n            name: 'login'\n          });\n        }\n      });\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","getAuth","onAuthStateChanged","HelloPage","deletePage","QRCodePage","checkInOutPage","listPage","LoginView","routes","path","name","component","meta","title","requiresAuth","props","router","history","scrollBehavior","top","afterEach","titleString","document","onAuthStateChangedUnsubscribe","beforeEach","to","from","next","auth","matched","some","record","currentUser","user"],"sources":["/app/reserve/src/router/index.js"],"sourcesContent":["// src/router/index.ts\nimport { createRouter, createWebHashHistory } from 'vue-router';\n\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\n\n\nimport HelloPage from '../views/consoleHomePage.vue'\nimport deletePage from '../views/deletePage.vue'\nimport QRCodePage from '../views/QRcodePage.vue'\nimport checkInOutPage from '../views/checkInOutPage.vue'\nimport listPage from '../views/listPage.vue'\nimport LoginView from '../views/LoginPage.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: HelloPage,\n    meta: { title: 'Home', requiresAuth: true}\n\n  },\n  {\n    path: '/qrcode',\n    name: 'qrcodeReader',\n    component: QRCodePage,\n    meta: { title: 'QRCodeReader', requiresAuth: true}\n\n  },\n  {\n    path: '/deletePage/:reserveId',\n    name: 'deletePage',\n    component: deletePage,\n    props: true, \n    meta: { title: '予約削除', requiresAuth: true}\n  },\n  {\n    path: '/checkInOutPage/:reserveId',\n    name: 'checkInOutPage',\n    component: checkInOutPage,\n    props: true, \n    meta: { title: 'チェックイン/アウト', requiresAuth: true}\n  },\n\n  {\n    path: '/list',\n    name: 'list',\n    component: listPage,\n    meta: { title: '予約者リスト', requiresAuth: true}\n\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView,\n    meta: { title: 'Login', requiresAuth: false}\n},\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n  scrollBehavior() {\n    return {\n      top: 0\n    }\n  },\n});\n\n\nrouter.afterEach((titleString) => {\n  document.title = titleString.meta.title + ' | reserve'\n});\n\n// 画面遷移前にログイン済みかをチェックして、未ログイン時はログイン画面に強制遷移させる\nlet onAuthStateChangedUnsubscribe\nrouter.beforeEach((to, from, next) => {\n    const auth = getAuth()\n\n    if (!to.matched.some(record => record.meta.requiresAuth)) {\n        next()\n    } else {\n        if (auth.currentUser) {\n            next()\n            return\n        } else {\n            if (typeof onAuthStateChangedUnsubscribe === 'function') {\n                onAuthStateChangedUnsubscribe()\n            }\n            onAuthStateChanged(auth, (user) => {\n                if (user) {\n                    next()\n                } else {\n                    next({ name: 'login' })\n                }\n            })\n        }\n    }\n})\n\n\nexport default router;\n"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAE/D,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAI3D,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAET,SAAS;EACpBU,IAAI,EAAE;IAAEC,KAAK,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAI;AAE3C,CAAC,EACD;EACEL,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEP,UAAU;EACrBQ,IAAI,EAAE;IAAEC,KAAK,EAAE,cAAc;IAAEC,YAAY,EAAE;EAAI;AAEnD,CAAC,EACD;EACEL,IAAI,EAAE,wBAAwB;EAC9BC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAER,UAAU;EACrBY,KAAK,EAAE,IAAI;EACXH,IAAI,EAAE;IAAEC,KAAK,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAI;AAC3C,CAAC,EACD;EACEL,IAAI,EAAE,4BAA4B;EAClCC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEN,cAAc;EACzBU,KAAK,EAAE,IAAI;EACXH,IAAI,EAAE;IAAEC,KAAK,EAAE,YAAY;IAAEC,YAAY,EAAE;EAAI;AACjD,CAAC,EAED;EACEL,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL,QAAQ;EACnBM,IAAI,EAAE;IAAEC,KAAK,EAAE,QAAQ;IAAEC,YAAY,EAAE;EAAI;AAE7C,CAAC,EACD;EACEL,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEJ,SAAS;EACpBK,IAAI,EAAE;IAAEC,KAAK,EAAE,OAAO;IAAEC,YAAY,EAAE;EAAK;AAC/C,CAAC,CACA;AAED,MAAME,MAAM,GAAGlB,YAAY,CAAC;EAC1BmB,OAAO,EAAElB,oBAAoB,CAAC,CAAC;EAC/BS,MAAM;EACNU,cAAcA,CAAA,EAAG;IACf,OAAO;MACLC,GAAG,EAAE;IACP,CAAC;EACH;AACF,CAAC,CAAC;AAGFH,MAAM,CAACI,SAAS,CAAEC,WAAW,IAAK;EAChCC,QAAQ,CAACT,KAAK,GAAGQ,WAAW,CAACT,IAAI,CAACC,KAAK,GAAG,YAAY;AACxD,CAAC,CAAC;;AAEF;AACA,IAAIU,6BAA6B;AACjCP,MAAM,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,IAAI,GAAG5B,OAAO,CAAC,CAAC;EAEtB,IAAI,CAACyB,EAAE,CAACI,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACnB,IAAI,CAACE,YAAY,CAAC,EAAE;IACtDa,IAAI,CAAC,CAAC;EACV,CAAC,MAAM;IACH,IAAIC,IAAI,CAACI,WAAW,EAAE;MAClBL,IAAI,CAAC,CAAC;MACN;IACJ,CAAC,MAAM;MACH,IAAI,OAAOJ,6BAA6B,KAAK,UAAU,EAAE;QACrDA,6BAA6B,CAAC,CAAC;MACnC;MACAtB,kBAAkB,CAAC2B,IAAI,EAAGK,IAAI,IAAK;QAC/B,IAAIA,IAAI,EAAE;UACNN,IAAI,CAAC,CAAC;QACV,CAAC,MAAM;UACHA,IAAI,CAAC;YAAEjB,IAAI,EAAE;UAAQ,CAAC,CAAC;QAC3B;MACJ,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAGF,eAAeM,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}